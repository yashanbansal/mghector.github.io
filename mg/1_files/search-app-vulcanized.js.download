/*

 Papa Parse
 v4.1.2
 https://github.com/mholt/PapaParse

 The MIT License (MIT)

 Copyright (c) 2015 Matthew Holt

 Permission is hereby granted, free of charge, to any person obtaining a copy of
 this software and associated documentation files (the "Software"), to deal in
 the Software without restriction, including without limitation the rights to
 use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 the Software, and to permit persons to whom the Software is furnished to do so,
 subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
(function(global){var IS_WORKER=!global.document&&!!global.postMessage,IS_PAPA_WORKER=IS_WORKER&&/(\?|&)papaworker(=|&|$)/.test(global.location.search),LOADED_SYNC=false,AUTO_SCRIPT_PATH;var workers={},workerIdCounter=0;var Papa={};Papa.parse=CsvToJson;Papa.unparse=JsonToCsv;Papa.RECORD_SEP=String.fromCharCode(30);Papa.UNIT_SEP=String.fromCharCode(31);Papa.BYTE_ORDER_MARK="\ufeff";Papa.BAD_DELIMITERS=["\r","\n",'"',Papa.BYTE_ORDER_MARK];Papa.WORKERS_SUPPORTED=!IS_WORKER&&!!global.Worker;Papa.SCRIPT_PATH=
null;Papa.LocalChunkSize=1024*1024*10;Papa.RemoteChunkSize=1024*1024*5;Papa.DefaultDelimiter=",";Papa.Parser=Parser;Papa.ParserHandle=ParserHandle;Papa.NetworkStreamer=NetworkStreamer;Papa.FileStreamer=FileStreamer;Papa.StringStreamer=StringStreamer;if(typeof module!=="undefined"&&module.exports)module.exports=Papa;else if(isFunction(global.define)&&global.define.amd)define(function(){return Papa});else global.Papa=Papa;if(global.jQuery){var $=global.jQuery;$.fn.parse=function(options){var config=
options.config||{};var queue=[];this.each(function(idx){var supported=$(this).prop("tagName").toUpperCase()=="INPUT"&&$(this).attr("type").toLowerCase()=="file"&&global.FileReader;if(!supported||!this.files||this.files.length==0)return true;for(var i=0;i<this.files.length;i++)queue.push({file:this.files[i],inputElem:this,instanceConfig:$.extend({},config)})});parseNextFile();return this;function parseNextFile(){if(queue.length==0){if(isFunction(options.complete))options.complete();return}var f=queue[0];
if(isFunction(options.before)){var returned=options.before(f.file,f.inputElem);if(typeof returned==="object")if(returned.action=="abort"){error("AbortError",f.file,f.inputElem,returned.reason);return}else if(returned.action=="skip"){fileComplete();return}else{if(typeof returned.config==="object")f.instanceConfig=$.extend(f.instanceConfig,returned.config)}else if(returned=="skip"){fileComplete();return}}var userCompleteFunc=f.instanceConfig.complete;f.instanceConfig.complete=function(results){if(isFunction(userCompleteFunc))userCompleteFunc(results,
f.file,f.inputElem);fileComplete()};Papa.parse(f.file,f.instanceConfig)}function error(name,file,elem,reason){if(isFunction(options.error))options.error({name:name},file,elem,reason)}function fileComplete(){queue.splice(0,1);parseNextFile()}}}if(IS_PAPA_WORKER)global.onmessage=workerThreadReceivedMessage;else if(Papa.WORKERS_SUPPORTED){AUTO_SCRIPT_PATH=getScriptPath();if(!document.body)LOADED_SYNC=true;else document.addEventListener("DOMContentLoaded",function(){LOADED_SYNC=true},true)}function CsvToJson(_input,
_config){_config=_config||{};if(_config.worker&&Papa.WORKERS_SUPPORTED){var w=newWorker();w.userStep=_config.step;w.userChunk=_config.chunk;w.userComplete=_config.complete;w.userError=_config.error;_config.step=isFunction(_config.step);_config.chunk=isFunction(_config.chunk);_config.complete=isFunction(_config.complete);_config.error=isFunction(_config.error);delete _config.worker;w.postMessage({input:_input,config:_config,workerId:w.id});return}var streamer=null;if(typeof _input==="string")if(_config.download)streamer=
new NetworkStreamer(_config);else streamer=new StringStreamer(_config);else if(global.File&&_input instanceof File||_input instanceof Object)streamer=new FileStreamer(_config);return streamer.stream(_input)}function JsonToCsv(_input,_config){var _output="";var _fields=[];var _quotes=false;var _delimiter=",";var _newline="\r\n";unpackConfig();if(typeof _input==="string")_input=JSON.parse(_input);if(_input instanceof Array)if(!_input.length||_input[0]instanceof Array)return serialize(null,_input);else{if(typeof _input[0]===
"object")return serialize(objectKeys(_input[0]),_input)}else if(typeof _input==="object"){if(typeof _input.data==="string")_input.data=JSON.parse(_input.data);if(_input.data instanceof Array){if(!_input.fields)_input.fields=_input.data[0]instanceof Array?_input.fields:objectKeys(_input.data[0]);if(!(_input.data[0]instanceof Array)&&typeof _input.data[0]!=="object")_input.data=[_input.data]}return serialize(_input.fields||[],_input.data||[])}throw"exception: Unable to serialize unrecognized input";
function unpackConfig(){if(typeof _config!=="object")return;if(typeof _config.delimiter==="string"&&_config.delimiter.length==1&&Papa.BAD_DELIMITERS.indexOf(_config.delimiter)==-1)_delimiter=_config.delimiter;if(typeof _config.quotes==="boolean"||_config.quotes instanceof Array)_quotes=_config.quotes;if(typeof _config.newline==="string")_newline=_config.newline}function objectKeys(obj){if(typeof obj!=="object")return[];var keys=[];for(var key in obj)keys.push(key);return keys}function serialize(fields,
data){var csv="";if(typeof fields==="string")fields=JSON.parse(fields);if(typeof data==="string")data=JSON.parse(data);var hasHeader=fields instanceof Array&&fields.length>0;var dataKeyedByField=!(data[0]instanceof Array);if(hasHeader){for(var i=0;i<fields.length;i++){if(i>0)csv+=_delimiter;csv+=safe(fields[i],i)}if(data.length>0)csv+=_newline}for(var row=0;row<data.length;row++){var maxCol=hasHeader?fields.length:data[row].length;for(var col=0;col<maxCol;col++){if(col>0)csv+=_delimiter;var colIdx=
hasHeader&&dataKeyedByField?fields[col]:col;csv+=safe(data[row][colIdx],col)}if(row<data.length-1)csv+=_newline}return csv}function safe(str,col){if(typeof str==="undefined"||str===null)return"";str=str.toString().replace(/"/g,'""');var needsQuotes=typeof _quotes==="boolean"&&_quotes||_quotes instanceof Array&&_quotes[col]||hasAny(str,Papa.BAD_DELIMITERS)||str.indexOf(_delimiter)>-1||str.charAt(0)==" "||str.charAt(str.length-1)==" ";return needsQuotes?'"'+str+'"':str}function hasAny(str,substrings){for(var i=
0;i<substrings.length;i++)if(str.indexOf(substrings[i])>-1)return true;return false}}function ChunkStreamer(config){this._handle=null;this._paused=false;this._finished=false;this._input=null;this._baseIndex=0;this._partialLine="";this._rowCount=0;this._start=0;this._nextChunk=null;this.isFirstChunk=true;this._completeResults={data:[],errors:[],meta:{}};replaceConfig.call(this,config);this.parseChunk=function(chunk){if(this.isFirstChunk&&isFunction(this._config.beforeFirstChunk)){var modifiedChunk=
this._config.beforeFirstChunk(chunk);if(modifiedChunk!==undefined)chunk=modifiedChunk}this.isFirstChunk=false;var aggregate=this._partialLine+chunk;this._partialLine="";var results=this._handle.parse(aggregate,this._baseIndex,!this._finished);if(this._handle.paused()||this._handle.aborted())return;var lastIndex=results.meta.cursor;if(!this._finished){this._partialLine=aggregate.substring(lastIndex-this._baseIndex);this._baseIndex=lastIndex}if(results&&results.data)this._rowCount+=results.data.length;
var finishedIncludingPreview=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(IS_PAPA_WORKER)global.postMessage({results:results,workerId:Papa.WORKER_ID,finished:finishedIncludingPreview});else if(isFunction(this._config.chunk)){this._config.chunk(results,this._handle);if(this._paused)return;results=undefined;this._completeResults=undefined}if(!this._config.step&&!this._config.chunk){this._completeResults.data=this._completeResults.data.concat(results.data);this._completeResults.errors=
this._completeResults.errors.concat(results.errors);this._completeResults.meta=results.meta}if(finishedIncludingPreview&&isFunction(this._config.complete)&&(!results||!results.meta.aborted))this._config.complete(this._completeResults);if(!finishedIncludingPreview&&(!results||!results.meta.paused))this._nextChunk();return results};this._sendError=function(error){if(isFunction(this._config.error))this._config.error(error);else if(IS_PAPA_WORKER&&this._config.error)global.postMessage({workerId:Papa.WORKER_ID,
error:error,finished:false})};function replaceConfig(config){var configCopy=copy(config);configCopy.chunkSize=parseInt(configCopy.chunkSize);if(!config.step&&!config.chunk)configCopy.chunkSize=null;this._handle=new ParserHandle(configCopy);this._handle.streamer=this;this._config=configCopy}}function NetworkStreamer(config){config=config||{};if(!config.chunkSize)config.chunkSize=Papa.RemoteChunkSize;ChunkStreamer.call(this,config);var xhr;if(IS_WORKER)this._nextChunk=function(){this._readChunk();this._chunkLoaded()};
else this._nextChunk=function(){this._readChunk()};this.stream=function(url){this._input=url;this._nextChunk()};this._readChunk=function(){if(this._finished){this._chunkLoaded();return}xhr=new XMLHttpRequest;if(!IS_WORKER){xhr.onload=bindFunction(this._chunkLoaded,this);xhr.onerror=bindFunction(this._chunkError,this)}xhr.open("GET",this._input,!IS_WORKER);if(this._config.chunkSize){var end=this._start+this._config.chunkSize-1;xhr.setRequestHeader("Range","bytes="+this._start+"-"+end);xhr.setRequestHeader("If-None-Match",
"webkit-no-cache")}try{xhr.send()}catch(err){this._chunkError(err.message)}if(IS_WORKER&&xhr.status==0)this._chunkError();else this._start+=this._config.chunkSize};this._chunkLoaded=function(){if(xhr.readyState!=4)return;if(xhr.status<200||xhr.status>=400){this._chunkError();return}this._finished=!this._config.chunkSize||this._start>getFileSize(xhr);this.parseChunk(xhr.responseText)};this._chunkError=function(errorMessage){var errorText=xhr.statusText||errorMessage;this._sendError(errorText)};function getFileSize(xhr){var contentRange=
xhr.getResponseHeader("Content-Range");return parseInt(contentRange.substr(contentRange.lastIndexOf("/")+1))}}NetworkStreamer.prototype=Object.create(ChunkStreamer.prototype);NetworkStreamer.prototype.constructor=NetworkStreamer;function FileStreamer(config){config=config||{};if(!config.chunkSize)config.chunkSize=Papa.LocalChunkSize;ChunkStreamer.call(this,config);var reader,slice;var usingAsyncReader=typeof FileReader!=="undefined";this.stream=function(file){this._input=file;slice=file.slice||file.webkitSlice||
file.mozSlice;if(usingAsyncReader){reader=new FileReader;reader.onload=bindFunction(this._chunkLoaded,this);reader.onerror=bindFunction(this._chunkError,this)}else reader=new FileReaderSync;this._nextChunk()};this._nextChunk=function(){if(!this._finished&&(!this._config.preview||this._rowCount<this._config.preview))this._readChunk()};this._readChunk=function(){var input=this._input;if(this._config.chunkSize){var end=Math.min(this._start+this._config.chunkSize,this._input.size);input=slice.call(input,
this._start,end)}var txt=reader.readAsText(input,this._config.encoding);if(!usingAsyncReader)this._chunkLoaded({target:{result:txt}})};this._chunkLoaded=function(event){this._start+=this._config.chunkSize;this._finished=!this._config.chunkSize||this._start>=this._input.size;this.parseChunk(event.target.result)};this._chunkError=function(){this._sendError(reader.error)}}FileStreamer.prototype=Object.create(ChunkStreamer.prototype);FileStreamer.prototype.constructor=FileStreamer;function StringStreamer(config){config=
config||{};ChunkStreamer.call(this,config);var string;var remaining;this.stream=function(s){string=s;remaining=s;return this._nextChunk()};this._nextChunk=function(){if(this._finished)return;var size=this._config.chunkSize;var chunk=size?remaining.substr(0,size):remaining;remaining=size?remaining.substr(size):"";this._finished=!remaining;return this.parseChunk(chunk)}}StringStreamer.prototype=Object.create(StringStreamer.prototype);StringStreamer.prototype.constructor=StringStreamer;function ParserHandle(_config){var FLOAT=
/^\s*-?(\d*\.?\d+|\d+\.?\d*)(e[-+]?\d+)?\s*$/i;var self=this;var _stepCounter=0;var _input;var _parser;var _paused=false;var _aborted=false;var _delimiterError;var _fields=[];var _results={data:[],errors:[],meta:{}};if(isFunction(_config.step)){var userStep=_config.step;_config.step=function(results){_results=results;if(needsHeaderRow())processResults();else{processResults();if(_results.data.length==0)return;_stepCounter+=results.data.length;if(_config.preview&&_stepCounter>_config.preview)_parser.abort();
else userStep(_results,self)}}}this.parse=function(input,baseIndex,ignoreLastRow){if(!_config.newline)_config.newline=guessLineEndings(input);_delimiterError=false;if(!_config.delimiter){var delimGuess=guessDelimiter(input);if(delimGuess.successful)_config.delimiter=delimGuess.bestDelimiter;else{_delimiterError=true;_config.delimiter=Papa.DefaultDelimiter}_results.meta.delimiter=_config.delimiter}var parserConfig=copy(_config);if(_config.preview&&_config.header)parserConfig.preview++;_input=input;
_parser=new Parser(parserConfig);_results=_parser.parse(_input,baseIndex,ignoreLastRow);processResults();return _paused?{meta:{paused:true}}:_results||{meta:{paused:false}}};this.paused=function(){return _paused};this.pause=function(){_paused=true;_parser.abort();_input=_input.substr(_parser.getCharIndex())};this.resume=function(){_paused=false;self.streamer.parseChunk(_input)};this.aborted=function(){return _aborted};this.abort=function(){_aborted=true;_parser.abort();_results.meta.aborted=true;
if(isFunction(_config.complete))_config.complete(_results);_input=""};function processResults(){if(_results&&_delimiterError){addError("Delimiter","UndetectableDelimiter","Unable to auto-detect delimiting character; defaulted to '"+Papa.DefaultDelimiter+"'");_delimiterError=false}if(_config.skipEmptyLines)for(var i=0;i<_results.data.length;i++)if(_results.data[i].length==1&&_results.data[i][0]=="")_results.data.splice(i--,1);if(needsHeaderRow())fillHeaderFields();return applyHeaderAndDynamicTyping()}
function needsHeaderRow(){return _config.header&&_fields.length==0}function fillHeaderFields(){if(!_results)return;for(var i=0;needsHeaderRow()&&i<_results.data.length;i++)for(var j=0;j<_results.data[i].length;j++)_fields.push(_results.data[i][j]);_results.data.splice(0,1)}function applyHeaderAndDynamicTyping(){if(!_results||!_config.header&&!_config.dynamicTyping)return _results;for(var i=0;i<_results.data.length;i++){var row={};for(var j=0;j<_results.data[i].length;j++){if(_config.dynamicTyping){var value=
_results.data[i][j];if(value=="true"||value=="TRUE")_results.data[i][j]=true;else if(value=="false"||value=="FALSE")_results.data[i][j]=false;else _results.data[i][j]=tryParseFloat(value)}if(_config.header)if(j>=_fields.length){if(!row["__parsed_extra"])row["__parsed_extra"]=[];row["__parsed_extra"].push(_results.data[i][j])}else row[_fields[j]]=_results.data[i][j]}if(_config.header){_results.data[i]=row;if(j>_fields.length)addError("FieldMismatch","TooManyFields","Too many fields: expected "+_fields.length+
" fields but parsed "+j,i);else if(j<_fields.length)addError("FieldMismatch","TooFewFields","Too few fields: expected "+_fields.length+" fields but parsed "+j,i)}}if(_config.header&&_results.meta)_results.meta.fields=_fields;return _results}function guessDelimiter(input){var delimChoices=[",","\t","|",";",Papa.RECORD_SEP,Papa.UNIT_SEP];var bestDelim,bestDelta,fieldCountPrevRow;for(var i=0;i<delimChoices.length;i++){var delim=delimChoices[i];var delta=0,avgFieldCount=0;fieldCountPrevRow=undefined;
var preview=(new Parser({delimiter:delim,preview:10})).parse(input);for(var j=0;j<preview.data.length;j++){var fieldCount=preview.data[j].length;avgFieldCount+=fieldCount;if(typeof fieldCountPrevRow==="undefined"){fieldCountPrevRow=fieldCount;continue}else if(fieldCount>1){delta+=Math.abs(fieldCount-fieldCountPrevRow);fieldCountPrevRow=fieldCount}}if(preview.data.length>0)avgFieldCount/=preview.data.length;if((typeof bestDelta==="undefined"||delta<bestDelta)&&avgFieldCount>1.99){bestDelta=delta;bestDelim=
delim}}_config.delimiter=bestDelim;return{successful:!!bestDelim,bestDelimiter:bestDelim}}function guessLineEndings(input){input=input.substr(0,1024*1024);var r=input.split("\r");if(r.length==1)return"\n";var numWithN=0;for(var i=0;i<r.length;i++)if(r[i][0]=="\n")numWithN++;return numWithN>=r.length/2?"\r\n":"\r"}function tryParseFloat(val){var isNumber=FLOAT.test(val);return isNumber?parseFloat(val):val}function addError(type,code,msg,row){_results.errors.push({type:type,code:code,message:msg,row:row})}
}function Parser(config){config=config||{};var delim=config.delimiter;var newline=config.newline;var comments=config.comments;var step=config.step;var preview=config.preview;var fastMode=config.fastMode;if(typeof delim!=="string"||Papa.BAD_DELIMITERS.indexOf(delim)>-1)delim=",";if(comments===delim)throw"Comment character same as delimiter";else if(comments===true)comments="#";else if(typeof comments!=="string"||Papa.BAD_DELIMITERS.indexOf(comments)>-1)comments=false;if(newline!="\n"&&newline!="\r"&&
newline!="\r\n")newline="\n";var cursor=0;var aborted=false;this.parse=function(input,baseIndex,ignoreLastRow){if(typeof input!=="string")throw"Input must be a string";var inputLen=input.length,delimLen=delim.length,newlineLen=newline.length,commentsLen=comments.length;var stepIsFunction=typeof step==="function";cursor=0;var data=[],errors=[],row=[],lastCursor=0;if(!input)return returnable();if(fastMode||fastMode!==false&&input.indexOf('"')===-1){var rows=input.split(newline);for(var i=0;i<rows.length;i++){var row=
rows[i];cursor+=row.length;if(i!==rows.length-1)cursor+=newline.length;else if(ignoreLastRow)return returnable();if(comments&&row.substr(0,commentsLen)==comments)continue;if(stepIsFunction){data=[];pushRow(row.split(delim));doStep();if(aborted)return returnable()}else pushRow(row.split(delim));if(preview&&i>=preview){data=data.slice(0,preview);return returnable(true)}}return returnable()}var nextDelim=input.indexOf(delim,cursor);var nextNewline=input.indexOf(newline,cursor);for(;;){if(input[cursor]==
'"'){var quoteSearch=cursor;cursor++;for(;;){var quoteSearch=input.indexOf('"',quoteSearch+1);if(quoteSearch===-1){if(!ignoreLastRow)errors.push({type:"Quotes",code:"MissingQuotes",message:"Quoted field unterminated",row:data.length,index:cursor});return finish()}if(quoteSearch===inputLen-1){var value=input.substring(cursor,quoteSearch).replace(/""/g,'"');return finish(value)}if(input[quoteSearch+1]=='"'){quoteSearch++;continue}if(input[quoteSearch+1]==delim){row.push(input.substring(cursor,quoteSearch).replace(/""/g,
'"'));cursor=quoteSearch+1+delimLen;nextDelim=input.indexOf(delim,cursor);nextNewline=input.indexOf(newline,cursor);break}if(input.substr(quoteSearch+1,newlineLen)===newline){row.push(input.substring(cursor,quoteSearch).replace(/""/g,'"'));saveRow(quoteSearch+1+newlineLen);nextDelim=input.indexOf(delim,cursor);if(stepIsFunction){doStep();if(aborted)return returnable()}if(preview&&data.length>=preview)return returnable(true);break}}continue}if(comments&&row.length===0&&input.substr(cursor,commentsLen)===
comments){if(nextNewline==-1)return returnable();cursor=nextNewline+newlineLen;nextNewline=input.indexOf(newline,cursor);nextDelim=input.indexOf(delim,cursor);continue}if(nextDelim!==-1&&(nextDelim<nextNewline||nextNewline===-1)){row.push(input.substring(cursor,nextDelim));cursor=nextDelim+delimLen;nextDelim=input.indexOf(delim,cursor);continue}if(nextNewline!==-1){row.push(input.substring(cursor,nextNewline));saveRow(nextNewline+newlineLen);if(stepIsFunction){doStep();if(aborted)return returnable()}if(preview&&
data.length>=preview)return returnable(true);continue}break}return finish();function pushRow(row){data.push(row);lastCursor=cursor}function finish(value){if(ignoreLastRow)return returnable();if(typeof value==="undefined")value=input.substr(cursor);row.push(value);cursor=inputLen;pushRow(row);if(stepIsFunction)doStep();return returnable()}function saveRow(newCursor){cursor=newCursor;pushRow(row);row=[];nextNewline=input.indexOf(newline,cursor)}function returnable(stopped){return{data:data,errors:errors,
meta:{delimiter:delim,linebreak:newline,aborted:aborted,truncated:!!stopped,cursor:lastCursor+(baseIndex||0)}}}function doStep(){step(returnable());data=[],errors=[]}};this.abort=function(){aborted=true};this.getCharIndex=function(){return cursor}}function getScriptPath(){var scripts=document.getElementsByTagName("script");return scripts.length?scripts[scripts.length-1].src:""}function newWorker(){if(!Papa.WORKERS_SUPPORTED)return false;if(!LOADED_SYNC&&Papa.SCRIPT_PATH===null)throw new Error("Script path cannot be determined automatically when Papa Parse is loaded asynchronously. "+
"You need to set Papa.SCRIPT_PATH manually.");var workerUrl=Papa.SCRIPT_PATH||AUTO_SCRIPT_PATH;workerUrl+=(workerUrl.indexOf("?")!==-1?"&":"?")+"papaworker";var w=new global.Worker(workerUrl);w.onmessage=mainThreadReceivedMessage;w.id=workerIdCounter++;workers[w.id]=w;return w}function mainThreadReceivedMessage(e){var msg=e.data;var worker=workers[msg.workerId];var aborted=false;if(msg.error)worker.userError(msg.error,msg.file);else if(msg.results&&msg.results.data){var abort=function(){aborted=true;
completeWorker(msg.workerId,{data:[],errors:[],meta:{aborted:true}})};var handle={abort:abort,pause:notImplemented,resume:notImplemented};if(isFunction(worker.userStep)){for(var i=0;i<msg.results.data.length;i++){worker.userStep({data:[msg.results.data[i]],errors:msg.results.errors,meta:msg.results.meta},handle);if(aborted)break}delete msg.results}else if(isFunction(worker.userChunk)){worker.userChunk(msg.results,handle,msg.file);delete msg.results}}if(msg.finished&&!aborted)completeWorker(msg.workerId,
msg.results)}function completeWorker(workerId,results){var worker=workers[workerId];if(isFunction(worker.userComplete))worker.userComplete(results);worker.terminate();delete workers[workerId]}function notImplemented(){throw"Not implemented.";}function workerThreadReceivedMessage(e){var msg=e.data;if(typeof Papa.WORKER_ID==="undefined"&&msg)Papa.WORKER_ID=msg.workerId;if(typeof msg.input==="string")global.postMessage({workerId:Papa.WORKER_ID,results:Papa.parse(msg.input,msg.config),finished:true});
else if(global.File&&msg.input instanceof File||msg.input instanceof Object){var results=Papa.parse(msg.input,msg.config);if(results)global.postMessage({workerId:Papa.WORKER_ID,results:results,finished:true})}}function copy(obj){if(typeof obj!=="object")return obj;var cpy=obj instanceof Array?[]:{};for(var key in obj)cpy[key]=copy(obj[key]);return cpy}function bindFunction(f,self){return function(){f.apply(self,arguments)}}function isFunction(func){return typeof func==="function"}})(typeof window!==
"undefined"?window:this);(function(){var G={},F={},M={};(function(x,v){function k(){this._endDelay=this._delay=0;this._fill="none";this._iterationStart=0;this._iterations=1;this._duration=0;this._playbackRate=1;this._direction="normal";this._easing="linear";this._easingFunction=n}function f(){return x.isDeprecated("Invalid timing inputs","2016-03-02","TypeError exceptions will be thrown instead.",!0)}function h(m,A,B){var C=new k;A&&(C.fill="both",C.duration="auto");"number"!=typeof m||isNaN(m)?void 0!==m&&Object.getOwnPropertyNames(m).forEach(function(w){if("auto"!=
m[w]){if("number"==typeof C[w]||"duration"==w)if("number"!=typeof m[w]||isNaN(m[w]))return;"fill"==w&&-1==d.indexOf(m[w])||"direction"==w&&-1==l.indexOf(m[w])||"playbackRate"==w&&1!==m[w]&&x.isDeprecated("AnimationEffectTiming.playbackRate","2014-11-28","Use Animation.playbackRate instead.")||(C[w]=m[w])}}):C.duration=m;return C}function e(m,A,B,C){return 0>m||1<m||0>B||1<B?n:function(w){if(0>=w){var D=0;0<m?D=A/m:!A&&0<B&&(D=C/B);return D*w}if(1<=w)return D=0,1>B?D=(C-1)/(B-1):1==B&&1>m&&(D=(A-1)/
(m-1)),1+D*(w-1);D=0;for(var H=1;D<H;){var E=(D+H)/2,I=3*m*(1-E)*(1-E)*E+3*B*(1-E)*E*E+E*E*E;if(1E-5>Math.abs(w-I))break;I<w?D=E:H=E}return 3*A*(1-E)*(1-E)*E+3*C*(1-E)*E*E+E*E*E}}function a(m,A){return function(B){if(1<=B)return 1;var C=1/m;B+=A*C;return B-B%C}}function c(m){u||(u=document.createElement("div").style);u.animationTimingFunction="";u.animationTimingFunction=m;var A=u.animationTimingFunction;if(""==A&&f())throw new TypeError(m+" is not a valid value for easing");return A}function b(m){if("linear"==
m)return n;var A=r.exec(m);return A?e.apply(this,A.slice(1).map(Number)):(A=y.exec(m))?a(Number(A[1]),{start:t,middle:p,end:q}[A[2]]):(m=z[m])?m:n}function g(m,A,B){if(null==A)return 0;var C=B.delay+m+B.endDelay;return A<Math.min(B.delay,C)?1:A>=Math.min(B.delay+m,C)?2:3}var d=["backwards","forwards","both","none"],l=["reverse","alternate","alternate-reverse"],n=function(m){return m};k.prototype={_setMember:function(m,A){this["_"+m]=A;this._effect&&(this._effect._timingInput[m]=A,this._effect._timing=
x.normalizeTimingInput(this._effect._timingInput),this._effect.activeDuration=x.calculateActiveDuration(this._effect._timing),this._effect._animation&&this._effect._animation._rebuildUnderlyingAnimation())},get playbackRate(){return this._playbackRate},set delay(m){this._setMember("delay",m)},get delay(){return this._delay},set endDelay(m){this._setMember("endDelay",m)},get endDelay(){return this._endDelay},set fill(m){this._setMember("fill",m)},get fill(){return this._fill},set iterationStart(m){if((isNaN(m)||
0>m)&&f())throw new TypeError("iterationStart must be a non-negative number, received: "+m);this._setMember("iterationStart",m)},get iterationStart(){return this._iterationStart},set duration(m){if("auto"!=m&&(isNaN(m)||0>m)&&f())throw new TypeError("duration must be non-negative or auto, received: "+m);this._setMember("duration",m)},get duration(){return this._duration},set direction(m){this._setMember("direction",m)},get direction(){return this._direction},set easing(m){this._easingFunction=b(c(m));
this._setMember("easing",m)},get easing(){return this._easing},set iterations(m){if((isNaN(m)||0>m)&&f())throw new TypeError("iterations must be non-negative, received: "+m);this._setMember("iterations",m)},get iterations(){return this._iterations}};var t=1,p=.5,q=0,z={ease:e(.25,.1,.25,1),"ease-in":e(.42,0,1,1),"ease-out":e(0,0,.58,1),"ease-in-out":e(.42,0,.58,1),"step-start":a(1,t),"step-middle":a(1,p),"step-end":a(1,q)},u=null,r=/cubic-bezier\(\s*(-?\d+\.?\d*|-?\.\d+)\s*,\s*(-?\d+\.?\d*|-?\.\d+)\s*,\s*(-?\d+\.?\d*|-?\.\d+)\s*,\s*(-?\d+\.?\d*|-?\.\d+)\s*\)/,
y=/steps\(\s*(\d+)\s*,\s*(start|middle|end)\s*\)/;x.cloneTimingInput=function(m){if("number"==typeof m)return m;var A={},B;for(B in m)A[B]=m[B];return A};x.makeTiming=h;x.numericTimingToObject=function(m){"number"==typeof m&&(m=isNaN(m)?{duration:0}:{duration:m});return m};x.normalizeTimingInput=function(m,A){m=x.numericTimingToObject(m);return h(m,A)};x.calculateActiveDuration=function(m){return Math.abs((0===m.duration||0===m.iterations?0:m.duration*m.iterations)/m.playbackRate)};x.calculateIterationProgress=
function(m,A,B){var C=g(m,A,B);a:{var w=B.fill;switch(C){case 1:m="backwards"==w||"both"==w?0:null;break a;case 3:m=A-B.delay;break a;case 2:m="forwards"==w||"both"==w?m:null;break a;case 0:m=null;break a}m=void 0}if(null===m)return null;A=B.duration;w=B.iterationStart;0===A?1!==C&&(w+=B.iterations):w+=m/A;A=w;w=Infinity===A?B.iterationStart%1:A%1;0!==w||2!==C||0===B.iterations||0===m&&0!==B.duration||(w=1);m=w;w=2===C&&Infinity===B.iterations?Infinity:1===m?Math.floor(A)-1:Math.floor(A);A=C=B.direction;
"normal"!==C&&"reverse"!==C&&("alternate-reverse"===C&&(w+=1),A="normal",Infinity!==w&&0!==w%2&&(A="reverse"));return B._easingFunction("normal"===A?m:1-m)};x.calculatePhase=g;x.normalizeEasing=c;x.parseEasingFunction=b})(G,null);(function(x,v){function k(a){var c=[],b;for(b in a)if(!(b in["easing","offset","composite"])){var g=a[b];Array.isArray(g)||(g=[g]);for(var d,l=g.length,n=0;n<l;n++)d={},d.offset="offset"in a?a.offset:1==l?1:n/(l-1),"easing"in a&&(d.easing=a.easing),"composite"in a&&(d.composite=
a.composite),d[b]=g[n],c.push(d)}c.sort(function(t,p){return t.offset-p.offset});return c}var f={background:"backgroundImage backgroundPosition backgroundSize backgroundRepeat backgroundAttachment backgroundOrigin backgroundClip backgroundColor".split(" "),border:"borderTopColor borderTopStyle borderTopWidth borderRightColor borderRightStyle borderRightWidth borderBottomColor borderBottomStyle borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth".split(" "),borderBottom:["borderBottomWidth",
"borderBottomStyle","borderBottomColor"],borderColor:["borderTopColor","borderRightColor","borderBottomColor","borderLeftColor"],borderLeft:["borderLeftWidth","borderLeftStyle","borderLeftColor"],borderRadius:["borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius"],borderRight:["borderRightWidth","borderRightStyle","borderRightColor"],borderTop:["borderTopWidth","borderTopStyle","borderTopColor"],borderWidth:["borderTopWidth","borderRightWidth","borderBottomWidth",
"borderLeftWidth"],flex:["flexGrow","flexShrink","flexBasis"],font:"fontFamily fontSize fontStyle fontVariant fontWeight lineHeight".split(" "),margin:["marginTop","marginRight","marginBottom","marginLeft"],outline:["outlineColor","outlineStyle","outlineWidth"],padding:["paddingTop","paddingRight","paddingBottom","paddingLeft"]},h=document.createElementNS("http://www.w3.org/1999/xhtml","div");v={thin:"1px",medium:"3px",thick:"5px"};var e={borderBottomWidth:v,borderLeftWidth:v,borderRightWidth:v,borderTopWidth:v,
fontSize:{"xx-small":"60%","x-small":"75%",small:"89%",medium:"100%",large:"120%","x-large":"150%","xx-large":"200%"},fontWeight:{normal:"400",bold:"700"},outlineWidth:v,textShadow:{none:"0px 0px 0px transparent"},boxShadow:{none:"0px 0px 0px 0px transparent"}};x.convertToArrayForm=k;x.normalizeKeyframes=function(a){function c(){var n=b.length;null==b[n-1].offset&&(b[n-1].offset=1);1<n&&null==b[0].offset&&(b[0].offset=0);for(var t=0,p=b[0].offset,q=1;q<n;q++){var z=b[q].offset;if(null!=z){for(var u=
1;u<q-t;u++)b[t+u].offset=p+(z-p)*u/(q-t);t=q;p=z}}}if(null==a)return[];window.Symbol&&Symbol.iterator&&Array.prototype.from&&a[Symbol.iterator]&&(a=Array.from(a));Array.isArray(a)||(a=k(a));var b=a.map(function(n){var t={},p;for(p in n){var q=n[p];if("offset"==p){if(null!=q){q=Number(q);if(!isFinite(q))throw new TypeError("Keyframe offsets must be numbers.");if(0>q||1<q)throw new TypeError("Keyframe offsets must be between 0 and 1.");}}else if("composite"==p){if("add"==q||"accumulate"==q)throw{type:DOMException.NOT_SUPPORTED_ERR,
name:"NotSupportedError",message:"add compositing is not supported"};if("replace"!=q)throw new TypeError("Invalid composite mode "+q+".");}else q="easing"==p?x.normalizeEasing(q):""+q;var z=void 0,u=p,r=q;q=t;var y=u;if("display"!==y&&0!==y.lastIndexOf("animation",0)&&0!==y.lastIndexOf("transition",0))if(y=f[u])for(z in h.style[u]=r,y)u=y[z],r=h.style[u],q[u]=u in e?e[u][r]||r:r;else q[u]=u in e?e[u][r]||r:r}void 0==t.offset&&(t.offset=null);void 0==t.easing&&(t.easing="linear");return t});a=!0;for(var g=
-Infinity,d=0;d<b.length;d++){var l=b[d].offset;if(null!=l){if(l<g)throw new TypeError("Keyframes are not loosely sorted by offset. Sort or specify offsets.");g=l}else a=!1}b=b.filter(function(n){return 0<=n.offset&&1>=n.offset});a||c();return b}})(G,null);(function(x){var v={};x.isDeprecated=function(k,f,h,e){e=e?"are":"is";var a=new Date;f=new Date(f);f.setMonth(f.getMonth()+3);return a<f?(k in v||console.warn("Web Animations: "+k+" "+e+" deprecated and will stop working on "+f.toDateString()+". "+
h),v[k]=!0,!1):!0};x.deprecated=function(k,f,h,e){var a=e?"are":"is";if(x.isDeprecated(k,f,h,e))throw Error(k+" "+a+" no longer supported. "+h);}})(G);(function(){if(document.documentElement.animate){var x=document.documentElement.animate([],0),v=!0;x&&(v=!1,"play currentTime pause reverse playbackRate cancel finish startTime playState".split(" ").forEach(function(k){void 0===x[k]&&(v=!0)}));if(!v)return}(function(k,f,h){function e(c){for(var b={},g=0;g<c.length;g++)for(var d in c[g])if("offset"!=
d&&"easing"!=d&&"composite"!=d){var l={offset:c[g].offset,easing:c[g].easing,value:c[g][d]};b[d]=b[d]||[];b[d].push(l)}for(var n in b)if(c=b[n],0!=c[0].offset||1!=c[c.length-1].offset)throw{type:DOMException.NOT_SUPPORTED_ERR,name:"NotSupportedError",message:"Partial keyframes are not supported"};return b}function a(c){var b=[],g;for(g in c)for(var d=c[g],l=0;l<d.length-1;l++){var n=l,t=l+1,p=d[n].offset,q=d[t].offset,z=p,u=q;0==l&&(z=-Infinity,0==q&&(t=n));l==d.length-2&&(u=Infinity,1==p&&(n=t));
b.push({applyFrom:z,applyTo:u,startOffset:d[n].offset,endOffset:d[t].offset,easingFunction:k.parseEasingFunction(d[n].easing),property:g,interpolation:f.propertyInterpolation(g,d[n].value,d[t].value)})}b.sort(function(r,y){return r.startOffset-y.startOffset});return b}f.convertEffectInput=function(c){c=k.normalizeKeyframes(c);var b=e(c),g=a(b);return function(d,l){if(null!=l)g.filter(function(t){return l>=t.applyFrom&&l<t.applyTo}).forEach(function(t){var p=l-t.startOffset,q=t.endOffset-t.startOffset;
p=0==q?0:t.easingFunction(p/q);f.apply(d,t.property,t.interpolation(p))});else for(var n in b)"offset"!=n&&"easing"!=n&&"composite"!=n&&f.clear(d,n)}}})(G,F,null);(function(k,f,h){function e(b){return b.replace(/-(.)/g,function(g,d){return d.toUpperCase()})}var a={};f.addPropertiesHandler=function(b,g,d){for(var l=0;l<d.length;l++){var n=b,t=g,p=e(d[l]);a[p]=a[p]||[];a[p].push([n,t])}};var c={backgroundColor:"transparent",backgroundPosition:"0% 0%",borderBottomColor:"currentColor",borderBottomLeftRadius:"0px",
borderBottomRightRadius:"0px",borderBottomWidth:"3px",borderLeftColor:"currentColor",borderLeftWidth:"3px",borderRightColor:"currentColor",borderRightWidth:"3px",borderSpacing:"2px",borderTopColor:"currentColor",borderTopLeftRadius:"0px",borderTopRightRadius:"0px",borderTopWidth:"3px",bottom:"auto",clip:"rect(0px, 0px, 0px, 0px)",color:"black",fontSize:"100%",fontWeight:"400",height:"auto",left:"auto",letterSpacing:"normal",lineHeight:"120%",marginBottom:"0px",marginLeft:"0px",marginRight:"0px",marginTop:"0px",
maxHeight:"none",maxWidth:"none",minHeight:"0px",minWidth:"0px",opacity:"1.0",outlineColor:"invert",outlineOffset:"0px",outlineWidth:"3px",paddingBottom:"0px",paddingLeft:"0px",paddingRight:"0px",paddingTop:"0px",right:"auto",strokeDasharray:"none",strokeDashoffset:"0px",textIndent:"0px",textShadow:"0px 0px 0px transparent",top:"auto",transform:"",verticalAlign:"0px",visibility:"visible",width:"auto",wordSpacing:"normal",zIndex:"auto"};f.propertyInterpolation=function(b,g,d){var l=b;/-/.test(b)&&
!k.isDeprecated("Hyphenated property names","2016-03-22","Use camelCase instead.",!0)&&(l=e(b));if("initial"==g||"initial"==d)"initial"==g&&(g=c[l]),"initial"==d&&(d=c[l]);b=g==d?[]:a[l];for(l=0;b&&l<b.length;l++){var n=b[l][0](g),t=b[l][0](d);if(void 0!==n&&void 0!==t&&(n=b[l][1](n,t))){var p=f.Interpolation.apply(null,n);return function(q){return 0==q?g:1==q?d:p(q)}}}return f.Interpolation(!1,!0,function(q){return q?d:g})}})(G,F,null);(function(k,f,h){function e(a){var c=k.calculateActiveDuration(a),
b=function(g){return k.calculateIterationProgress(c,g,a)};b._totalDuration=a.delay+c+a.endDelay;return b}f.KeyframeEffect=function(a,c,b,g){var d=e(k.normalizeTimingInput(b)),l=f.convertEffectInput(c),n;c=function(){l(a,n)};c._update=function(t){n=d(t);return null!==n};c._clear=function(){l(a,null)};c._hasSameTarget=function(t){return a===t};c._target=a;c._totalDuration=d._totalDuration;c._id=g;return c}})(G,F,null);(function(k,f){k.apply=function(h,e,a){h.style[k.propertyName(e)]=a};k.clear=function(h,
e){h.style[k.propertyName(e)]=""}})(F,null);(function(k){window.Element.prototype.animate=function(f,h){var e="";h&&h.id&&(e=h.id);return k.timeline._play(k.KeyframeEffect(this,f,h,e))}})(F);(function(k,f){function h(e,a,c){if("number"==typeof e&&"number"==typeof a)return e*(1-c)+a*c;if("boolean"==typeof e&&"boolean"==typeof a)return.5>c?e:a;if(e.length==a.length){for(var b=[],g=0;g<e.length;g++)b.push(h(e[g],a[g],c));return b}throw"Mismatched interpolation arguments "+e+":"+a;}k.Interpolation=function(e,
a,c){return function(b){return c(h(e,a,b))}}})(F,null);(function(k,f,h){k.sequenceNumber=0;var e=function(a,c,b){this.target=a;this.currentTime=c;this.timelineTime=b;this.type="finish";this.cancelable=this.bubbles=!1;this.currentTarget=a;this.defaultPrevented=!1;this.eventPhase=Event.AT_TARGET;this.timeStamp=Date.now()};f.Animation=function(a){this.id="";a&&a._id&&(this.id=a._id);this._sequenceNumber=k.sequenceNumber++;this._currentTime=0;this._startTime=null;this._paused=!1;this._playbackRate=1;
this._finishedFlag=this._inTimeline=!0;this.onfinish=null;this._finishHandlers=[];this._effect=a;this._inEffect=this._effect._update(0);this._idle=!0;this._currentTimePending=!1};f.Animation.prototype={_ensureAlive:function(){this._inEffect=0>this.playbackRate&&0===this.currentTime?this._effect._update(-1):this._effect._update(this.currentTime);this._inTimeline||!this._inEffect&&this._finishedFlag||(this._inTimeline=!0,f.timeline._animations.push(this))},_tickCurrentTime:function(a,c){a!=this._currentTime&&
(this._currentTime=a,this._isFinished&&!c&&(this._currentTime=0<this._playbackRate?this._totalDuration:0),this._ensureAlive())},get currentTime(){return this._idle||this._currentTimePending?null:this._currentTime},set currentTime(a){a=+a;isNaN(a)||(f.restart(),this._paused||null==this._startTime||(this._startTime=this._timeline.currentTime-a/this._playbackRate),this._currentTimePending=!1,this._currentTime!=a&&(this._idle&&(this._idle=!1,this._paused=!0),this._tickCurrentTime(a,!0),f.applyDirtiedAnimation(this)))},
get startTime(){return this._startTime},set startTime(a){a=+a;isNaN(a)||this._paused||this._idle||(this._startTime=a,this._tickCurrentTime((this._timeline.currentTime-this._startTime)*this.playbackRate),f.applyDirtiedAnimation(this))},get playbackRate(){return this._playbackRate},set playbackRate(a){if(a!=this._playbackRate){var c=this.currentTime;this._playbackRate=a;this._startTime=null;"paused"!=this.playState&&"idle"!=this.playState&&(this._idle=this._finishedFlag=!1,this._ensureAlive(),f.applyDirtiedAnimation(this));
null!=c&&(this.currentTime=c)}},get _isFinished(){return!this._idle&&(0<this._playbackRate&&this._currentTime>=this._totalDuration||0>this._playbackRate&&0>=this._currentTime)},get _totalDuration(){return this._effect._totalDuration},get playState(){return this._idle?"idle":null==this._startTime&&!this._paused&&0!=this.playbackRate||this._currentTimePending?"pending":this._paused?"paused":this._isFinished?"finished":"running"},_rewind:function(){if(0<=this._playbackRate)this._currentTime=0;else if(Infinity>
this._totalDuration)this._currentTime=this._totalDuration;else throw new DOMException("Unable to rewind negative playback rate animation with infinite duration","InvalidStateError");},play:function(){this._paused=!1;if(this._isFinished||this._idle)this._rewind(),this._startTime=null;this._idle=this._finishedFlag=!1;this._ensureAlive();f.applyDirtiedAnimation(this)},pause:function(){this._isFinished||this._paused||this._idle?this._idle&&(this._rewind(),this._idle=!1):this._currentTimePending=!0;this._startTime=
null;this._paused=!0},finish:function(){this._idle||(this.currentTime=0<this._playbackRate?this._totalDuration:0,this._startTime=this._totalDuration-this.currentTime,this._currentTimePending=!1,f.applyDirtiedAnimation(this))},cancel:function(){this._inEffect&&(this._inEffect=!1,this._idle=!0,this._paused=!1,this._finishedFlag=!0,this._currentTime=0,this._startTime=null,this._effect._update(null),f.applyDirtiedAnimation(this))},reverse:function(){this.playbackRate*=-1;this.play()},addEventListener:function(a,
c){"function"==typeof c&&"finish"==a&&this._finishHandlers.push(c)},removeEventListener:function(a,c){"finish"==a&&(a=this._finishHandlers.indexOf(c),0<=a&&this._finishHandlers.splice(a,1))},_fireEvents:function(a){if(this._isFinished){if(!this._finishedFlag){var c=new e(this,this._currentTime,a),b=this._finishHandlers.concat(this.onfinish?[this.onfinish]:[]);setTimeout(function(){b.forEach(function(g){g.call(c.target,c)})},0);this._finishedFlag=!0}}else this._finishedFlag=!1},_tick:function(a,c){this._idle||
this._paused||(null==this._startTime?c&&(this.startTime=a-this._currentTime/this.playbackRate):this._isFinished||this._tickCurrentTime((a-this._startTime)*this.playbackRate));c&&(this._currentTimePending=!1,this._fireEvents(a))},get _needsTick(){return this.playState in{pending:1,running:1}||!this._finishedFlag},_targetAnimations:function(){var a=this._effect._target;a._activeAnimations||(a._activeAnimations=[]);return a._activeAnimations},_markTarget:function(){var a=this._targetAnimations();-1===
a.indexOf(this)&&a.push(this)},_unmarkTarget:function(){var a=this._targetAnimations(),c=a.indexOf(this);-1!==c&&a.splice(c,1)}}})(G,F,null);(function(k,f,h){function e(r){var y=l;l=[];r<u.currentTime&&(r=u.currentTime);u._animations.sort(a);u._animations=g(r,!0,u._animations)[0];y.forEach(function(m){m[1](r)});b()}function a(r,y){return r._sequenceNumber-y._sequenceNumber}function c(){this._animations=[];this.currentTime=window.performance&&performance.now?performance.now():0}function b(){q.forEach(function(r){r()});
q.length=0}function g(r,y,m){z=!0;p=!1;f.timeline.currentTime=r;t=!1;var A=[],B=[],C=[],w=[];m.forEach(function(D){D._tick(r,y);D._inEffect?(B.push(D._effect),D._markTarget()):(A.push(D._effect),D._unmarkTarget());D._needsTick&&(t=!0);var H=D._inEffect||D._needsTick;(D._inTimeline=H)?C.push(D):w.push(D)});q.push.apply(q,A);q.push.apply(q,B);t&&requestAnimationFrame(function(){});z=!1;return[C,w]}var d=window.requestAnimationFrame,l=[],n=0;window.requestAnimationFrame=function(r){var y=n++;0!=l.length||
d(e);l.push([y,r]);return y};window.cancelAnimationFrame=function(r){l.forEach(function(y){y[0]==r&&(y[1]=function(){})})};c.prototype={_play:function(r){r._timing=k.normalizeTimingInput(r.timing);r=new f.Animation(r);r._idle=!1;r._timeline=this;this._animations.push(r);f.restart();f.applyDirtiedAnimation(r);return r}};var t=!1,p=!1;f.restart=function(){t||(t=!0,requestAnimationFrame(function(){}),p=!0);return p};f.applyDirtiedAnimation=function(r){z||(r._markTarget(),r=r._targetAnimations(),r.sort(a),
g(f.timeline.currentTime,!1,r.slice())[1].forEach(function(y){y=u._animations.indexOf(y);-1!==y&&u._animations.splice(y,1)}),b())};var q=[],z=!1,u=new c;f.timeline=u})(G,F,null);(function(k){function f(c,b){var g=c.exec(b);if(g)return g=c.ignoreCase?g[0].toLowerCase():g[0],[g,b.substr(g.length)]}function h(c,b){b=b.replace(/^\s*/,"");if(c=c(b))return[c[0],c[1].replace(/^\s*/,"")]}function e(c,b){for(var g=c,d=b;g&&d;)g>d?g%=d:d%=g;return c*b/(g+d)}function a(c,b,g,d,l){for(var n=[],t=[],p=[],q=e(d.length,
l.length),z=0;z<q;z++){var u=b(d[z%d.length],l[z%l.length]);if(!u)return;n.push(u[0]);t.push(u[1]);p.push(u[2])}return[n,t,function(r){r=r.map(function(y,m){return p[m](y)}).join(g);return c?c(r):r}]}k.consumeToken=f;k.consumeTrimmed=h;k.consumeRepeated=function(c,b,g){c=h.bind(null,c);for(var d=[];;){var l=c(g);if(!l)return[d,g];d.push(l[0]);g=l[1];l=f(b,g);if(!l||""==l[1])return[d,g];g=l[1]}};k.consumeParenthesised=function(c,b){for(var g=0,d=0;d<b.length&&(!/\s|,/.test(b[d])||0!=g);d++)if("("==
b[d])g++;else if(")"==b[d]&&(g--,0==g&&d++,0>=g))break;c=c(b.substr(0,d));return void 0==c?void 0:[c,b.substr(d)]};k.ignore=function(c){return function(b){(b=c(b))&&(b[0]=void 0);return b}};k.optional=function(c,b){return function(g){var d=c(g);return d?d:[b,g]}};k.consumeList=function(c,b){for(var g=[],d=0;d<c.length;d++){b=k.consumeTrimmed(c[d],b);if(!b||""==b[0])return;void 0!==b[0]&&g.push(b[0]);b=b[1]}if(""==b)return g};k.mergeNestedRepeated=a.bind(null,null);k.mergeWrappedNestedRepeated=a;k.mergeList=
function(c,b,g){for(var d=[],l=[],n=[],t=0,p=0;p<g.length;p++)if("function"==typeof g[p]){var q=g[p](c[t],b[t++]);d.push(q[0]);l.push(q[1]);n.push(q[2])}else(function(z){d.push(!1);l.push(!1);n.push(function(){return g[z]})})(p);return[d,l,function(z){for(var u="",r=0;r<z.length;r++)u+=n[r](z[r]);return u}]}})(F);(function(k){function f(e){var a={inset:!1,lengths:[],color:null};if((e=k.consumeRepeated(function(c){var b=k.consumeToken(/^inset/i,c);if(b)return a.inset=!0,b;if(b=k.consumeLengthOrPercent(c))return a.lengths.push(b[0]),
b;if(b=k.consumeColor(c))return a.color=b[0],b},/^/,e))&&e[0].length)return[a,e[1]]}var h=function(e,a,c,b){function g(q){return{inset:q,color:[0,0,0,0],lengths:[{px:0},{px:0},{px:0},{px:0}]}}for(var d=[],l=[],n=0;n<c.length||n<b.length;n++){var t=c[n]||g(b[n].inset),p=b[n]||g(c[n].inset);d.push(t);l.push(p)}return k.mergeNestedRepeated(e,a,d,l)}.bind(null,function(e,a){for(;e.lengths.length<Math.max(e.lengths.length,a.lengths.length);)e.lengths.push({px:0});for(;a.lengths.length<Math.max(e.lengths.length,
a.lengths.length);)a.lengths.push({px:0});if(e.inset==a.inset&&!!e.color==!!a.color){for(var c=[],b,g=[[],0],d=[[],0],l=0;l<e.lengths.length;l++){var n=k.mergeDimensions(e.lengths[l],a.lengths[l],2==l);g[0].push(n[0]);d[0].push(n[1]);c.push(n[2])}e.color&&a.color&&(a=k.mergeColors(e.color,a.color),g[1]=a[0],d[1]=a[1],b=a[2]);return[g,d,function(t){for(var p=e.inset?"inset ":" ",q=0;q<c.length;q++)p+=c[q](t[0][q])+" ";b&&(p+=b(t[1]));return p}]}},", ");k.addPropertiesHandler(function(e){if((e=k.consumeRepeated(f,
/^,/,e))&&""==e[1])return e[0]},h,["box-shadow","text-shadow"])})(F);(function(k,f){function h(g){return g.toFixed(3).replace(/0+$/,"").replace(/\.$/,"")}function e(g,d,l){return Math.min(d,Math.max(g,l))}function a(g){if(/^\s*[-+]?(\d*\.)?\d+\s*$/.test(g))return Number(g)}function c(g,d){return function(l,n){return[l,n,function(t){return h(e(g,d,t))}]}}function b(g){g=g.trim().split(/\s*[\s,]\s*/);if(0!==g.length){for(var d=[],l=0;l<g.length;l++){var n=a(g[l]);if(void 0===n)return;d.push(n)}return d}}
k.clamp=e;k.addPropertiesHandler(b,function(g,d){if(g.length==d.length)return[g,d,function(l){return l.map(h).join(" ")}]},["stroke-dasharray"]);k.addPropertiesHandler(a,c(0,Infinity),["border-image-width","line-height"]);k.addPropertiesHandler(a,c(0,1),["opacity","shape-image-threshold"]);k.addPropertiesHandler(a,function(g,d){if(0!=g)return c(0,Infinity)(g,d)},["flex-grow","flex-shrink"]);k.addPropertiesHandler(a,function(g,d){return[g,d,function(l){return Math.round(e(1,Infinity,l))}]},["orphans",
"widows"]);k.addPropertiesHandler(a,function(g,d){return[g,d,Math.round]},["z-index"]);k.parseNumber=a;k.parseNumberList=b;k.mergeNumbers=function(g,d){return[g,d,h]};k.numberToString=h})(F,null);(function(k,f){k.addPropertiesHandler(String,function(h,e){if("visible"==h||"visible"==e)return[0,1,function(a){return 0>=a?h:1<=a?e:"visible"}]},["visibility"])})(F);(function(k,f){function h(c){c=c.trim();a.fillStyle="#000";a.fillStyle=c;var b=a.fillStyle;a.fillStyle="#fff";a.fillStyle=c;if(b==a.fillStyle)return a.fillRect(0,
0,1,1),c=a.getImageData(0,0,1,1).data,a.clearRect(0,0,1,1),b=c[3]/255,[c[0]*b,c[1]*b,c[2]*b,b]}function e(c,b){return[c,b,function(g){if(g[3])for(var d=0;3>d;d++)g[d]=Math.round(Math.max(0,Math.min(255,g[d]/g[3])));g[3]=k.numberToString(k.clamp(0,1,g[3]));return"rgba("+g.join(",")+")"}]}f=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");f.width=f.height=1;var a=f.getContext("2d");k.addPropertiesHandler(h,e,"background-color border-bottom-color border-left-color border-right-color border-top-color color fill flood-color lighting-color outline-color stop-color stroke text-decoration-color".split(" "));
k.consumeColor=k.consumeParenthesised.bind(null,h);k.mergeColors=e})(F,null);(function(k,f){function h(l){function n(){var r=z.exec(l);u=r?r[0]:void 0}function t(){if("("!==u){var r=Number(u);n();return r}n();r=q();if(")"!==u)return NaN;n();return r}function p(){for(var r=t();"*"===u||"/"===u;){var y=u;n();var m=t();r="*"===y?r*m:r/m}return r}function q(){for(var r=p();"+"===u||"-"===u;){var y=u;n();var m=p();r="+"===y?r+m:r-m}return r}var z=/([\+\-\w\.]+|[\(\)\*\/])/g,u;n();return q()}function e(l,
n){n=n.trim().toLowerCase();if("0"==n&&0<="px".search(l))return{px:0};if(/^[^(]*$|^calc/.test(n)){n=n.replace(/calc\(/g,"(");var t={};n=n.replace(l,function(r){t[r]=null;return"U"+r});l="U("+l.source+")";for(var p=n.replace(/[-+]?(\d*\.)?\d+([Ee][-+]?\d+)?/g,"N").replace(new RegExp("N"+l,"g"),"D").replace(/\s[+-]\s/g,"O").replace(/\s/g,""),q=[/N\*(D)/g,/(N|D)[*/]N/g,/(N|D)O\1/g,/\((N|D)\)/g],z=0;z<q.length;)q[z].test(p)?(p=p.replace(q[z],"$1"),z=0):z++;if("D"==p){for(var u in t){p=h(n.replace(new RegExp("U"+
u,"g"),"").replace(new RegExp(l,"g"),"*0"));if(!isFinite(p))return;t[u]=p}return t}}}function a(l,n){return c(l,n,!0)}function c(l,n,t){var p=[],q;for(q in l)p.push(q);for(q in n)0>p.indexOf(q)&&p.push(q);l=p.map(function(z){return l[z]||0});n=p.map(function(z){return n[z]||0});return[l,n,function(z){var u=z.map(function(r,y){1==z.length&&t&&(r=Math.max(r,0));return k.numberToString(r)+p[y]}).join(" + ");return 1<z.length?"calc("+u+")":u}]}var b=e.bind(null,/px|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc/g);
f=e.bind(null,/px|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|%/g);var g=e.bind(null,/deg|rad|grad|turn/g);k.parseLength=b;k.parseLengthOrPercent=f;k.consumeLengthOrPercent=k.consumeParenthesised.bind(null,f);k.parseAngle=g;k.mergeDimensions=c;b=k.consumeParenthesised.bind(null,b);b=k.consumeRepeated.bind(void 0,b,/^/);var d=k.consumeRepeated.bind(void 0,b,/^,/);k.consumeSizePairList=d;b=k.mergeNestedRepeated.bind(void 0,a," ");g=k.mergeNestedRepeated.bind(void 0,b,",");k.mergeNonNegativeSizePair=
b;k.addPropertiesHandler(function(l){if((l=d(l))&&""==l[1])return l[0]},g,["background-size"]);k.addPropertiesHandler(f,a,"border-bottom-width border-image-width border-left-width border-right-width border-top-width flex-basis font-size height line-height max-height max-width outline-width width".split(" "));k.addPropertiesHandler(f,c,"border-bottom-left-radius border-bottom-right-radius border-top-left-radius border-top-right-radius bottom left letter-spacing margin-bottom margin-left margin-right margin-top min-height min-width outline-offset padding-bottom padding-left padding-right padding-top perspective right shape-margin stroke-dashoffset text-indent top vertical-align word-spacing".split(" "))})(F,
null);(function(k,f){function h(a){return k.consumeLengthOrPercent(a)||k.consumeToken(/^auto/,a)}function e(a){if((a=k.consumeList([k.ignore(k.consumeToken.bind(null,/^rect/)),k.ignore(k.consumeToken.bind(null,/^\(/)),k.consumeRepeated.bind(null,h,/^,/),k.ignore(k.consumeToken.bind(null,/^\)/))],a))&&4==a[0].length)return a[0]}f=k.mergeWrappedNestedRepeated.bind(null,function(a){return"rect("+a+")"},function(a,c){return"auto"==a||"auto"==c?[!0,!1,function(b){b=b?a:c;if("auto"==b)return"auto";b=k.mergeDimensions(b,
b);return b[2](b[0])}]:k.mergeDimensions(a,c)},", ");k.parseBox=e;k.mergeBoxes=f;k.addPropertiesHandler(e,f,["clip"])})(F,null);(function(k,f){function h(p){return function(q){var z=0;return p.map(function(u){return u===d?q[z++]:u})}}function e(p){return p}function a(p){p=p.toLowerCase().trim();if("none"==p)return[];for(var q=/\s*(\w+)\(([^)]*)\)/g,z=[],u,r=0;(u=q.exec(p))&&u.index==r;){r=u.index+u[0].length;var y=u[1],m=t[y];if(!m)break;u=u[2].split(",");m=m[0];if(m.length<u.length)break;for(var A=
[],B=0;B<m.length;B++){var C=u[B],w=m[B];C=C?{A:function(D){return"0"==D.trim()?n:k.parseAngle(D)},N:k.parseNumber,T:k.parseLengthOrPercent,L:k.parseLength}[w.toUpperCase()](C):{a:n,n:A[0],t:l}[w];if(void 0===C)return;A.push(C)}z.push({t:y,d:A});if(q.lastIndex==p.length)return z}}function c(p){return p.toFixed(6).replace(".000000","")}function b(p,q){if(p.decompositionPair!==q){p.decompositionPair=q;var z=k.makeMatrixDecomposition(p)}if(q.decompositionPair!==p){q.decompositionPair=p;var u=k.makeMatrixDecomposition(q)}if(null==
z[0]||null==u[0])return[[!1],[!0],function(r){return r?q[0].d:p[0].d}];z[0].push(0);u[0].push(1);return[z,u,function(r){var y=k.quat(z[0][3],u[0][3],r[5]);return k.composeMatrix(r[0],r[1],r[2],y,r[4]).map(c).join(",")}]}function g(p){return p.replace(/(x|y|z|3d)?$/,"3d")}var d=null,l={px:0},n={deg:0},t={matrix:["NNNNNN",[d,d,0,0,d,d,0,0,0,0,1,0,d,d,0,1],e],matrix3d:["NNNNNNNNNNNNNNNN",e],rotate:["A"],rotatex:["A"],rotatey:["A"],rotatez:["A"],rotate3d:["NNNA"],perspective:["L"],scale:["Nn",h([d,d,
1]),e],scalex:["N",h([d,1,1]),h([d,1])],scaley:["N",h([1,d,1]),h([1,d])],scalez:["N",h([1,1,d])],scale3d:["NNN",e],skew:["Aa",null,e],skewx:["A",null,h([d,n])],skewy:["A",null,h([n,d])],translate:["Tt",h([d,d,l]),e],translatex:["T",h([d,l,l]),h([d,l])],translatey:["T",h([l,d,l]),h([l,d])],translatez:["L",h([l,l,d])],translate3d:["TTL",e]};k.addPropertiesHandler(a,function(p,q){var z=k.makeMatrixDecomposition&&!0,u=!1;if(!p.length||!q.length){p.length||(u=!0,p=q,q=[]);for(var r=0;r<p.length;r++){var y=
p[r].t,m=p[r].d,A="scale"==y.substr(0,5)?1:0;q.push({t:y,d:m.map(function(N){if("number"==typeof N)return A;var J={},K;for(K in N)J[K]=A;return J})})}}m=[];var B=[],C=[];if(p.length!=q.length){if(!z)return;var w=b(p,q);m=[w[0]];B=[w[1]];C=[["matrix",[w[2]]]]}else for(r=0;r<p.length;r++){y=p[r].t;var D=q[r].t,H=p[r].d,E=q[r].d;w=t[y];var I=t[D];if("perspective"==y&&"perspective"==D||!("matrix"!=y&&"matrix3d"!=y||"matrix"!=D&&"matrix3d"!=D)){if(!z)return;w=b([p[r]],[q[r]]);m.push(w[0]);B.push(w[1]);
C.push(["matrix",[w[2]]])}else{if(y!=D)if(w[2]&&I[2]&&y.replace(/[xy]/,"")==D.replace(/[xy]/,""))y=y.replace(/[xy]/,""),H=w[2](H),E=I[2](E);else if(w[1]&&I[1]&&g(y)==g(D))y=g(y),H=w[1](H),E=I[1](E);else{if(!z)return;w=b(p,q);m=[w[0]];B=[w[1]];C=[["matrix",[w[2]]]];break}I=[];D=[];for(var O=[],L=0;L<H.length;L++)w=("number"==typeof H[L]?k.mergeNumbers:k.mergeDimensions)(H[L],E[L]),I[L]=w[0],D[L]=w[1],O.push(w[2]);m.push(I);B.push(D);C.push([y,O])}}u&&(p=m,m=B,B=p);return[m,B,function(N){return N.map(function(J,
K){J=J.map(function(P,Q){return C[K][1][Q](P)}).join(",");"matrix"==C[K][0]&&16==J.split(",").length&&(C[K][0]="matrix3d");return C[K][0]+"("+J+")"}).join(" ")}]},["transform"]);k.transformToSvgMatrix=function(p){p=k.transformListToMatrix(a(p));return"matrix("+c(p[0])+" "+c(p[1])+" "+c(p[4])+" "+c(p[5])+" "+c(p[12])+" "+c(p[13])+")"}})(F,null);(function(k,f){function h(c,b){b.concat([c]).forEach(function(g){g in document.documentElement.style&&(e[c]=g);a[g]=c})}var e={},a={};h("transform",["webkitTransform",
"msTransform"]);h("transformOrigin",["webkitTransformOrigin"]);h("perspective",["webkitPerspective"]);h("perspectiveOrigin",["webkitPerspectiveOrigin"]);k.propertyName=function(c){return e[c]||c};k.unprefixedPropertyName=function(c){return a[c]||c}})(F,null)})();(function(){if(void 0===document.createElement("div").animate([]).oncancel){var x=window.performance&&performance.now?function(){return performance.now()}:function(){return Date.now()},v=function(f,h,e){this.target=f;this.currentTime=h;this.timelineTime=
e;this.type="cancel";this.cancelable=this.bubbles=!1;this.currentTarget=f;this.defaultPrevented=!1;this.eventPhase=Event.AT_TARGET;this.timeStamp=Date.now()},k=window.Element.prototype.animate;window.Element.prototype.animate=function(f,h){f=k.call(this,f,h);f._cancelHandlers=[];f.oncancel=null;var e=f.cancel;f.cancel=function(){e.call(this);var b=new v(this,null,x()),g=this._cancelHandlers.concat(this.oncancel?[this.oncancel]:[]);setTimeout(function(){g.forEach(function(d){d.call(b.target,b)})},
0)};var a=f.addEventListener;f.addEventListener=function(b,g){"function"==typeof g&&"cancel"==b?this._cancelHandlers.push(g):a.call(this,b,g)};var c=f.removeEventListener;f.removeEventListener=function(b,g){"cancel"==b?(b=this._cancelHandlers.indexOf(g),0<=b&&this._cancelHandlers.splice(b,1)):c.call(this,b,g)};return f}}})();(function(x){var v=document.documentElement,k=null,f=!1;try{var h="0"==getComputedStyle(v).getPropertyValue("opacity")?"1":"0";k=v.animate({opacity:[h,h]},{duration:1});k.currentTime=
0;f=getComputedStyle(v).getPropertyValue("opacity")==h}catch(a){}finally{k&&k.cancel()}if(!f){var e=window.Element.prototype.animate;window.Element.prototype.animate=function(a,c){window.Symbol&&Symbol.iterator&&Array.prototype.from&&a[Symbol.iterator]&&(a=Array.from(a));Array.isArray(a)||null===a||(a=x.convertToArrayForm(a));return e.call(this,a,c)}}})(G);(function(x,v,k){function f(c){var b=v.timeline;b.currentTime=c;b._discardAnimations();0==b._animations.length?e=!1:requestAnimationFrame(f)}var h=
window.requestAnimationFrame;window.requestAnimationFrame=function(c){return h(function(b){v.timeline._updateAnimationsPromises();c(b);v.timeline._updateAnimationsPromises()})};v.AnimationTimeline=function(){this._animations=[];this.currentTime=void 0};v.AnimationTimeline.prototype={getAnimations:function(){this._discardAnimations();return this._animations.slice()},_updateAnimationsPromises:function(){v.animationsWithPromises=v.animationsWithPromises.filter(function(c){return c._updatePromises()})},
_discardAnimations:function(){this._updateAnimationsPromises();this._animations=this._animations.filter(function(c){return"finished"!=c.playState&&"idle"!=c.playState})},_play:function(c){c=new v.Animation(c,this);this._animations.push(c);v.restartWebAnimationsNextTick();c._updatePromises();c._animation.play();c._updatePromises();return c},play:function(c){c&&c.remove();return this._play(c)}};var e=!1;v.restartWebAnimationsNextTick=function(){e||(e=!0,requestAnimationFrame(f))};var a=new v.AnimationTimeline;
v.timeline=a;try{Object.defineProperty(window.document,"timeline",{configurable:!0,get:function(){return a}})}catch(c){}try{window.document.timeline=a}catch(c$0){}})(G,M,null);(function(x,v,k){v.animationsWithPromises=[];v.Animation=function(f,h){this.id="";f&&f._id&&(this.id=f._id);if(this.effect=f)f._animation=this;if(!h)throw Error("Animation with null timeline is not supported");this._timeline=h;this._sequenceNumber=x.sequenceNumber++;this._holdTime=0;this._isGroup=this._paused=!1;this._animation=
null;this._childAnimations=[];this._callback=null;this._oldPlayState="idle";this._rebuildUnderlyingAnimation();this._animation.cancel();this._updatePromises()};v.Animation.prototype={_updatePromises:function(){var f=this._oldPlayState,h=this.playState;this._readyPromise&&h!==f&&("idle"==h?(this._rejectReadyPromise(),this._readyPromise=void 0):"pending"==f?this._resolveReadyPromise():"pending"==h&&(this._readyPromise=void 0));this._finishedPromise&&h!==f&&("idle"==h?(this._rejectFinishedPromise(),
this._finishedPromise=void 0):"finished"==h?this._resolveFinishedPromise():"finished"==f&&(this._finishedPromise=void 0));this._oldPlayState=this.playState;return this._readyPromise||this._finishedPromise},_rebuildUnderlyingAnimation:function(){this._updatePromises();var f=this._animation?!0:!1;if(f){var h=this.playbackRate;var e=this._paused;var a=this.startTime;var c=this.currentTime;this._animation.cancel();this._animation=this._animation._wrapper=null}if(!this.effect||this.effect instanceof window.KeyframeEffect)this._animation=
v.newUnderlyingAnimationForKeyframeEffect(this.effect),v.bindAnimationForKeyframeEffect(this);if(this.effect instanceof window.SequenceEffect||this.effect instanceof window.GroupEffect)this._animation=v.newUnderlyingAnimationForGroup(this.effect),v.bindAnimationForGroup(this);this.effect&&this.effect._onsample&&v.bindAnimationForCustomEffect(this);f&&(1!=h&&(this.playbackRate=h),null!==a?this.startTime=a:null!==c?this.currentTime=c:null!==this._holdTime&&(this.currentTime=this._holdTime),e&&this.pause());
this._updatePromises()},_updateChildren:function(){if(this.effect&&"idle"!=this.playState){var f=this.effect._timing.delay;this._childAnimations.forEach(function(h){this._arrangeChildren(h,f);this.effect instanceof window.SequenceEffect&&(f+=v.groupChildDuration(h.effect))}.bind(this))}},_setExternalAnimation:function(f){if(this.effect&&this._isGroup)for(var h=0;h<this.effect.children.length;h++)this.effect.children[h]._animation=f,this._childAnimations[h]._setExternalAnimation(f)},_constructChildAnimations:function(){if(this.effect&&
this._isGroup){var f=this.effect._timing.delay;this._removeChildAnimations();this.effect.children.forEach(function(h){var e=v.timeline._play(h);this._childAnimations.push(e);e.playbackRate=this.playbackRate;this._paused&&e.pause();h._animation=this.effect._animation;this._arrangeChildren(e,f);this.effect instanceof window.SequenceEffect&&(f+=v.groupChildDuration(h))}.bind(this))}},_arrangeChildren:function(f,h){null===this.startTime?f.currentTime=this.currentTime-h/this.playbackRate:f.startTime!==
this.startTime+h/this.playbackRate&&(f.startTime=this.startTime+h/this.playbackRate)},get timeline(){return this._timeline},get playState(){return this._animation?this._animation.playState:"idle"},get finished(){if(!window.Promise)return console.warn("Animation Promises require JavaScript Promise constructor"),null;this._finishedPromise||(-1==v.animationsWithPromises.indexOf(this)&&v.animationsWithPromises.push(this),this._finishedPromise=new Promise(function(f,h){this._resolveFinishedPromise=function(){f(this)};
this._rejectFinishedPromise=function(){h({type:DOMException.ABORT_ERR,name:"AbortError"})}}.bind(this)),"finished"==this.playState&&this._resolveFinishedPromise());return this._finishedPromise},get ready(){if(!window.Promise)return console.warn("Animation Promises require JavaScript Promise constructor"),null;this._readyPromise||(-1==v.animationsWithPromises.indexOf(this)&&v.animationsWithPromises.push(this),this._readyPromise=new Promise(function(f,h){this._resolveReadyPromise=function(){f(this)};
this._rejectReadyPromise=function(){h({type:DOMException.ABORT_ERR,name:"AbortError"})}}.bind(this)),"pending"!==this.playState&&this._resolveReadyPromise());return this._readyPromise},get onfinish(){return this._animation.onfinish},set onfinish(f){this._animation.onfinish="function"==typeof f?function(h){h.target=this;f.call(this,h)}.bind(this):f},get oncancel(){return this._animation.oncancel},set oncancel(f){this._animation.oncancel="function"==typeof f?function(h){h.target=this;f.call(this,h)}.bind(this):
f},get currentTime(){this._updatePromises();var f=this._animation.currentTime;this._updatePromises();return f},set currentTime(f){this._updatePromises();this._animation.currentTime=isFinite(f)?f:Math.sign(f)*Number.MAX_VALUE;this._register();this._forEachChild(function(h,e){h.currentTime=f-e});this._updatePromises()},get startTime(){return this._animation.startTime},set startTime(f){this._updatePromises();this._animation.startTime=isFinite(f)?f:Math.sign(f)*Number.MAX_VALUE;this._register();this._forEachChild(function(h,
e){h.startTime=f+e});this._updatePromises()},get playbackRate(){return this._animation.playbackRate},set playbackRate(f){this._updatePromises();var h=this.currentTime;this._animation.playbackRate=f;this._forEachChild(function(e){e.playbackRate=f});null!==h&&(this.currentTime=h);this._updatePromises()},play:function(){this._updatePromises();this._paused=!1;this._animation.play();-1==this._timeline._animations.indexOf(this)&&this._timeline._animations.push(this);this._register();v.awaitStartTime(this);
this._forEachChild(function(f){var h=f.currentTime;f.play();f.currentTime=h});this._updatePromises()},pause:function(){this._updatePromises();this.currentTime&&(this._holdTime=this.currentTime);this._animation.pause();this._register();this._forEachChild(function(f){f.pause()});this._paused=!0;this._updatePromises()},finish:function(){this._updatePromises();this._animation.finish();this._register();this._updatePromises()},cancel:function(){this._updatePromises();this._animation.cancel();this._register();
this._removeChildAnimations();this._updatePromises()},reverse:function(){this._updatePromises();var f=this.currentTime;this._animation.reverse();this._forEachChild(function(h){h.reverse()});null!==f&&(this.currentTime=f);this._updatePromises()},addEventListener:function(f,h){var e=h;"function"==typeof h&&(e=function(a){a.target=this;h.call(this,a)}.bind(this),h._wrapper=e);this._animation.addEventListener(f,e)},removeEventListener:function(f,h){this._animation.removeEventListener(f,h&&h._wrapper||
h)},_removeChildAnimations:function(){for(;this._childAnimations.length;)this._childAnimations.pop().cancel()},_forEachChild:function(f){var h=0;this.effect.children&&this._childAnimations.length<this.effect.children.length&&this._constructChildAnimations();this._childAnimations.forEach(function(c){f.call(this,c,h);this.effect instanceof window.SequenceEffect&&(h+=c.effect.activeDuration)}.bind(this));if("pending"!=this.playState){var e=this.effect._timing,a=this.currentTime;null!==a&&(a=x.calculateIterationProgress(x.calculateActiveDuration(e),
a,e));(null==a||isNaN(a))&&this._removeChildAnimations()}}};window.Animation=v.Animation})(G,M,null);(function(x,v,k){function f(d){this._frames=x.normalizeKeyframes(d)}function h(){for(var d=!1;b.length;)b.shift()._updateChildren(),d=!0;return d}var e=function(d){d._animation=void 0;if(d instanceof window.SequenceEffect||d instanceof window.GroupEffect)for(var l=0;l<d.children.length;l++)e(d.children[l])};v.removeMulti=function(d){for(var l=[],n=0;n<d.length;n++){var t=d[n];t._parent?(-1==l.indexOf(t._parent)&&
l.push(t._parent),t._parent.children.splice(t._parent.children.indexOf(t),1),t._parent=null,e(t)):t._animation&&t._animation.effect==t&&(t._animation.cancel(),t._animation.effect=new KeyframeEffect(null,[]),t._animation._callback&&(t._animation._callback._animation=null),t._animation._rebuildUnderlyingAnimation(),e(t))}for(n=0;n<l.length;n++)l[n]._rebuild()};v.KeyframeEffect=function(d,l,n,t){this.target=d;this._parent=null;n=x.numericTimingToObject(n);this._timingInput=x.cloneTimingInput(n);this._timing=
x.normalizeTimingInput(n);this.timing=x.makeTiming(n,!1,this);this.timing._effect=this;"function"==typeof l?(x.deprecated("Custom KeyframeEffect","2015-06-22","Use KeyframeEffect.onsample instead."),this._normalizedKeyframes=l):this._normalizedKeyframes=new f(l);this._keyframes=l;this.activeDuration=x.calculateActiveDuration(this._timing);this._id=t;return this};v.KeyframeEffect.prototype={getFrames:function(){return"function"==typeof this._normalizedKeyframes?this._normalizedKeyframes:this._normalizedKeyframes._frames},
set onsample(d){if("function"==typeof this.getFrames())throw Error("Setting onsample on custom effect KeyframeEffect is not supported.");this._onsample=d;this._animation&&this._animation._rebuildUnderlyingAnimation()},get parent(){return this._parent},clone:function(){if("function"==typeof this.getFrames())throw Error("Cloning custom effects is not supported.");var d=new KeyframeEffect(this.target,[],x.cloneTimingInput(this._timingInput),this._id);d._normalizedKeyframes=this._normalizedKeyframes;
d._keyframes=this._keyframes;return d},remove:function(){v.removeMulti([this])}};var a=Element.prototype.animate;Element.prototype.animate=function(d,l){var n="";l&&l.id&&(n=l.id);return v.timeline._play(new v.KeyframeEffect(this,d,l,n))};var c=document.createElementNS("http://www.w3.org/1999/xhtml","div");v.newUnderlyingAnimationForKeyframeEffect=function(d){if(d){var l=d.target||c,n=d._keyframes;"function"==typeof n&&(n=[]);var t=d._timingInput;t.id=d._id}else l=c,n=[],t=0;return a.apply(l,[n,t])};
v.bindAnimationForKeyframeEffect=function(d){d.effect&&"function"==typeof d.effect._normalizedKeyframes&&v.bindAnimationForCustomEffect(d)};var b=[];v.awaitStartTime=function(d){null===d.startTime&&d._isGroup&&(0==b.length&&requestAnimationFrame(h),b.push(d))};var g=window.getComputedStyle;Object.defineProperty(window,"getComputedStyle",{configurable:!0,enumerable:!0,value:function(){v.timeline._updateAnimationsPromises();var d=g.apply(this,arguments);h()&&(d=g.apply(this,arguments));v.timeline._updateAnimationsPromises();
return d}});window.KeyframeEffect=v.KeyframeEffect;window.Element.prototype.getAnimations=function(){return document.timeline.getAnimations().filter(function(d){return null!==d.effect&&d.effect.target==this}.bind(this))}})(G,M,null);(function(x,v,k){function f(b){b._registered||(b._registered=!0,a.push(b),c||(c=!0,requestAnimationFrame(h)))}function h(b){b=a;a=[];b.sort(function(g,d){return g._sequenceNumber-d._sequenceNumber});b=b.filter(function(g){g();var d=g._animation?g._animation.playState:
"idle";"running"!=d&&"pending"!=d&&(g._registered=!1);return g._registered});a.push.apply(a,b);a.length?(c=!0,requestAnimationFrame(h)):c=!1}document.createElementNS("http://www.w3.org/1999/xhtml","div");var e=0;v.bindAnimationForCustomEffect=function(b){var g=b.effect.target,d="function"==typeof b.effect.getFrames();var l=d?b.effect.getFrames():b.effect._onsample;var n=b.effect.timing,t=null;n=x.normalizeTimingInput(n);var p=function(){var q=p._animation?p._animation.currentTime:null;null!==q&&(q=
x.calculateIterationProgress(x.calculateActiveDuration(n),q,n),isNaN(q)&&(q=null));q!==t&&(d?l(q,g,b.effect):l(q,b.effect,b.effect._animation));t=q};p._animation=b;p._registered=!1;p._sequenceNumber=e++;b._callback=p;f(p)};var a=[],c=!1;v.Animation.prototype._register=function(){this._callback&&f(this._callback)}})(G,M,null);(function(x,v,k){function f(e){return e._timing.delay+e.activeDuration+e._timing.endDelay}function h(e,a,c){this._id=c;this._parent=null;this.children=e||[];this._reparent(this.children);
a=x.numericTimingToObject(a);this._timingInput=x.cloneTimingInput(a);this._timing=x.normalizeTimingInput(a,!0);this.timing=x.makeTiming(a,!0,this);this.timing._effect=this;"auto"===this._timing.duration&&(this._timing.duration=this.activeDuration)}window.SequenceEffect=function(){h.apply(this,arguments)};window.GroupEffect=function(){h.apply(this,arguments)};h.prototype={_isAncestor:function(e){for(var a=this;null!==a;){if(a==e)return!0;a=a._parent}return!1},_rebuild:function(){for(var e=this;e;)"auto"===
e.timing.duration&&(e._timing.duration=e.activeDuration),e=e._parent;this._animation&&this._animation._rebuildUnderlyingAnimation()},_reparent:function(e){v.removeMulti(e);for(var a=0;a<e.length;a++)e[a]._parent=this},_putChild:function(e,a){for(var c=a?"Cannot append an ancestor or self":"Cannot prepend an ancestor or self",b=0;b<e.length;b++)if(this._isAncestor(e[b]))throw{type:DOMException.HIERARCHY_REQUEST_ERR,name:"HierarchyRequestError",message:c};for(b=0;b<e.length;b++)a?this.children.push(e[b]):
this.children.unshift(e[b]);this._reparent(e);this._rebuild()},append:function(){this._putChild(arguments,!0)},prepend:function(){this._putChild(arguments,!1)},get parent(){return this._parent},get firstChild(){return this.children.length?this.children[0]:null},get lastChild(){return this.children.length?this.children[this.children.length-1]:null},clone:function(){for(var e=x.cloneTimingInput(this._timingInput),a=[],c=0;c<this.children.length;c++)a.push(this.children[c].clone());return this instanceof
GroupEffect?new GroupEffect(a,e):new SequenceEffect(a,e)},remove:function(){v.removeMulti([this])}};window.SequenceEffect.prototype=Object.create(h.prototype);Object.defineProperty(window.SequenceEffect.prototype,"activeDuration",{get:function(){var e=0;this.children.forEach(function(a){e+=f(a)});return Math.max(e,0)}});window.GroupEffect.prototype=Object.create(h.prototype);Object.defineProperty(window.GroupEffect.prototype,"activeDuration",{get:function(){var e=0;this.children.forEach(function(a){e=
Math.max(e,f(a))});return e}});v.newUnderlyingAnimationForGroup=function(e){var a,c=null;e=new KeyframeEffect(null,[],e._timing,e._id);e.onsample=function(b){var g=a._wrapper;g&&"pending"!=g.playState&&g.effect&&(null==b?g._removeChildAnimations():0==b&&0>g.playbackRate&&(c||(c=x.normalizeTimingInput(g.effect.timing)),b=x.calculateIterationProgress(x.calculateActiveDuration(c),-1,c),isNaN(b)||null==b)&&(g._forEachChild(function(d){d.currentTime=-1}),g._removeChildAnimations()))};return a=v.timeline._play(e)};
v.bindAnimationForGroup=function(e){e._animation._wrapper=e;e._isGroup=!0;v.awaitStartTime(e);e._constructChildAnimations();e._setExternalAnimation(e)};v.groupChildDuration=f})(G,M,null)})();(function(){function resolve(){document.body.removeAttribute("unresolved")}if(window.WebComponents)addEventListener("WebComponentsReady",resolve);else if(document.readyState==="interactive"||document.readyState==="complete")resolve();else addEventListener("DOMContentLoaded",resolve)})();
window.Polymer={Settings:function(){var settings=window.Polymer||{};if(!settings.noUrlSettings){var parts=location.search.slice(1).split("&");for(var i=0,o;i<parts.length&&(o=parts[i]);i++){o=o.split("=");o[0]&&(settings[o[0]]=o[1]||true)}}settings.wantShadow=settings.dom==="shadow";settings.hasShadow=Boolean(Element.prototype.createShadowRoot);settings.nativeShadow=settings.hasShadow&&!window.ShadowDOMPolyfill;settings.useShadow=settings.wantShadow&&settings.hasShadow;settings.hasNativeImports=Boolean("import"in
document.createElement("link"));settings.useNativeImports=settings.hasNativeImports;settings.useNativeCustomElements=!window.CustomElements||window.CustomElements.useNative;settings.useNativeShadow=settings.useShadow&&settings.nativeShadow;settings.usePolyfillProto=!settings.useNativeCustomElements&&!Object.__proto__;settings.hasNativeCSSProperties=!navigator.userAgent.match(/AppleWebKit\/601|Edge\/15/)&&window.CSS&&CSS.supports&&CSS.supports("box-shadow","0 0 0 var(--foo)");settings.useNativeCSSProperties=
settings.hasNativeCSSProperties&&settings.lazyRegister&&settings.useNativeCSSProperties;settings.isIE=navigator.userAgent.match("Trident");settings.passiveTouchGestures=settings.passiveTouchGestures||false;return settings}()};
(function(){var userPolymer=window.Polymer;window.Polymer=function(prototype){if(typeof prototype==="function")prototype=prototype.prototype;if(!prototype)prototype={};prototype=desugar(prototype);var customCtor=prototype===prototype.constructor.prototype?prototype.constructor:null;var options={prototype:prototype};if(prototype["extends"])options["extends"]=prototype["extends"];Polymer.telemetry._registrate(prototype);var ctor=document.registerElement(prototype.is,options);return customCtor||ctor};
var desugar=function(prototype){var base=Polymer.Base;if(prototype["extends"])base=Polymer.Base._getExtendedPrototype(prototype["extends"]);prototype=Polymer.Base.chainObject(prototype,base);prototype.registerCallback();return prototype};if(userPolymer)for(var i in userPolymer)Polymer[i]=userPolymer[i];Polymer.Class=function(prototype){if(!prototype.factoryImpl)prototype.factoryImpl=function(){};return desugar(prototype).constructor}})();
Polymer.telemetry={registrations:[],_regLog:function(prototype){console.log("["+prototype.is+"]: registered")},_registrate:function(prototype){this.registrations.push(prototype);Polymer.log&&this._regLog(prototype)},dumpRegistrations:function(){this.registrations.forEach(this._regLog)}};Object.defineProperty(window,"currentImport",{enumerable:true,configurable:true,get:function(){return(document._currentScript||document.currentScript||{}).ownerDocument}});
Polymer.RenderStatus={_ready:false,_callbacks:[],whenReady:function(cb){if(this._ready)cb();else this._callbacks.push(cb)},_makeReady:function(){this._ready=true;for(var i=0;i<this._callbacks.length;i++)this._callbacks[i]();this._callbacks=[]},_catchFirstRender:function(){requestAnimationFrame(function(){Polymer.RenderStatus._makeReady()})},_afterNextRenderQueue:[],_waitingNextRender:false,afterNextRender:function(element,fn,args){this._watchNextRender();this._afterNextRenderQueue.push([element,fn,
args])},hasRendered:function(){return this._ready},_watchNextRender:function(){if(!this._waitingNextRender){this._waitingNextRender=true;var fn=function(){Polymer.RenderStatus._flushNextRender()};if(!this._ready)this.whenReady(fn);else requestAnimationFrame(fn)}},_flushNextRender:function(){var self=this;setTimeout(function(){self._flushRenderCallbacks(self._afterNextRenderQueue);self._afterNextRenderQueue=[];self._waitingNextRender=false})},_flushRenderCallbacks:function(callbacks){for(var i=0,h;i<
callbacks.length;i++){h=callbacks[i];h[1].apply(h[0],h[2]||Polymer.nar)}}};if(window.HTMLImports)HTMLImports.whenReady(function(){Polymer.RenderStatus._catchFirstRender()});else Polymer.RenderStatus._catchFirstRender();Polymer.ImportStatus=Polymer.RenderStatus;Polymer.ImportStatus.whenLoaded=Polymer.ImportStatus.whenReady;
(function(){var settings=Polymer.Settings;Polymer.Base={__isPolymerInstance__:true,_addFeature:function(feature){this.mixin(this,feature)},registerCallback:function(){if(settings.lazyRegister==="max"){if(this.beforeRegister)this.beforeRegister()}else{this._desugarBehaviors();for(var i=0,b;i<this.behaviors.length;i++){b=this.behaviors[i];if(b.beforeRegister)b.beforeRegister.call(this)}if(this.beforeRegister)this.beforeRegister()}this._registerFeatures();if(!settings.lazyRegister)this.ensureRegisterFinished()},
createdCallback:function(){if(settings.disableUpgradeEnabled)if(this.hasAttribute("disable-upgrade")){this._propertySetter=disableUpgradePropertySetter;this._configValue=null;this.__data__={};return}else this.__hasInitialized=true;this.__initialize()},__initialize:function(){if(!this.__hasRegisterFinished)this._ensureRegisterFinished(this.__proto__);Polymer.telemetry.instanceCount++;this.root=this;for(var i=0,b;i<this.behaviors.length;i++){b=this.behaviors[i];if(b.created)b.created.call(this)}if(this.created)this.created();
this._initFeatures()},ensureRegisterFinished:function(){this._ensureRegisterFinished(this)},_ensureRegisterFinished:function(proto){if(proto.__hasRegisterFinished!==proto.is||!proto.is){if(settings.lazyRegister==="max"){proto._desugarBehaviors();for(var i=0,b;i<proto.behaviors.length;i++){b=proto.behaviors[i];if(b.beforeRegister)b.beforeRegister.call(proto)}}proto.__hasRegisterFinished=proto.is;if(proto._finishRegisterFeatures)proto._finishRegisterFeatures();for(var j=0,pb;j<proto.behaviors.length;j++){pb=
proto.behaviors[j];if(pb.registered)pb.registered.call(proto)}if(proto.registered)proto.registered();if(settings.usePolyfillProto&&proto!==this)proto.extend(this,proto)}},attachedCallback:function(){var self=this;Polymer.RenderStatus.whenReady(function(){self.isAttached=true;for(var i=0,b;i<self.behaviors.length;i++){b=self.behaviors[i];if(b.attached)b.attached.call(self)}if(self.attached)self.attached()})},detachedCallback:function(){var self=this;Polymer.RenderStatus.whenReady(function(){self.isAttached=
false;for(var i=0,b;i<self.behaviors.length;i++){b=self.behaviors[i];if(b.detached)b.detached.call(self)}if(self.detached)self.detached()})},attributeChangedCallback:function(name,oldValue,newValue){this._attributeChangedImpl(name);for(var i=0,b;i<this.behaviors.length;i++){b=this.behaviors[i];if(b.attributeChanged)b.attributeChanged.call(this,name,oldValue,newValue)}if(this.attributeChanged)this.attributeChanged(name,oldValue,newValue)},_attributeChangedImpl:function(name){this._setAttributeToProperty(this,
name)},extend:function(target,source){if(target&&source){var n$=Object.getOwnPropertyNames(source);for(var i=0,n;i<n$.length&&(n=n$[i]);i++)this.copyOwnProperty(n,source,target)}return target||source},mixin:function(target,source){for(var i in source)target[i]=source[i];return target},copyOwnProperty:function(name,source,target){var pd=Object.getOwnPropertyDescriptor(source,name);if(pd)Object.defineProperty(target,name,pd)},_logger:function(level,args){if(args.length===1&&Array.isArray(args[0]))args=
args[0];switch(level){case "log":case "warn":case "error":console[level].apply(console,args);break}},_log:function(){var args=Array.prototype.slice.call(arguments,0);this._logger("log",args)},_warn:function(){var args=Array.prototype.slice.call(arguments,0);this._logger("warn",args)},_error:function(){var args=Array.prototype.slice.call(arguments,0);this._logger("error",args)},_logf:function(){return this._logPrefix.concat(this.is).concat(Array.prototype.slice.call(arguments,0))}};Polymer.Base._logPrefix=
function(){var color=window.chrome&&!/edge/i.test(navigator.userAgent)||/firefox/i.test(navigator.userAgent);return color?["%c[%s::%s]:","font-weight: bold; background-color:#EEEE00;"]:["[%s::%s]:"]}();Polymer.Base.chainObject=function(object,inherited){if(object&&inherited&&object!==inherited){if(!Object.__proto__)object=Polymer.Base.extend(Object.create(inherited),object);object.__proto__=inherited}return object};Polymer.Base=Polymer.Base.chainObject(Polymer.Base,HTMLElement.prototype);Polymer.BaseDescriptors=
{};var disableUpgradePropertySetter;if(settings.disableUpgradeEnabled){disableUpgradePropertySetter=function(property,value){this.__data__[property]=value};var origAttributeChangedCallback=Polymer.Base.attributeChangedCallback;Polymer.Base.attributeChangedCallback=function(name,oldValue,newValue){if(!this.__hasInitialized&&name==="disable-upgrade"){this.__hasInitialized=true;this._propertySetter=Polymer.Bind._modelApi._propertySetter;this._configValue=Polymer.Base._configValue;this.__initialize()}origAttributeChangedCallback.call(this,
name,oldValue,newValue)}}if(window.CustomElements)Polymer["instanceof"]=CustomElements["instanceof"];else Polymer["instanceof"]=function(obj,ctor){return obj instanceof ctor};Polymer.isInstance=function(obj){return Boolean(obj&&obj.__isPolymerInstance__)};Polymer.telemetry.instanceCount=0})();
(function(){var modules={};var lcModules={};function setModule(id,module){modules[id]=lcModules[id.toLowerCase()]=module}var findModule=function(id){return modules[id]||lcModules[id.toLowerCase()]};var DomModule=function(){return document.createElement("dom-module")};DomModule.prototype=Object.create(HTMLElement.prototype);Polymer.Base.mixin(DomModule.prototype,{createdCallback:function(){this.register()},register:function(id){id=id||this.id||this.getAttribute("name")||this.getAttribute("is");if(id){if(Polymer.Settings.strictTemplatePolicy&&
findModule(id)!==undefined){setModule(id,null);throw new Error("strictTemplatePolicy: dom-module "+id+" re-registered");}this.id=id;setModule(id,this)}},"import":function(id,selector){if(id){var m=findModule(id);if(!m){forceDomModulesUpgrade();m=findModule(id)}if(m&&selector)m=m.querySelector(selector);return m}}});Object.defineProperty(DomModule.prototype,"constructor",{value:DomModule,configurable:true,writable:true});var cePolyfill=window.CustomElements&&!CustomElements.useNative;document.registerElement("dom-module",
DomModule);function forceDomModulesUpgrade(){if(cePolyfill){var script=document._currentScript||document.currentScript;var doc=script&&script.ownerDocument||document;var modules=doc.querySelectorAll("dom-module");for(var i=modules.length-1,m;i>=0&&(m=modules[i]);i--)if(m.__upgraded__)return;else CustomElements.upgrade(m)}}})();
Polymer.Base._addFeature({_prepIs:function(){if(!this.is){var module=(document._currentScript||document.currentScript).parentNode;if(module.localName==="dom-module"){var id=module.id||module.getAttribute("name")||module.getAttribute("is");this.is=id}}if(this.is)this.is=this.is.toLowerCase()}});
Polymer.Base._addFeature({behaviors:[],_desugarBehaviors:function(){if(this.behaviors.length)this.behaviors=this._desugarSomeBehaviors(this.behaviors)},_desugarSomeBehaviors:function(behaviors){var behaviorSet=[];behaviors=this._flattenBehaviorsList(behaviors);for(var i=behaviors.length-1;i>=0;i--){var b=behaviors[i];if(behaviorSet.indexOf(b)===-1){this._mixinBehavior(b);behaviorSet.unshift(b)}}return behaviorSet},_flattenBehaviorsList:function(behaviors){var flat=[];for(var i=0;i<behaviors.length;i++){var b=
behaviors[i];if(b instanceof Array)flat=flat.concat(this._flattenBehaviorsList(b));else if(b)flat.push(b);else this._warn(this._logf("_flattenBehaviorsList","behavior is null, check for missing or 404 import"))}return flat},_mixinBehavior:function(b){var n$=Object.getOwnPropertyNames(b);var useAssignment=b._noAccessors;for(var i=0,n;i<n$.length&&(n=n$[i]);i++)if(!Polymer.Base._behaviorProperties[n]&&!this.hasOwnProperty(n))if(useAssignment)this[n]=b[n];else this.copyOwnProperty(n,b,this)},_prepBehaviors:function(){this._prepFlattenedBehaviors(this.behaviors)},
_prepFlattenedBehaviors:function(behaviors){for(var i=0,l=behaviors.length;i<l;i++)this._prepBehavior(behaviors[i]);this._prepBehavior(this)},_marshalBehaviors:function(){for(var i=0;i<this.behaviors.length;i++)this._marshalBehavior(this.behaviors[i]);this._marshalBehavior(this)}});Polymer.Base._behaviorProperties={hostAttributes:true,beforeRegister:true,registered:true,properties:true,observers:true,listeners:true,created:true,attached:true,detached:true,attributeChanged:true,ready:true,_noAccessors:true};
Polymer.Base._addFeature({_getExtendedPrototype:function(tag){return this._getExtendedNativePrototype(tag)},_nativePrototypes:{},_getExtendedNativePrototype:function(tag){var p=this._nativePrototypes[tag];if(!p){p=Object.create(this.getNativePrototype(tag));var p$=Object.getOwnPropertyNames(Polymer.Base);for(var i=0,n;i<p$.length&&(n=p$[i]);i++)if(!Polymer.BaseDescriptors[n])p[n]=Polymer.Base[n];Object.defineProperties(p,Polymer.BaseDescriptors);this._nativePrototypes[tag]=p}return p},getNativePrototype:function(tag){return Object.getPrototypeOf(document.createElement(tag))}});
Polymer.Base._addFeature({_prepConstructor:function(){this._factoryArgs=this["extends"]?[this["extends"],this.is]:[this.is];var ctor=function(){return this._factory(arguments)};if(this.hasOwnProperty("extends"))ctor["extends"]=this["extends"];Object.defineProperty(this,"constructor",{value:ctor,writable:true,configurable:true});ctor.prototype=this},_factory:function(args){var elt=document.createElement.apply(document,this._factoryArgs);if(this.factoryImpl)this.factoryImpl.apply(elt,args);return elt}});
Polymer.nob=Object.create(null);
Polymer.Base._addFeature({getPropertyInfo:function(property){var info=this._getPropertyInfo(property,this.properties);if(!info)for(var i=0;i<this.behaviors.length;i++){info=this._getPropertyInfo(property,this.behaviors[i].properties);if(info)return info}return info||Polymer.nob},_getPropertyInfo:function(property,properties){var p=properties&&properties[property];if(typeof p==="function")p=properties[property]={type:p};if(p)p.defined=true;return p},_prepPropertyInfo:function(){this._propertyInfo={};
for(var i=0;i<this.behaviors.length;i++)this._addPropertyInfo(this._propertyInfo,this.behaviors[i].properties);this._addPropertyInfo(this._propertyInfo,this.properties);this._addPropertyInfo(this._propertyInfo,this._propertyEffects)},_addPropertyInfo:function(target,source){if(source){var t,s;for(var i in source){t=target[i];s=source[i];if(i[0]==="_"&&!s.readOnly)continue;if(!target[i])target[i]={type:typeof s==="function"?s:s.type,readOnly:s.readOnly,attribute:Polymer.CaseMap.camelToDashCase(i)};
else{if(!t.type)t.type=s.type;if(!t.readOnly)t.readOnly=s.readOnly}}}}});(function(){var propertiesDesc={configurable:true,writable:true,enumerable:true,value:{}};Polymer.BaseDescriptors.properties=propertiesDesc;Object.defineProperty(Polymer.Base,"properties",propertiesDesc)})();
Polymer.CaseMap={_caseMap:{},_rx:{dashToCamel:/-[a-z]/g,camelToDash:/([A-Z])/g},dashToCamelCase:function(dash){return this._caseMap[dash]||(this._caseMap[dash]=dash.indexOf("-")<0?dash:dash.replace(this._rx.dashToCamel,function(m){return m[1].toUpperCase()}))},camelToDashCase:function(camel){return this._caseMap[camel]||(this._caseMap[camel]=camel.replace(this._rx.camelToDash,"-$1").toLowerCase())}};
Polymer.Base._addFeature({_addHostAttributes:function(attributes){if(!this._aggregatedAttributes)this._aggregatedAttributes={};if(attributes)this.mixin(this._aggregatedAttributes,attributes)},_marshalHostAttributes:function(){if(this._aggregatedAttributes)this._applyAttributes(this,this._aggregatedAttributes)},_applyAttributes:function(node,attr$){for(var n in attr$)if(!this.hasAttribute(n)&&n!=="class"){var v=attr$[n];this.serializeValueToAttribute(v,n,this)}},_marshalAttributes:function(){this._takeAttributesToModel(this)},
_takeAttributesToModel:function(model){if(this.hasAttributes())for(var i in this._propertyInfo){var info=this._propertyInfo[i];if(this.hasAttribute(info.attribute))this._setAttributeToProperty(model,info.attribute,i,info)}},_setAttributeToProperty:function(model,attribute,property,info){if(!this._serializing){property=property||Polymer.CaseMap.dashToCamelCase(attribute);info=info||this._propertyInfo&&this._propertyInfo[property];if(info&&!info.readOnly){var v=this.getAttribute(attribute);model[property]=
this.deserialize(v,info.type)}}},_serializing:false,reflectPropertyToAttribute:function(property,attribute,value){this._serializing=true;value=value===undefined?this[property]:value;this.serializeValueToAttribute(value,attribute||Polymer.CaseMap.camelToDashCase(property));this._serializing=false},serializeValueToAttribute:function(value,attribute,node){var str=this.serialize(value);node=node||this;if(str===undefined)node.removeAttribute(attribute);else node.setAttribute(attribute,str)},deserialize:function(value,
type){switch(type){case Number:value=Number(value);break;case Boolean:value=value!=null;break;case Object:try{value=JSON.parse(value)}catch(x){}break;case Array:try{value=JSON.parse(value)}catch(x$1){value=null;console.warn("Polymer::Attributes: couldn`t decode Array as JSON")}break;case Date:value=new Date(value);break;case String:default:break}return value},serialize:function(value){switch(typeof value){case "boolean":return value?"":undefined;case "object":if(value instanceof Date)return value.toString();
else if(value)try{return JSON.stringify(value)}catch(x){return""}default:return value!=null?value:undefined}}});Polymer.version="1.12.0";Polymer.Base._addFeature({_registerFeatures:function(){this._prepIs();this._prepBehaviors();this._prepConstructor();this._prepPropertyInfo()},_prepBehavior:function(b){this._addHostAttributes(b.hostAttributes)},_marshalBehavior:function(b){},_initFeatures:function(){this._marshalHostAttributes();this._marshalBehaviors()}});(function(){function resolveCss(cssText,ownerDocument){return cssText.replace(CSS_URL_RX,function(m,pre,url,post){return pre+"'"+resolve(url.replace(/["']/g,""),ownerDocument)+"'"+post})}function resolveAttrs(element,ownerDocument){for(var name in URL_ATTRS){var a$=URL_ATTRS[name];for(var i=0,l=a$.length,a,at,v;i<l&&(a=a$[i]);i++)if(name==="*"||element.localName===name){at=element.attributes[a];v=at&&at.value;if(v&&v.search(BINDING_RX)<0)at.value=a==="style"?resolveCss(v,ownerDocument):resolve(v,
ownerDocument)}}}function resolve(url,ownerDocument){if(url&&ABS_URL.test(url))return url;var resolver=getUrlResolver(ownerDocument);resolver.href=url;return resolver.href||url}var tempDoc;var tempDocBase;function resolveUrl(url,baseUri){if(!tempDoc){tempDoc=document.implementation.createHTMLDocument("temp");tempDocBase=tempDoc.createElement("base");tempDoc.head.appendChild(tempDocBase)}tempDocBase.href=baseUri;return resolve(url,tempDoc)}function getUrlResolver(ownerDocument){return ownerDocument.body.__urlResolver||
(ownerDocument.body.__urlResolver=ownerDocument.createElement("a"))}function pathFromUrl(url){return url.substring(0,url.lastIndexOf("/")+1)}var CSS_URL_RX=/(url\()([^)]*)(\))/g;var URL_ATTRS={"*":["href","src","style","url"],form:["action"]};var ABS_URL=/(^\/)|(^#)|(^[\w-\d]*:)/;var BINDING_RX=/\{\{|\[\[/;Polymer.ResolveUrl={resolveCss:resolveCss,resolveAttrs:resolveAttrs,resolveUrl:resolveUrl,pathFromUrl:pathFromUrl};Polymer.rootPath=Polymer.Settings.rootPath||pathFromUrl(document.baseURI||window.location.href)})();
Polymer.Base._addFeature({_prepTemplate:function(){var module;if(this._template===undefined){module=Polymer.DomModule["import"](this.is);var template=module&&module.querySelector("template");if(Polymer.Settings.strictTemplatePolicy&&!template)throw new Error("strictTemplatePolicy: expecting dom-module or null _template for "+this.is);this._template=template}if(module){var assetPath=module.getAttribute("assetpath")||"";var importURL=Polymer.ResolveUrl.resolveUrl(assetPath,module.ownerDocument.baseURI);
this._importPath=Polymer.ResolveUrl.pathFromUrl(importURL)}else this._importPath="";if(this._template&&this._template.hasAttribute("is"))this._warn(this._logf("_prepTemplate","top-level Polymer template "+"must not be a type-extension, found",this._template,"Move inside simple <template>."));if(this._template&&!this._template.content&&window.HTMLTemplateElement&&HTMLTemplateElement.decorate)HTMLTemplateElement.decorate(this._template)},_stampTemplate:function(){if(this._template)this.root=this.instanceTemplate(this._template)},
instanceTemplate:function(template){var dom=document.importNode(template._content||template.content,true);return dom}});
(function(){var baseAttachedCallback=Polymer.Base.attachedCallback;var baseDetachedCallback=Polymer.Base.detachedCallback;Polymer.Base._addFeature({_hostStack:[],ready:function(){},_registerHost:function(host){this.dataHost=host=host||Polymer.Base._hostStack[Polymer.Base._hostStack.length-1];if(host&&host._clients)host._clients.push(this);this._clients=null;this._clientsReadied=false},_beginHosting:function(){Polymer.Base._hostStack.push(this);if(!this._clients)this._clients=[]},_endHosting:function(){Polymer.Base._hostStack.pop()},
_tryReady:function(){this._readied=false;if(this._canReady())this._ready()},_canReady:function(){return!this.dataHost||this.dataHost._clientsReadied},_ready:function(){this._beforeClientsReady();if(this._template){this._setupRoot();this._readyClients()}this._clientsReadied=true;this._clients=null;this._afterClientsReady();this._readySelf()},_readyClients:function(){this._beginDistribute();var c$=this._clients;if(c$)for(var i=0,l=c$.length,c;i<l&&(c=c$[i]);i++)c._ready();this._finishDistribute()},
_readySelf:function(){for(var i=0,b;i<this.behaviors.length;i++){b=this.behaviors[i];if(b.ready)b.ready.call(this)}if(this.ready)this.ready();this._readied=true;if(this._attachedPending){this._attachedPending=false;this.attachedCallback()}},_beforeClientsReady:function(){},_afterClientsReady:function(){},_beforeAttached:function(){},attachedCallback:function(){if(this._readied){this._beforeAttached();baseAttachedCallback.call(this)}else this._attachedPending=true},detachedCallback:function(){if(this._readied)baseDetachedCallback.call(this);
else this._attachedPending=false}})})();
Polymer.ArraySplice=function(){function newSplice(index,removed,addedCount){return{index:index,removed:removed,addedCount:addedCount}}var EDIT_LEAVE=0;var EDIT_UPDATE=1;var EDIT_ADD=2;var EDIT_DELETE=3;function ArraySplice(){}ArraySplice.prototype={calcEditDistances:function(current,currentStart,currentEnd,old,oldStart,oldEnd){var rowCount=oldEnd-oldStart+1;var columnCount=currentEnd-currentStart+1;var distances=new Array(rowCount);for(var i=0;i<rowCount;i++){distances[i]=new Array(columnCount);distances[i][0]=
i}for(var j=0;j<columnCount;j++)distances[0][j]=j;for(i=1;i<rowCount;i++)for(j=1;j<columnCount;j++)if(this.equals(current[currentStart+j-1],old[oldStart+i-1]))distances[i][j]=distances[i-1][j-1];else{var north=distances[i-1][j]+1;var west=distances[i][j-1]+1;distances[i][j]=north<west?north:west}return distances},spliceOperationsFromEditDistances:function(distances){var i=distances.length-1;var j=distances[0].length-1;var current=distances[i][j];var edits=[];while(i>0||j>0){if(i==0){edits.push(EDIT_ADD);
j--;continue}if(j==0){edits.push(EDIT_DELETE);i--;continue}var northWest=distances[i-1][j-1];var west=distances[i-1][j];var north=distances[i][j-1];var min;if(west<north)min=west<northWest?west:northWest;else min=north<northWest?north:northWest;if(min==northWest){if(northWest==current)edits.push(EDIT_LEAVE);else{edits.push(EDIT_UPDATE);current=northWest}i--;j--}else if(min==west){edits.push(EDIT_DELETE);i--;current=west}else{edits.push(EDIT_ADD);j--;current=north}}edits.reverse();return edits},calcSplices:function(current,
currentStart,currentEnd,old,oldStart,oldEnd){var prefixCount=0;var suffixCount=0;var minLength=Math.min(currentEnd-currentStart,oldEnd-oldStart);if(currentStart==0&&oldStart==0)prefixCount=this.sharedPrefix(current,old,minLength);if(currentEnd==current.length&&oldEnd==old.length)suffixCount=this.sharedSuffix(current,old,minLength-prefixCount);currentStart+=prefixCount;oldStart+=prefixCount;currentEnd-=suffixCount;oldEnd-=suffixCount;if(currentEnd-currentStart==0&&oldEnd-oldStart==0)return[];if(currentStart==
currentEnd){var splice=newSplice(currentStart,[],0);while(oldStart<oldEnd)splice.removed.push(old[oldStart++]);return[splice]}else if(oldStart==oldEnd)return[newSplice(currentStart,[],currentEnd-currentStart)];var ops=this.spliceOperationsFromEditDistances(this.calcEditDistances(current,currentStart,currentEnd,old,oldStart,oldEnd));splice=undefined;var splices=[];var index=currentStart;var oldIndex=oldStart;for(var i=0;i<ops.length;i++)switch(ops[i]){case EDIT_LEAVE:if(splice){splices.push(splice);
splice=undefined}index++;oldIndex++;break;case EDIT_UPDATE:if(!splice)splice=newSplice(index,[],0);splice.addedCount++;index++;splice.removed.push(old[oldIndex]);oldIndex++;break;case EDIT_ADD:if(!splice)splice=newSplice(index,[],0);splice.addedCount++;index++;break;case EDIT_DELETE:if(!splice)splice=newSplice(index,[],0);splice.removed.push(old[oldIndex]);oldIndex++;break}if(splice)splices.push(splice);return splices},sharedPrefix:function(current,old,searchLength){for(var i=0;i<searchLength;i++)if(!this.equals(current[i],
old[i]))return i;return searchLength},sharedSuffix:function(current,old,searchLength){var index1=current.length;var index2=old.length;var count=0;while(count<searchLength&&this.equals(current[--index1],old[--index2]))count++;return count},calculateSplices:function(current,previous){return this.calcSplices(current,0,current.length,previous,0,previous.length)},equals:function(currentValue,previousValue){return currentValue===previousValue}};return new ArraySplice}();
Polymer.domInnerHTML=function(){var escapeAttrRegExp=/[&\u00A0"]/g;var escapeDataRegExp=/[&\u00A0<>]/g;function escapeReplace(c){switch(c){case "&":return"&amp;";case "<":return"&lt;";case ">":return"&gt;";case '"':return"&quot;";case "\u00a0":return"&nbsp;"}}function escapeAttr(s){return s.replace(escapeAttrRegExp,escapeReplace)}function escapeData(s){return s.replace(escapeDataRegExp,escapeReplace)}function makeSet(arr){var set={};for(var i=0;i<arr.length;i++)set[arr[i]]=true;return set}var voidElements=
makeSet(["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"]);var plaintextParents=makeSet(["style","script","xmp","iframe","noembed","noframes","plaintext","noscript"]);function getOuterHTML(node,parentNode,composed){switch(node.nodeType){case Node.ELEMENT_NODE:var tagName=node.localName;var s="<"+tagName;var attrs=node.attributes;for(var i=0,attr;attr=attrs[i];i++)s+=" "+attr.name+'="'+escapeAttr(attr.value)+'"';s+=">";if(voidElements[tagName])return s;
return s+getInnerHTML(node,composed)+"</"+tagName+">";case Node.TEXT_NODE:var data=node.data;if(parentNode&&plaintextParents[parentNode.localName])return data;return escapeData(data);case Node.COMMENT_NODE:return"\x3c!--"+node.data+"--\x3e";default:console.error(node);throw new Error("not implemented");}}function getInnerHTML(node,composed){if(node instanceof HTMLTemplateElement)node=node.content;var s="";var c$=Polymer.dom(node).childNodes;for(var i=0,l=c$.length,child;i<l&&(child=c$[i]);i++)s+=
getOuterHTML(child,node,composed);return s}return{getInnerHTML:getInnerHTML}}();
(function(){var nativeInsertBefore=Element.prototype.insertBefore;var nativeAppendChild=Element.prototype.appendChild;var nativeRemoveChild=Element.prototype.removeChild;Polymer.TreeApi={arrayCopyChildNodes:function(parent){var copy=[],i=0;for(var n=parent.firstChild;n;n=n.nextSibling)copy[i++]=n;return copy},arrayCopyChildren:function(parent){var copy=[],i=0;for(var n=parent.firstElementChild;n;n=n.nextElementSibling)copy[i++]=n;return copy},arrayCopy:function(a$){var l=a$.length;var copy=new Array(l);
for(var i=0;i<l;i++)copy[i]=a$[i];return copy}};Polymer.TreeApi.Logical={hasParentNode:function(node){return Boolean(node.__dom&&node.__dom.parentNode)},hasChildNodes:function(node){return Boolean(node.__dom&&node.__dom.childNodes!==undefined)},getChildNodes:function(node){return this.hasChildNodes(node)?this._getChildNodes(node):node.childNodes},_getChildNodes:function(node){if(!node.__dom.childNodes){node.__dom.childNodes=[];for(var n=node.__dom.firstChild;n;n=n.__dom.nextSibling)node.__dom.childNodes.push(n)}return node.__dom.childNodes},
getParentNode:function(node){return node.__dom&&node.__dom.parentNode!==undefined?node.__dom.parentNode:node.parentNode},getFirstChild:function(node){return node.__dom&&node.__dom.firstChild!==undefined?node.__dom.firstChild:node.firstChild},getLastChild:function(node){return node.__dom&&node.__dom.lastChild!==undefined?node.__dom.lastChild:node.lastChild},getNextSibling:function(node){return node.__dom&&node.__dom.nextSibling!==undefined?node.__dom.nextSibling:node.nextSibling},getPreviousSibling:function(node){return node.__dom&&
node.__dom.previousSibling!==undefined?node.__dom.previousSibling:node.previousSibling},getFirstElementChild:function(node){return node.__dom&&node.__dom.firstChild!==undefined?this._getFirstElementChild(node):node.firstElementChild},_getFirstElementChild:function(node){var n=node.__dom.firstChild;while(n&&n.nodeType!==Node.ELEMENT_NODE)n=n.__dom.nextSibling;return n},getLastElementChild:function(node){return node.__dom&&node.__dom.lastChild!==undefined?this._getLastElementChild(node):node.lastElementChild},
_getLastElementChild:function(node){var n=node.__dom.lastChild;while(n&&n.nodeType!==Node.ELEMENT_NODE)n=n.__dom.previousSibling;return n},getNextElementSibling:function(node){return node.__dom&&node.__dom.nextSibling!==undefined?this._getNextElementSibling(node):node.nextElementSibling},_getNextElementSibling:function(node){var n=node.__dom.nextSibling;while(n&&n.nodeType!==Node.ELEMENT_NODE)n=n.__dom.nextSibling;return n},getPreviousElementSibling:function(node){return node.__dom&&node.__dom.previousSibling!==
undefined?this._getPreviousElementSibling(node):node.previousElementSibling},_getPreviousElementSibling:function(node){var n=node.__dom.previousSibling;while(n&&n.nodeType!==Node.ELEMENT_NODE)n=n.__dom.previousSibling;return n},saveChildNodes:function(node){if(!this.hasChildNodes(node)){node.__dom=node.__dom||{};node.__dom.firstChild=node.firstChild;node.__dom.lastChild=node.lastChild;node.__dom.childNodes=[];for(var n=node.firstChild;n;n=n.nextSibling){n.__dom=n.__dom||{};n.__dom.parentNode=node;
node.__dom.childNodes.push(n);n.__dom.nextSibling=n.nextSibling;n.__dom.previousSibling=n.previousSibling}}},recordInsertBefore:function(node,container,ref_node){container.__dom.childNodes=null;if(node.nodeType===Node.DOCUMENT_FRAGMENT_NODE)for(var n=node.firstChild;n;n=n.nextSibling)this._linkNode(n,container,ref_node);else this._linkNode(node,container,ref_node)},_linkNode:function(node,container,ref_node){node.__dom=node.__dom||{};container.__dom=container.__dom||{};if(ref_node)ref_node.__dom=
ref_node.__dom||{};node.__dom.previousSibling=ref_node?ref_node.__dom.previousSibling:container.__dom.lastChild;if(node.__dom.previousSibling)node.__dom.previousSibling.__dom.nextSibling=node;node.__dom.nextSibling=ref_node||null;if(node.__dom.nextSibling)node.__dom.nextSibling.__dom.previousSibling=node;node.__dom.parentNode=container;if(ref_node){if(ref_node===container.__dom.firstChild)container.__dom.firstChild=node}else{container.__dom.lastChild=node;if(!container.__dom.firstChild)container.__dom.firstChild=
node}container.__dom.childNodes=null},recordRemoveChild:function(node,container){node.__dom=node.__dom||{};container.__dom=container.__dom||{};if(node===container.__dom.firstChild)container.__dom.firstChild=node.__dom.nextSibling;if(node===container.__dom.lastChild)container.__dom.lastChild=node.__dom.previousSibling;var p=node.__dom.previousSibling;var n=node.__dom.nextSibling;if(p)p.__dom.nextSibling=n;if(n)n.__dom.previousSibling=p;node.__dom.parentNode=node.__dom.previousSibling=node.__dom.nextSibling=
undefined;container.__dom.childNodes=null}};Polymer.TreeApi.Composed={getChildNodes:function(node){return Polymer.TreeApi.arrayCopyChildNodes(node)},getParentNode:function(node){return node.parentNode},clearChildNodes:function(node){node.textContent=""},insertBefore:function(parentNode,newChild,refChild){return nativeInsertBefore.call(parentNode,newChild,refChild||null)},appendChild:function(parentNode,newChild){return nativeAppendChild.call(parentNode,newChild)},removeChild:function(parentNode,node){return nativeRemoveChild.call(parentNode,
node)}}})();
Polymer.DomApi=function(){var Settings=Polymer.Settings;var TreeApi=Polymer.TreeApi;var DomApi=function(node){this.node=needsToWrap?DomApi.wrap(node):node};var needsToWrap=Settings.hasShadow&&!Settings.nativeShadow;DomApi.wrap=window.wrap?window.wrap:function(node){return node};DomApi.prototype={flush:function(){Polymer.dom.flush()},deepContains:function(node){if(this.node.contains(node))return true;var n=node;var doc=node.ownerDocument;while(n&&n!==doc&&n!==this.node)n=Polymer.dom(n).parentNode||n.host;
return n===this.node},queryDistributedElements:function(selector){var c$=this.getEffectiveChildNodes();var list=[];for(var i=0,l=c$.length,c;i<l&&(c=c$[i]);i++)if(c.nodeType===Node.ELEMENT_NODE&&DomApi.matchesSelector.call(c,selector))list.push(c);return list},getEffectiveChildNodes:function(){var list=[];var c$=this.childNodes;for(var i=0,l=c$.length,c;i<l&&(c=c$[i]);i++)if(c.localName===CONTENT){var d$=dom(c).getDistributedNodes();for(var j=0;j<d$.length;j++)list.push(d$[j])}else list.push(c);return list},
observeNodes:function(callback){if(callback){if(!this.observer)this.observer=this.node.localName===CONTENT?new DomApi.DistributedNodesObserver(this):new DomApi.EffectiveNodesObserver(this);return this.observer.addListener(callback)}},unobserveNodes:function(handle){if(this.observer)this.observer.removeListener(handle)},notifyObserver:function(){if(this.observer)this.observer.notify()},_query:function(matcher,node,halter){node=node||this.node;var list=[];this._queryElements(TreeApi.Logical.getChildNodes(node),
matcher,halter,list);return list},_queryElements:function(elements,matcher,halter,list){for(var i=0,l=elements.length,c;i<l&&(c=elements[i]);i++)if(c.nodeType===Node.ELEMENT_NODE)if(this._queryElement(c,matcher,halter,list))return true},_queryElement:function(node,matcher,halter,list){var result=matcher(node);if(result)list.push(node);if(halter&&halter(result))return result;this._queryElements(TreeApi.Logical.getChildNodes(node),matcher,halter,list)}};var CONTENT=DomApi.CONTENT="content";var dom=
DomApi.factory=function(node){node=node||document;if(!node.__domApi)node.__domApi=new DomApi.ctor(node);return node.__domApi};DomApi.hasApi=function(node){return Boolean(node.__domApi)};DomApi.ctor=DomApi;Polymer.dom=function(obj,patch){if(obj instanceof Event)return Polymer.EventApi.factory(obj);else return DomApi.factory(obj,patch)};var p=Element.prototype;DomApi.matchesSelector=p.matches||p.matchesSelector||p.mozMatchesSelector||p.msMatchesSelector||p.oMatchesSelector||p.webkitMatchesSelector;
return DomApi}();
(function(){var Settings=Polymer.Settings;var DomApi=Polymer.DomApi;var dom=DomApi.factory;var TreeApi=Polymer.TreeApi;var getInnerHTML=Polymer.domInnerHTML.getInnerHTML;var CONTENT=DomApi.CONTENT;if(Settings.useShadow)return;var nativeCloneNode=Element.prototype.cloneNode;var nativeImportNode=Document.prototype.importNode;Polymer.Base.mixin(DomApi.prototype,{_lazyDistribute:function(host){if(host.shadyRoot&&host.shadyRoot._distributionClean){host.shadyRoot._distributionClean=false;Polymer.dom.addDebouncer(host.debounce("_distribute",
host._distributeContent))}},appendChild:function(node){return this.insertBefore(node)},insertBefore:function(node,ref_node){if(ref_node&&TreeApi.Logical.getParentNode(ref_node)!==this.node)throw Error("The ref_node to be inserted before is not a child "+"of this node");if(node.nodeType!==Node.DOCUMENT_FRAGMENT_NODE){var parent=TreeApi.Logical.getParentNode(node);if(parent){if(DomApi.hasApi(parent))dom(parent).notifyObserver();this._removeNode(node)}else this._removeOwnerShadyRoot(node)}if(!this._addNode(node,
ref_node)){if(ref_node)ref_node=ref_node.localName===CONTENT?this._firstComposedNode(ref_node):ref_node;var container=this.node._isShadyRoot?this.node.host:this.node;if(ref_node)TreeApi.Composed.insertBefore(container,node,ref_node);else TreeApi.Composed.appendChild(container,node)}this.notifyObserver();return node},_addNode:function(node,ref_node){var root=this.getOwnerRoot();if(root){var ipAdded=this._maybeAddInsertionPoint(node,this.node);if(!root._invalidInsertionPoints)root._invalidInsertionPoints=
ipAdded;this._addNodeToHost(root.host,node)}if(TreeApi.Logical.hasChildNodes(this.node))TreeApi.Logical.recordInsertBefore(node,this.node,ref_node);var handled=this._maybeDistribute(node)||this.node.shadyRoot;if(handled)if(node.nodeType===Node.DOCUMENT_FRAGMENT_NODE)while(node.firstChild)TreeApi.Composed.removeChild(node,node.firstChild);else{var parent=TreeApi.Composed.getParentNode(node);if(parent)TreeApi.Composed.removeChild(parent,node)}return handled},removeChild:function(node){if(TreeApi.Logical.getParentNode(node)!==
this.node)throw Error("The node to be removed is not a child of this node: "+node);if(!this._removeNode(node)){var container=this.node._isShadyRoot?this.node.host:this.node;var parent=TreeApi.Composed.getParentNode(node);if(container===parent)TreeApi.Composed.removeChild(container,node)}this.notifyObserver();return node},_removeNode:function(node){var logicalParent=TreeApi.Logical.hasParentNode(node)&&TreeApi.Logical.getParentNode(node);var distributed;var root=this._ownerShadyRootForNode(node);if(logicalParent){distributed=
dom(node)._maybeDistributeParent();TreeApi.Logical.recordRemoveChild(node,logicalParent);if(root&&this._removeDistributedChildren(root,node)){root._invalidInsertionPoints=true;this._lazyDistribute(root.host)}}this._removeOwnerShadyRoot(node);if(root)this._removeNodeFromHost(root.host,node);return distributed},replaceChild:function(node,ref_node){this.insertBefore(node,ref_node);this.removeChild(ref_node);return node},_hasCachedOwnerRoot:function(node){return Boolean(node._ownerShadyRoot!==undefined)},
getOwnerRoot:function(){return this._ownerShadyRootForNode(this.node)},_ownerShadyRootForNode:function(node){if(!node)return;var root=node._ownerShadyRoot;if(root===undefined){if(node._isShadyRoot)root=node;else{var parent=TreeApi.Logical.getParentNode(node);if(parent)root=parent._isShadyRoot?parent:this._ownerShadyRootForNode(parent);else root=null}if(root||document.documentElement.contains(node))node._ownerShadyRoot=root}return root},_maybeDistribute:function(node){var fragContent=node.nodeType===
Node.DOCUMENT_FRAGMENT_NODE&&!node.__noContent&&dom(node).querySelector(CONTENT);var wrappedContent=fragContent&&TreeApi.Logical.getParentNode(fragContent).nodeType!==Node.DOCUMENT_FRAGMENT_NODE;var hasContent=fragContent||node.localName===CONTENT;if(hasContent){var root=this.getOwnerRoot();if(root)this._lazyDistribute(root.host)}var needsDist=this._nodeNeedsDistribution(this.node);if(needsDist)this._lazyDistribute(this.node);return needsDist||hasContent&&!wrappedContent},_maybeAddInsertionPoint:function(node,
parent){var added;if(node.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&!node.__noContent){var c$=dom(node).querySelectorAll(CONTENT);for(var i=0,n,np,na;i<c$.length&&(n=c$[i]);i++){np=TreeApi.Logical.getParentNode(n);if(np===node)np=parent;na=this._maybeAddInsertionPoint(n,np);added=added||na}}else if(node.localName===CONTENT){TreeApi.Logical.saveChildNodes(parent);TreeApi.Logical.saveChildNodes(node);added=true}return added},_updateInsertionPoints:function(host){var i$=host.shadyRoot._insertionPoints=
dom(host.shadyRoot).querySelectorAll(CONTENT);for(var i=0,c;i<i$.length;i++){c=i$[i];TreeApi.Logical.saveChildNodes(c);TreeApi.Logical.saveChildNodes(TreeApi.Logical.getParentNode(c))}},_nodeNeedsDistribution:function(node){return node&&node.shadyRoot&&DomApi.hasInsertionPoint(node.shadyRoot)},_addNodeToHost:function(host,node){if(host._elementAdd)host._elementAdd(node)},_removeNodeFromHost:function(host,node){if(host._elementRemove)host._elementRemove(node)},_removeDistributedChildren:function(root,
container){var hostNeedsDist;var ip$=root._insertionPoints;for(var i=0;i<ip$.length;i++){var content=ip$[i];if(this._contains(container,content)){var dc$=dom(content).getDistributedNodes();for(var j=0;j<dc$.length;j++){hostNeedsDist=true;var node=dc$[j];var parent=TreeApi.Composed.getParentNode(node);if(parent)TreeApi.Composed.removeChild(parent,node)}}}return hostNeedsDist},_contains:function(container,node){while(node){if(node==container)return true;node=TreeApi.Logical.getParentNode(node)}},_removeOwnerShadyRoot:function(node){if(this._hasCachedOwnerRoot(node)){var c$=
TreeApi.Logical.getChildNodes(node);for(var i=0,l=c$.length,n;i<l&&(n=c$[i]);i++)this._removeOwnerShadyRoot(n)}node._ownerShadyRoot=undefined},_firstComposedNode:function(content){var n$=dom(content).getDistributedNodes();for(var i=0,l=n$.length,n,p$;i<l&&(n=n$[i]);i++){p$=dom(n).getDestinationInsertionPoints();if(p$[p$.length-1]===content)return n}},querySelector:function(selector){var result=this._query(function(n){return DomApi.matchesSelector.call(n,selector)},this.node,function(n){return Boolean(n)})[0];
return result||null},querySelectorAll:function(selector){return this._query(function(n){return DomApi.matchesSelector.call(n,selector)},this.node)},getDestinationInsertionPoints:function(){return this.node._destinationInsertionPoints||[]},getDistributedNodes:function(){return this.node._distributedNodes||[]},_clear:function(){while(this.childNodes.length)this.removeChild(this.childNodes[0])},setAttribute:function(name,value){this.node.setAttribute(name,value);this._maybeDistributeForAttributeChange(this.node,
name)},removeAttribute:function(name){this.node.removeAttribute(name);this._maybeDistributeForAttributeChange(this.node,name)},_maybeDistributeForAttributeChange:function(element,name){if(name==="select"&&element.localName==="content"){var ownerRoot=this.getOwnerRoot();if(ownerRoot&&this._nodeNeedsDistribution(ownerRoot.host)){this._lazyDistribute(ownerRoot.host);return}}this._maybeDistributeParent()},_maybeDistributeParent:function(){if(this._nodeNeedsDistribution(this.parentNode)){this._lazyDistribute(this.parentNode);
return true}},cloneNode:function(deep){var n=nativeCloneNode.call(this.node,false);if(deep){var c$=this.childNodes;var d=dom(n);for(var i=0,nc;i<c$.length;i++){nc=dom(c$[i]).cloneNode(true);d.appendChild(nc)}}return n},importNode:function(externalNode,deep){var doc=this.node instanceof Document?this.node:this.node.ownerDocument;var n=nativeImportNode.call(doc,externalNode,false);if(deep){var c$=TreeApi.Logical.getChildNodes(externalNode);var d=dom(n);for(var i=0,nc;i<c$.length;i++){nc=dom(doc).importNode(c$[i],
true);d.appendChild(nc)}}return n},_getComposedInnerHTML:function(){return getInnerHTML(this.node,true)}});Object.defineProperties(DomApi.prototype,{activeElement:{get:function(){var active=document.activeElement;if(!active)return null;var isShadyRoot=!!this.node._isShadyRoot;if(this.node!==document){if(!isShadyRoot)return null;if(this.node.host===active||!this.node.host.contains(active))return null}var activeRoot=dom(active).getOwnerRoot();while(activeRoot&&activeRoot!==this.node){active=activeRoot.host;
activeRoot=dom(active).getOwnerRoot()}if(this.node===document)return activeRoot?null:active;else return activeRoot===this.node?active:null},configurable:true},childNodes:{get:function(){var c$=TreeApi.Logical.getChildNodes(this.node);return Array.isArray(c$)?c$:TreeApi.arrayCopyChildNodes(this.node)},configurable:true},children:{get:function(){if(TreeApi.Logical.hasChildNodes(this.node))return Array.prototype.filter.call(this.childNodes,function(n){return n.nodeType===Node.ELEMENT_NODE});else return TreeApi.arrayCopyChildren(this.node)},
configurable:true},parentNode:{get:function(){return TreeApi.Logical.getParentNode(this.node)},configurable:true},firstChild:{get:function(){return TreeApi.Logical.getFirstChild(this.node)},configurable:true},lastChild:{get:function(){return TreeApi.Logical.getLastChild(this.node)},configurable:true},nextSibling:{get:function(){return TreeApi.Logical.getNextSibling(this.node)},configurable:true},previousSibling:{get:function(){return TreeApi.Logical.getPreviousSibling(this.node)},configurable:true},
firstElementChild:{get:function(){return TreeApi.Logical.getFirstElementChild(this.node)},configurable:true},lastElementChild:{get:function(){return TreeApi.Logical.getLastElementChild(this.node)},configurable:true},nextElementSibling:{get:function(){return TreeApi.Logical.getNextElementSibling(this.node)},configurable:true},previousElementSibling:{get:function(){return TreeApi.Logical.getPreviousElementSibling(this.node)},configurable:true},textContent:{get:function(){var nt=this.node.nodeType;if(nt===
Node.TEXT_NODE||nt===Node.COMMENT_NODE)return this.node.textContent;else{var tc=[];for(var i=0,cn=this.childNodes,c;c=cn[i];i++)if(c.nodeType!==Node.COMMENT_NODE)tc.push(c.textContent);return tc.join("")}},set:function(text){var nt=this.node.nodeType;if(nt===Node.TEXT_NODE||nt===Node.COMMENT_NODE)this.node.textContent=text;else{this._clear();if(text)this.appendChild(document.createTextNode(text))}},configurable:true},innerHTML:{get:function(){var nt=this.node.nodeType;if(nt===Node.TEXT_NODE||nt===
Node.COMMENT_NODE)return null;else return getInnerHTML(this.node)},set:function(text){var nt=this.node.nodeType;if(nt!==Node.TEXT_NODE||nt!==Node.COMMENT_NODE){this._clear();var d=document.createElement("div");d.innerHTML=text;var c$=TreeApi.arrayCopyChildNodes(d);for(var i=0;i<c$.length;i++)this.appendChild(c$[i])}},configurable:true}});DomApi.hasInsertionPoint=function(root){return Boolean(root&&root._insertionPoints.length)}})();
(function(){var Settings=Polymer.Settings;var TreeApi=Polymer.TreeApi;var DomApi=Polymer.DomApi;if(!Settings.useShadow)return;Polymer.Base.mixin(DomApi.prototype,{querySelectorAll:function(selector){return TreeApi.arrayCopy(this.node.querySelectorAll(selector))},getOwnerRoot:function(){var n=this.node;while(n){if(n.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&n.host)return n;n=n.parentNode}},importNode:function(externalNode,deep){var doc=this.node instanceof Document?this.node:this.node.ownerDocument;
return doc.importNode(externalNode,deep)},getDestinationInsertionPoints:function(){var n$=this.node.getDestinationInsertionPoints&&this.node.getDestinationInsertionPoints();return n$?TreeApi.arrayCopy(n$):[]},getDistributedNodes:function(){var n$=this.node.getDistributedNodes&&this.node.getDistributedNodes();return n$?TreeApi.arrayCopy(n$):[]}});Object.defineProperties(DomApi.prototype,{activeElement:{get:function(){var node=DomApi.wrap(this.node);var activeElement=node.activeElement;return node.contains(activeElement)?
activeElement:null},configurable:true},childNodes:{get:function(){return TreeApi.arrayCopyChildNodes(this.node)},configurable:true},children:{get:function(){return TreeApi.arrayCopyChildren(this.node)},configurable:true},textContent:{get:function(){return this.node.textContent},set:function(value){return this.node.textContent=value},configurable:true},innerHTML:{get:function(){return this.node.innerHTML},set:function(value){return this.node.innerHTML=value},configurable:true}});var forwardMethods=
function(m$){for(var i=0;i<m$.length;i++)forwardMethod(m$[i])};var forwardMethod=function(method){DomApi.prototype[method]=function(){return this.node[method].apply(this.node,arguments)}};forwardMethods(["cloneNode","appendChild","insertBefore","removeChild","replaceChild","setAttribute","removeAttribute","querySelector"]);var forwardProperties=function(f$){for(var i=0;i<f$.length;i++)forwardProperty(f$[i])};var forwardProperty=function(name){Object.defineProperty(DomApi.prototype,name,{get:function(){return this.node[name]},
configurable:true})};forwardProperties(["parentNode","firstChild","lastChild","nextSibling","previousSibling","firstElementChild","lastElementChild","nextElementSibling","previousElementSibling"])})();
Polymer.Base.mixin(Polymer.dom,{_flushGuard:0,_FLUSH_MAX:100,_needsTakeRecords:!Polymer.Settings.useNativeCustomElements,_debouncers:[],_staticFlushList:[],_finishDebouncer:null,flush:function(){this._flushGuard=0;this._prepareFlush();while(this._debouncers.length&&this._flushGuard<this._FLUSH_MAX){while(this._debouncers.length)this._debouncers.shift().complete();if(this._finishDebouncer)this._finishDebouncer.complete();this._prepareFlush();this._flushGuard++}if(this._flushGuard>=this._FLUSH_MAX)console.warn("Polymer.dom.flush aborted. Flush may not be complete.")},
_prepareFlush:function(){if(this._needsTakeRecords)CustomElements.takeRecords();for(var i=0;i<this._staticFlushList.length;i++)this._staticFlushList[i]()},addStaticFlush:function(fn){this._staticFlushList.push(fn)},removeStaticFlush:function(fn){var i=this._staticFlushList.indexOf(fn);if(i>=0)this._staticFlushList.splice(i,1)},addDebouncer:function(debouncer){this._debouncers.push(debouncer);this._finishDebouncer=Polymer.Debounce(this._finishDebouncer,this._finishFlush)},_finishFlush:function(){Polymer.dom._debouncers=
[]}});
Polymer.EventApi=function(){var DomApi=Polymer.DomApi.ctor;var Settings=Polymer.Settings;DomApi.Event=function(event){this.event=event};if(Settings.useShadow)DomApi.Event.prototype={get rootTarget(){return this.event.path[0]},get localTarget(){return this.event.target},get path(){var path=this.event.path;if(!Array.isArray(path))path=Array.prototype.slice.call(path);return path}};else DomApi.Event.prototype={get rootTarget(){return this.event.target},get localTarget(){var current=this.event.currentTarget;var currentRoot=
current&&Polymer.dom(current).getOwnerRoot();var p$=this.path;for(var i=0;i<p$.length;i++)if(Polymer.dom(p$[i]).getOwnerRoot()===currentRoot)return p$[i]},get path(){if(!this.event._path){var path=[];var current=this.rootTarget;while(current){path.push(current);var insertionPoints=Polymer.dom(current).getDestinationInsertionPoints();if(insertionPoints.length){for(var i=0;i<insertionPoints.length-1;i++)path.push(insertionPoints[i]);current=insertionPoints[insertionPoints.length-1]}else current=Polymer.dom(current).parentNode||
current.host}path.push(window);this.event._path=path}return this.event._path}};var factory=function(event){if(!event.__eventApi)event.__eventApi=new DomApi.Event(event);return event.__eventApi};return{factory:factory}}();
(function(){var DomApi=Polymer.DomApi.ctor;var useShadow=Polymer.Settings.useShadow;Object.defineProperty(DomApi.prototype,"classList",{get:function(){if(!this._classList)this._classList=new DomApi.ClassList(this);return this._classList},configurable:true});DomApi.ClassList=function(host){this.domApi=host;this.node=host.node};DomApi.ClassList.prototype={add:function(){this.node.classList.add.apply(this.node.classList,arguments);this._distributeParent()},remove:function(){this.node.classList.remove.apply(this.node.classList,
arguments);this._distributeParent()},toggle:function(){this.node.classList.toggle.apply(this.node.classList,arguments);this._distributeParent()},_distributeParent:function(){if(!useShadow)this.domApi._maybeDistributeParent()},contains:function(){return this.node.classList.contains.apply(this.node.classList,arguments)}}})();
(function(){var DomApi=Polymer.DomApi.ctor;var Settings=Polymer.Settings;DomApi.EffectiveNodesObserver=function(domApi){this.domApi=domApi;this.node=this.domApi.node;this._listeners=[]};DomApi.EffectiveNodesObserver.prototype={addListener:function(callback){if(!this._isSetup){this._setup();this._isSetup=true}var listener={fn:callback,_nodes:[]};this._listeners.push(listener);this._scheduleNotify();return listener},removeListener:function(handle){var i=this._listeners.indexOf(handle);if(i>=0){this._listeners.splice(i,
1);handle._nodes=[]}if(!this._hasListeners()){this._cleanup();this._isSetup=false}},_setup:function(){this._observeContentElements(this.domApi.childNodes)},_cleanup:function(){this._unobserveContentElements(this.domApi.childNodes)},_hasListeners:function(){return Boolean(this._listeners.length)},_scheduleNotify:function(){if(this._debouncer)this._debouncer.stop();this._debouncer=Polymer.Debounce(this._debouncer,this._notify);this._debouncer.context=this;Polymer.dom.addDebouncer(this._debouncer)},
notify:function(){if(this._hasListeners())this._scheduleNotify()},_notify:function(){this._beforeCallListeners();this._callListeners()},_beforeCallListeners:function(){this._updateContentElements()},_updateContentElements:function(){this._observeContentElements(this.domApi.childNodes)},_observeContentElements:function(elements){for(var i=0,n;i<elements.length&&(n=elements[i]);i++)if(this._isContent(n)){n.__observeNodesMap=n.__observeNodesMap||new WeakMap;if(!n.__observeNodesMap.has(this))n.__observeNodesMap.set(this,
this._observeContent(n))}},_observeContent:function(content){var self=this;var h=Polymer.dom(content).observeNodes(function(){self._scheduleNotify()});h._avoidChangeCalculation=true;return h},_unobserveContentElements:function(elements){for(var i=0,n,h;i<elements.length&&(n=elements[i]);i++)if(this._isContent(n)){h=n.__observeNodesMap&&n.__observeNodesMap.get(this);if(h){Polymer.dom(n).unobserveNodes(h);n.__observeNodesMap["delete"](this)}}},_isContent:function(node){return node.localName==="content"},
_callListeners:function(){var o$=this._listeners;var nodes=this._getEffectiveNodes();for(var i=0,o;i<o$.length&&(o=o$[i]);i++){var info=this._generateListenerInfo(o,nodes);if(info||o._alwaysNotify)this._callListener(o,info)}},_getEffectiveNodes:function(){return this.domApi.getEffectiveChildNodes()},_generateListenerInfo:function(listener,newNodes){if(listener._avoidChangeCalculation)return true;var oldNodes=listener._nodes;var info={target:this.node,addedNodes:[],removedNodes:[]};var splices=Polymer.ArraySplice.calculateSplices(newNodes,
oldNodes);for(var i=0,s;i<splices.length&&(s=splices[i]);i++)for(var j=0,n;j<s.removed.length&&(n=s.removed[j]);j++)info.removedNodes.push(n);for(i=0,s;i<splices.length&&(s=splices[i]);i++)for(j=s.index;j<s.index+s.addedCount;j++)info.addedNodes.push(newNodes[j]);listener._nodes=newNodes;if(info.addedNodes.length||info.removedNodes.length)return info},_callListener:function(listener,info){return listener.fn.call(this.node,info)},enableShadowAttributeTracking:function(){}};if(Settings.useShadow){var baseSetup=
DomApi.EffectiveNodesObserver.prototype._setup;var baseCleanup=DomApi.EffectiveNodesObserver.prototype._cleanup;Polymer.Base.mixin(DomApi.EffectiveNodesObserver.prototype,{_setup:function(){if(!this._observer){var self=this;this._mutationHandler=function(mxns){if(mxns&&mxns.length)self._scheduleNotify()};this._observer=new MutationObserver(this._mutationHandler);this._boundFlush=function(){self._flush()};Polymer.dom.addStaticFlush(this._boundFlush);this._observer.observe(this.node,{childList:true})}baseSetup.call(this)},
_cleanup:function(){this._observer.disconnect();this._observer=null;this._mutationHandler=null;Polymer.dom.removeStaticFlush(this._boundFlush);baseCleanup.call(this)},_flush:function(){if(this._observer)this._mutationHandler(this._observer.takeRecords())},enableShadowAttributeTracking:function(){if(this._observer){this._makeContentListenersAlwaysNotify();this._observer.disconnect();this._observer.observe(this.node,{childList:true,attributes:true,subtree:true});var root=this.domApi.getOwnerRoot();
var host=root&&root.host;if(host&&Polymer.dom(host).observer)Polymer.dom(host).observer.enableShadowAttributeTracking()}},_makeContentListenersAlwaysNotify:function(){for(var i=0,h;i<this._listeners.length;i++){h=this._listeners[i];h._alwaysNotify=h._isContentListener}}})}})();
(function(){var DomApi=Polymer.DomApi.ctor;var Settings=Polymer.Settings;DomApi.DistributedNodesObserver=function(domApi){DomApi.EffectiveNodesObserver.call(this,domApi)};DomApi.DistributedNodesObserver.prototype=Object.create(DomApi.EffectiveNodesObserver.prototype);Polymer.Base.mixin(DomApi.DistributedNodesObserver.prototype,{_setup:function(){},_cleanup:function(){},_beforeCallListeners:function(){},_getEffectiveNodes:function(){return this.domApi.getDistributedNodes()}});if(Settings.useShadow)Polymer.Base.mixin(DomApi.DistributedNodesObserver.prototype,
{_setup:function(){if(!this._observer){var root=this.domApi.getOwnerRoot();var host=root&&root.host;if(host){var self=this;this._observer=Polymer.dom(host).observeNodes(function(){self._scheduleNotify()});this._observer._isContentListener=true;if(this._hasAttrSelect())Polymer.dom(host).observer.enableShadowAttributeTracking()}}},_hasAttrSelect:function(){var select=this.node.getAttribute("select");return select&&select.match(/[[.]+/)},_cleanup:function(){var root=this.domApi.getOwnerRoot();var host=
root&&root.host;if(host)Polymer.dom(host).unobserveNodes(this._observer);this._observer=null}})})();
(function(){var DomApi=Polymer.DomApi;var TreeApi=Polymer.TreeApi;Polymer.Base._addFeature({_prepShady:function(){this._useContent=this._useContent||Boolean(this._template)},_setupShady:function(){this.shadyRoot=null;if(!this.__domApi)this.__domApi=null;if(!this.__dom)this.__dom=null;if(!this._ownerShadyRoot)this._ownerShadyRoot=undefined},_poolContent:function(){if(this._useContent)TreeApi.Logical.saveChildNodes(this)},_setupRoot:function(){if(this._useContent){this._createLocalRoot();if(!this.dataHost)upgradeLogicalChildren(TreeApi.Logical.getChildNodes(this))}},
_createLocalRoot:function(){this.shadyRoot=this.root;this.shadyRoot._distributionClean=false;this.shadyRoot._hasDistributed=false;this.shadyRoot._isShadyRoot=true;this.shadyRoot._dirtyRoots=[];var i$=this.shadyRoot._insertionPoints=!this._notes||this._notes._hasContent?this.shadyRoot.querySelectorAll("content"):[];TreeApi.Logical.saveChildNodes(this.shadyRoot);for(var i=0,c;i<i$.length;i++){c=i$[i];TreeApi.Logical.saveChildNodes(c);TreeApi.Logical.saveChildNodes(c.parentNode)}this.shadyRoot.host=
this},distributeContent:function(updateInsertionPoints){if(this.shadyRoot){this.shadyRoot._invalidInsertionPoints=this.shadyRoot._invalidInsertionPoints||updateInsertionPoints;var host=getTopDistributingHost(this);Polymer.dom(this)._lazyDistribute(host)}},_distributeContent:function(){if(this._useContent&&!this.shadyRoot._distributionClean){if(this.shadyRoot._invalidInsertionPoints){Polymer.dom(this)._updateInsertionPoints(this);this.shadyRoot._invalidInsertionPoints=false}this._beginDistribute();
this._distributeDirtyRoots();this._finishDistribute()}},_beginDistribute:function(){if(this._useContent&&DomApi.hasInsertionPoint(this.shadyRoot)){this._resetDistribution();this._distributePool(this.shadyRoot,this._collectPool())}},_distributeDirtyRoots:function(){var c$=this.shadyRoot._dirtyRoots;for(var i=0,l=c$.length,c;i<l&&(c=c$[i]);i++)c._distributeContent();this.shadyRoot._dirtyRoots=[]},_finishDistribute:function(){if(this._useContent){this.shadyRoot._distributionClean=true;if(DomApi.hasInsertionPoint(this.shadyRoot)){this._composeTree();
notifyContentObservers(this.shadyRoot)}else if(!this.shadyRoot._hasDistributed){TreeApi.Composed.clearChildNodes(this);this.appendChild(this.shadyRoot)}else{var children=this._composeNode(this);this._updateChildNodes(this,children)}if(!this.shadyRoot._hasDistributed)notifyInitialDistribution(this);this.shadyRoot._hasDistributed=true}},elementMatches:function(selector,node){node=node||this;return DomApi.matchesSelector.call(node,selector)},_resetDistribution:function(){var children=TreeApi.Logical.getChildNodes(this);
for(var i=0;i<children.length;i++){var child=children[i];if(child._destinationInsertionPoints)child._destinationInsertionPoints=undefined;if(isInsertionPoint(child))clearDistributedDestinationInsertionPoints(child)}var root=this.shadyRoot;var p$=root._insertionPoints;for(var j=0;j<p$.length;j++)p$[j]._distributedNodes=[]},_collectPool:function(){var pool=[];var children=TreeApi.Logical.getChildNodes(this);for(var i=0;i<children.length;i++){var child=children[i];if(isInsertionPoint(child))pool.push.apply(pool,
child._distributedNodes);else pool.push(child)}return pool},_distributePool:function(node,pool){var p$=node._insertionPoints;for(var i=0,l=p$.length,p;i<l&&(p=p$[i]);i++){this._distributeInsertionPoint(p,pool);maybeRedistributeParent(p,this)}},_distributeInsertionPoint:function(content,pool){var anyDistributed=false;for(var i=0,l=pool.length,node;i<l;i++){node=pool[i];if(!node)continue;if(this._matchesContentSelect(node,content)){distributeNodeInto(node,content);pool[i]=undefined;anyDistributed=true}}if(!anyDistributed){var children=
TreeApi.Logical.getChildNodes(content);for(var j=0;j<children.length;j++)distributeNodeInto(children[j],content)}},_composeTree:function(){this._updateChildNodes(this,this._composeNode(this));var p$=this.shadyRoot._insertionPoints;for(var i=0,l=p$.length,p,parent;i<l&&(p=p$[i]);i++){parent=TreeApi.Logical.getParentNode(p);if(!parent._useContent&&parent!==this&&parent!==this.shadyRoot)this._updateChildNodes(parent,this._composeNode(parent))}},_composeNode:function(node){var children=[];var c$=TreeApi.Logical.getChildNodes(node.shadyRoot||
node);for(var i=0;i<c$.length;i++){var child=c$[i];if(isInsertionPoint(child)){var distributedNodes=child._distributedNodes;for(var j=0;j<distributedNodes.length;j++){var distributedNode=distributedNodes[j];if(isFinalDestination(child,distributedNode))children.push(distributedNode)}}else children.push(child)}return children},_updateChildNodes:function(container,children){var composed=TreeApi.Composed.getChildNodes(container);var splices=Polymer.ArraySplice.calculateSplices(children,composed);for(var i=
0,d=0,s;i<splices.length&&(s=splices[i]);i++){for(var j=0,n;j<s.removed.length&&(n=s.removed[j]);j++){if(TreeApi.Composed.getParentNode(n)===container)TreeApi.Composed.removeChild(container,n);composed.splice(s.index+d,1)}d-=s.addedCount}for(var i=0,s,next;i<splices.length&&(s=splices[i]);i++){next=composed[s.index];for(j=s.index,n;j<s.index+s.addedCount;j++){n=children[j];TreeApi.Composed.insertBefore(container,n,next);composed.splice(j,0,n)}}},_matchesContentSelect:function(node,contentElement){var select=
contentElement.getAttribute("select");if(!select)return true;select=select.trim();if(!select)return true;if(!(node instanceof Element))return false;var validSelectors=/^(:not\()?[*.#[a-zA-Z_|]/;if(!validSelectors.test(select))return false;return this.elementMatches(select,node)},_elementAdd:function(){},_elementRemove:function(){}});var domHostDesc={get:function(){var root=Polymer.dom(this).getOwnerRoot();return root&&root.host},configurable:true};Object.defineProperty(Polymer.Base,"domHost",domHostDesc);
Polymer.BaseDescriptors.domHost=domHostDesc;function distributeNodeInto(child,insertionPoint){insertionPoint._distributedNodes.push(child);var points=child._destinationInsertionPoints;if(!points)child._destinationInsertionPoints=[insertionPoint];else points.push(insertionPoint)}function clearDistributedDestinationInsertionPoints(content){var e$=content._distributedNodes;if(e$)for(var i=0;i<e$.length;i++){var d=e$[i]._destinationInsertionPoints;if(d)d.splice(d.indexOf(content)+1,d.length)}}function maybeRedistributeParent(content,
host){var parent=TreeApi.Logical.getParentNode(content);if(parent&&parent.shadyRoot&&DomApi.hasInsertionPoint(parent.shadyRoot)&&parent.shadyRoot._distributionClean){parent.shadyRoot._distributionClean=false;host.shadyRoot._dirtyRoots.push(parent)}}function isFinalDestination(insertionPoint,node){var points=node._destinationInsertionPoints;return points&&points[points.length-1]===insertionPoint}function isInsertionPoint(node){return node.localName=="content"}function getTopDistributingHost(host){while(host&&
hostNeedsRedistribution(host))host=host.domHost;return host}function hostNeedsRedistribution(host){var c$=TreeApi.Logical.getChildNodes(host);for(var i=0,c;i<c$.length;i++){c=c$[i];if(c.localName&&c.localName==="content")return host.domHost}}function notifyContentObservers(root){for(var i=0,c;i<root._insertionPoints.length;i++){c=root._insertionPoints[i];if(DomApi.hasApi(c))Polymer.dom(c).notifyObserver()}}function notifyInitialDistribution(host){if(DomApi.hasApi(host))Polymer.dom(host).notifyObserver()}
var needsUpgrade=window.CustomElements&&!CustomElements.useNative;function upgradeLogicalChildren(children){if(needsUpgrade&&children)for(var i=0;i<children.length;i++)CustomElements.upgrade(children[i])}})();
if(Polymer.Settings.useShadow)Polymer.Base._addFeature({_poolContent:function(){},_beginDistribute:function(){},distributeContent:function(){},_distributeContent:function(){},_finishDistribute:function(){},_createLocalRoot:function(){this.createShadowRoot();this.shadowRoot.appendChild(this.root);this.root=this.shadowRoot}});
Polymer.Async={_currVal:0,_lastVal:0,_callbacks:[],_twiddleContent:0,_twiddle:document.createTextNode(""),run:function(callback,waitTime){if(waitTime>0)return~setTimeout(callback,waitTime);else{this._twiddle.textContent=this._twiddleContent++;this._callbacks.push(callback);return this._currVal++}},cancel:function(handle){if(handle<0)clearTimeout(~handle);else{var idx=handle-this._lastVal;if(idx>=0){if(!this._callbacks[idx])throw"invalid async handle: "+handle;this._callbacks[idx]=null}}},_atEndOfMicrotask:function(){var len=
this._callbacks.length;for(var i=0;i<len;i++){var cb=this._callbacks[i];if(cb)try{cb()}catch(e){i++;this._callbacks.splice(0,i);this._lastVal+=i;this._twiddle.textContent=this._twiddleContent++;throw e;}}this._callbacks.splice(0,len);this._lastVal+=len}};(new window.MutationObserver(function(){Polymer.Async._atEndOfMicrotask()})).observe(Polymer.Async._twiddle,{characterData:true});
Polymer.Debounce=function(){var Async=Polymer.Async;var Debouncer=function(context){this.context=context;var self=this;this.boundComplete=function(){self.complete()}};Debouncer.prototype={go:function(callback,wait){var h;this.finish=function(){Async.cancel(h)};h=Async.run(this.boundComplete,wait);this.callback=callback},stop:function(){if(this.finish){this.finish();this.finish=null;this.callback=null}},complete:function(){if(this.finish){var callback=this.callback;this.stop();callback.call(this.context)}}};
function debounce(debouncer,callback,wait){if(debouncer)debouncer.stop();else debouncer=new Debouncer(this);debouncer.go(callback,wait);return debouncer}return debounce}();
Polymer.Base._addFeature({_setupDebouncers:function(){this._debouncers={}},debounce:function(jobName,callback,wait){return this._debouncers[jobName]=Polymer.Debounce.call(this,this._debouncers[jobName],callback,wait)},isDebouncerActive:function(jobName){var debouncer=this._debouncers[jobName];return!!(debouncer&&debouncer.finish)},flushDebouncer:function(jobName){var debouncer=this._debouncers[jobName];if(debouncer)debouncer.complete()},cancelDebouncer:function(jobName){var debouncer=this._debouncers[jobName];
if(debouncer)debouncer.stop()}});Polymer.DomModule=document.createElement("dom-module");
Polymer.Base._addFeature({_registerFeatures:function(){this._prepIs();this._prepBehaviors();this._prepConstructor();this._prepTemplate();this._prepShady();this._prepPropertyInfo()},_prepBehavior:function(b){this._addHostAttributes(b.hostAttributes)},_initFeatures:function(){this._registerHost();if(this._template){this._poolContent();this._beginHosting();this._stampTemplate();this._endHosting()}this._marshalHostAttributes();this._setupDebouncers();this._marshalBehaviors();this._tryReady()},_marshalBehavior:function(b){}});(function(){Polymer.nar=[];var disableUpgradeEnabled=Polymer.Settings.disableUpgradeEnabled;Polymer.Annotations={parseAnnotations:function(template,stripWhiteSpace){var list=[];var content=template._content||template.content;this._parseNodeAnnotations(content,list,stripWhiteSpace||template.hasAttribute("strip-whitespace"));return list},_parseNodeAnnotations:function(node,list,stripWhiteSpace){return node.nodeType===Node.TEXT_NODE?this._parseTextNodeAnnotation(node,list):this._parseElementAnnotations(node,
list,stripWhiteSpace)},_bindingRegex:function(){var IDENT="(?:"+"[a-zA-Z_$][\\w.:$\\-*]*"+")";var NUMBER="(?:"+"[-+]?[0-9]*\\.?[0-9]+(?:[eE][-+]?[0-9]+)?"+")";var SQUOTE_STRING="(?:"+"'(?:[^'\\\\]|\\\\.)*'"+")";var DQUOTE_STRING="(?:"+'"(?:[^"\\\\]|\\\\.)*"'+")";var STRING="(?:"+SQUOTE_STRING+"|"+DQUOTE_STRING+")";var ARGUMENT="(?:"+IDENT+"|"+NUMBER+"|"+STRING+"\\s*"+")";var ARGUMENTS="(?:"+ARGUMENT+"(?:,\\s*"+ARGUMENT+")*"+")";var ARGUMENT_LIST="(?:"+"\\(\\s*"+"(?:"+ARGUMENTS+"?"+")"+"\\)\\s*"+")";
var BINDING="("+IDENT+"\\s*"+ARGUMENT_LIST+"?"+")";var OPEN_BRACKET="(\\[\\[|{{)"+"\\s*";var CLOSE_BRACKET="(?:]]|}})";var NEGATE="(?:(!)\\s*)?";var EXPRESSION=OPEN_BRACKET+NEGATE+BINDING+CLOSE_BRACKET;return new RegExp(EXPRESSION,"g")}(),_parseBindings:function(text){var re=this._bindingRegex;var parts=[];var lastIndex=0;var m;while((m=re.exec(text))!==null){if(m.index>lastIndex)parts.push({literal:text.slice(lastIndex,m.index)});var mode=m[1][0];var negate=Boolean(m[2]);var value=m[3].trim();var customEvent,
notifyEvent,colon;if(mode=="{"&&(colon=value.indexOf("::"))>0){notifyEvent=value.substring(colon+2);value=value.substring(0,colon);customEvent=true}parts.push({compoundIndex:parts.length,value:value,mode:mode,negate:negate,event:notifyEvent,customEvent:customEvent});lastIndex=re.lastIndex}if(lastIndex&&lastIndex<text.length){var literal=text.substring(lastIndex);if(literal)parts.push({literal:literal})}if(parts.length)return parts},_literalFromParts:function(parts){var s="";for(var i=0;i<parts.length;i++){var literal=
parts[i].literal;s+=literal||""}return s},_parseTextNodeAnnotation:function(node,list){var parts=this._parseBindings(node.textContent);if(parts){node.textContent=this._literalFromParts(parts)||" ";var annote={bindings:[{kind:"text",name:"textContent",parts:parts,isCompound:parts.length!==1}]};list.push(annote);return annote}},_parseElementAnnotations:function(element,list,stripWhiteSpace){var annote={bindings:[],events:[]};if(element.localName==="content")list._hasContent=true;this._parseChildNodesAnnotations(element,
annote,list,stripWhiteSpace);if(element.attributes){this._parseNodeAttributeAnnotations(element,annote,list);if(this.prepElement)this.prepElement(element)}if(annote.bindings.length||annote.events.length||annote.id)list.push(annote);return annote},_parseChildNodesAnnotations:function(root,annote,list,stripWhiteSpace){if(root.firstChild){var node=root.firstChild;var i=0;while(node){var next=node.nextSibling;if(node.localName==="template"&&!node.hasAttribute("preserve-content"))this._parseTemplate(node,
i,list,annote,stripWhiteSpace);if(node.localName=="slot")node=this._replaceSlotWithContent(node);if(node.nodeType===Node.TEXT_NODE){var n=next;while(n&&n.nodeType===Node.TEXT_NODE){node.textContent+=n.textContent;next=n.nextSibling;root.removeChild(n);n=next}if(stripWhiteSpace&&!node.textContent.trim()){root.removeChild(node);i--}}if(node.parentNode){var childAnnotation=this._parseNodeAnnotations(node,list,stripWhiteSpace);if(childAnnotation){childAnnotation.parent=annote;childAnnotation.index=i}}node=
next;i++}}},_select$Attr:function(){var div=document.createElement("div");div.innerHTML="<div select$>";return div.childNodes[0].attributes.getNamedItem("select$")}(),_replaceSlotWithContent:function(slot){var content=slot.ownerDocument.createElement("content");while(slot.firstChild)content.appendChild(slot.firstChild);var attrs=slot.attributes;for(var i=0;i<attrs.length;i++)content.attributes.setNamedItem(attrs[i].cloneNode());var name=slot.getAttribute("name");if(name)content.setAttribute("select",
"[slot='"+name+"']");var name$Value=slot.getAttribute("name$");if(name$Value){var select$Attr=this._select$Attr.cloneNode();select$Attr.value="[slot='"+name$Value+"']";content.attributes.setNamedItem(select$Attr)}slot.parentNode.replaceChild(content,slot);return content},_parseTemplate:function(node,index,list,parent,stripWhiteSpace){var content=document.createDocumentFragment();content._notes=this.parseAnnotations(node,stripWhiteSpace);content.appendChild(node.content);list.push({bindings:Polymer.nar,
events:Polymer.nar,templateContent:content,parent:parent,index:index})},_parseNodeAttributeAnnotations:function(node,annotation){var attrs=Array.prototype.slice.call(node.attributes);for(var i=attrs.length-1,a;a=attrs[i];i--){var n=a.name;var v=a.value;var b;if(n.slice(0,3)==="on-"){node.removeAttribute(n);annotation.events.push({name:n.slice(3),value:v})}else if(b=this._parseNodeAttributeAnnotation(node,n,v))annotation.bindings.push(b);else if(n==="id")annotation.id=v}},_parseNodeAttributeAnnotation:function(node,
name,value){var parts=this._parseBindings(value);if(parts){var origName=name;var kind="property";if(name[name.length-1]=="$"){name=name.slice(0,-1);kind="attribute"}var literal=this._literalFromParts(parts);if(literal&&kind=="attribute")node.setAttribute(name,literal);if(node.localName==="input"&&origName==="value")node.setAttribute(origName,"");if(disableUpgradeEnabled&&origName==="disable-upgrade$")node.setAttribute(name,"");node.removeAttribute(origName);var propertyName=Polymer.CaseMap.dashToCamelCase(name);
if(kind==="property")name=propertyName;return{kind:kind,name:name,propertyName:propertyName,parts:parts,literal:literal,isCompound:parts.length!==1}}},findAnnotatedNode:function(root,annote){var parent=annote.parent&&Polymer.Annotations.findAnnotatedNode(root,annote.parent);if(parent)for(var n=parent.firstChild,i=0;n;n=n.nextSibling){if(annote.index===i++)return n}else return root}}})();
Polymer.Path={root:function(path){var dotIndex=path.indexOf(".");if(dotIndex===-1)return path;return path.slice(0,dotIndex)},isDeep:function(path){return path.indexOf(".")!==-1},isAncestor:function(base,path){return base.indexOf(path+".")===0},isDescendant:function(base,path){return path.indexOf(base+".")===0},translate:function(base,newBase,path){return newBase+path.slice(base.length)},matches:function(base,wildcard,path){return base===path||this.isAncestor(base,path)||Boolean(wildcard)&&this.isDescendant(base,
path)}};
Polymer.Base._addFeature({_prepAnnotations:function(){if(!this._template)this._notes=[];else{var self=this;Polymer.Annotations.prepElement=function(element){self._prepElement(element)};if(this._template._content&&this._template._content._notes)this._notes=this._template._content._notes;else{this._notes=Polymer.Annotations.parseAnnotations(this._template);this._processAnnotations(this._notes)}Polymer.Annotations.prepElement=null}},_processAnnotations:function(notes){for(var i=0;i<notes.length;i++){var note=notes[i];
for(var j=0;j<note.bindings.length;j++){var b=note.bindings[j];for(var k=0;k<b.parts.length;k++){var p=b.parts[k];if(!p.literal){var signature=this._parseMethod(p.value);if(signature)p.signature=signature;else p.model=Polymer.Path.root(p.value)}}}if(note.templateContent){this._processAnnotations(note.templateContent._notes);var pp=note.templateContent._parentProps=this._discoverTemplateParentProps(note.templateContent._notes);var bindings=[];for(var prop in pp){var name="_parent_"+prop;bindings.push({index:note.index,
kind:"property",name:name,propertyName:name,parts:[{mode:"{",model:prop,value:prop}]})}note.bindings=note.bindings.concat(bindings)}}},_discoverTemplateParentProps:function(notes){var pp={};for(var i=0,n;i<notes.length&&(n=notes[i]);i++){for(var j=0,b$=n.bindings,b;j<b$.length&&(b=b$[j]);j++)for(var k=0,p$=b.parts,p;k<p$.length&&(p=p$[k]);k++)if(p.signature){var args=p.signature.args;for(var kk=0;kk<args.length;kk++){var model=args[kk].model;if(model)pp[model]=true}if(p.signature.dynamicFn)pp[p.signature.method]=
true}else if(p.model)pp[p.model]=true;if(n.templateContent){var tpp=n.templateContent._parentProps;Polymer.Base.mixin(pp,tpp)}}return pp},_prepElement:function(element){Polymer.ResolveUrl.resolveAttrs(element,this._template.ownerDocument)},_findAnnotatedNode:Polymer.Annotations.findAnnotatedNode,_marshalAnnotationReferences:function(){if(this._template){this._marshalIdNodes();this._marshalAnnotatedNodes();this._marshalAnnotatedListeners()}},_configureAnnotationReferences:function(){var notes=this._notes||
[];var nodes=this._nodes;for(var i=0;i<notes.length;i++){var note=notes[i];var node=nodes[i];this._configureTemplateContent(note,node);this._configureCompoundBindings(note,node)}},_configureTemplateContent:function(note,node){if(note.templateContent)node._content=note.templateContent},_configureCompoundBindings:function(note,node){var bindings=note.bindings;for(var i=0;i<bindings.length;i++){var binding=bindings[i];if(binding.isCompound){var storage=node.__compoundStorage__||(node.__compoundStorage__=
{});var parts=binding.parts;var literals=new Array(parts.length);for(var j=0;j<parts.length;j++)literals[j]=parts[j].literal;var name=binding.name;storage[name]=literals;if(binding.literal&&binding.kind=="property")if(node._configValue)node._configValue(name,binding.literal);else node[name]=binding.literal}}},_marshalIdNodes:function(){this.$={};for(var i=0,l=this._notes.length,a;i<l&&(a=this._notes[i]);i++)if(a.id)this.$[a.id]=this._findAnnotatedNode(this.root,a)},_marshalAnnotatedNodes:function(){if(this._notes&&
this._notes.length){var r=new Array(this._notes.length);for(var i=0;i<this._notes.length;i++)r[i]=this._findAnnotatedNode(this.root,this._notes[i]);this._nodes=r}},_marshalAnnotatedListeners:function(){for(var i=0,l=this._notes.length,a;i<l&&(a=this._notes[i]);i++)if(a.events&&a.events.length){var node=this._findAnnotatedNode(this.root,a);for(var j=0,e$=a.events,e;j<e$.length&&(e=e$[j]);j++)this.listen(node,e.name,e.value)}}});
Polymer.Base._addFeature({listeners:{},_listenListeners:function(listeners){var node,name,eventName;for(eventName in listeners){if(eventName.indexOf(".")<0){node=this;name=eventName}else{name=eventName.split(".");node=this.$[name[0]];name=name[1]}this.listen(node,name,listeners[eventName])}},listen:function(node,eventName,methodName){var handler=this._recallEventHandler(this,eventName,node,methodName);if(!handler)handler=this._createEventHandler(node,eventName,methodName);if(handler._listening)return;
this._listen(node,eventName,handler);handler._listening=true},_boundListenerKey:function(eventName,methodName){return eventName+":"+methodName},_recordEventHandler:function(host,eventName,target,methodName,handler){var hbl=host.__boundListeners;if(!hbl)hbl=host.__boundListeners=new WeakMap;var bl=hbl.get(target);if(!bl){bl={};if(!Polymer.Settings.isIE||target!=window)hbl.set(target,bl)}var key=this._boundListenerKey(eventName,methodName);bl[key]=handler},_recallEventHandler:function(host,eventName,
target,methodName){var hbl=host.__boundListeners;if(!hbl)return;var bl=hbl.get(target);if(!bl)return;var key=this._boundListenerKey(eventName,methodName);return bl[key]},_createEventHandler:function(node,eventName,methodName){var host=this;var handler=function(e){if(host[methodName])host[methodName](e,e.detail);else host._warn(host._logf("_createEventHandler","listener method `"+methodName+"` not defined"))};handler._listening=false;this._recordEventHandler(host,eventName,node,methodName,handler);
return handler},unlisten:function(node,eventName,methodName){var handler=this._recallEventHandler(this,eventName,node,methodName);if(handler){this._unlisten(node,eventName,handler);handler._listening=false}},_listen:function(node,eventName,handler){node.addEventListener(eventName,handler)},_unlisten:function(node,eventName,handler){node.removeEventListener(eventName,handler)}});
(function(){var wrap=Polymer.DomApi.wrap;var HAS_NATIVE_TA=typeof document.head.style.touchAction==="string";var GESTURE_KEY="__polymerGestures";var HANDLED_OBJ="__polymerGesturesHandled";var TOUCH_ACTION="__polymerGesturesTouchAction";var TAP_DISTANCE=25;var TRACK_DISTANCE=5;var TRACK_LENGTH=2;var MOUSE_TIMEOUT=2500;var MOUSE_EVENTS=["mousedown","mousemove","mouseup","click"];var MOUSE_WHICH_TO_BUTTONS=[0,1,4,2];var MOUSE_HAS_BUTTONS=function(){try{return(new MouseEvent("test",{buttons:1})).buttons===
1}catch(e){return false}}();function isMouseEvent(name){return MOUSE_EVENTS.indexOf(name)>-1}var SUPPORTS_PASSIVE=false;(function(){try{var opts=Object.defineProperty({},"passive",{get:function(){SUPPORTS_PASSIVE=true}});window.addEventListener("test",null,opts);window.removeEventListener("test",null,opts)}catch(e){}})();function PASSIVE_TOUCH(eventName){if(isMouseEvent(eventName)||eventName==="touchend")return;if(HAS_NATIVE_TA&&SUPPORTS_PASSIVE&&Polymer.Settings.passiveTouchGestures)return{passive:true}}
var IS_TOUCH_ONLY=navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);var mouseCanceller=function(mouseEvent){var sc=mouseEvent.sourceCapabilities;if(sc&&!sc.firesTouchEvents)return;mouseEvent[HANDLED_OBJ]={skip:true};if(mouseEvent.type==="click"){var path=Polymer.dom(mouseEvent).path;if(path)for(var i=0;i<path.length;i++)if(path[i]===POINTERSTATE.mouse.target)return;mouseEvent.preventDefault();mouseEvent.stopPropagation()}};function setupTeardownMouseCanceller(setup){var events=IS_TOUCH_ONLY?["click"]:
MOUSE_EVENTS;for(var i=0,en;i<events.length;i++){en=events[i];if(setup)document.addEventListener(en,mouseCanceller,true);else document.removeEventListener(en,mouseCanceller,true)}}function ignoreMouse(ev){if(!POINTERSTATE.mouse.mouseIgnoreJob)setupTeardownMouseCanceller(true);var unset=function(){setupTeardownMouseCanceller();POINTERSTATE.mouse.target=null;POINTERSTATE.mouse.mouseIgnoreJob=null};POINTERSTATE.mouse.target=Polymer.dom(ev).rootTarget;POINTERSTATE.mouse.mouseIgnoreJob=Polymer.Debounce(POINTERSTATE.mouse.mouseIgnoreJob,
unset,MOUSE_TIMEOUT)}function hasLeftMouseButton(ev){var type=ev.type;if(!isMouseEvent(type))return false;if(type==="mousemove"){var buttons=ev.buttons===undefined?1:ev.buttons;if(ev instanceof window.MouseEvent&&!MOUSE_HAS_BUTTONS)buttons=MOUSE_WHICH_TO_BUTTONS[ev.which]||0;return Boolean(buttons&1)}else{var button=ev.button===undefined?0:ev.button;return button===0}}function isSyntheticClick(ev){if(ev.type==="click"){if(ev.detail===0)return true;var t=Gestures.findOriginalTarget(ev);var bcr=t.getBoundingClientRect();
var x=ev.pageX,y=ev.pageY;return!(x>=bcr.left&&x<=bcr.right&&(y>=bcr.top&&y<=bcr.bottom))}return false}var POINTERSTATE={mouse:{target:null,mouseIgnoreJob:null},touch:{x:0,y:0,id:-1,scrollDecided:false}};function firstTouchAction(ev){var path=Polymer.dom(ev).path;var ta="auto";for(var i=0,n;i<path.length;i++){n=path[i];if(n[TOUCH_ACTION]){ta=n[TOUCH_ACTION];break}}return ta}function trackDocument(stateObj,movefn,upfn){stateObj.movefn=movefn;stateObj.upfn=upfn;document.addEventListener("mousemove",
movefn);document.addEventListener("mouseup",upfn)}function untrackDocument(stateObj){document.removeEventListener("mousemove",stateObj.movefn);document.removeEventListener("mouseup",stateObj.upfn);stateObj.movefn=null;stateObj.upfn=null}document.addEventListener("touchend",ignoreMouse,SUPPORTS_PASSIVE?{passive:true}:false);var Gestures={gestures:{},recognizers:[],deepTargetFind:function(x,y){var node=document.elementFromPoint(x,y);var next=node;while(next&&next.shadowRoot){var oldNext=next;next=next.shadowRoot.elementFromPoint(x,
y);if(oldNext===next)break;if(next)node=next}return node},findOriginalTarget:function(ev){if(ev.path)return ev.path[0];return ev.target},handleNative:function(ev){var handled;var type=ev.type;var node=wrap(ev.currentTarget);var gobj=node[GESTURE_KEY];if(!gobj)return;var gs=gobj[type];if(!gs)return;if(!ev[HANDLED_OBJ]){ev[HANDLED_OBJ]={};if(type.slice(0,5)==="touch"){var t=ev.changedTouches[0];if(type==="touchstart")if(ev.touches.length===1)POINTERSTATE.touch.id=t.identifier;if(POINTERSTATE.touch.id!==
t.identifier)return;if(!HAS_NATIVE_TA)if(type==="touchstart"||type==="touchmove")Gestures.handleTouchAction(ev)}}handled=ev[HANDLED_OBJ];if(handled.skip)return;var recognizers=Gestures.recognizers;for(var i=0,r;i<recognizers.length;i++){r=recognizers[i];if(gs[r.name]&&!handled[r.name])if(r.flow&&r.flow.start.indexOf(ev.type)>-1&&r.reset)r.reset()}for(i=0,r;i<recognizers.length;i++){r=recognizers[i];if(gs[r.name]&&!handled[r.name]){handled[r.name]=true;r[type](ev)}}},handleTouchAction:function(ev){var t=
ev.changedTouches[0];var type=ev.type;if(type==="touchstart"){POINTERSTATE.touch.x=t.clientX;POINTERSTATE.touch.y=t.clientY;POINTERSTATE.touch.scrollDecided=false}else if(type==="touchmove"){if(POINTERSTATE.touch.scrollDecided)return;POINTERSTATE.touch.scrollDecided=true;var ta=firstTouchAction(ev);var prevent=false;var dx=Math.abs(POINTERSTATE.touch.x-t.clientX);var dy=Math.abs(POINTERSTATE.touch.y-t.clientY);if(!ev.cancelable);else if(ta==="none")prevent=true;else if(ta==="pan-x")prevent=dy>dx;
else if(ta==="pan-y")prevent=dx>dy;if(prevent)ev.preventDefault();else Gestures.prevent("track")}},add:function(node,evType,handler){node=wrap(node);var recognizer=this.gestures[evType];var deps=recognizer.deps;var name=recognizer.name;var gobj=node[GESTURE_KEY];if(!gobj)node[GESTURE_KEY]=gobj={};for(var i=0,dep,gd;i<deps.length;i++){dep=deps[i];if(IS_TOUCH_ONLY&&isMouseEvent(dep)&&dep!=="click")continue;gd=gobj[dep];if(!gd)gobj[dep]=gd={_count:0};if(gd._count===0)node.addEventListener(dep,this.handleNative,
PASSIVE_TOUCH(dep));gd[name]=(gd[name]||0)+1;gd._count=(gd._count||0)+1}node.addEventListener(evType,handler);if(recognizer.touchAction)this.setTouchAction(node,recognizer.touchAction)},remove:function(node,evType,handler){node=wrap(node);var recognizer=this.gestures[evType];var deps=recognizer.deps;var name=recognizer.name;var gobj=node[GESTURE_KEY];if(gobj)for(var i=0,dep,gd;i<deps.length;i++){dep=deps[i];gd=gobj[dep];if(gd&&gd[name]){gd[name]=(gd[name]||1)-1;gd._count=(gd._count||1)-1;if(gd._count===
0)node.removeEventListener(dep,this.handleNative,PASSIVE_TOUCH(dep))}}node.removeEventListener(evType,handler)},register:function(recog){this.recognizers.push(recog);for(var i=0;i<recog.emits.length;i++)this.gestures[recog.emits[i]]=recog},findRecognizerByEvent:function(evName){for(var i=0,r;i<this.recognizers.length;i++){r=this.recognizers[i];for(var j=0,n;j<r.emits.length;j++){n=r.emits[j];if(n===evName)return r}}return null},setTouchAction:function(node,value){if(HAS_NATIVE_TA)node.style.touchAction=
value;node[TOUCH_ACTION]=value},fire:function(target,type,detail){var ev=Polymer.Base.fire(type,detail,{node:target,bubbles:true,cancelable:true});if(ev.defaultPrevented){var preventer=detail.preventer||detail.sourceEvent;if(preventer&&preventer.preventDefault)preventer.preventDefault()}},prevent:function(evName){var recognizer=this.findRecognizerByEvent(evName);if(recognizer.info)recognizer.info.prevent=true},resetMouseCanceller:function(){if(POINTERSTATE.mouse.mouseIgnoreJob)POINTERSTATE.mouse.mouseIgnoreJob.complete()}};
Gestures.register({name:"downup",deps:["mousedown","touchstart","touchend"],flow:{start:["mousedown","touchstart"],end:["mouseup","touchend"]},emits:["down","up"],info:{movefn:null,upfn:null},reset:function(){untrackDocument(this.info)},mousedown:function(e){if(!hasLeftMouseButton(e))return;var t=Gestures.findOriginalTarget(e);var self=this;var movefn=function movefn(e){if(!hasLeftMouseButton(e)){self.fire("up",t,e);untrackDocument(self.info)}};var upfn=function upfn(e){if(hasLeftMouseButton(e))self.fire("up",
t,e);untrackDocument(self.info)};trackDocument(this.info,movefn,upfn);this.fire("down",t,e)},touchstart:function(e){this.fire("down",Gestures.findOriginalTarget(e),e.changedTouches[0],e)},touchend:function(e){this.fire("up",Gestures.findOriginalTarget(e),e.changedTouches[0],e)},fire:function(type,target,event,preventer){Gestures.fire(target,type,{x:event.clientX,y:event.clientY,sourceEvent:event,preventer:preventer,prevent:function(e){return Gestures.prevent(e)}})}});Gestures.register({name:"track",
touchAction:"none",deps:["mousedown","touchstart","touchmove","touchend"],flow:{start:["mousedown","touchstart"],end:["mouseup","touchend"]},emits:["track"],info:{x:0,y:0,state:"start",started:false,moves:[],addMove:function(move){if(this.moves.length>TRACK_LENGTH)this.moves.shift();this.moves.push(move)},movefn:null,upfn:null,prevent:false},reset:function(){this.info.state="start";this.info.started=false;this.info.moves=[];this.info.x=0;this.info.y=0;this.info.prevent=false;untrackDocument(this.info)},
hasMovedEnough:function(x,y){if(this.info.prevent)return false;if(this.info.started)return true;var dx=Math.abs(this.info.x-x);var dy=Math.abs(this.info.y-y);return dx>=TRACK_DISTANCE||dy>=TRACK_DISTANCE},mousedown:function(e){if(!hasLeftMouseButton(e))return;var t=Gestures.findOriginalTarget(e);var self=this;var movefn=function movefn(e){var x=e.clientX,y=e.clientY;if(self.hasMovedEnough(x,y)){self.info.state=self.info.started?e.type==="mouseup"?"end":"track":"start";if(self.info.state==="start")Gestures.prevent("tap");
self.info.addMove({x:x,y:y});if(!hasLeftMouseButton(e)){self.info.state="end";untrackDocument(self.info)}self.fire(t,e);self.info.started=true}};var upfn=function upfn(e){if(self.info.started)movefn(e);untrackDocument(self.info)};trackDocument(this.info,movefn,upfn);this.info.x=e.clientX;this.info.y=e.clientY},touchstart:function(e){var ct=e.changedTouches[0];this.info.x=ct.clientX;this.info.y=ct.clientY},touchmove:function(e){var t=Gestures.findOriginalTarget(e);var ct=e.changedTouches[0];var x=
ct.clientX,y=ct.clientY;if(this.hasMovedEnough(x,y)){if(this.info.state==="start")Gestures.prevent("tap");this.info.addMove({x:x,y:y});this.fire(t,ct);this.info.state="track";this.info.started=true}},touchend:function(e){var t=Gestures.findOriginalTarget(e);var ct=e.changedTouches[0];if(this.info.started){this.info.state="end";this.info.addMove({x:ct.clientX,y:ct.clientY});this.fire(t,ct,e)}},fire:function(target,touch,preventer){var secondlast=this.info.moves[this.info.moves.length-2];var lastmove=
this.info.moves[this.info.moves.length-1];var dx=lastmove.x-this.info.x;var dy=lastmove.y-this.info.y;var ddx,ddy=0;if(secondlast){ddx=lastmove.x-secondlast.x;ddy=lastmove.y-secondlast.y}return Gestures.fire(target,"track",{state:this.info.state,x:touch.clientX,y:touch.clientY,dx:dx,dy:dy,ddx:ddx,ddy:ddy,sourceEvent:touch,preventer:preventer,hover:function(){return Gestures.deepTargetFind(touch.clientX,touch.clientY)}})}});Gestures.register({name:"tap",deps:["mousedown","click","touchstart","touchend"],
flow:{start:["mousedown","touchstart"],end:["click","touchend"]},emits:["tap"],info:{x:NaN,y:NaN,prevent:false},reset:function(){this.info.x=NaN;this.info.y=NaN;this.info.prevent=false},save:function(e){this.info.x=e.clientX;this.info.y=e.clientY},mousedown:function(e){if(hasLeftMouseButton(e))this.save(e)},click:function(e){if(hasLeftMouseButton(e))this.forward(e)},touchstart:function(e){this.save(e.changedTouches[0],e)},touchend:function(e){this.forward(e.changedTouches[0],e)},forward:function(e,
preventer){var dx=Math.abs(e.clientX-this.info.x);var dy=Math.abs(e.clientY-this.info.y);var t=Gestures.findOriginalTarget(e);if(isNaN(dx)||isNaN(dy)||dx<=TAP_DISTANCE&&dy<=TAP_DISTANCE||isSyntheticClick(e))if(!this.info.prevent)Gestures.fire(t,"tap",{x:e.clientX,y:e.clientY,sourceEvent:e,preventer:preventer})}});var DIRECTION_MAP={x:"pan-x",y:"pan-y",none:"none",all:"auto"};Polymer.Base._addFeature({_setupGestures:function(){this.__polymerGestures=null},_listen:function(node,eventName,handler){if(Gestures.gestures[eventName])Gestures.add(node,
eventName,handler);else node.addEventListener(eventName,handler)},_unlisten:function(node,eventName,handler){if(Gestures.gestures[eventName])Gestures.remove(node,eventName,handler);else node.removeEventListener(eventName,handler)},setScrollDirection:function(direction,node){node=node||this;Gestures.setTouchAction(node,DIRECTION_MAP[direction]||"auto")}});Polymer.Gestures=Gestures})();
(function(){Polymer.Base._addFeature({$$:function(slctr){return Polymer.dom(this.root).querySelector(slctr)},toggleClass:function(name,bool,node){node=node||this;if(arguments.length==1)bool=!node.classList.contains(name);if(bool)Polymer.dom(node).classList.add(name);else Polymer.dom(node).classList.remove(name)},toggleAttribute:function(name,bool,node){node=node||this;if(arguments.length==1)bool=!node.hasAttribute(name);if(bool)Polymer.dom(node).setAttribute(name,"");else Polymer.dom(node).removeAttribute(name)},
classFollows:function(name,toElement,fromElement){if(fromElement)Polymer.dom(fromElement).classList.remove(name);if(toElement)Polymer.dom(toElement).classList.add(name)},attributeFollows:function(name,toElement,fromElement){if(fromElement)Polymer.dom(fromElement).removeAttribute(name);if(toElement)Polymer.dom(toElement).setAttribute(name,"")},getEffectiveChildNodes:function(){return Polymer.dom(this).getEffectiveChildNodes()},getEffectiveChildren:function(){var list=Polymer.dom(this).getEffectiveChildNodes();
return list.filter(function(n){return n.nodeType===Node.ELEMENT_NODE})},getEffectiveTextContent:function(){var cn=this.getEffectiveChildNodes();var tc=[];for(var i=0,c;c=cn[i];i++)if(c.nodeType!==Node.COMMENT_NODE)tc.push(Polymer.dom(c).textContent);return tc.join("")},queryEffectiveChildren:function(slctr){var e$=Polymer.dom(this).queryDistributedElements(slctr);return e$&&e$[0]},queryAllEffectiveChildren:function(slctr){return Polymer.dom(this).queryDistributedElements(slctr)},getContentChildNodes:function(slctr){var content=
Polymer.dom(this.root).querySelector(slctr||"content");return content?Polymer.dom(content).getDistributedNodes():[]},getContentChildren:function(slctr){return this.getContentChildNodes(slctr).filter(function(n){return n.nodeType===Node.ELEMENT_NODE})},fire:function(type,detail,options){options=options||Polymer.nob;var node=options.node||this;detail=detail===null||detail===undefined?{}:detail;var bubbles=options.bubbles===undefined?true:options.bubbles;var cancelable=Boolean(options.cancelable);var useCache=
options._useCache;var event=this._getEvent(type,bubbles,cancelable,useCache);event.detail=detail;if(useCache)this.__eventCache[type]=null;node.dispatchEvent(event);if(useCache)this.__eventCache[type]=event;return event},__eventCache:{},_getEvent:function(type,bubbles,cancelable,useCache){var event=useCache&&this.__eventCache[type];if(!event||(event.bubbles!=bubbles||event.cancelable!=cancelable))event=new Event(type,{bubbles:Boolean(bubbles),cancelable:cancelable});return event},async:function(callback,
waitTime){var self=this;return Polymer.Async.run(function(){callback.call(self)},waitTime)},cancelAsync:function(handle){Polymer.Async.cancel(handle)},arrayDelete:function(path,item){var index;if(Array.isArray(path)){index=path.indexOf(item);if(index>=0)return path.splice(index,1)}else{var arr=this._get(path);index=arr.indexOf(item);if(index>=0)return this.splice(path,index,1)}},transform:function(transform,node){node=node||this;node.style.webkitTransform=transform;node.style.transform=transform},
translate3d:function(x,y,z,node){node=node||this;this.transform("translate3d("+x+","+y+","+z+")",node)},importHref:function(href,onload,onerror,optAsync){var link=document.createElement("link");link.rel="import";link.href=href;var list=Polymer.Base.importHref.imported=Polymer.Base.importHref.imported||{};var cached=list[link.href];var imprt=cached||link;var self=this;var loadListener=function(e){e.target.__firedLoad=true;e.target.removeEventListener("load",loadListener);e.target.removeEventListener("error",
errorListener);return onload.call(self,e)};var errorListener=function(e){e.target.__firedError=true;e.target.removeEventListener("load",loadListener);e.target.removeEventListener("error",errorListener);return onerror.call(self,e)};if(onload)imprt.addEventListener("load",loadListener);if(onerror)imprt.addEventListener("error",errorListener);if(cached){if(cached.__firedLoad)cached.dispatchEvent(new Event("load"));if(cached.__firedError)cached.dispatchEvent(new Event("error"))}else{list[link.href]=link;
optAsync=Boolean(optAsync);if(optAsync)link.setAttribute("async","");document.head.appendChild(link)}return imprt},create:function(tag,props){var elt=document.createElement(tag);if(props)for(var n in props)elt[n]=props[n];return elt},isLightDescendant:function(node){return this!==node&&this.contains(node)&&Polymer.dom(this).getOwnerRoot()===Polymer.dom(node).getOwnerRoot()},isLocalDescendant:function(node){return this.root===Polymer.dom(node).getOwnerRoot()}});if(!Polymer.Settings.useNativeCustomElements){var importHref=
Polymer.Base.importHref;Polymer.Base.importHref=function(href,onload,onerror,optAsync){CustomElements.ready=false;var loadFn=function(e){CustomElements.upgradeDocumentTree(document);CustomElements.ready=true;if(onload)return onload.call(this,e)};return importHref.call(this,href,loadFn,onerror,optAsync)}}})();
Polymer.Bind={prepareModel:function(model){Polymer.Base.mixin(model,this._modelApi)},_modelApi:{_notifyChange:function(source,event,value){value=value===undefined?this[source]:value;event=event||Polymer.CaseMap.camelToDashCase(source)+"-changed";this.fire(event,{value:value},{bubbles:false,cancelable:false,_useCache:Polymer.Settings.eventDataCache||!Polymer.Settings.isIE})},_propertySetter:function(property,value,effects,fromAbove){var old=this.__data__[property];if(old!==value&&(old===old||value===
value)){this.__data__[property]=value;if(typeof value=="object")this._clearPath(property);if(this._propertyChanged)this._propertyChanged(property,value,old);if(effects)this._effectEffects(property,value,effects,old,fromAbove)}return old},__setProperty:function(property,value,quiet,node){node=node||this;var effects=node._propertyEffects&&node._propertyEffects[property];if(effects)node._propertySetter(property,value,effects,quiet);else if(node[property]!==value)node[property]=value},_effectEffects:function(property,
value,effects,old,fromAbove){for(var i=0,l=effects.length,fx;i<l&&(fx=effects[i]);i++)fx.fn.call(this,property,this[property],fx.effect,old,fromAbove)},_clearPath:function(path){for(var prop in this.__data__)if(Polymer.Path.isDescendant(path,prop))this.__data__[prop]=undefined}},ensurePropertyEffects:function(model,property){if(!model._propertyEffects)model._propertyEffects={};var fx=model._propertyEffects[property];if(!fx)fx=model._propertyEffects[property]=[];return fx},addPropertyEffect:function(model,
property,kind,effect){var fx=this.ensurePropertyEffects(model,property);var propEffect={kind:kind,effect:effect,fn:Polymer.Bind["_"+kind+"Effect"]};fx.push(propEffect);return propEffect},createBindings:function(model){var fx$=model._propertyEffects;if(fx$)for(var n in fx$){var fx=fx$[n];fx.sort(this._sortPropertyEffects);this._createAccessors(model,n,fx)}},_sortPropertyEffects:function(){var EFFECT_ORDER={"compute":0,"annotation":1,"annotatedComputation":2,"reflect":3,"notify":4,"observer":5,"complexObserver":6,
"function":7};return function(a,b){return EFFECT_ORDER[a.kind]-EFFECT_ORDER[b.kind]}}(),_createAccessors:function(model,property,effects){var defun={get:function(){return this.__data__[property]}};var setter=function(value){this._propertySetter(property,value,effects)};var info=model.getPropertyInfo&&model.getPropertyInfo(property);if(info&&info.readOnly){if(!info.computed)model["_set"+this.upper(property)]=setter}else defun.set=setter;Object.defineProperty(model,property,defun)},upper:function(name){return name[0].toUpperCase()+
name.substring(1)},_addAnnotatedListener:function(model,index,property,path,event,negated){if(!model._bindListeners)model._bindListeners=[];var fn=this._notedListenerFactory(property,path,Polymer.Path.isDeep(path),negated);var eventName=event||Polymer.CaseMap.camelToDashCase(property)+"-changed";model._bindListeners.push({index:index,property:property,path:path,changedFn:fn,event:eventName})},_isEventBogus:function(e,target){return e.path&&e.path[0]!==target},_notedListenerFactory:function(property,
path,isStructured,negated){return function(target,value,targetPath){if(targetPath){var newPath=Polymer.Path.translate(property,path,targetPath);this._notifyPath(newPath,value)}else{value=target[property];if(negated)value=!value;if(!isStructured)this[path]=value;else if(this.__data__[path]!=value)this.set(path,value)}}},prepareInstance:function(inst){inst.__data__=Object.create(null)},setupBindListeners:function(inst){var b$=inst._bindListeners;for(var i=0,l=b$.length,info;i<l&&(info=b$[i]);i++){var node=
inst._nodes[info.index];this._addNotifyListener(node,inst,info.event,info.changedFn)}},_addNotifyListener:function(element,context,event,changedFn){element.addEventListener(event,function(e){return context._notifyListener(changedFn,e)})}};
Polymer.Base.mixin(Polymer.Bind,{_shouldAddListener:function(effect){return effect.name&&effect.kind!="attribute"&&effect.kind!="text"&&!effect.isCompound&&effect.parts[0].mode==="{"},_annotationEffect:function(source,value,effect){if(source!=effect.value){value=this._get(effect.value);this.__data__[effect.value]=value}this._applyEffectValue(effect,value)},_reflectEffect:function(source,value,effect){this.reflectPropertyToAttribute(source,effect.attribute,value)},_notifyEffect:function(source,value,
effect,old,fromAbove){if(!fromAbove)this._notifyChange(source,effect.event,value)},_functionEffect:function(source,value,fn,old,fromAbove){fn.call(this,source,value,old,fromAbove)},_observerEffect:function(source,value,effect,old){var fn=this[effect.method];if(fn)fn.call(this,value,old);else this._warn(this._logf("_observerEffect","observer method `"+effect.method+"` not defined"))},_complexObserverEffect:function(source,value,effect){var fn=this[effect.method];if(fn){var args=Polymer.Bind._marshalArgs(this.__data__,
effect,source,value);if(args)fn.apply(this,args)}else if(effect.dynamicFn);else this._warn(this._logf("_complexObserverEffect","observer method `"+effect.method+"` not defined"))},_computeEffect:function(source,value,effect){var fn=this[effect.method];if(fn){var args=Polymer.Bind._marshalArgs(this.__data__,effect,source,value);if(args){var computedvalue=fn.apply(this,args);this.__setProperty(effect.name,computedvalue)}}else if(effect.dynamicFn);else this._warn(this._logf("_computeEffect","compute method `"+
effect.method+"` not defined"))},_annotatedComputationEffect:function(source,value,effect){var computedHost=this._rootDataHost||this;var fn=computedHost[effect.method];if(fn){var args=Polymer.Bind._marshalArgs(this.__data__,effect,source,value);if(args){var computedvalue=fn.apply(computedHost,args);this._applyEffectValue(effect,computedvalue)}}else if(effect.dynamicFn);else computedHost._warn(computedHost._logf("_annotatedComputationEffect","compute method `"+effect.method+"` not defined"))},_marshalArgs:function(model,
effect,path,value){var values=[];var args=effect.args;var bailoutEarly=args.length>1||effect.dynamicFn;for(var i=0,l=args.length;i<l;i++){var arg=args[i];var name=arg.name;var v;if(arg.literal)v=arg.value;else if(path===name)v=value;else{v=model[name];if(v===undefined&&arg.structured)v=Polymer.Base._get(name,model)}if(bailoutEarly&&v===undefined)return;if(arg.wildcard){var matches=Polymer.Path.isAncestor(path,name);values[i]={path:matches?path:name,value:matches?value:v,base:v}}else values[i]=v}return values}});
Polymer.Base._addFeature({_addPropertyEffect:function(property,kind,effect){var prop=Polymer.Bind.addPropertyEffect(this,property,kind,effect);prop.pathFn=this["_"+prop.kind+"PathEffect"]},_prepEffects:function(){Polymer.Bind.prepareModel(this);this._addAnnotationEffects(this._notes)},_prepBindings:function(){Polymer.Bind.createBindings(this)},_addPropertyEffects:function(properties){if(properties)for(var p in properties){var prop=properties[p];if(prop.observer)this._addObserverEffect(p,prop.observer);
if(prop.computed){prop.readOnly=true;this._addComputedEffect(p,prop.computed)}if(prop.notify)this._addPropertyEffect(p,"notify",{event:Polymer.CaseMap.camelToDashCase(p)+"-changed"});if(prop.reflectToAttribute){var attr=Polymer.CaseMap.camelToDashCase(p);if(attr[0]==="-")this._warn(this._logf("_addPropertyEffects","Property "+p+" cannot be reflected to attribute "+attr+' because "-" is not a valid starting attribute name. Use a lowercase first letter for the property instead.'));else this._addPropertyEffect(p,
"reflect",{attribute:attr})}if(prop.readOnly)Polymer.Bind.ensurePropertyEffects(this,p)}},_addComputedEffect:function(name,expression){var sig=this._parseMethod(expression);var dynamicFn=sig.dynamicFn;for(var i=0,arg;i<sig.args.length&&(arg=sig.args[i]);i++)this._addPropertyEffect(arg.model,"compute",{method:sig.method,args:sig.args,trigger:arg,name:name,dynamicFn:dynamicFn});if(dynamicFn)this._addPropertyEffect(sig.method,"compute",{method:sig.method,args:sig.args,trigger:null,name:name,dynamicFn:dynamicFn})},
_addObserverEffect:function(property,observer){this._addPropertyEffect(property,"observer",{method:observer,property:property})},_addComplexObserverEffects:function(observers){if(observers)for(var i=0,o;i<observers.length&&(o=observers[i]);i++)this._addComplexObserverEffect(o)},_addComplexObserverEffect:function(observer){var sig=this._parseMethod(observer);if(!sig)throw new Error("Malformed observer expression '"+observer+"'");var dynamicFn=sig.dynamicFn;for(var i=0,arg;i<sig.args.length&&(arg=sig.args[i]);i++)this._addPropertyEffect(arg.model,
"complexObserver",{method:sig.method,args:sig.args,trigger:arg,dynamicFn:dynamicFn});if(dynamicFn)this._addPropertyEffect(sig.method,"complexObserver",{method:sig.method,args:sig.args,trigger:null,dynamicFn:dynamicFn})},_addAnnotationEffects:function(notes){for(var i=0,note;i<notes.length&&(note=notes[i]);i++){var b$=note.bindings;for(var j=0,binding;j<b$.length&&(binding=b$[j]);j++)this._addAnnotationEffect(binding,i)}},_addAnnotationEffect:function(note,index){if(Polymer.Bind._shouldAddListener(note))Polymer.Bind._addAnnotatedListener(this,
index,note.name,note.parts[0].value,note.parts[0].event,note.parts[0].negate);for(var i=0;i<note.parts.length;i++){var part=note.parts[i];if(part.signature)this._addAnnotatedComputationEffect(note,part,index);else if(!part.literal)if(note.kind==="attribute"&&note.name[0]==="-")this._warn(this._logf("_addAnnotationEffect","Cannot set attribute "+note.name+' because "-" is not a valid attribute starting character'));else this._addPropertyEffect(part.model,"annotation",{kind:note.kind,index:index,name:note.name,
propertyName:note.propertyName,value:part.value,isCompound:note.isCompound,compoundIndex:part.compoundIndex,event:part.event,customEvent:part.customEvent,negate:part.negate})}},_addAnnotatedComputationEffect:function(note,part,index){var sig=part.signature;if(sig["static"])this.__addAnnotatedComputationEffect("__static__",index,note,part,null);else{for(var i=0,arg;i<sig.args.length&&(arg=sig.args[i]);i++)if(!arg.literal)this.__addAnnotatedComputationEffect(arg.model,index,note,part,arg);if(sig.dynamicFn)this.__addAnnotatedComputationEffect(sig.method,
index,note,part,null)}},__addAnnotatedComputationEffect:function(property,index,note,part,trigger){this._addPropertyEffect(property,"annotatedComputation",{index:index,isCompound:note.isCompound,compoundIndex:part.compoundIndex,kind:note.kind,name:note.name,negate:part.negate,method:part.signature.method,args:part.signature.args,trigger:trigger,dynamicFn:part.signature.dynamicFn})},_parseMethod:function(expression){var m=expression.match(/([^\s]+?)\(([\s\S]*)\)/);if(m){var sig={method:m[1],"static":true};
if(this.getPropertyInfo(sig.method)!==Polymer.nob){sig["static"]=false;sig.dynamicFn=true}if(m[2].trim()){var args=m[2].replace(/\\,/g,"&comma;").split(",");return this._parseArgs(args,sig)}else{sig.args=Polymer.nar;return sig}}},_parseArgs:function(argList,sig){sig.args=argList.map(function(rawArg){var arg=this._parseArg(rawArg);if(!arg.literal)sig["static"]=false;return arg},this);return sig},_parseArg:function(rawArg){var arg=rawArg.trim().replace(/&comma;/g,",").replace(/\\(.)/g,"$1");var a={name:arg};
var fc=arg[0];if(fc==="-")fc=arg[1];if(fc>="0"&&fc<="9")fc="#";switch(fc){case "'":case '"':a.value=arg.slice(1,-1);a.literal=true;break;case "#":a.value=Number(arg);a.literal=true;break}if(!a.literal){a.model=Polymer.Path.root(arg);a.structured=Polymer.Path.isDeep(arg);if(a.structured){a.wildcard=arg.slice(-2)==".*";if(a.wildcard)a.name=arg.slice(0,-2)}}return a},_marshalInstanceEffects:function(){Polymer.Bind.prepareInstance(this);if(this._bindListeners)Polymer.Bind.setupBindListeners(this)},_applyEffectValue:function(info,
value){var node=this._nodes[info.index];var property=info.name;value=this._computeFinalAnnotationValue(node,property,value,info);if(info.kind=="attribute")this.serializeValueToAttribute(value,property,node);else{var pinfo=node._propertyInfo&&node._propertyInfo[property];if(pinfo&&pinfo.readOnly)return;this.__setProperty(property,value,Polymer.Settings.suppressBindingNotifications,node)}},_computeFinalAnnotationValue:function(node,property,value,info){if(info.negate)value=!value;if(info.isCompound){var storage=
node.__compoundStorage__[property];storage[info.compoundIndex]=value;value=storage.join("")}if(info.kind!=="attribute"){if(property==="className")value=this._scopeElementClass(node,value);if(property==="textContent"||node.localName=="input"&&property=="value")value=value==undefined?"":value}return value},_executeStaticEffects:function(){if(this._propertyEffects&&this._propertyEffects.__static__)this._effectEffects("__static__",null,this._propertyEffects.__static__)}});
(function(){var usePolyfillProto=Polymer.Settings.usePolyfillProto;var avoidInstanceProperties=Boolean(Object.getOwnPropertyDescriptor(document.documentElement,"properties"));Polymer.Base._addFeature({_setupConfigure:function(initialConfig){this._config={};this._handlers=[];this._aboveConfig=null;if(initialConfig)for(var i in initialConfig)if(initialConfig[i]!==undefined)this._config[i]=initialConfig[i]},_marshalAttributes:function(){this._takeAttributesToModel(this._config)},_attributeChangedImpl:function(name){var model=
this._clientsReadied?this:this._config;this._setAttributeToProperty(model,name)},_configValue:function(name,value){var info=this._propertyInfo[name];if(!info||!info.readOnly)this._config[name]=value},_beforeClientsReady:function(){this._configure()},_configure:function(){this._configureAnnotationReferences();this._configureInstanceProperties();this._aboveConfig=this.mixin({},this._config);var config={};for(var i=0;i<this.behaviors.length;i++)this._configureProperties(this.behaviors[i].properties,
config);this._configureProperties(avoidInstanceProperties?this.__proto__.properties:this.properties,config);this.mixin(config,this._aboveConfig);this._config=config;if(this._clients&&this._clients.length)this._distributeConfig(this._config)},_configureInstanceProperties:function(){for(var i in this._propertyEffects)if(!usePolyfillProto&&this.hasOwnProperty(i)){this._configValue(i,this[i]);delete this[i]}},_configureProperties:function(properties,config){for(var i in properties){var c=properties[i];
if(c.value!==undefined){var value=c.value;if(typeof value=="function")value=value.call(this,this._config);config[i]=value}}},_distributeConfig:function(config){var fx$=this._propertyEffects;if(fx$)for(var p in config){var fx=fx$[p];if(fx)for(var i=0,l=fx.length,x;i<l&&(x=fx[i]);i++)if(x.kind==="annotation"){var node=this._nodes[x.effect.index];var name=x.effect.propertyName;var isAttr=x.effect.kind=="attribute";var hasEffect=node._propertyEffects&&node._propertyEffects[name];if(node._configValue&&
(hasEffect||!isAttr)){var value=p===x.effect.value?config[p]:this._get(x.effect.value,config);value=this._computeFinalAnnotationValue(node,name,value,x.effect);if(isAttr)value=node.deserialize(this.serialize(value),node._propertyInfo[name].type);node._configValue(name,value)}}}},_afterClientsReady:function(){this.importPath=this._importPath;this.rootPath=Polymer.rootPath;this._executeStaticEffects();this._applyConfig(this._config,this._aboveConfig);this._flushHandlers()},_applyConfig:function(config,
aboveConfig){for(var n in config)if(this[n]===undefined)this.__setProperty(n,config[n],n in aboveConfig)},_notifyListener:function(fn,e){if(!Polymer.Bind._isEventBogus(e,e.target)){var value,path;if(e.detail){value=e.detail.value;path=e.detail.path}if(!this._clientsReadied)this._queueHandler([fn,e.target,value,path]);else return fn.call(this,e.target,value,path)}},_queueHandler:function(args){this._handlers.push(args)},_flushHandlers:function(){var h$=this._handlers;for(var i=0,l=h$.length,h;i<l&&
(h=h$[i]);i++)h[0].call(this,h[1],h[2],h[3]);this._handlers=[]}})})();
(function(){var Path=Polymer.Path;Polymer.Base._addFeature({notifyPath:function(path,value,fromAbove){var info={};var v=this._get(path,this,info);if(arguments.length===1)value=v;if(info.path)this._notifyPath(info.path,value,fromAbove)},_notifyPath:function(path,value,fromAbove){var old=this._propertySetter(path,value);if(old!==value&&(old===old||value===value)){this._pathEffector(path,value);if(!fromAbove)this._notifyPathUp(path,value);return true}},_getPathParts:function(path){if(Array.isArray(path)){var parts=
[];for(var i=0;i<path.length;i++){var args=path[i].toString().split(".");for(var j=0;j<args.length;j++)parts.push(args[j])}return parts}else return path.toString().split(".")},set:function(path,value,root){var prop=root||this;var parts=this._getPathParts(path);var array;var last=parts[parts.length-1];if(parts.length>1){for(var i=0;i<parts.length-1;i++){var part=parts[i];if(array&&part[0]=="#")prop=Polymer.Collection.get(array).getItem(part);else{prop=prop[part];if(array&&parseInt(part,10)==part)parts[i]=
Polymer.Collection.get(array).getKey(prop)}if(!prop)return;array=Array.isArray(prop)?prop:null}if(array){var coll=Polymer.Collection.get(array);var old,key;if(last[0]=="#"){key=last;old=coll.getItem(key);last=array.indexOf(old);coll.setItem(key,value)}else if(parseInt(last,10)==last){old=prop[last];key=coll.getKey(old);parts[i]=key;coll.setItem(key,value)}}prop[last]=value;if(!root)this._notifyPath(parts.join("."),value)}else prop[path]=value},get:function(path,root){return this._get(path,root)},
_get:function(path,root,info){var prop=root||this;var parts=this._getPathParts(path);var array;for(var i=0;i<parts.length;i++){if(!prop)return;var part=parts[i];if(array&&part[0]=="#")prop=Polymer.Collection.get(array).getItem(part);else{prop=prop[part];if(info&&array&&parseInt(part,10)==part)parts[i]=Polymer.Collection.get(array).getKey(prop)}array=Array.isArray(prop)?prop:null}if(info)info.path=parts.join(".");return prop},_pathEffector:function(path,value){var model=Path.root(path);var fx$=this._propertyEffects&&
this._propertyEffects[model];if(fx$)for(var i=0,fx;i<fx$.length&&(fx=fx$[i]);i++){var fxFn=fx.pathFn;if(fxFn)fxFn.call(this,path,value,fx.effect)}if(this._boundPaths)this._notifyBoundPaths(path,value)},_annotationPathEffect:function(path,value,effect){if(Path.matches(effect.value,false,path))Polymer.Bind._annotationEffect.call(this,path,value,effect);else if(!effect.negate&&Path.isDescendant(effect.value,path)){var node=this._nodes[effect.index];if(node&&node._notifyPath){var newPath=Path.translate(effect.value,
effect.name,path);node._notifyPath(newPath,value,true)}}},_complexObserverPathEffect:function(path,value,effect){if(Path.matches(effect.trigger.name,effect.trigger.wildcard,path))Polymer.Bind._complexObserverEffect.call(this,path,value,effect)},_computePathEffect:function(path,value,effect){if(Path.matches(effect.trigger.name,effect.trigger.wildcard,path))Polymer.Bind._computeEffect.call(this,path,value,effect)},_annotatedComputationPathEffect:function(path,value,effect){if(Path.matches(effect.trigger.name,
effect.trigger.wildcard,path))Polymer.Bind._annotatedComputationEffect.call(this,path,value,effect)},linkPaths:function(to,from){this._boundPaths=this._boundPaths||{};if(from)this._boundPaths[to]=from;else this.unlinkPaths(to)},unlinkPaths:function(path){if(this._boundPaths)delete this._boundPaths[path]},_notifyBoundPaths:function(path,value){for(var a in this._boundPaths){var b=this._boundPaths[a];if(Path.isDescendant(a,path))this._notifyPath(Path.translate(a,b,path),value);else if(Path.isDescendant(b,
path))this._notifyPath(Path.translate(b,a,path),value)}},_notifyPathUp:function(path,value){var rootName=Path.root(path);var dashCaseName=Polymer.CaseMap.camelToDashCase(rootName);var eventName=dashCaseName+this._EVENT_CHANGED;this.fire(eventName,{path:path,value:value},{bubbles:false,_useCache:Polymer.Settings.eventDataCache||!Polymer.Settings.isIE})},_EVENT_CHANGED:"-changed",notifySplices:function(path,splices){var info={};var array=this._get(path,this,info);this._notifySplices(array,info.path,
splices)},_notifySplices:function(array,path,splices){var change={keySplices:Polymer.Collection.applySplices(array,splices),indexSplices:splices};var splicesPath=path+".splices";this._notifyPath(splicesPath,change);this._notifyPath(path+".length",array.length);this.__data__[splicesPath]={keySplices:null,indexSplices:null}},_notifySplice:function(array,path,index,added,removed){this._notifySplices(array,path,[{index:index,addedCount:added,removed:removed,object:array,type:"splice"}])},push:function(path){var info=
{};var array=this._get(path,this,info);var args=Array.prototype.slice.call(arguments,1);var len=array.length;var ret=array.push.apply(array,args);if(args.length)this._notifySplice(array,info.path,len,args.length,[]);return ret},pop:function(path){var info={};var array=this._get(path,this,info);var hadLength=Boolean(array.length);var args=Array.prototype.slice.call(arguments,1);var ret=array.pop.apply(array,args);if(hadLength)this._notifySplice(array,info.path,array.length,0,[ret]);return ret},splice:function(path,
start){var info={};var array=this._get(path,this,info);if(start<0)start=array.length-Math.floor(-start);else start=Math.floor(start);if(!start)start=0;var args=Array.prototype.slice.call(arguments,1);var ret=array.splice.apply(array,args);var addedCount=Math.max(args.length-2,0);if(addedCount||ret.length)this._notifySplice(array,info.path,start,addedCount,ret);return ret},shift:function(path){var info={};var array=this._get(path,this,info);var hadLength=Boolean(array.length);var args=Array.prototype.slice.call(arguments,
1);var ret=array.shift.apply(array,args);if(hadLength)this._notifySplice(array,info.path,0,0,[ret]);return ret},unshift:function(path){var info={};var array=this._get(path,this,info);var args=Array.prototype.slice.call(arguments,1);var ret=array.unshift.apply(array,args);if(args.length)this._notifySplice(array,info.path,0,args.length,[]);return ret},prepareModelNotifyPath:function(model){this.mixin(model,{fire:Polymer.Base.fire,_getEvent:Polymer.Base._getEvent,__eventCache:Polymer.Base.__eventCache,
notifyPath:Polymer.Base.notifyPath,_get:Polymer.Base._get,_EVENT_CHANGED:Polymer.Base._EVENT_CHANGED,_notifyPath:Polymer.Base._notifyPath,_notifyPathUp:Polymer.Base._notifyPathUp,_pathEffector:Polymer.Base._pathEffector,_annotationPathEffect:Polymer.Base._annotationPathEffect,_complexObserverPathEffect:Polymer.Base._complexObserverPathEffect,_annotatedComputationPathEffect:Polymer.Base._annotatedComputationPathEffect,_computePathEffect:Polymer.Base._computePathEffect,_notifyBoundPaths:Polymer.Base._notifyBoundPaths,
_getPathParts:Polymer.Base._getPathParts})}})})();Polymer.Base._addFeature({resolveUrl:function(url){return Polymer.ResolveUrl.resolveUrl(url,this._importPath)}});
Polymer.CssParse=function(){return{parse:function(text){text=this._clean(text);return this._parseCss(this._lex(text),text)},_clean:function(cssText){return cssText.replace(this._rx.comments,"").replace(this._rx.port,"")},_lex:function(text){var root={start:0,end:text.length};var n=root;for(var i=0,l=text.length;i<l;i++)switch(text[i]){case this.OPEN_BRACE:if(!n.rules)n.rules=[];var p=n;var previous=p.rules[p.rules.length-1];n={start:i+1,parent:p,previous:previous};p.rules.push(n);break;case this.CLOSE_BRACE:n.end=
i+1;n=n.parent||root;break}return root},_parseCss:function(node,text){var t=text.substring(node.start,node.end-1);node.parsedCssText=node.cssText=t.trim();if(node.parent){var ss=node.previous?node.previous.end:node.parent.start;t=text.substring(ss,node.start-1);t=this._expandUnicodeEscapes(t);t=t.replace(this._rx.multipleSpaces," ");t=t.substring(t.lastIndexOf(";")+1);var s=node.parsedSelector=node.selector=t.trim();node.atRule=s.indexOf(this.AT_START)===0;if(node.atRule)if(s.indexOf(this.MEDIA_START)===
0)node.type=this.types.MEDIA_RULE;else{if(s.match(this._rx.keyframesRule)){node.type=this.types.KEYFRAMES_RULE;node.keyframesName=node.selector.split(this._rx.multipleSpaces).pop()}}else if(s.indexOf(this.VAR_START)===0)node.type=this.types.MIXIN_RULE;else node.type=this.types.STYLE_RULE}var r$=node.rules;if(r$)for(var i=0,l=r$.length,r;i<l&&(r=r$[i]);i++)this._parseCss(r,text);return node},_expandUnicodeEscapes:function(s){return s.replace(/\\([0-9a-f]{1,6})\s/gi,function(){var code=arguments[1],
repeat=6-code.length;while(repeat--)code="0"+code;return"\\"+code})},stringify:function(node,preserveProperties,text){text=text||"";var cssText="";if(node.cssText||node.rules){var r$=node.rules;if(r$&&!this._hasMixinRules(r$))for(var i=0,l=r$.length,r;i<l&&(r=r$[i]);i++)cssText=this.stringify(r,preserveProperties,cssText);else{cssText=preserveProperties?node.cssText:this.removeCustomProps(node.cssText);cssText=cssText.trim();if(cssText)cssText="  "+cssText+"\n"}}if(cssText){if(node.selector)text+=
node.selector+" "+this.OPEN_BRACE+"\n";text+=cssText;if(node.selector)text+=this.CLOSE_BRACE+"\n\n"}return text},_hasMixinRules:function(rules){return rules[0].selector.indexOf(this.VAR_START)===0},removeCustomProps:function(cssText){cssText=this.removeCustomPropAssignment(cssText);return this.removeCustomPropApply(cssText)},removeCustomPropAssignment:function(cssText){return cssText.replace(this._rx.customProp,"").replace(this._rx.mixinProp,"")},removeCustomPropApply:function(cssText){return cssText.replace(this._rx.mixinApply,
"").replace(this._rx.varApply,"")},types:{STYLE_RULE:1,KEYFRAMES_RULE:7,MEDIA_RULE:4,MIXIN_RULE:1E3},OPEN_BRACE:"{",CLOSE_BRACE:"}",_rx:{comments:/\/\*[^*]*\*+([^\/*][^*]*\*+)*\//gim,port:/@import[^;]*;/gim,customProp:/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,mixinProp:/(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,mixinApply:/@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim,varApply:/[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,keyframesRule:/^@[^\s]*keyframes/,multipleSpaces:/\s+/g},
VAR_START:"--",MEDIA_START:"@media",AT_START:"@"}}();
Polymer.StyleUtil=function(){var settings=Polymer.Settings;return{unscopedStyleImports:new WeakMap,SHADY_UNSCOPED_ATTR:"shady-unscoped",NATIVE_VARIABLES:Polymer.Settings.useNativeCSSProperties,MODULE_STYLES_SELECTOR:"style, link[rel=import][type~=css], template",INCLUDE_ATTR:"include",toCssText:function(rules,callback){if(typeof rules==="string")rules=this.parser.parse(rules);if(callback)this.forEachRule(rules,callback);return this.parser.stringify(rules,this.NATIVE_VARIABLES)},forRulesInStyles:function(styles,
styleRuleCallback,keyframesRuleCallback){if(styles)for(var i=0,l=styles.length,s;i<l&&(s=styles[i]);i++)this.forEachRuleInStyle(s,styleRuleCallback,keyframesRuleCallback)},forActiveRulesInStyles:function(styles,styleRuleCallback,keyframesRuleCallback){if(styles)for(var i=0,l=styles.length,s;i<l&&(s=styles[i]);i++)this.forEachRuleInStyle(s,styleRuleCallback,keyframesRuleCallback,true)},rulesForStyle:function(style){if(!style.__cssRules&&style.textContent)style.__cssRules=this.parser.parse(style.textContent);
return style.__cssRules},isKeyframesSelector:function(rule){return rule.parent&&rule.parent.type===this.ruleTypes.KEYFRAMES_RULE},forEachRuleInStyle:function(style,styleRuleCallback,keyframesRuleCallback,onlyActiveRules){var rules=this.rulesForStyle(style);var styleCallback,keyframeCallback;if(styleRuleCallback)styleCallback=function(rule){styleRuleCallback(rule,style)};if(keyframesRuleCallback)keyframeCallback=function(rule){keyframesRuleCallback(rule,style)};this.forEachRule(rules,styleCallback,
keyframeCallback,onlyActiveRules)},forEachRule:function(node,styleRuleCallback,keyframesRuleCallback,onlyActiveRules){if(!node)return;var skipRules=false;if(onlyActiveRules)if(node.type===this.ruleTypes.MEDIA_RULE){var matchMedia=node.selector.match(this.rx.MEDIA_MATCH);if(matchMedia)if(!window.matchMedia(matchMedia[1]).matches)skipRules=true}if(node.type===this.ruleTypes.STYLE_RULE)styleRuleCallback(node);else if(keyframesRuleCallback&&node.type===this.ruleTypes.KEYFRAMES_RULE)keyframesRuleCallback(node);
else if(node.type===this.ruleTypes.MIXIN_RULE)skipRules=true;var r$=node.rules;if(r$&&!skipRules)for(var i=0,l=r$.length,r;i<l&&(r=r$[i]);i++)this.forEachRule(r,styleRuleCallback,keyframesRuleCallback,onlyActiveRules)},applyCss:function(cssText,moniker,target,contextNode){var style=this.createScopeStyle(cssText,moniker);return this.applyStyle(style,target,contextNode)},applyStyle:function(style,target,contextNode){target=target||document.head;var after=contextNode&&contextNode.nextSibling||target.firstChild;
this.__lastHeadApplyNode=style;return target.insertBefore(style,after)},createScopeStyle:function(cssText,moniker){var style=document.createElement("style");if(moniker)style.setAttribute("scope",moniker);style.textContent=cssText;return style},__lastHeadApplyNode:null,applyStylePlaceHolder:function(moniker){var placeHolder=document.createComment(" Shady DOM styles for "+moniker+" ");var after=this.__lastHeadApplyNode?this.__lastHeadApplyNode.nextSibling:null;var scope=document.head;scope.insertBefore(placeHolder,
after||scope.firstChild);this.__lastHeadApplyNode=placeHolder;return placeHolder},cssFromModules:function(moduleIds,warnIfNotFound){var modules=moduleIds.trim().split(/\s+/);var cssText="";for(var i=0;i<modules.length;i++)cssText+=this.cssFromModule(modules[i],warnIfNotFound);return cssText},cssFromModule:function(moduleId,warnIfNotFound){var m=Polymer.DomModule["import"](moduleId);if(m&&!m._cssText)m._cssText=this.cssFromElement(m);if(!m&&warnIfNotFound)console.warn("Could not find style data in module named",
moduleId);return m&&m._cssText||""},cssFromElement:function(element){var cssText="";var content=element.content||element;var e$=Polymer.TreeApi.arrayCopy(content.querySelectorAll(this.MODULE_STYLES_SELECTOR));for(var i=0,e;i<e$.length;i++){e=e$[i];if(e.localName==="template"){if(!e.hasAttribute("preserve-content"))cssText+=this.cssFromElement(e)}else if(e.localName==="style"){var include=e.getAttribute(this.INCLUDE_ATTR);if(include)cssText+=this.cssFromModules(include,true);e=e.__appliedElement||
e;e.parentNode.removeChild(e);var css=this.resolveCss(e.textContent,element.ownerDocument);if(!settings.useNativeShadow&&e.hasAttribute(this.SHADY_UNSCOPED_ATTR)){e.textContent=css;document.head.insertBefore(e,document.head.firstChild)}else cssText+=css}else if(e["import"]&&e["import"].body){var importCss=this.resolveCss(e["import"].body.textContent,e["import"]);if(!settings.useNativeShadow&&e.hasAttribute(this.SHADY_UNSCOPED_ATTR)){if(!this.unscopedStyleImports.has(e["import"])){this.unscopedStyleImports.set(e["import"],
true);var importStyle=document.createElement("style");importStyle.setAttribute(this.SHADY_UNSCOPED_ATTR,"");importStyle.textContent=importCss;document.head.insertBefore(importStyle,document.head.firstChild)}}else cssText+=importCss}}return cssText},styleIncludesToTemplate:function(targetTemplate){var styles=targetTemplate.content.querySelectorAll("style[include]");for(var i=0,s;i<styles.length;i++){s=styles[i];s.parentNode.insertBefore(this._includesToFragment(s.getAttribute("include")),s)}},_includesToFragment:function(styleIncludes){var includeArray=
styleIncludes.trim().split(" ");var frag=document.createDocumentFragment();for(var i=0;i<includeArray.length;i++){var t=Polymer.DomModule["import"](includeArray[i],"template");if(t)this._addStylesToFragment(frag,t.content)}return frag},_addStylesToFragment:function(frag,source){var s$=source.querySelectorAll("style");for(var i=0,s;i<s$.length;i++){s=s$[i];var include=s.getAttribute("include");if(include)frag.appendChild(this._includesToFragment(include));if(s.textContent)frag.appendChild(s.cloneNode(true))}},
isTargetedBuild:function(buildType){return settings.useNativeShadow?buildType==="shadow":buildType==="shady"},cssBuildTypeForModule:function(module){var dm=Polymer.DomModule["import"](module);if(dm)return this.getCssBuildType(dm)},getCssBuildType:function(element){return element.getAttribute("css-build")},_findMatchingParen:function(text,start){var level=0;for(var i=start,l=text.length;i<l;i++)switch(text[i]){case "(":level++;break;case ")":if(--level===0)return i;break}return-1},processVariableAndFallback:function(str,
callback){var start=str.indexOf("var(");if(start===-1)return callback(str,"","","");var end=this._findMatchingParen(str,start+3);var inner=str.substring(start+4,end);var prefix=str.substring(0,start);var suffix=this.processVariableAndFallback(str.substring(end+1),callback);var comma=inner.indexOf(",");if(comma===-1)return callback(prefix,inner.trim(),"",suffix);var value=inner.substring(0,comma).trim();var fallback=inner.substring(comma+1).trim();return callback(prefix,value,fallback,suffix)},rx:{VAR_ASSIGN:/(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\s}])|$)/gi,
MIXIN_MATCH:/(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi,VAR_CONSUMED:/(--[\w-]+)\s*([:,;)]|$)/gi,ANIMATION_MATCH:/(animation\s*:)|(animation-name\s*:)/,MEDIA_MATCH:/@media[^(]*(\([^)]*\))/,IS_VAR:/^--/,BRACKETED:/\{[^}]*\}/g,HOST_PREFIX:"(?:^|[^.#[:])",HOST_SUFFIX:"($|[.:[\\s>+~])"},resolveCss:Polymer.ResolveUrl.resolveCss,parser:Polymer.CssParse,ruleTypes:Polymer.CssParse.types}}();
Polymer.StyleTransformer=function(){var styleUtil=Polymer.StyleUtil;var settings=Polymer.Settings;var api={dom:function(node,scope,useAttr,shouldRemoveScope){this._transformDom(node,scope||"",useAttr,shouldRemoveScope)},_transformDom:function(node,selector,useAttr,shouldRemoveScope){if(node.setAttribute)this.element(node,selector,useAttr,shouldRemoveScope);var c$=Polymer.dom(node).childNodes;for(var i=0;i<c$.length;i++)this._transformDom(c$[i],selector,useAttr,shouldRemoveScope)},element:function(element,
scope,useAttr,shouldRemoveScope){if(useAttr)if(shouldRemoveScope)element.removeAttribute(SCOPE_NAME);else element.setAttribute(SCOPE_NAME,scope);else if(scope)if(element.classList)if(shouldRemoveScope){element.classList.remove(SCOPE_NAME);element.classList.remove(scope)}else{element.classList.add(SCOPE_NAME);element.classList.add(scope)}else if(element.getAttribute){var c=element.getAttribute(CLASS);if(shouldRemoveScope){if(c)element.setAttribute(CLASS,c.replace(SCOPE_NAME,"").replace(scope,""))}else element.setAttribute(CLASS,
(c?c+" ":"")+SCOPE_NAME+" "+scope)}},elementStyles:function(element,callback){var styles=element._styles;var cssText="";var cssBuildType=element.__cssBuild;var passthrough=settings.useNativeShadow||cssBuildType==="shady";var cb;if(passthrough){var self=this;cb=function(rule){rule.selector=self._slottedToContent(rule.selector);rule.selector=rule.selector.replace(ROOT,":host > *");rule.selector=self._dirShadowTransform(rule.selector);if(callback)callback(rule)}}for(var i=0,l=styles.length,s;i<l&&(s=
styles[i]);i++){var rules=styleUtil.rulesForStyle(s);cssText+=passthrough?styleUtil.toCssText(rules,cb):this.css(rules,element.is,element["extends"],callback,element._scopeCssViaAttr)+"\n\n"}return cssText.trim()},css:function(rules,scope,ext,callback,useAttr){var hostScope=this._calcHostScope(scope,ext);scope=this._calcElementScope(scope,useAttr);var self=this;return styleUtil.toCssText(rules,function(rule){if(!rule.isScoped){self.rule(rule,scope,hostScope);rule.isScoped=true}if(callback)callback(rule,
scope,hostScope)})},_calcElementScope:function(scope,useAttr){if(scope)return useAttr?CSS_ATTR_PREFIX+scope+CSS_ATTR_SUFFIX:CSS_CLASS_PREFIX+scope;else return""},_calcHostScope:function(scope,ext){return ext?"[is="+scope+"]":scope},rule:function(rule,scope,hostScope){this._transformRule(rule,this._transformComplexSelector,scope,hostScope)},_transformRule:function(rule,transformer,scope,hostScope){rule.selector=rule.transformedSelector=this._transformRuleCss(rule,transformer,scope,hostScope)},_splitSelectorList:function(selector){var parts=
[];var part="";for(var i=0;i>=0&&i<selector.length;i++)if(selector[i]==="("){var end=styleUtil._findMatchingParen(selector,i);part+=selector.slice(i,end+1);i=end}else if(selector[i]===COMPLEX_SELECTOR_SEP){parts.push(part);part=""}else part+=selector[i];if(part)parts.push(part);if(parts.length===0)parts.push(selector);return parts},_transformRuleCss:function(rule,transformer,scope,hostScope){var p$=this._splitSelectorList(rule.selector);if(!styleUtil.isKeyframesSelector(rule))for(var i=0,l=p$.length,
p;i<l&&(p=p$[i]);i++)p$[i]=transformer.call(this,p,scope,hostScope);return p$.join(COMPLEX_SELECTOR_SEP)},_ensureScopedDir:function(s){var m=s.match(DIR_PAREN);if(m&&m[1]===""&&m[0].length===s.length)s="*"+s;return s},_additionalDirSelectors:function(dir,after,prefix){if(!dir||!after)return"";prefix=prefix||"";return COMPLEX_SELECTOR_SEP+prefix+" "+dir+" "+after},_transformComplexSelector:function(selector,scope,hostScope){var stop=false;var hostContext=false;var dir=false;var self=this;selector=
selector.trim();selector=this._slottedToContent(selector);selector=selector.replace(ROOT,":host > *");selector=selector.replace(CONTENT_START,HOST+" $1");selector=this._ensureScopedDir(selector);selector=selector.replace(SIMPLE_SELECTOR_SEP,function(m,c,s){if(!stop){var info=self._transformCompoundSelector(s,c,scope,hostScope);stop=stop||info.stop;hostContext=hostContext||info.hostContext;dir=dir||info.dir;c=info.combinator;s=info.value}else s=s.replace(SCOPE_JUMP," ");return c+s});if(hostContext)selector=
selector.replace(HOST_CONTEXT_PAREN,function(m,pre,paren,post){var replacement=pre+paren+" "+hostScope+post+COMPLEX_SELECTOR_SEP+" "+pre+hostScope+paren+post;if(dir)replacement+=self._additionalDirSelectors(paren,post,hostScope);return replacement});return selector},_transformDir:function(s){s=s.replace(HOST_DIR,HOST_DIR_REPLACE);s=s.replace(DIR_PAREN,DIR_REPLACE);return s},_transformCompoundSelector:function(selector,combinator,scope,hostScope){var jumpIndex=selector.search(SCOPE_JUMP);var hostContext=
false;var dir=false;if(selector.match(DIR_PAREN)){selector=this._transformDir(selector);dir=true}if(selector.indexOf(HOST_CONTEXT)>=0)hostContext=true;else if(selector.indexOf(HOST)>=0)selector=this._transformHostSelector(selector,hostScope);else if(jumpIndex!==0)selector=scope?this._transformSimpleSelector(selector,scope):selector;if(selector.indexOf(CONTENT)>=0)combinator="";var stop;if(jumpIndex>=0){selector=selector.replace(SCOPE_JUMP," ");stop=true}return{value:selector,combinator:combinator,
stop:stop,hostContext:hostContext,dir:dir}},_transformSimpleSelector:function(selector,scope){var p$=selector.split(PSEUDO_PREFIX);p$[0]+=scope;return p$.join(PSEUDO_PREFIX)},_transformHostSelector:function(selector,hostScope){var m=selector.match(HOST_PAREN);var paren=m&&m[2].trim()||"";if(paren)if(!paren[0].match(SIMPLE_SELECTOR_PREFIX)){var typeSelector=paren.split(SIMPLE_SELECTOR_PREFIX)[0];if(typeSelector===hostScope)return paren;else return SELECTOR_NO_MATCH}else return selector.replace(HOST_PAREN,
function(m,host,paren){return hostScope+paren});else return selector.replace(HOST,hostScope)},documentRule:function(rule){rule.selector=rule.parsedSelector;this.normalizeRootSelector(rule);if(!settings.useNativeShadow)this._transformRule(rule,this._transformDocumentSelector)},normalizeRootSelector:function(rule){rule.selector=rule.selector.replace(ROOT,"html");var parts=this._splitSelectorList(rule.selector);parts=parts.filter(function(part){return!part.match(HOST_OR_HOST_GT_STAR)});rule.selector=
parts.join(COMPLEX_SELECTOR_SEP)},_transformDocumentSelector:function(selector){return this._transformComplexSelector(selector,SCOPE_DOC_SELECTOR)},_slottedToContent:function(cssText){return cssText.replace(SLOTTED_PAREN,CONTENT+"> $1")},_dirShadowTransform:function(selector){if(!selector.match(/:dir\(/))return selector;return this._splitSelectorList(selector).map(function(s){s=this._ensureScopedDir(s);s=this._transformDir(s);var m=HOST_CONTEXT_PAREN.exec(s);if(m)s+=this._additionalDirSelectors(m[2],
m[3],"");return s},this).join(COMPLEX_SELECTOR_SEP)},SCOPE_NAME:"style-scope"};var SCOPE_NAME=api.SCOPE_NAME;var SCOPE_DOC_SELECTOR=":not(["+SCOPE_NAME+"])"+":not(."+SCOPE_NAME+")";var COMPLEX_SELECTOR_SEP=",";var SIMPLE_SELECTOR_SEP=/(^|[\s>+~]+)((?:\[.+?\]|[^\s>+~=\[])+)/g;var SIMPLE_SELECTOR_PREFIX=/[[.:#*]/;var HOST=":host";var ROOT=":root";var HOST_PAREN=/(:host)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/;var HOST_CONTEXT=":host-context";var HOST_CONTEXT_PAREN=/(.*)(?::host-context)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))(.*)/;
var CONTENT="::content";var SCOPE_JUMP=/::content|::shadow|\/deep\//;var CSS_CLASS_PREFIX=".";var CSS_ATTR_PREFIX="["+SCOPE_NAME+"~=";var CSS_ATTR_SUFFIX="]";var PSEUDO_PREFIX=":";var CLASS="class";var CONTENT_START=new RegExp("^("+CONTENT+")");var SELECTOR_NO_MATCH="should_not_match";var SLOTTED_PAREN=/(?:::slotted)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/g;var HOST_OR_HOST_GT_STAR=/:host(?:\s*>\s*\*)?/;var DIR_PAREN=/(.*):dir\((ltr|rtl)\)/;var DIR_REPLACE=':host-context([dir="$2"]) $1';var HOST_DIR=/:host\(:dir\((rtl|ltr)\)\)/g;
var HOST_DIR_REPLACE=':host-context([dir="$1"])';return api}();
Polymer.StyleExtends=function(){var styleUtil=Polymer.StyleUtil;return{hasExtends:function(cssText){return Boolean(cssText.match(this.rx.EXTEND))},transform:function(style){var rules=styleUtil.rulesForStyle(style);var self=this;styleUtil.forEachRule(rules,function(rule){self._mapRuleOntoParent(rule);if(rule.parent){var m;while(m=self.rx.EXTEND.exec(rule.cssText)){var extend=m[1];var extendor=self._findExtendor(extend,rule);if(extendor)self._extendRule(rule,extendor)}}rule.cssText=rule.cssText.replace(self.rx.EXTEND,
"")});return styleUtil.toCssText(rules,function(rule){if(rule.selector.match(self.rx.STRIP))rule.cssText=""},true)},_mapRuleOntoParent:function(rule){if(rule.parent){var map=rule.parent.map||(rule.parent.map={});var parts=rule.selector.split(",");for(var i=0,p;i<parts.length;i++){p=parts[i];map[p.trim()]=rule}return map}},_findExtendor:function(extend,rule){return rule.parent&&rule.parent.map&&rule.parent.map[extend]||this._findExtendor(extend,rule.parent)},_extendRule:function(target,source){if(target.parent!==
source.parent)this._cloneAndAddRuleToParent(source,target.parent);target["extends"]=target["extends"]||[];target["extends"].push(source);source.selector=source.selector.replace(this.rx.STRIP,"");source.selector=(source.selector&&source.selector+",\n")+target.selector;if(source["extends"])source["extends"].forEach(function(e){this._extendRule(target,e)},this)},_cloneAndAddRuleToParent:function(rule,parent){rule=Object.create(rule);rule.parent=parent;if(rule["extends"])rule["extends"]=rule["extends"].slice();
parent.rules.push(rule)},rx:{EXTEND:/@extends\(([^)]*)\)\s*?;/gim,STRIP:/%[^,]*$/}}}();
Polymer.ApplyShim=function(){var styleUtil=Polymer.StyleUtil;var MIXIN_MATCH=styleUtil.rx.MIXIN_MATCH;var VAR_ASSIGN=styleUtil.rx.VAR_ASSIGN;var BAD_VAR=/var\(\s*(--[^,]*),\s*(--[^)]*)\)/g;var APPLY_NAME_CLEAN=/;\s*/m;var INITIAL_INHERIT=/^\s*(initial)|(inherit)\s*$/;var MIXIN_VAR_SEP="_-_";var mixinMap={};function mapSet(name,props){name=name.trim();mixinMap[name]={properties:props,dependants:{}}}function mapGet(name){name=name.trim();return mixinMap[name]}function replaceInitialOrInherit(property,
value){var match=INITIAL_INHERIT.exec(value);if(match)if(match[1])value=ApplyShim._getInitialValueForProperty(property);else value="apply-shim-inherit";return value}function cssTextToMap(text){var props=text.split(";");var property,value;var out={};for(var i=0,p,sp;i<props.length;i++){p=props[i];if(p){sp=p.split(":");if(sp.length>1){property=sp[0].trim();value=replaceInitialOrInherit(property,sp.slice(1).join(":"));out[property]=value}}}return out}function invalidateMixinEntry(mixinEntry){var currentProto=
ApplyShim.__currentElementProto;var currentElementName=currentProto&&currentProto.is;for(var elementName in mixinEntry.dependants)if(elementName!==currentElementName)mixinEntry.dependants[elementName].__applyShimInvalid=true}function produceCssProperties(matchText,propertyName,valueProperty,valueMixin){if(valueProperty)styleUtil.processVariableAndFallback(valueProperty,function(prefix,value){if(value&&mapGet(value))valueMixin="@apply "+value+";"});if(!valueMixin)return matchText;var mixinAsProperties=
consumeCssProperties(valueMixin);var prefix=matchText.slice(0,matchText.indexOf("--"));var mixinValues=cssTextToMap(mixinAsProperties);var combinedProps=mixinValues;var mixinEntry=mapGet(propertyName);var oldProps=mixinEntry&&mixinEntry.properties;if(oldProps){combinedProps=Object.create(oldProps);combinedProps=Polymer.Base.mixin(combinedProps,mixinValues)}else mapSet(propertyName,combinedProps);var out=[];var p,v;var needToInvalidate=false;for(p in combinedProps){v=mixinValues[p];if(v===undefined)v=
"initial";if(oldProps&&!(p in oldProps))needToInvalidate=true;out.push(propertyName+MIXIN_VAR_SEP+p+": "+v)}if(needToInvalidate)invalidateMixinEntry(mixinEntry);if(mixinEntry)mixinEntry.properties=combinedProps;if(valueProperty)prefix=matchText+";"+prefix;return prefix+out.join("; ")+";"}function fixVars(matchText,varA,varB){return"var("+varA+","+"var("+varB+"))"}function atApplyToCssProperties(mixinName,fallbacks){mixinName=mixinName.replace(APPLY_NAME_CLEAN,"");var vars=[];var mixinEntry=mapGet(mixinName);
if(!mixinEntry){mapSet(mixinName,{});mixinEntry=mapGet(mixinName)}if(mixinEntry){var currentProto=ApplyShim.__currentElementProto;if(currentProto)mixinEntry.dependants[currentProto.is]=currentProto;var p,parts,f;for(p in mixinEntry.properties){f=fallbacks&&fallbacks[p];parts=[p,": var(",mixinName,MIXIN_VAR_SEP,p];if(f)parts.push(",",f);parts.push(")");vars.push(parts.join(""))}}return vars.join("; ")}function consumeCssProperties(text){var m;while(m=MIXIN_MATCH.exec(text)){var matchText=m[0];var mixinName=
m[1];var idx=m.index;var applyPos=idx+matchText.indexOf("@apply");var afterApplyPos=idx+matchText.length;var textBeforeApply=text.slice(0,applyPos);var textAfterApply=text.slice(afterApplyPos);var defaults=cssTextToMap(textBeforeApply);var replacement=atApplyToCssProperties(mixinName,defaults);text=[textBeforeApply,replacement,textAfterApply].join("");MIXIN_MATCH.lastIndex=idx+replacement.length}return text}var ApplyShim={_measureElement:null,_map:mixinMap,_separator:MIXIN_VAR_SEP,transform:function(styles,
elementProto){this.__currentElementProto=elementProto;styleUtil.forRulesInStyles(styles,this._boundFindDefinitions);styleUtil.forRulesInStyles(styles,this._boundFindApplications);if(elementProto)elementProto.__applyShimInvalid=false;this.__currentElementProto=null},_findDefinitions:function(rule){var cssText=rule.parsedCssText;cssText=cssText.replace(BAD_VAR,fixVars);cssText=cssText.replace(VAR_ASSIGN,produceCssProperties);rule.cssText=cssText;if(rule.selector===":root")rule.selector=":host > *"},
_findApplications:function(rule){rule.cssText=consumeCssProperties(rule.cssText)},transformRule:function(rule){this._findDefinitions(rule);this._findApplications(rule)},_getInitialValueForProperty:function(property){if(!this._measureElement){this._measureElement=document.createElement("meta");this._measureElement.style.all="initial";document.head.appendChild(this._measureElement)}return window.getComputedStyle(this._measureElement).getPropertyValue(property)}};ApplyShim._boundTransformRule=ApplyShim.transformRule.bind(ApplyShim);
ApplyShim._boundFindDefinitions=ApplyShim._findDefinitions.bind(ApplyShim);ApplyShim._boundFindApplications=ApplyShim._findApplications.bind(ApplyShim);return ApplyShim}();
(function(){var prepElement=Polymer.Base._prepElement;var nativeShadow=Polymer.Settings.useNativeShadow;var styleUtil=Polymer.StyleUtil;var styleTransformer=Polymer.StyleTransformer;var styleExtends=Polymer.StyleExtends;var applyShim=Polymer.ApplyShim;var settings=Polymer.Settings;Polymer.Base._addFeature({_prepElement:function(element){if(this._encapsulateStyle&&this.__cssBuild!=="shady")styleTransformer.element(element,this.is,this._scopeCssViaAttr);prepElement.call(this,element)},_prepStyles:function(){if(this._encapsulateStyle===
undefined)this._encapsulateStyle=!nativeShadow;if(!nativeShadow)this._scopeStyle=styleUtil.applyStylePlaceHolder(this.is)},_prepShimStyles:function(){this.__cssBuild=styleUtil.cssBuildTypeForModule(this.is);if(this._template){var hasTargetedCssBuild=styleUtil.isTargetedBuild(this.__cssBuild);if(settings.useNativeCSSProperties&&this.__cssBuild==="shadow"&&hasTargetedCssBuild){if(settings.preserveStyleIncludes)styleUtil.styleIncludesToTemplate(this._template);return}this._styles=this._styles||this._collectStyles();
if(settings.useNativeCSSProperties&&!this.__cssBuild)applyShim.transform(this._styles,this);var cssText=settings.useNativeCSSProperties&&hasTargetedCssBuild?this._styles.length&&this._styles[0].textContent.trim():styleTransformer.elementStyles(this);this._prepStyleProperties();if(!this._needsStyleProperties()&&cssText)styleUtil.applyCss(cssText,this.is,nativeShadow?this._template.content:null,this._scopeStyle)}else this._styles=[]},_collectStyles:function(){var styles=[];var cssText="",m$=this.styleModules;
if(m$)for(var i=0,l=m$.length,m;i<l&&(m=m$[i]);i++)cssText+=styleUtil.cssFromModule(m);cssText+=styleUtil.cssFromModule(this.is);var p=this._template&&this._template.parentNode;if(this._template&&(!p||p.id.toLowerCase()!==this.is))cssText+=styleUtil.cssFromElement(this._template);if(cssText){var style=document.createElement("style");style.textContent=cssText;if(styleExtends.hasExtends(style.textContent))cssText=styleExtends.transform(style);styles.push(style)}return styles},_elementAdd:function(node){if(this._encapsulateStyle)if(node.__styleScoped)node.__styleScoped=
false;else styleTransformer.dom(node,this.is,this._scopeCssViaAttr)},_elementRemove:function(node){if(this._encapsulateStyle)styleTransformer.dom(node,this.is,this._scopeCssViaAttr,true)},scopeSubtree:function(container,shouldObserve){if(nativeShadow)return;var self=this;var scopify=function(node){if(node.nodeType===Node.ELEMENT_NODE){var className=node.getAttribute("class");node.setAttribute("class",self._scopeElementClass(node,className));var n$=node.querySelectorAll("*");for(var i=0,n;i<n$.length&&
(n=n$[i]);i++){className=n.getAttribute("class");n.setAttribute("class",self._scopeElementClass(n,className))}}};scopify(container);if(shouldObserve){var mo=new MutationObserver(function(mxns){for(var i=0,m;i<mxns.length&&(m=mxns[i]);i++)if(m.addedNodes)for(var j=0;j<m.addedNodes.length;j++)scopify(m.addedNodes[j])});mo.observe(container,{childList:true,subtree:true});return mo}}})})();
Polymer.StyleProperties=function(){var matchesSelector=Polymer.DomApi.matchesSelector;var styleUtil=Polymer.StyleUtil;var styleTransformer=Polymer.StyleTransformer;var IS_IE=navigator.userAgent.match("Trident");var settings=Polymer.Settings;return{decorateStyles:function(styles,scope){var self=this,props={},keyframes=[],ruleIndex=0;var scopeSelector=styleTransformer._calcHostScope(scope.is,scope["extends"]);styleUtil.forRulesInStyles(styles,function(rule,style){self.decorateRule(rule);rule.index=
ruleIndex++;self.whenHostOrRootRule(scope,rule,style,function(info){if(rule.parent.type===styleUtil.ruleTypes.MEDIA_RULE)scope.__notStyleScopeCacheable=true;if(info.isHost){var hostContextOrFunction=info.selector.split(" ").some(function(s){return s.indexOf(scopeSelector)===0&&s.length!==scopeSelector.length});scope.__notStyleScopeCacheable=scope.__notStyleScopeCacheable||hostContextOrFunction}});self.collectPropertiesInCssText(rule.propertyInfo.cssText,props)},function onKeyframesRule(rule){keyframes.push(rule)});
styles._keyframes=keyframes;var names=[];for(var i in props)names.push(i);return names},decorateRule:function(rule){if(rule.propertyInfo)return rule.propertyInfo;var info={},properties={};var hasProperties=this.collectProperties(rule,properties);if(hasProperties){info.properties=properties;rule.rules=null}info.cssText=this.collectCssText(rule);rule.propertyInfo=info;return info},collectProperties:function(rule,properties){var info=rule.propertyInfo;if(info){if(info.properties){Polymer.Base.mixin(properties,
info.properties);return true}}else{var m,rx=this.rx.VAR_ASSIGN;var cssText=rule.parsedCssText;var value;var any;while(m=rx.exec(cssText)){value=(m[2]||m[3]).trim();if(value!=="inherit")properties[m[1].trim()]=value;any=true}return any}},collectCssText:function(rule){return this.collectConsumingCssText(rule.parsedCssText)},collectConsumingCssText:function(cssText){return cssText.replace(this.rx.BRACKETED,"").replace(this.rx.VAR_ASSIGN,"")},collectPropertiesInCssText:function(cssText,props){var m;while(m=
this.rx.VAR_CONSUMED.exec(cssText)){var name=m[1];if(m[2]!==":")props[name]=true}},reify:function(props){var names=Object.getOwnPropertyNames(props);for(var i=0,n;i<names.length;i++){n=names[i];props[n]=this.valueForProperty(props[n],props)}},valueForProperty:function(property,props){if(property)if(property.indexOf(";")>=0)property=this.valueForProperties(property,props);else{var self=this;var fn=function(prefix,value,fallback,suffix){var propertyValue=self.valueForProperty(props[value],props);if(!propertyValue||
propertyValue==="initial")propertyValue=self.valueForProperty(props[fallback]||fallback,props)||fallback;else if(propertyValue==="apply-shim-inherit")propertyValue="inherit";return prefix+(propertyValue||"")+suffix};property=styleUtil.processVariableAndFallback(property,fn)}return property&&property.trim()||""},valueForProperties:function(property,props){var parts=property.split(";");for(var i=0,p,m;i<parts.length;i++)if(p=parts[i]){this.rx.MIXIN_MATCH.lastIndex=0;m=this.rx.MIXIN_MATCH.exec(p);if(m)p=
this.valueForProperty(props[m[1]],props);else{var colon=p.indexOf(":");if(colon!==-1){var pp=p.substring(colon);pp=pp.trim();pp=this.valueForProperty(pp,props)||pp;p=p.substring(0,colon)+pp}}parts[i]=p&&p.lastIndexOf(";")===p.length-1?p.slice(0,-1):p||""}return parts.join(";")},applyProperties:function(rule,props){var output="";if(!rule.propertyInfo)this.decorateRule(rule);if(rule.propertyInfo.cssText)output=this.valueForProperties(rule.propertyInfo.cssText,props);rule.cssText=output},applyKeyframeTransforms:function(rule,
keyframeTransforms){var input=rule.cssText;var output=rule.cssText;if(rule.hasAnimations==null)rule.hasAnimations=this.rx.ANIMATION_MATCH.test(input);if(rule.hasAnimations){var transform;if(rule.keyframeNamesToTransform==null){rule.keyframeNamesToTransform=[];for(var keyframe in keyframeTransforms){transform=keyframeTransforms[keyframe];output=transform(input);if(input!==output){input=output;rule.keyframeNamesToTransform.push(keyframe)}}}else{for(var i=0;i<rule.keyframeNamesToTransform.length;++i){transform=
keyframeTransforms[rule.keyframeNamesToTransform[i]];input=transform(input)}output=input}}rule.cssText=output},propertyDataFromStyles:function(styles,element){var props={},self=this;var o=[];styleUtil.forActiveRulesInStyles(styles,function(rule){if(!rule.propertyInfo)self.decorateRule(rule);var selectorToMatch=rule.transformedSelector||rule.parsedSelector;if(element&&rule.propertyInfo.properties&&selectorToMatch)if(matchesSelector.call(element,selectorToMatch)){self.collectProperties(rule,props);
addToBitMask(rule.index,o)}});return{properties:props,key:o}},_rootSelector:/:root|:host\s*>\s*\*/,_checkRoot:function(hostScope,selector){return Boolean(selector.match(this._rootSelector))||hostScope==="html"&&selector.indexOf("html")>-1},whenHostOrRootRule:function(scope,rule,style,callback){if(!rule.propertyInfo)self.decorateRule(rule);if(!rule.propertyInfo.properties)return;var hostScope=scope.is?styleTransformer._calcHostScope(scope.is,scope["extends"]):"html";var parsedSelector=rule.parsedSelector;
var isRoot=this._checkRoot(hostScope,parsedSelector);var isHost=!isRoot&&parsedSelector.indexOf(":host")===0;var cssBuild=scope.__cssBuild||style.__cssBuild;if(cssBuild==="shady"){isRoot=parsedSelector===hostScope+" > *."+hostScope||parsedSelector.indexOf("html")>-1;isHost=!isRoot&&parsedSelector.indexOf(hostScope)===0}if(!isRoot&&!isHost)return;var selectorToMatch=hostScope;if(isHost){if(settings.useNativeShadow&&!rule.transformedSelector)rule.transformedSelector=styleTransformer._transformRuleCss(rule,
styleTransformer._transformComplexSelector,scope.is,hostScope);selectorToMatch=rule.transformedSelector||rule.parsedSelector}if(isRoot&&hostScope==="html")selectorToMatch=rule.transformedSelector||rule.parsedSelector;callback({selector:selectorToMatch,isHost:isHost,isRoot:isRoot})},hostAndRootPropertiesForScope:function(scope){var hostProps={},rootProps={},self=this;styleUtil.forActiveRulesInStyles(scope._styles,function(rule,style){self.whenHostOrRootRule(scope,rule,style,function(info){var element=
scope._element||scope;if(matchesSelector.call(element,info.selector))if(info.isHost)self.collectProperties(rule,hostProps);else self.collectProperties(rule,rootProps)})});return{rootProps:rootProps,hostProps:hostProps}},transformStyles:function(element,properties,scopeSelector){var self=this;var hostSelector=styleTransformer._calcHostScope(element.is,element["extends"]);var rxHostSelector=element["extends"]?"\\"+hostSelector.slice(0,-1)+"\\]":hostSelector;var hostRx=new RegExp(this.rx.HOST_PREFIX+
rxHostSelector+this.rx.HOST_SUFFIX);var keyframeTransforms=this._elementKeyframeTransforms(element,scopeSelector);return styleTransformer.elementStyles(element,function(rule){self.applyProperties(rule,properties);if(!settings.useNativeShadow&&!Polymer.StyleUtil.isKeyframesSelector(rule)&&rule.cssText){self.applyKeyframeTransforms(rule,keyframeTransforms);self._scopeSelector(rule,hostRx,hostSelector,element._scopeCssViaAttr,scopeSelector)}})},_elementKeyframeTransforms:function(element,scopeSelector){var keyframesRules=
element._styles._keyframes;var keyframeTransforms={};if(!settings.useNativeShadow&&keyframesRules)for(var i=0,keyframesRule=keyframesRules[i];i<keyframesRules.length;keyframesRule=keyframesRules[++i]){this._scopeKeyframes(keyframesRule,scopeSelector);keyframeTransforms[keyframesRule.keyframesName]=this._keyframesRuleTransformer(keyframesRule)}return keyframeTransforms},_keyframesRuleTransformer:function(keyframesRule){return function(cssText){return cssText.replace(keyframesRule.keyframesNameRx,keyframesRule.transformedKeyframesName)}},
_scopeKeyframes:function(rule,scopeId){rule.keyframesNameRx=new RegExp("\\b"+rule.keyframesName+"(?!\\B|-)","g");rule.transformedKeyframesName=rule.keyframesName+"-"+scopeId;rule.transformedSelector=rule.transformedSelector||rule.selector;rule.selector=rule.transformedSelector.replace(rule.keyframesName,rule.transformedKeyframesName)},_hasDirOrHostContext:function(parsedSelector){return/:host-context|:dir/.test(parsedSelector)},_scopeSelector:function(rule,hostRx,hostSelector,viaAttr,scopeId){rule.transformedSelector=
rule.transformedSelector||rule.selector;var selector=rule.transformedSelector;var scope=styleTransformer._calcElementScope(scopeId,viaAttr);var hostScope=styleTransformer._calcElementScope(hostSelector,viaAttr);var parts=selector.split(",");var isDirOrHostContextSelector=this._hasDirOrHostContext(rule.parsedSelector);for(var i=0,l=parts.length,p;i<l&&(p=parts[i]);i++)parts[i]=p.match(hostRx)?p.replace(hostSelector,scope):isDirOrHostContextSelector?p.replace(hostScope,scope+" "+hostScope):scope+" "+
p;rule.selector=parts.join(",")},applyElementScopeSelector:function(element,selector,old,viaAttr){var c=viaAttr?element.getAttribute(styleTransformer.SCOPE_NAME):element.getAttribute("class")||"";var v=old?c.replace(old,selector):(c?c+" ":"")+this.XSCOPE_NAME+" "+selector;if(c!==v)if(viaAttr)element.setAttribute(styleTransformer.SCOPE_NAME,v);else element.setAttribute("class",v)},applyElementStyle:function(element,properties,selector,style){var cssText=style?style.textContent||"":this.transformStyles(element,
properties,selector);var s=element._customStyle;if(s&&!settings.useNativeShadow&&s!==style){s._useCount--;if(s._useCount<=0&&s.parentNode)s.parentNode.removeChild(s)}if(settings.useNativeShadow)if(element._customStyle){element._customStyle.textContent=cssText;style=element._customStyle}else{if(cssText)style=styleUtil.applyCss(cssText,selector,element.root,element._scopeStyle)}else if(!style){if(cssText)style=styleUtil.applyCss(cssText,selector,null,element._scopeStyle)}else if(!style.parentNode){if(IS_IE&&
cssText.indexOf("@media")>-1)style.textContent=cssText;styleUtil.applyStyle(style,null,element._scopeStyle)}if(style){style._useCount=style._useCount||0;if(element._customStyle!=style)style._useCount++;element._customStyle=style}return style},mixinCustomStyle:function(props,customStyle){var v;for(var i in customStyle){v=customStyle[i];if(v||v===0)props[i]=v}},updateNativeStyleProperties:function(element,properties){var oldPropertyNames=element.__customStyleProperties;if(oldPropertyNames)for(var i=
0;i<oldPropertyNames.length;i++)element.style.removeProperty(oldPropertyNames[i]);var propertyNames=[];for(var p in properties)if(properties[p]!==null){element.style.setProperty(p,properties[p]);propertyNames.push(p)}element.__customStyleProperties=propertyNames},rx:styleUtil.rx,XSCOPE_NAME:"x-scope"};function addToBitMask(n,bits){var o=parseInt(n/32);var v=1<<n%32;bits[o]=(bits[o]||0)|v}}();
(function(){Polymer.StyleCache=function(){this.cache={}};Polymer.StyleCache.prototype={MAX:100,store:function(is,data,keyValues,keyStyles){data.keyValues=keyValues;data.styles=keyStyles;var s$=this.cache[is]=this.cache[is]||[];s$.push(data);if(s$.length>this.MAX)s$.shift()},retrieve:function(is,keyValues,keyStyles){var cache=this.cache[is];if(cache)for(var i=cache.length-1,data;i>=0;i--){data=cache[i];if(keyStyles===data.styles&&this._objectsEqual(keyValues,data.keyValues))return data}},clear:function(){this.cache=
{}},_objectsEqual:function(target,source){var t,s;for(var i in target){t=target[i],s=source[i];if(!(typeof t==="object"&&t?this._objectsStrictlyEqual(t,s):t===s))return false}if(Array.isArray(target))return target.length===source.length;return true},_objectsStrictlyEqual:function(target,source){return this._objectsEqual(target,source)&&this._objectsEqual(source,target)}}})();
Polymer.StyleDefaults=function(){var styleProperties=Polymer.StyleProperties;var StyleCache=Polymer.StyleCache;var nativeVariables=Polymer.Settings.useNativeCSSProperties;var api={_styles:[],_properties:null,customStyle:{},_styleCache:new StyleCache,_element:Polymer.DomApi.wrap(document.documentElement),addStyle:function(style){this._styles.push(style);this._properties=null},get _styleProperties(){if(!this._properties){styleProperties.decorateStyles(this._styles,this);this._styles._scopeStyleProperties=
null;this._properties=styleProperties.hostAndRootPropertiesForScope(this).rootProps;styleProperties.mixinCustomStyle(this._properties,this.customStyle);styleProperties.reify(this._properties)}return this._properties},hasStyleProperties:function(){return Boolean(this._properties)},_needsStyleProperties:function(){},_computeStyleProperties:function(){return this._styleProperties},updateStyles:function(properties){this._properties=null;if(properties)Polymer.Base.mixin(this.customStyle,properties);this._styleCache.clear();
for(var i=0,s;i<this._styles.length;i++){s=this._styles[i];s=s.__importElement||s;s._apply()}if(nativeVariables)styleProperties.updateNativeStyleProperties(document.documentElement,this.customStyle)}};return api}();
(function(){var serializeValueToAttribute=Polymer.Base.serializeValueToAttribute;var propertyUtils=Polymer.StyleProperties;var styleTransformer=Polymer.StyleTransformer;var styleDefaults=Polymer.StyleDefaults;var nativeShadow=Polymer.Settings.useNativeShadow;var nativeVariables=Polymer.Settings.useNativeCSSProperties;Polymer.Base._addFeature({_prepStyleProperties:function(){if(!nativeVariables)this._ownStylePropertyNames=this._styles&&this._styles.length?propertyUtils.decorateStyles(this._styles,
this):null},customStyle:null,getComputedStyleValue:function(property){if(!nativeVariables&&!this._styleProperties)this._computeStyleProperties();return!nativeVariables&&this._styleProperties&&this._styleProperties[property]||getComputedStyle(this).getPropertyValue(property)},_setupStyleProperties:function(){this.customStyle={};this._styleCache=null;this._styleProperties=null;this._scopeSelector=null;this._ownStyleProperties=null;this._customStyle=null},_needsStyleProperties:function(){return Boolean(!nativeVariables&&
this._ownStylePropertyNames&&this._ownStylePropertyNames.length)},_validateApplyShim:function(){if(this.__applyShimInvalid){Polymer.ApplyShim.transform(this._styles,this.__proto__);var cssText=styleTransformer.elementStyles(this);if(nativeShadow){var templateStyle=this._template.content.querySelector("style");if(templateStyle)templateStyle.textContent=cssText}else{var shadyStyle=this._scopeStyle&&this._scopeStyle.nextSibling;if(shadyStyle)shadyStyle.textContent=cssText}}},_beforeAttached:function(){if((!this._scopeSelector||
this.__stylePropertiesInvalid)&&this._needsStyleProperties()){this.__stylePropertiesInvalid=false;this._updateStyleProperties()}},_findStyleHost:function(){var e=this,root;while(root=Polymer.dom(e).getOwnerRoot()){if(Polymer.isInstance(root.host))return root.host;e=root.host}return styleDefaults},_updateStyleProperties:function(){var info,scope=this._findStyleHost();if(!scope._styleProperties)scope._computeStyleProperties();if(!scope._styleCache)scope._styleCache=new Polymer.StyleCache;var scopeData=
propertyUtils.propertyDataFromStyles(scope._styles,this);var scopeCacheable=!this.__notStyleScopeCacheable;if(scopeCacheable){scopeData.key.customStyle=this.customStyle;info=scope._styleCache.retrieve(this.is,scopeData.key,this._styles)}var scopeCached=Boolean(info);if(scopeCached)this._styleProperties=info._styleProperties;else this._computeStyleProperties(scopeData.properties);this._computeOwnStyleProperties();if(!scopeCached)info=styleCache.retrieve(this.is,this._ownStyleProperties,this._styles);
var globalCached=Boolean(info)&&!scopeCached;var style=this._applyStyleProperties(info);if(!scopeCached){style=style&&nativeShadow?style.cloneNode(true):style;info={style:style,_scopeSelector:this._scopeSelector,_styleProperties:this._styleProperties};if(scopeCacheable){scopeData.key.customStyle={};this.mixin(scopeData.key.customStyle,this.customStyle);scope._styleCache.store(this.is,info,scopeData.key,this._styles)}if(!globalCached)styleCache.store(this.is,Object.create(info),this._ownStyleProperties,
this._styles)}},_computeStyleProperties:function(scopeProps){var scope=this._findStyleHost();if(!scope._styleProperties)scope._computeStyleProperties();var props=Object.create(scope._styleProperties);var hostAndRootProps=propertyUtils.hostAndRootPropertiesForScope(this);this.mixin(props,hostAndRootProps.hostProps);scopeProps=scopeProps||propertyUtils.propertyDataFromStyles(scope._styles,this).properties;this.mixin(props,scopeProps);this.mixin(props,hostAndRootProps.rootProps);propertyUtils.mixinCustomStyle(props,
this.customStyle);propertyUtils.reify(props);this._styleProperties=props},_computeOwnStyleProperties:function(){var props={};for(var i=0,n;i<this._ownStylePropertyNames.length;i++){n=this._ownStylePropertyNames[i];props[n]=this._styleProperties[n]}this._ownStyleProperties=props},_scopeCount:0,_applyStyleProperties:function(info){var oldScopeSelector=this._scopeSelector;this._scopeSelector=info?info._scopeSelector:this.is+"-"+this.__proto__._scopeCount++;var style=propertyUtils.applyElementStyle(this,
this._styleProperties,this._scopeSelector,info&&info.style);if(!nativeShadow)propertyUtils.applyElementScopeSelector(this,this._scopeSelector,oldScopeSelector,this._scopeCssViaAttr);return style},serializeValueToAttribute:function(value,attribute,node){node=node||this;if(attribute==="class"&&!nativeShadow){var host=node===this?this.domHost||this.dataHost:this;if(host)value=host._scopeElementClass(node,value)}node=this.shadyRoot&&this.shadyRoot._hasDistributed?Polymer.dom(node):node;serializeValueToAttribute.call(this,
value,attribute,node)},_scopeElementClass:function(element,selector){if(!nativeShadow&&!this._scopeCssViaAttr)selector=(selector?selector+" ":"")+SCOPE_NAME+" "+this.is+(element._scopeSelector?" "+XSCOPE_NAME+" "+element._scopeSelector:"");return selector},updateStyles:function(properties){if(properties)this.mixin(this.customStyle,properties);if(nativeVariables)propertyUtils.updateNativeStyleProperties(this,this.customStyle);else{if(this.isAttached)if(this._needsStyleProperties())this._updateStyleProperties();
else this._styleProperties=null;else this.__stylePropertiesInvalid=true;if(this._styleCache)this._styleCache.clear();this._updateRootStyles()}},_updateRootStyles:function(root){root=root||this.root;var c$=Polymer.dom(root)._query(function(e){return e.shadyRoot||e.shadowRoot});for(var i=0,l=c$.length,c;i<l&&(c=c$[i]);i++)if(c.updateStyles)c.updateStyles()}});Polymer.updateStyles=function(properties){styleDefaults.updateStyles(properties);Polymer.Base._updateRootStyles(document)};var styleCache=new Polymer.StyleCache;
Polymer.customStyleCache=styleCache;var SCOPE_NAME=styleTransformer.SCOPE_NAME;var XSCOPE_NAME=propertyUtils.XSCOPE_NAME})();
Polymer.Base._addFeature({_registerFeatures:function(){this._prepIs();if(this.factoryImpl)this._prepConstructor();this._prepStyles()},_finishRegisterFeatures:function(){this._prepTemplate();this._prepShimStyles();this._prepAnnotations();this._prepEffects();this._prepBehaviors();this._prepPropertyInfo();this._prepBindings();this._prepShady()},_prepBehavior:function(b){this._addPropertyEffects(b.properties);this._addComplexObserverEffects(b.observers);this._addHostAttributes(b.hostAttributes)},_initFeatures:function(){this._setupGestures();
this._setupConfigure(this.__data__);this._setupStyleProperties();this._setupDebouncers();this._setupShady();this._registerHost();if(this._template){this._validateApplyShim();this._poolContent();this._beginHosting();this._stampTemplate();this._endHosting();this._marshalAnnotationReferences()}this._marshalInstanceEffects();this._marshalBehaviors();this._marshalHostAttributes();this._marshalAttributes();this._tryReady()},_marshalBehavior:function(b){if(b.listeners)this._listenListeners(b.listeners)}});
(function(){var propertyUtils=Polymer.StyleProperties;var styleUtil=Polymer.StyleUtil;var cssParse=Polymer.CssParse;var styleDefaults=Polymer.StyleDefaults;var styleTransformer=Polymer.StyleTransformer;var applyShim=Polymer.ApplyShim;var debounce=Polymer.Debounce;var settings=Polymer.Settings;var updateDebouncer;Polymer({is:"custom-style","extends":"style",_template:null,properties:{include:String},ready:function(){this.__appliedElement=this.__appliedElement||this;this.__cssBuild=styleUtil.getCssBuildType(this);
if(this.__appliedElement!==this)this.__appliedElement.__cssBuild=this.__cssBuild;if(this.ownerDocument!==window.document&&this.__appliedElement===this)document.head.appendChild(this);this._tryApply()},attached:function(){this._tryApply()},_tryApply:function(){if(!this._appliesToDocument)if(this.parentNode&&this.parentNode.localName!=="dom-module"){this._appliesToDocument=true;var e=this.__appliedElement;if(!settings.useNativeCSSProperties){this.__needsUpdateStyles=styleDefaults.hasStyleProperties();
styleDefaults.addStyle(e)}if(e.textContent||this.include)this._apply(true);else{var self=this;var observer=new MutationObserver(function(){observer.disconnect();self._apply(true)});observer.observe(e,{childList:true})}}},_updateStyles:function(){Polymer.updateStyles()},_apply:function(initialApply){var e=this.__appliedElement;if(this.include)e.textContent=styleUtil.cssFromModules(this.include,true)+e.textContent;if(!e.textContent)return;var buildType=this.__cssBuild;var targetedBuild=styleUtil.isTargetedBuild(buildType);
if(settings.useNativeCSSProperties&&targetedBuild)return;var styleRules=styleUtil.rulesForStyle(e);if(!targetedBuild){styleUtil.forEachRule(styleRules,function(rule){styleTransformer.documentRule(rule)});if(settings.useNativeCSSProperties&&!buildType)applyShim.transform([e])}if(settings.useNativeCSSProperties)e.textContent=styleUtil.toCssText(styleRules);else{var self=this;var fn=function fn(){self._flushCustomProperties()};if(initialApply)Polymer.RenderStatus.whenReady(fn);else fn()}},_flushCustomProperties:function(){if(this.__needsUpdateStyles){this.__needsUpdateStyles=
false;updateDebouncer=debounce(updateDebouncer,this._updateStyles)}else this._applyCustomProperties()},_applyCustomProperties:function(){var element=this.__appliedElement;this._computeStyleProperties();var props=this._styleProperties;var rules=styleUtil.rulesForStyle(element);if(!rules)return;element.textContent=styleUtil.toCssText(rules,function(rule){var css=rule.cssText=rule.parsedCssText;if(rule.propertyInfo&&rule.propertyInfo.cssText){css=cssParse.removeCustomPropAssignment(css);rule.cssText=
propertyUtils.valueForProperties(css,props)}})}})})();
Polymer.Templatizer={properties:{__hideTemplateChildren__:{observer:"_showHideChildren"}},_instanceProps:Polymer.nob,_parentPropPrefix:"_parent_",templatize:function(template){if(Polymer.Settings.strictTemplatePolicy&&!this._getRootDataHost())throw new Error("strictTemplatePolicy: template owner not trusted");this._templatized=template;if(!template._content)template._content=template.content;if(template._content._ctor){this.ctor=template._content._ctor;this._prepParentProperties(this.ctor.prototype,
template);return}var archetype=Object.create(Polymer.Base);this._customPrepAnnotations(archetype,template);this._prepParentProperties(archetype,template);archetype._prepEffects();this._customPrepEffects(archetype);archetype._prepBehaviors();archetype._prepPropertyInfo();archetype._prepBindings();archetype._notifyPathUp=this._notifyPathUpImpl;archetype._scopeElementClass=this._scopeElementClassImpl;archetype.listen=this._listenImpl;archetype._showHideChildren=this._showHideChildrenImpl;archetype.__setPropertyOrig=
this.__setProperty;archetype.__setProperty=this.__setPropertyImpl;var _constructor=this._constructorImpl;var ctor=function TemplateInstance(model,host){_constructor.call(this,model,host)};ctor.prototype=archetype;archetype.constructor=ctor;template._content._ctor=ctor;this.ctor=ctor},_getRootDataHost:function(){return this.dataHost&&this.dataHost._rootDataHost||this.dataHost},_showHideChildrenImpl:function(hide){var c=this._children;for(var i=0;i<c.length;i++){var n=c[i];if(Boolean(hide)!=Boolean(n.__hideTemplateChildren__))if(n.nodeType===
Node.TEXT_NODE)if(hide){n.__polymerTextContent__=n.textContent;n.textContent=""}else n.textContent=n.__polymerTextContent__;else if(n.style)if(hide){n.__polymerDisplay__=n.style.display;n.style.display="none"}else n.style.display=n.__polymerDisplay__;n.__hideTemplateChildren__=hide}},__setPropertyImpl:function(property,value,fromAbove,node){if(node&&node.__hideTemplateChildren__&&property=="textContent")property="__polymerTextContent__";this.__setPropertyOrig(property,value,fromAbove,node)},_debounceTemplate:function(fn){Polymer.dom.addDebouncer(this.debounce("_debounceTemplate",
fn))},_flushTemplates:function(){Polymer.dom.flush()},_customPrepEffects:function(archetype){var parentProps=archetype._parentProps;for(var prop in parentProps)archetype._addPropertyEffect(prop,"function",this._createHostPropEffector(prop));for(prop in this._instanceProps)archetype._addPropertyEffect(prop,"function",this._createInstancePropEffector(prop))},_customPrepAnnotations:function(archetype,template){var t=archetype._template=document.createElement("template");var c=t._content=template._content;
if(!c._notes){var rootDataHost=archetype._rootDataHost;if(rootDataHost)Polymer.Annotations.prepElement=function(){rootDataHost._prepElement()};c._notes=Polymer.Annotations.parseAnnotations(template);Polymer.Annotations.prepElement=null;this._processAnnotations(c._notes)}archetype._notes=c._notes;archetype._parentProps=c._parentProps},_prepParentProperties:function(archetype,template){var parentProps=this._parentProps=archetype._parentProps;if(this._forwardParentProp&&parentProps){var proto=archetype._parentPropProto;
var prop;if(!proto){for(prop in this._instanceProps)delete parentProps[prop];proto=archetype._parentPropProto=Object.create(null);if(template!=this){Polymer.Bind.prepareModel(proto);Polymer.Base.prepareModelNotifyPath(proto)}for(prop in parentProps){var parentProp=this._parentPropPrefix+prop;var effects=[{kind:"function",effect:this._createForwardPropEffector(prop),fn:Polymer.Bind._functionEffect},{kind:"notify",fn:Polymer.Bind._notifyEffect,effect:{event:Polymer.CaseMap.camelToDashCase(parentProp)+
"-changed"}}];proto._propertyEffects=proto._propertyEffects||{};proto._propertyEffects[parentProp]=effects;Polymer.Bind._createAccessors(proto,parentProp,effects)}}var self=this;if(template!=this){Polymer.Bind.prepareInstance(template);template._forwardParentProp=function(source,value){self._forwardParentProp(source,value)}}this._extendTemplate(template,proto);template._pathEffector=function(path,value,fromAbove){return self._pathEffectorImpl(path,value,fromAbove)}}},_createForwardPropEffector:function(prop){return function(source,
value){this._forwardParentProp(prop,value)}},_createHostPropEffector:function(prop){var prefix=this._parentPropPrefix;return function(source,value){this.dataHost._templatized[prefix+prop]=value}},_createInstancePropEffector:function(prop){return function(source,value,old,fromAbove){if(!fromAbove)this.dataHost._forwardInstanceProp(this,prop,value)}},_extendTemplate:function(template,proto){var n$=Object.getOwnPropertyNames(proto);if(proto._propertySetter)template._propertySetter=proto._propertySetter;
for(var i=0,n;i<n$.length&&(n=n$[i]);i++){var val=template[n];if(val&&n=="_propertyEffects"){var pe=Polymer.Base.mixin({},val);template._propertyEffects=Polymer.Base.mixin(pe,proto._propertyEffects)}else{var pd=Object.getOwnPropertyDescriptor(proto,n);Object.defineProperty(template,n,pd);if(val!==undefined)template._propertySetter(n,val)}}},_showHideChildren:function(hidden){},_forwardInstancePath:function(inst,path,value){},_forwardInstanceProp:function(inst,prop,value){},_notifyPathUpImpl:function(path,
value){var dataHost=this.dataHost;var root=Polymer.Path.root(path);dataHost._forwardInstancePath.call(dataHost,this,path,value);if(root in dataHost._parentProps)dataHost._templatized._notifyPath(dataHost._parentPropPrefix+path,value)},_pathEffectorImpl:function(path,value,fromAbove){if(this._forwardParentPath)if(path.indexOf(this._parentPropPrefix)===0){var subPath=path.substring(this._parentPropPrefix.length);var model=Polymer.Path.root(subPath);if(model in this._parentProps)this._forwardParentPath(subPath,
value)}Polymer.Base._pathEffector.call(this._templatized,path,value,fromAbove)},_constructorImpl:function(model,host){this._rootDataHost=host._getRootDataHost();this._setupConfigure(model);this._registerHost(host);this._beginHosting();this.root=this.instanceTemplate(this._template);this.root.__noContent=!this._notes._hasContent;this.root.__styleScoped=true;this._endHosting();this._marshalAnnotatedNodes();this._marshalInstanceEffects();this._marshalAnnotatedListeners();var children=[];for(var n=this.root.firstChild;n;n=
n.nextSibling){children.push(n);n._templateInstance=this}this._children=children;if(host.__hideTemplateChildren__)this._showHideChildren(true);this._tryReady()},_listenImpl:function(node,eventName,methodName){var model=this;var host=this._rootDataHost;var handler=host._createEventHandler(node,eventName,methodName);var decorated=function(e){e.model=model;handler(e)};host._listen(node,eventName,decorated)},_scopeElementClassImpl:function(node,value){var host=this._rootDataHost;if(host)return host._scopeElementClass(node,
value);return value},stamp:function(model){model=model||{};if(this._parentProps){var templatized=this._templatized;for(var prop in this._parentProps)if(model[prop]===undefined)model[prop]=templatized[this._parentPropPrefix+prop]}return new this.ctor(model,this)},modelForElement:function(el){var model;while(el)if(model=el._templateInstance)if(model.dataHost!=this)el=model.dataHost;else return model;else el=el.parentNode}};
Polymer({is:"dom-template","extends":"template",_template:null,behaviors:[Polymer.Templatizer],ready:function(){this.templatize(this)}});Polymer._collections=new WeakMap;Polymer.Collection=function(userArray){Polymer._collections.set(userArray,this);this.userArray=userArray;this.store=userArray.slice();this.initMap()};
Polymer.Collection.prototype={constructor:Polymer.Collection,initMap:function(){var omap=this.omap=new WeakMap;var pmap=this.pmap={};var s=this.store;for(var i=0;i<s.length;i++){var item=s[i];if(item&&typeof item=="object")omap.set(item,i);else pmap[item]=i}},add:function(item){var key=this.store.push(item)-1;if(item&&typeof item=="object")this.omap.set(item,key);else this.pmap[item]=key;return"#"+key},removeKey:function(key){if(key=this._parseKey(key)){this._removeFromMap(this.store[key]);delete this.store[key]}},
_removeFromMap:function(item){if(item&&typeof item=="object")this.omap["delete"](item);else delete this.pmap[item]},remove:function(item){var key=this.getKey(item);this.removeKey(key);return key},getKey:function(item){var key;if(item&&typeof item=="object")key=this.omap.get(item);else key=this.pmap[item];if(key!=undefined)return"#"+key},getKeys:function(){return Object.keys(this.store).map(function(key){return"#"+key})},_parseKey:function(key){if(key&&key[0]=="#")return key.slice(1)},setItem:function(key,
item){if(key=this._parseKey(key)){var old=this.store[key];if(old)this._removeFromMap(old);if(item&&typeof item=="object")this.omap.set(item,key);else this.pmap[item]=key;this.store[key]=item}},getItem:function(key){if(key=this._parseKey(key))return this.store[key]},getItems:function(){var items=[],store=this.store;for(var key in store)items.push(store[key]);return items},_applySplices:function(splices){var keyMap={},key;for(var i=0,s;i<splices.length&&(s=splices[i]);i++){s.addedKeys=[];for(var j=
0;j<s.removed.length;j++){key=this.getKey(s.removed[j]);keyMap[key]=keyMap[key]?null:-1}for(j=0;j<s.addedCount;j++){var item=this.userArray[s.index+j];key=this.getKey(item);key=key===undefined?this.add(item):key;keyMap[key]=keyMap[key]?null:1;s.addedKeys.push(key)}}var removed=[];var added=[];for(key in keyMap){if(keyMap[key]<0){this.removeKey(key);removed.push(key)}if(keyMap[key]>0)added.push(key)}return[{removed:removed,added:added}]}};
Polymer.Collection.get=function(userArray){return Polymer._collections.get(userArray)||new Polymer.Collection(userArray)};Polymer.Collection.applySplices=function(userArray,splices){var coll=Polymer._collections.get(userArray);return coll?coll._applySplices(splices):null};
Polymer({is:"dom-repeat","extends":"template",_template:null,properties:{items:{type:Array},as:{type:String,value:"item"},indexAs:{type:String,value:"index"},sort:{type:Function,observer:"_sortChanged"},filter:{type:Function,observer:"_filterChanged"},observe:{type:String,observer:"_observeChanged"},delay:Number,renderedItemCount:{type:Number,notify:!Polymer.Settings.suppressTemplateNotifications,readOnly:true},initialCount:{type:Number,observer:"_initializeChunking"},targetFramerate:{type:Number,
value:20},notifyDomChange:{type:Boolean},_targetFrameTime:{type:Number,computed:"_computeFrameTime(targetFramerate)"}},behaviors:[Polymer.Templatizer],observers:["_itemsChanged(items.*)"],created:function(){this._instances=[];this._pool=[];this._limit=Infinity;var self=this;this._boundRenderChunk=function(){self._renderChunk()}},detached:function(){this.__isDetached=true;for(var i=0;i<this._instances.length;i++)this._detachInstance(i)},attached:function(){if(this.__isDetached){this.__isDetached=false;
var refNode;var parentNode=Polymer.dom(this).parentNode;if(parentNode.localName==this.is){refNode=parentNode;parentNode=Polymer.dom(parentNode).parentNode}else refNode=this;var parent=Polymer.dom(parentNode);for(var i=0;i<this._instances.length;i++)this._attachInstance(i,parent,refNode)}},ready:function(){this._instanceProps={__key__:true};this._instanceProps[this.as]=true;this._instanceProps[this.indexAs]=true;if(!this.ctor)this.templatize(this)},_sortChanged:function(sort){var dataHost=this._getRootDataHost();
this._sortFn=sort&&(typeof sort=="function"?sort:function(){return dataHost[sort].apply(dataHost,arguments)});this._needFullRefresh=true;if(this.items)this._debounceTemplate(this._render)},_filterChanged:function(filter){var dataHost=this._getRootDataHost();this._filterFn=filter&&(typeof filter=="function"?filter:function(){return dataHost[filter].apply(dataHost,arguments)});this._needFullRefresh=true;if(this.items)this._debounceTemplate(this._render)},_computeFrameTime:function(rate){return Math.ceil(1E3/
rate)},_initializeChunking:function(){if(this.initialCount){this._limit=this.initialCount;this._chunkCount=this.initialCount;this._lastChunkTime=performance.now()}},_tryRenderChunk:function(){if(this.items&&this._limit<this.items.length)this.debounce("renderChunk",this._requestRenderChunk)},_requestRenderChunk:function(){requestAnimationFrame(this._boundRenderChunk)},_renderChunk:function(){var currChunkTime=performance.now();var ratio=this._targetFrameTime/(currChunkTime-this._lastChunkTime);this._chunkCount=
Math.round(this._chunkCount*ratio)||1;this._limit+=this._chunkCount;this._lastChunkTime=currChunkTime;this._debounceTemplate(this._render)},_observeChanged:function(){this._observePaths=this.observe&&this.observe.replace(".*",".").split(" ")},_itemsChanged:function(change){if(change.path=="items"){if(Array.isArray(this.items))this.collection=Polymer.Collection.get(this.items);else if(!this.items)this.collection=null;else this._error(this._logf("dom-repeat","expected array for `items`,"+" found",this.items));
this._keySplices=[];this._indexSplices=[];this._needFullRefresh=true;this._initializeChunking();this._debounceTemplate(this._render)}else if(change.path=="items.splices"){this._keySplices=this._keySplices.concat(change.value.keySplices);this._indexSplices=this._indexSplices.concat(change.value.indexSplices);this._debounceTemplate(this._render)}else{var subpath=change.path.slice(6);this._forwardItemPath(subpath,change.value);this._checkObservedPaths(subpath)}},_checkObservedPaths:function(path){if(this._observePaths){path=
path.substring(path.indexOf(".")+1);var paths=this._observePaths;for(var i=0;i<paths.length;i++)if(path.indexOf(paths[i])===0){this._needFullRefresh=true;if(this.delay)this.debounce("render",this._render,this.delay);else this._debounceTemplate(this._render);return}}},render:function(){this._needFullRefresh=true;this._debounceTemplate(this._render);this._flushTemplates()},_render:function(){if(!this.ctor)return;if(this._needFullRefresh){this._applyFullRefresh();this._needFullRefresh=false}else if(this._keySplices.length)if(this._sortFn)this._applySplicesUserSort(this._keySplices);
else if(this._filterFn)this._applyFullRefresh();else this._applySplicesArrayOrder(this._indexSplices);else;this._keySplices=[];this._indexSplices=[];var keyToIdx=this._keyToInstIdx={};for(var i=this._instances.length-1;i>=0;i--){var inst=this._instances[i];if(inst.isPlaceholder&&i<this._limit)inst=this._insertInstance(i,inst.__key__);else if(!inst.isPlaceholder&&i>=this._limit)inst=this._downgradeInstance(i,inst.__key__);keyToIdx[inst.__key__]=i;if(!inst.isPlaceholder)inst.__setProperty(this.indexAs,
i,true)}this._pool.length=0;this._setRenderedItemCount(this._instances.length);if(!Polymer.Settings.suppressTemplateNotifications||this.notifyDomChange)this.fire("dom-change");this._tryRenderChunk()},_applyFullRefresh:function(){var c=this.collection;var keys;if(this._sortFn)keys=c?c.getKeys():[];else{keys=[];var items=this.items;if(items)for(var i=0;i<items.length;i++)keys.push(c.getKey(items[i]))}var self=this;if(this._filterFn)keys=keys.filter(function(a){return self._filterFn(c.getItem(a))});
if(this._sortFn)keys.sort(function(a,b){return self._sortFn(c.getItem(a),c.getItem(b))});for(i=0;i<keys.length;i++){var key=keys[i];var inst=this._instances[i];if(inst){inst.__key__=key;if(!inst.isPlaceholder&&i<this._limit)inst.__setProperty(this.as,c.getItem(key),true)}else if(i<this._limit)this._insertInstance(i,key);else this._insertPlaceholder(i,key)}for(var j=this._instances.length-1;j>=i;j--)this._detachAndRemoveInstance(j)},_numericSort:function(a,b){return a-b},_applySplicesUserSort:function(splices){var c=
this.collection;var keyMap={};var key;for(var i=0,s;i<splices.length&&(s=splices[i]);i++){for(var j=0;j<s.removed.length;j++){key=s.removed[j];keyMap[key]=keyMap[key]?null:-1}for(j=0;j<s.added.length;j++){key=s.added[j];keyMap[key]=keyMap[key]?null:1}}var removedIdxs=[];var addedKeys=[];for(key in keyMap){if(keyMap[key]===-1)removedIdxs.push(this._keyToInstIdx[key]);if(keyMap[key]===1)addedKeys.push(key)}if(removedIdxs.length){removedIdxs.sort(this._numericSort);for(i=removedIdxs.length-1;i>=0;i--){var idx=
removedIdxs[i];if(idx!==undefined)this._detachAndRemoveInstance(idx)}}var self=this;if(addedKeys.length){if(this._filterFn)addedKeys=addedKeys.filter(function(a){return self._filterFn(c.getItem(a))});addedKeys.sort(function(a,b){return self._sortFn(c.getItem(a),c.getItem(b))});var start=0;for(i=0;i<addedKeys.length;i++)start=this._insertRowUserSort(start,addedKeys[i])}},_insertRowUserSort:function(start,key){var c=this.collection;var item=c.getItem(key);var end=this._instances.length-1;var idx=-1;
while(start<=end){var mid=start+end>>1;var midKey=this._instances[mid].__key__;var cmp=this._sortFn(c.getItem(midKey),item);if(cmp<0)start=mid+1;else if(cmp>0)end=mid-1;else{idx=mid;break}}if(idx<0)idx=end+1;this._insertPlaceholder(idx,key);return idx},_applySplicesArrayOrder:function(splices){for(var i=0,s;i<splices.length&&(s=splices[i]);i++){for(var j=0;j<s.removed.length;j++)this._detachAndRemoveInstance(s.index);for(j=0;j<s.addedKeys.length;j++)this._insertPlaceholder(s.index+j,s.addedKeys[j])}},
_detachInstance:function(idx){var inst=this._instances[idx];if(!inst.isPlaceholder){for(var i=0;i<inst._children.length;i++){var el=inst._children[i];Polymer.dom(inst.root).appendChild(el)}return inst}},_attachInstance:function(idx,parent,refNode){var inst=this._instances[idx];if(!inst.isPlaceholder)parent.insertBefore(inst.root,refNode)},_detachAndRemoveInstance:function(idx){var inst=this._detachInstance(idx);if(inst)this._pool.push(inst);this._instances.splice(idx,1)},_insertPlaceholder:function(idx,
key){this._instances.splice(idx,0,{isPlaceholder:true,__key__:key})},_stampInstance:function(idx,key){var model={__key__:key};model[this.as]=this.collection.getItem(key);model[this.indexAs]=idx;return this.stamp(model)},_insertInstance:function(idx,key){var inst=this._pool.pop();if(inst){inst.__setProperty(this.as,this.collection.getItem(key),true);inst.__setProperty("__key__",key,true)}else inst=this._stampInstance(idx,key);var beforeRow=this._instances[idx+1];var beforeNode=beforeRow&&!beforeRow.isPlaceholder?
beforeRow._children[0]:this;var parentNode=Polymer.dom(this).parentNode;if(parentNode.localName==this.is){if(beforeNode==this)beforeNode=parentNode;parentNode=Polymer.dom(parentNode).parentNode}Polymer.dom(parentNode).insertBefore(inst.root,beforeNode);this._instances[idx]=inst;return inst},_downgradeInstance:function(idx,key){var inst=this._detachInstance(idx);if(inst)this._pool.push(inst);inst={isPlaceholder:true,__key__:key};this._instances[idx]=inst;return inst},_showHideChildren:function(hidden){for(var i=
0;i<this._instances.length;i++)if(!this._instances[i].isPlaceholder)this._instances[i]._showHideChildren(hidden)},_forwardInstanceProp:function(inst,prop,value){if(prop==this.as){var idx;if(this._sortFn||this._filterFn)idx=this.items.indexOf(this.collection.getItem(inst.__key__));else idx=inst[this.indexAs];this.set("items."+idx,value)}},_forwardInstancePath:function(inst,path,value){if(path.indexOf(this.as+".")===0)this._notifyPath("items."+inst.__key__+"."+path.slice(this.as.length+1),value)},_forwardParentProp:function(prop,
value){var i$=this._instances;for(var i=0,inst;i<i$.length&&(inst=i$[i]);i++)if(!inst.isPlaceholder)inst.__setProperty(prop,value,true)},_forwardParentPath:function(path,value){var i$=this._instances;for(var i=0,inst;i<i$.length&&(inst=i$[i]);i++)if(!inst.isPlaceholder)inst._notifyPath(path,value,true)},_forwardItemPath:function(path,value){if(this._keyToInstIdx){var dot=path.indexOf(".");var key=path.substring(0,dot<0?path.length:dot);var idx=this._keyToInstIdx[key];var inst=this._instances[idx];
if(inst&&!inst.isPlaceholder)if(dot>=0){path=this.as+"."+path.substring(dot+1);inst._notifyPath(path,value,true)}else inst.__setProperty(this.as,value,true)}},itemForElement:function(el){var instance=this.modelForElement(el);return instance&&instance[this.as]},keyForElement:function(el){var instance=this.modelForElement(el);return instance&&instance.__key__},indexForElement:function(el){var instance=this.modelForElement(el);return instance&&instance[this.indexAs]}});
Polymer({is:"array-selector",_template:null,properties:{items:{type:Array,observer:"clearSelection"},multi:{type:Boolean,value:false,observer:"clearSelection"},selected:{type:Object,notify:true},selectedItem:{type:Object,notify:true},toggle:{type:Boolean,value:false}},clearSelection:function(){if(Array.isArray(this.selected))for(var i=0;i<this.selected.length;i++)this.unlinkPaths("selected."+i);else{this.unlinkPaths("selected");this.unlinkPaths("selectedItem")}if(this.multi){if(!this.selected||this.selected.length){this.selected=
[];this._selectedColl=Polymer.Collection.get(this.selected)}}else{this.selected=null;this._selectedColl=null}this.selectedItem=null},isSelected:function(item){if(this.multi)return this._selectedColl.getKey(item)!==undefined;else return this.selected==item},deselect:function(item){if(this.multi){if(this.isSelected(item)){var skey=this._selectedColl.getKey(item);this.arrayDelete("selected",item);this.unlinkPaths("selected."+skey)}}else{this.selected=null;this.selectedItem=null;this.unlinkPaths("selected");
this.unlinkPaths("selectedItem")}},select:function(item){var icol=Polymer.Collection.get(this.items);var key=icol.getKey(item);if(this.multi)if(this.isSelected(item)){if(this.toggle)this.deselect(item)}else{this.push("selected",item);var skey=this._selectedColl.getKey(item);this.linkPaths("selected."+skey,"items."+key)}else if(this.toggle&&item==this.selected)this.deselect();else{this.selected=item;this.selectedItem=item;this.linkPaths("selected","items."+key);this.linkPaths("selectedItem","items."+
key)}}});
Polymer({is:"dom-if","extends":"template",_template:null,properties:{"if":{type:Boolean,value:false,observer:"_queueRender"},restamp:{type:Boolean,value:false,observer:"_queueRender"},notifyDomChange:{type:Boolean}},behaviors:[Polymer.Templatizer],_queueRender:function(){this._debounceTemplate(this._render)},detached:function(){var parentNode=this.parentNode;if(parentNode&&parentNode.localName==this.is)parentNode=Polymer.dom(parentNode).parentNode;if(!parentNode||parentNode.nodeType==Node.DOCUMENT_FRAGMENT_NODE&&(!Polymer.Settings.hasShadow||
!(parentNode instanceof ShadowRoot)))this._teardownInstance()},attached:function(){if(this["if"]&&this.ctor)this.async(this._ensureInstance)},render:function(){this._flushTemplates()},_render:function(){if(this["if"]){if(!this.ctor)this.templatize(this);this._ensureInstance();this._showHideChildren()}else if(this.restamp)this._teardownInstance();if(!this.restamp&&this._instance)this._showHideChildren();if(this["if"]!=this._lastIf){if(!Polymer.Settings.suppressTemplateNotifications||this.notifyDomChange)this.fire("dom-change");
this._lastIf=this["if"]}},_ensureInstance:function(){var refNode;var parentNode=Polymer.dom(this).parentNode;if(parentNode&&parentNode.localName==this.is){refNode=parentNode;parentNode=Polymer.dom(parentNode).parentNode}else refNode=this;if(parentNode)if(!this._instance){this._instance=this.stamp();var root=this._instance.root;Polymer.dom(parentNode).insertBefore(root,refNode)}else{var c$=this._instance._children;if(c$&&c$.length){var lastChild=Polymer.dom(refNode).previousSibling;if(lastChild!==
c$[c$.length-1])for(var i=0,n;i<c$.length&&(n=c$[i]);i++)Polymer.dom(parentNode).insertBefore(n,refNode)}}},_teardownInstance:function(){if(this._instance){var c$=this._instance._children;if(c$&&c$.length){var parent=Polymer.dom(Polymer.dom(c$[0]).parentNode);if(parent)for(var i=0,n;i<c$.length&&(n=c$[i]);i++)parent.removeChild(n)}this._instance=null}},_showHideChildren:function(){var hidden=this.__hideTemplateChildren__||!this["if"];if(this._instance)this._instance._showHideChildren(hidden)},_forwardParentProp:function(prop,
value){if(this._instance)this._instance.__setProperty(prop,value,true)},_forwardParentPath:function(path,value){if(this._instance)this._instance._notifyPath(path,value,true)}});
Polymer({is:"dom-bind",properties:{notifyDomChange:{type:Boolean}},"extends":"template",_template:null,created:function(){if(Polymer.Settings.strictTemplatePolicy)throw new Error("strictTemplatePolicy: dom-bind not allowed");var self=this;Polymer.RenderStatus.whenReady(function(){if(document.readyState=="loading")document.addEventListener("DOMContentLoaded",function(){self._markImportsReady()});else self._markImportsReady()})},_ensureReady:function(){if(!this._readied)this._readySelf()},_markImportsReady:function(){this._importsReady=
true;this._ensureReady()},_registerFeatures:function(){this._prepConstructor()},_insertChildren:function(){var refNode;var parentNode=Polymer.dom(this).parentNode;if(parentNode.localName==this.is){refNode=parentNode;parentNode=Polymer.dom(parentNode).parentNode}else refNode=this;Polymer.dom(parentNode).insertBefore(this.root,refNode)},_removeChildren:function(){if(this._children)for(var i=0;i<this._children.length;i++)this.root.appendChild(this._children[i])},_initFeatures:function(){},_scopeElementClass:function(element,
selector){if(this.dataHost)return this.dataHost._scopeElementClass(element,selector);else return selector},_configureInstanceProperties:function(){},_prepConfigure:function(){var config={};for(var prop in this._propertyEffects)config[prop]=this[prop];var setupConfigure=this._setupConfigure;this._setupConfigure=function(){setupConfigure.call(this,config)}},attached:function(){if(this._importsReady)this.render()},detached:function(){this._removeChildren()},render:function(){this._ensureReady();if(!this._children){this._template=
this;this._prepAnnotations();this._prepEffects();this._prepBehaviors();this._prepConfigure();this._prepBindings();this._prepPropertyInfo();Polymer.Base._initFeatures.call(this);this._children=Polymer.TreeApi.arrayCopyChildNodes(this.root)}this._insertChildren();if(!Polymer.Settings.suppressTemplateNotifications||this.notifyDomChange)this.fire("dom-change")}});
'use strict';
var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.arrayIteratorImpl = function(array) {
  var index = 0;
  return function() {
    return index < array.length ? {done:!1, value:array[index++]} : {done:!0};
  };
};
$jscomp.arrayIterator = function(array) {
  return {next:$jscomp.arrayIteratorImpl(array)};
};
$jscomp.makeIterator = function(iterable) {
  var iteratorFunction = "undefined" != typeof Symbol && Symbol.iterator && iterable[Symbol.iterator];
  return iteratorFunction ? iteratorFunction.call(iterable) : $jscomp.arrayIterator(iterable);
};
$jscomp.arrayFromIterator = function(iterator) {
  for (var i, arr = []; !(i = iterator.next()).done;) {
    arr.push(i.value);
  }
  return arr;
};
$jscomp.arrayFromIterable = function(iterable) {
  return iterable instanceof Array ? iterable : $jscomp.arrayFromIterator($jscomp.makeIterator(iterable));
};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.SIMPLE_FROUND_POLYFILL = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(target, property, descriptor) {
  target != Array.prototype && target != Object.prototype && (target[property] = descriptor.value);
};
$jscomp.getGlobal = function(maybeGlobal) {
  return "undefined" != typeof window && window === maybeGlobal ? maybeGlobal : "undefined" != typeof global && null != global ? global : maybeGlobal;
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function(target, polyfill) {
  if (polyfill) {
    for (var obj = $jscomp.global, split = target.split("."), i = 0; i < split.length - 1; i++) {
      var key = split[i];
      key in obj || (obj[key] = {});
      obj = obj[key];
    }
    var property = split[split.length - 1], orig = obj[property], impl = polyfill(orig);
    impl != orig && null != impl && $jscomp.defineProperty(obj, property, {configurable:!0, writable:!0, value:impl});
  }
};
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function() {
  $jscomp.initSymbol = function() {
  };
  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);
};
$jscomp.SymbolClass = function(id, opt_description) {
  this.$jscomp$symbol$id_ = id;
  $jscomp.defineProperty(this, "description", {configurable:!0, writable:!0, value:opt_description});
};
$jscomp.SymbolClass.prototype.toString = function() {
  return this.$jscomp$symbol$id_;
};
$jscomp.Symbol = function() {
  function Symbol(opt_description) {
    if (this instanceof Symbol) {
      throw new TypeError("Symbol is not a constructor");
    }
    return new $jscomp.SymbolClass($jscomp.SYMBOL_PREFIX + (opt_description || "") + "_" + counter++, opt_description);
  }
  var counter = 0;
  return Symbol;
}();
$jscomp.initSymbolIterator = function() {
  $jscomp.initSymbol();
  var symbolIterator = $jscomp.global.Symbol.iterator;
  symbolIterator || (symbolIterator = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("Symbol.iterator"));
  "function" != typeof Array.prototype[symbolIterator] && $jscomp.defineProperty(Array.prototype, symbolIterator, {configurable:!0, writable:!0, value:function() {
    return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this));
  }});
  $jscomp.initSymbolIterator = function() {
  };
};
$jscomp.initSymbolAsyncIterator = function() {
  $jscomp.initSymbol();
  var symbolAsyncIterator = $jscomp.global.Symbol.asyncIterator;
  symbolAsyncIterator || (symbolAsyncIterator = $jscomp.global.Symbol.asyncIterator = $jscomp.global.Symbol("Symbol.asyncIterator"));
  $jscomp.initSymbolAsyncIterator = function() {
  };
};
$jscomp.iteratorPrototype = function(next) {
  $jscomp.initSymbolIterator();
  var iterator = {next:next};
  iterator[$jscomp.global.Symbol.iterator] = function() {
    return this;
  };
  return iterator;
};
$jscomp.iteratorFromArray = function(array, transform) {
  $jscomp.initSymbolIterator();
  array instanceof String && (array += "");
  var i = 0, iter = {next:function() {
    if (i < array.length) {
      var index = i++;
      return {value:transform(index, array[index]), done:!1};
    }
    iter.next = function() {
      return {done:!0, value:void 0};
    };
    return iter.next();
  }};
  iter[Symbol.iterator] = function() {
    return iter;
  };
  return iter;
};
$jscomp.polyfill("Array.prototype.entries", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function() {
    return $jscomp.iteratorFromArray(this, function(i, v) {
      return [i, v];
    });
  };
  return polyfill;
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.keys", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function() {
    return $jscomp.iteratorFromArray(this, function(i) {
      return i;
    });
  };
  return polyfill;
}, "es6", "es3");
$jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.polyfill("Promise", function(NativePromise) {
  function AsyncExecutor() {
    this.batch_ = null;
  }
  function resolvingPromise(opt_value) {
    return opt_value instanceof PolyfillPromise ? opt_value : new PolyfillPromise(function(resolve) {
      resolve(opt_value);
    });
  }
  if (NativePromise && !$jscomp.FORCE_POLYFILL_PROMISE) {
    return NativePromise;
  }
  AsyncExecutor.prototype.asyncExecute = function(f) {
    if (null == this.batch_) {
      this.batch_ = [];
      var self = this;
      this.asyncExecuteFunction(function() {
        self.executeBatch_();
      });
    }
    this.batch_.push(f);
  };
  var nativeSetTimeout = $jscomp.global.setTimeout;
  AsyncExecutor.prototype.asyncExecuteFunction = function(f) {
    nativeSetTimeout(f, 0);
  };
  AsyncExecutor.prototype.executeBatch_ = function() {
    for (; this.batch_ && this.batch_.length;) {
      var executingBatch = this.batch_;
      this.batch_ = [];
      for (var i = 0; i < executingBatch.length; ++i) {
        var f = executingBatch[i];
        executingBatch[i] = null;
        try {
          f();
        } catch (error) {
          this.asyncThrow_(error);
        }
      }
    }
    this.batch_ = null;
  };
  AsyncExecutor.prototype.asyncThrow_ = function(exception) {
    this.asyncExecuteFunction(function() {
      throw exception;
    });
  };
  var PromiseState = {PENDING:0, FULFILLED:1, REJECTED:2}, PolyfillPromise = function(executor) {
    this.state_ = PromiseState.PENDING;
    this.result_ = void 0;
    this.onSettledCallbacks_ = [];
    var resolveAndReject = this.createResolveAndReject_();
    try {
      executor(resolveAndReject.resolve, resolveAndReject.reject);
    } catch (e) {
      resolveAndReject.reject(e);
    }
  };
  PolyfillPromise.prototype.createResolveAndReject_ = function() {
    function firstCallWins(method) {
      return function(x) {
        alreadyCalled || (alreadyCalled = !0, method.call(thisPromise, x));
      };
    }
    var thisPromise = this, alreadyCalled = !1;
    return {resolve:firstCallWins(this.resolveTo_), reject:firstCallWins(this.reject_)};
  };
  PolyfillPromise.prototype.resolveTo_ = function(value) {
    if (value === this) {
      this.reject_(new TypeError("A Promise cannot resolve to itself"));
    } else {
      if (value instanceof PolyfillPromise) {
        this.settleSameAsPromise_(value);
      } else {
        a: {
          switch(typeof value) {
            case "object":
              var JSCompiler_inline_result = null != value;
              break a;
            case "function":
              JSCompiler_inline_result = !0;
              break a;
            default:
              JSCompiler_inline_result = !1;
              break a;
          }
          JSCompiler_inline_result = void 0;
        }
        JSCompiler_inline_result ? this.resolveToNonPromiseObj_(value) : this.fulfill_(value);
      }
    }
  };
  PolyfillPromise.prototype.resolveToNonPromiseObj_ = function(obj) {
    var thenMethod = void 0;
    try {
      thenMethod = obj.then;
    } catch (error) {
      this.reject_(error);
      return;
    }
    "function" == typeof thenMethod ? this.settleSameAsThenable_(thenMethod, obj) : this.fulfill_(obj);
  };
  PolyfillPromise.prototype.reject_ = function(reason) {
    this.settle_(PromiseState.REJECTED, reason);
  };
  PolyfillPromise.prototype.fulfill_ = function(value) {
    this.settle_(PromiseState.FULFILLED, value);
  };
  PolyfillPromise.prototype.settle_ = function(settledState, valueOrReason) {
    if (this.state_ != PromiseState.PENDING) {
      throw Error("Cannot settle(" + settledState + ", " + valueOrReason + "): Promise already settled in state" + this.state_);
    }
    this.state_ = settledState;
    this.result_ = valueOrReason;
    this.executeOnSettledCallbacks_();
  };
  PolyfillPromise.prototype.executeOnSettledCallbacks_ = function() {
    if (null != this.onSettledCallbacks_) {
      for (var i = 0; i < this.onSettledCallbacks_.length; ++i) {
        asyncExecutor.asyncExecute(this.onSettledCallbacks_[i]);
      }
      this.onSettledCallbacks_ = null;
    }
  };
  var asyncExecutor = new AsyncExecutor;
  PolyfillPromise.prototype.settleSameAsPromise_ = function(promise) {
    var methods = this.createResolveAndReject_();
    promise.callWhenSettled_(methods.resolve, methods.reject);
  };
  PolyfillPromise.prototype.settleSameAsThenable_ = function(thenMethod, thenable) {
    var methods = this.createResolveAndReject_();
    try {
      thenMethod.call(thenable, methods.resolve, methods.reject);
    } catch (error) {
      methods.reject(error);
    }
  };
  PolyfillPromise.prototype.then = function(onFulfilled, onRejected) {
    function createCallback(paramF, defaultF) {
      return "function" == typeof paramF ? function(x) {
        try {
          resolveChild(paramF(x));
        } catch (error) {
          rejectChild(error);
        }
      } : defaultF;
    }
    var resolveChild, rejectChild, childPromise = new PolyfillPromise(function(resolve, reject) {
      resolveChild = resolve;
      rejectChild = reject;
    });
    this.callWhenSettled_(createCallback(onFulfilled, resolveChild), createCallback(onRejected, rejectChild));
    return childPromise;
  };
  PolyfillPromise.prototype.catch = function(onRejected) {
    return this.then(void 0, onRejected);
  };
  PolyfillPromise.prototype.callWhenSettled_ = function(onFulfilled, onRejected) {
    function callback() {
      switch(thisPromise.state_) {
        case PromiseState.FULFILLED:
          onFulfilled(thisPromise.result_);
          break;
        case PromiseState.REJECTED:
          onRejected(thisPromise.result_);
          break;
        default:
          throw Error("Unexpected state: " + thisPromise.state_);
      }
    }
    var thisPromise = this;
    null == this.onSettledCallbacks_ ? asyncExecutor.asyncExecute(callback) : this.onSettledCallbacks_.push(callback);
  };
  PolyfillPromise.resolve = resolvingPromise;
  PolyfillPromise.reject = function(opt_reason) {
    return new PolyfillPromise(function(resolve, reject) {
      reject(opt_reason);
    });
  };
  PolyfillPromise.race = function(thenablesOrValues) {
    return new PolyfillPromise(function(resolve, reject) {
      for (var iterator = $jscomp.makeIterator(thenablesOrValues), iterRec = iterator.next(); !iterRec.done; iterRec = iterator.next()) {
        resolvingPromise(iterRec.value).callWhenSettled_(resolve, reject);
      }
    });
  };
  PolyfillPromise.all = function(thenablesOrValues) {
    var iterator = $jscomp.makeIterator(thenablesOrValues), iterRec = iterator.next();
    return iterRec.done ? resolvingPromise([]) : new PolyfillPromise(function(resolveAll, rejectAll) {
      function onFulfilled(i) {
        return function(ithResult) {
          resultsArray[i] = ithResult;
          unresolvedCount--;
          0 == unresolvedCount && resolveAll(resultsArray);
        };
      }
      var resultsArray = [], unresolvedCount = 0;
      do {
        resultsArray.push(void 0), unresolvedCount++, resolvingPromise(iterRec.value).callWhenSettled_(onFulfilled(resultsArray.length - 1), rejectAll), iterRec = iterator.next();
      } while (!iterRec.done);
    });
  };
  return PolyfillPromise;
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.fill", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function(value, opt_start, opt_end) {
    var length = this.length || 0;
    0 > opt_start && (opt_start = Math.max(0, length + opt_start));
    if (null == opt_end || opt_end > length) {
      opt_end = length;
    }
    opt_end = Number(opt_end);
    0 > opt_end && (opt_end = Math.max(0, length + opt_end));
    for (var i = Number(opt_start || 0); i < opt_end; i++) {
      this[i] = value;
    }
    return this;
  };
  return polyfill;
}, "es6", "es3");
$jscomp.polyfill("Math.sign", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function(x) {
    x = Number(x);
    return 0 === x || isNaN(x) ? x : 0 < x ? 1 : -1;
  };
  return polyfill;
}, "es6", "es3");
$jscomp.polyfill("Math.log10", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function(x) {
    return Math.log(x) / Math.LN10;
  };
  return polyfill;
}, "es6", "es3");
$jscomp.polyfill("Math.log2", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function(x) {
    return Math.log(x) / Math.LN2;
  };
  return polyfill;
}, "es6", "es3");
$jscomp.findInternal = function(array, callback, thisArg) {
  array instanceof String && (array = String(array));
  for (var len = array.length, i = 0; i < len; i++) {
    var value = array[i];
    if (callback.call(thisArg, value, i, array)) {
      return {i:i, v:value};
    }
  }
  return {i:-1, v:void 0};
};
$jscomp.checkStringArgs = function(thisArg, arg, func) {
  if (null == thisArg) {
    throw new TypeError("The 'this' value for String.prototype." + func + " must not be null or undefined");
  }
  if (arg instanceof RegExp) {
    throw new TypeError("First argument to String.prototype." + func + " must not be a regular expression");
  }
  return thisArg + "";
};
$jscomp.polyfill("String.prototype.endsWith", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function(searchString, opt_position) {
    var string = $jscomp.checkStringArgs(this, searchString, "endsWith");
    searchString += "";
    void 0 === opt_position && (opt_position = string.length);
    for (var i = Math.max(0, Math.min(opt_position | 0, string.length)), j = searchString.length; 0 < j && 0 < i;) {
      if (string[--i] != searchString[--j]) {
        return !1;
      }
    }
    return 0 >= j;
  };
  return polyfill;
}, "es6", "es3");
$jscomp.polyfill("String.prototype.startsWith", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function(searchString, opt_position) {
    var string = $jscomp.checkStringArgs(this, searchString, "startsWith");
    searchString += "";
    for (var strLen = string.length, searchLen = searchString.length, i = Math.max(0, Math.min(opt_position | 0, string.length)), j = 0; j < searchLen && i < strLen;) {
      if (string[i++] != searchString[j++]) {
        return !1;
      }
    }
    return j >= searchLen;
  };
  return polyfill;
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.values", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function() {
    return $jscomp.iteratorFromArray(this, function(k, v) {
      return v;
    });
  };
  return polyfill;
}, "es8", "es3");
$jscomp.owns = function(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};
$jscomp.assign = "function" == typeof Object.assign ? Object.assign : function(target, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    if (source) {
      for (var key in source) {
        $jscomp.owns(source, key) && (target[key] = source[key]);
      }
    }
  }
  return target;
};
$jscomp.polyfill("Object.assign", function(orig) {
  return orig || $jscomp.assign;
}, "es6", "es3");
$jscomp.polyfill("Object.values", function(orig) {
  if (orig) {
    return orig;
  }
  var values = function(obj) {
    var result = [], key;
    for (key in obj) {
      $jscomp.owns(obj, key) && result.push(obj[key]);
    }
    return result;
  };
  return values;
}, "es8", "es3");
$jscomp.polyfill("Number.parseInt", function(orig) {
  return orig || parseInt;
}, "es6", "es3");
$jscomp.checkEs6ConformanceViaProxy = function() {
  try {
    var proxied = {}, proxy = Object.create(new $jscomp.global.Proxy(proxied, {get:function(target, key, receiver) {
      return target == proxied && "q" == key && receiver == proxy;
    }}));
    return !0 === proxy.q;
  } catch (err) {
    return !1;
  }
};
$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS = !1;
$jscomp.ES6_CONFORMANCE = $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS && $jscomp.checkEs6ConformanceViaProxy();
$jscomp.polyfill("WeakMap", function(NativeWeakMap) {
  function isConformant() {
    if (!NativeWeakMap || !Object.seal) {
      return !1;
    }
    try {
      var x = Object.seal({}), y = Object.seal({}), map = new NativeWeakMap([[x, 2], [y, 3]]);
      if (2 != map.get(x) || 3 != map.get(y)) {
        return !1;
      }
      map.delete(x);
      map.set(y, 4);
      return !map.has(x) && 4 == map.get(y);
    } catch (err) {
      return !1;
    }
  }
  function WeakMapMembership() {
  }
  function isValidKey(key) {
    var type = typeof key;
    return "object" === type && null !== key || "function" === type;
  }
  function insert(target) {
    if (!$jscomp.owns(target, prop)) {
      var obj = new WeakMapMembership;
      $jscomp.defineProperty(target, prop, {value:obj});
    }
  }
  function patch(name) {
    var prev = Object[name];
    prev && (Object[name] = function(target) {
      if (target instanceof WeakMapMembership) {
        return target;
      }
      insert(target);
      return prev(target);
    });
  }
  if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
    if (NativeWeakMap && $jscomp.ES6_CONFORMANCE) {
      return NativeWeakMap;
    }
  } else {
    if (isConformant()) {
      return NativeWeakMap;
    }
  }
  var prop = "$jscomp_hidden_" + Math.random();
  patch("freeze");
  patch("preventExtensions");
  patch("seal");
  var index = 0, PolyfillWeakMap = function(opt_iterable) {
    this.id_ = (index += Math.random() + 1).toString();
    if (opt_iterable) {
      for (var iter = $jscomp.makeIterator(opt_iterable), entry; !(entry = iter.next()).done;) {
        var item = entry.value;
        this.set(item[0], item[1]);
      }
    }
  };
  PolyfillWeakMap.prototype.set = function(key, value) {
    if (!isValidKey(key)) {
      throw Error("Invalid WeakMap key");
    }
    insert(key);
    if (!$jscomp.owns(key, prop)) {
      throw Error("WeakMap key fail: " + key);
    }
    key[prop][this.id_] = value;
    return this;
  };
  PolyfillWeakMap.prototype.get = function(key) {
    return isValidKey(key) && $jscomp.owns(key, prop) ? key[prop][this.id_] : void 0;
  };
  PolyfillWeakMap.prototype.has = function(key) {
    return isValidKey(key) && $jscomp.owns(key, prop) && $jscomp.owns(key[prop], this.id_);
  };
  PolyfillWeakMap.prototype.delete = function(key) {
    return isValidKey(key) && $jscomp.owns(key, prop) && $jscomp.owns(key[prop], this.id_) ? delete key[prop][this.id_] : !1;
  };
  return PolyfillWeakMap;
}, "es6", "es3");
$jscomp.MapEntry = function() {
};
$jscomp.polyfill("Map", function(NativeMap) {
  function isConformant() {
    if ($jscomp.ASSUME_NO_NATIVE_MAP || !NativeMap || "function" != typeof NativeMap || !NativeMap.prototype.entries || "function" != typeof Object.seal) {
      return !1;
    }
    try {
      var key = Object.seal({x:4}), map = new NativeMap($jscomp.makeIterator([[key, "s"]]));
      if ("s" != map.get(key) || 1 != map.size || map.get({x:4}) || map.set({x:4}, "t") != map || 2 != map.size) {
        return !1;
      }
      var iter = map.entries(), item = iter.next();
      if (item.done || item.value[0] != key || "s" != item.value[1]) {
        return !1;
      }
      item = iter.next();
      return item.done || 4 != item.value[0].x || "t" != item.value[1] || !iter.next().done ? !1 : !0;
    } catch (err) {
      return !1;
    }
  }
  if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
    if (NativeMap && $jscomp.ES6_CONFORMANCE) {
      return NativeMap;
    }
  } else {
    if (isConformant()) {
      return NativeMap;
    }
  }
  $jscomp.initSymbolIterator();
  var idMap = new WeakMap, PolyfillMap = function(opt_iterable) {
    this.data_ = {};
    this.head_ = createHead();
    this.size = 0;
    if (opt_iterable) {
      for (var iter = $jscomp.makeIterator(opt_iterable), entry; !(entry = iter.next()).done;) {
        var item = entry.value;
        this.set(item[0], item[1]);
      }
    }
  };
  PolyfillMap.prototype.set = function(key, value) {
    key = 0 === key ? 0 : key;
    var r = maybeGetEntry(this, key);
    r.list || (r.list = this.data_[r.id] = []);
    r.entry ? r.entry.value = value : (r.entry = {next:this.head_, previous:this.head_.previous, head:this.head_, key:key, value:value}, r.list.push(r.entry), this.head_.previous.next = r.entry, this.head_.previous = r.entry, this.size++);
    return this;
  };
  PolyfillMap.prototype.delete = function(key) {
    var r = maybeGetEntry(this, key);
    return r.entry && r.list ? (r.list.splice(r.index, 1), r.list.length || delete this.data_[r.id], r.entry.previous.next = r.entry.next, r.entry.next.previous = r.entry.previous, r.entry.head = null, this.size--, !0) : !1;
  };
  PolyfillMap.prototype.clear = function() {
    this.data_ = {};
    this.head_ = this.head_.previous = createHead();
    this.size = 0;
  };
  PolyfillMap.prototype.has = function(key) {
    return !!maybeGetEntry(this, key).entry;
  };
  PolyfillMap.prototype.get = function(key) {
    var entry = maybeGetEntry(this, key).entry;
    return entry && entry.value;
  };
  PolyfillMap.prototype.entries = function() {
    return makeIterator(this, function(entry) {
      return [entry.key, entry.value];
    });
  };
  PolyfillMap.prototype.keys = function() {
    return makeIterator(this, function(entry) {
      return entry.key;
    });
  };
  PolyfillMap.prototype.values = function() {
    return makeIterator(this, function(entry) {
      return entry.value;
    });
  };
  PolyfillMap.prototype.forEach = function(callback, opt_thisArg) {
    for (var iter = this.entries(), item; !(item = iter.next()).done;) {
      var entry = item.value;
      callback.call(opt_thisArg, entry[1], entry[0], this);
    }
  };
  PolyfillMap.prototype[Symbol.iterator] = PolyfillMap.prototype.entries;
  var maybeGetEntry = function(map, key) {
    var obj = key, type = obj && typeof obj;
    if ("object" == type || "function" == type) {
      if (idMap.has(obj)) {
        var id = idMap.get(obj);
      } else {
        var id$jscomp$0 = "" + ++mapIndex;
        idMap.set(obj, id$jscomp$0);
        id = id$jscomp$0;
      }
    } else {
      id = "p_" + obj;
    }
    var list = map.data_[id];
    if (list && $jscomp.owns(map.data_, id)) {
      for (var index = 0; index < list.length; index++) {
        var entry = list[index];
        if (key !== key && entry.key !== entry.key || key === entry.key) {
          return {id:id, list:list, index:index, entry:entry};
        }
      }
    }
    return {id:id, list:list, index:-1, entry:void 0};
  }, makeIterator = function(map, func) {
    var entry = map.head_;
    return $jscomp.iteratorPrototype(function() {
      if (entry) {
        for (; entry.head != map.head_;) {
          entry = entry.previous;
        }
        for (; entry.next != entry.head;) {
          return entry = entry.next, {done:!1, value:func(entry)};
        }
        entry = null;
      }
      return {done:!0, value:void 0};
    });
  }, createHead = function() {
    var head = {};
    return head.previous = head.next = head.head = head;
  }, mapIndex = 0;
  return PolyfillMap;
}, "es6", "es3");
$jscomp.polyfill("Set", function(NativeSet) {
  function isConformant() {
    if ($jscomp.ASSUME_NO_NATIVE_SET || !NativeSet || "function" != typeof NativeSet || !NativeSet.prototype.entries || "function" != typeof Object.seal) {
      return !1;
    }
    try {
      var value = Object.seal({x:4}), set = new NativeSet($jscomp.makeIterator([value]));
      if (!set.has(value) || 1 != set.size || set.add(value) != set || 1 != set.size || set.add({x:4}) != set || 2 != set.size) {
        return !1;
      }
      var iter = set.entries(), item = iter.next();
      if (item.done || item.value[0] != value || item.value[1] != value) {
        return !1;
      }
      item = iter.next();
      return item.done || item.value[0] == value || 4 != item.value[0].x || item.value[1] != item.value[0] ? !1 : iter.next().done;
    } catch (err) {
      return !1;
    }
  }
  if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {
    if (NativeSet && $jscomp.ES6_CONFORMANCE) {
      return NativeSet;
    }
  } else {
    if (isConformant()) {
      return NativeSet;
    }
  }
  $jscomp.initSymbolIterator();
  var PolyfillSet = function(opt_iterable) {
    this.map_ = new Map;
    if (opt_iterable) {
      for (var iter = $jscomp.makeIterator(opt_iterable), entry; !(entry = iter.next()).done;) {
        var item = entry.value;
        this.add(item);
      }
    }
    this.size = this.map_.size;
  };
  PolyfillSet.prototype.add = function(value) {
    value = 0 === value ? 0 : value;
    this.map_.set(value, value);
    this.size = this.map_.size;
    return this;
  };
  PolyfillSet.prototype.delete = function(value) {
    var result = this.map_.delete(value);
    this.size = this.map_.size;
    return result;
  };
  PolyfillSet.prototype.clear = function() {
    this.map_.clear();
    this.size = 0;
  };
  PolyfillSet.prototype.has = function(value) {
    return this.map_.has(value);
  };
  PolyfillSet.prototype.entries = function() {
    return this.map_.entries();
  };
  PolyfillSet.prototype.values = function() {
    return this.map_.values();
  };
  PolyfillSet.prototype.keys = PolyfillSet.prototype.values;
  PolyfillSet.prototype[Symbol.iterator] = PolyfillSet.prototype.values;
  PolyfillSet.prototype.forEach = function(callback, opt_thisArg) {
    var set = this;
    this.map_.forEach(function(value) {
      return callback.call(opt_thisArg, value, value, set);
    });
  };
  return PolyfillSet;
}, "es6", "es3");
var goog = goog || {};
goog.global = this || self;
goog.isDef = function(val) {
  return void 0 !== val;
};
goog.isString = function(val) {
  return "string" == typeof val;
};
goog.isBoolean = function(val) {
  return "boolean" == typeof val;
};
goog.isNumber = function(val) {
  return "number" == typeof val;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split("."), cur = opt_objectToExportTo || goog.global;
  parts[0] in cur || "undefined" == typeof cur.execScript || cur.execScript("var " + parts[0]);
  for (var part; parts.length && (part = parts.shift());) {
    parts.length || void 0 === opt_object ? cur = cur[part] && cur[part] !== Object.prototype[part] ? cur[part] : cur[part] = {} : cur[part] = opt_object;
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  return value;
};
goog.FEATURESET_YEAR = 2012;
goog.DEBUG = !0;
goog.LOCALE = "en";
goog.TRUSTED_SITE = !0;
goog.STRICT_MODE_COMPATIBLE = !1;
goog.DISALLOW_TEST_ONLY_CODE = !goog.DEBUG;
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide cannot be used within a module.");
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  goog.exportPath_(name, opt_obj);
};
goog.getScriptNonce = function(opt_window) {
  if (opt_window && opt_window != goog.global) {
    return goog.getScriptNonce_(opt_window.document);
  }
  null === goog.cspNonce_ && (goog.cspNonce_ = goog.getScriptNonce_(goog.global.document));
  return goog.cspNonce_;
};
goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
goog.cspNonce_ = null;
goog.getScriptNonce_ = function(doc) {
  var script = doc.querySelector && doc.querySelector("script[nonce]");
  if (script) {
    var nonce = script.nonce || script.getAttribute("nonce");
    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {
      return nonce;
    }
  }
  return "";
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if ("string" !== typeof name || !name || -1 == name.search(goog.VALID_MODULE_RE_)) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInGoogModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function() {
  return null;
};
goog.ModuleType = {ES6:"es6", GOOG:"goog"};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
};
goog.isInGoogModuleLoader_ = function() {
  return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
};
goog.isInEs6ModuleLoader_ = function() {
  var inLoader = !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6;
  if (inLoader) {
    return !0;
  }
  var jscomp = goog.global.$jscomp;
  return jscomp ? "function" != typeof jscomp.getCurrentModulePath ? !1 : !!jscomp.getCurrentModulePath() : !1;
};
goog.module.declareLegacyNamespace = function() {
  goog.moduleLoaderState_.declareLegacyNamespace = !0;
};
goog.declareModuleId = function(namespace) {
  if (goog.moduleLoaderState_) {
    goog.moduleLoaderState_.moduleName = namespace;
  } else {
    var jscomp = goog.global.$jscomp;
    if (!jscomp || "function" != typeof jscomp.getCurrentModulePath) {
      throw Error('Module with namespace "' + namespace + '" has been loaded incorrectly.');
    }
    var exports = jscomp.require(jscomp.getCurrentModulePath());
    goog.loadedModules_[namespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:namespace};
  }
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    throw opt_message = opt_message || "", Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function() {
};
goog.getObjectByName = function(name, opt_obj) {
  for (var parts = name.split("."), cur = opt_obj || goog.global, i = 0; i < parts.length; i++) {
    if (cur = cur[parts[i]], null == cur) {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global, x;
  for (x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function() {
};
goog.useStrictRequires = !1;
goog.ENABLE_DEBUG_LOADER = !0;
goog.logToConsole_ = function(msg) {
  goog.global.console && goog.global.console.error(msg);
};
goog.require = function() {
};
goog.requireType = function() {
  return {};
};
goog.basePath = "";
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = void 0;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor);
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = !0;
goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !1;
goog.TRANSPILE = "detect";
goog.ASSUME_ES_MODULES_TRANSPILED = !1;
goog.TRANSPILE_TO_LANGUAGE = "";
goog.TRANSPILER = "transpile.js";
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (null == goog.hasBadLetScoping) {
    try {
      var hasBadLetScoping = !eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";');
    } catch (e) {
      hasBadLetScoping = !1;
    }
    goog.hasBadLetScoping = hasBadLetScoping;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(moduleDef) {
  return "(function(){" + moduleDef + "\n;})();\n";
};
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:"", declareLegacyNamespace:!1, type:goog.ModuleType.GOOG};
    if (goog.isFunction(moduleDef)) {
      var exports = moduleDef.call(void 0, {});
    } else {
      if ("string" === typeof moduleDef) {
        goog.useSafari10Workaround() && (moduleDef = goog.workaroundSafari10EvalBug(moduleDef)), exports = goog.loadModuleFromSource_.call(void 0, moduleDef);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if ("string" === typeof moduleName && moduleName) {
      goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(moduleName, exports) : goog.SEAL_MODULE_EXPORTS && Object.seal && "object" == typeof exports && null != exports && Object.seal(exports);
      var data = {exports:exports, type:goog.ModuleType.GOOG, moduleId:goog.moduleLoaderState_.moduleName};
      goog.loadedModules_[moduleName] = data;
    } else {
      throw Error('Invalid module name "' + moduleName + '"');
    }
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function(JSCompiler_OptimizeArgumentsArray_p0) {
  var exports = {};
  eval(JSCompiler_OptimizeArgumentsArray_p0);
  return exports;
};
goog.normalizePath_ = function(path) {
  for (var components = path.split("/"), i = 0; i < components.length;) {
    "." == components[i] ? components.splice(i, 1) : i && ".." == components[i] && components[i - 1] && ".." != components[i - 1] ? components.splice(--i, 2) : i++;
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  }
  try {
    var xhr = new goog.global.XMLHttpRequest;
    xhr.open("get", src, !1);
    xhr.send();
    return 0 == xhr.status || 200 == xhr.status ? xhr.responseText : null;
  } catch (err) {
    return null;
  }
};
goog.transpile_ = function(code$jscomp$0, path$jscomp$0, target) {
  var jscomp = goog.global.$jscomp;
  jscomp || (goog.global.$jscomp = jscomp = {});
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER, transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      (function() {
        (0,eval)(transpilerCode + "\n//# sourceURL=" + transpilerPath);
      }).call(goog.global);
      if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile) {
        throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
      }
      goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;
      jscomp = goog.global.$jscomp;
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    suffix += ' Please add "//javascript/closure:transpiler" as a data dependency to ensure it is included.';
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code$jscomp$0, path$jscomp$0, target);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if ("object" == s) {
    if (value) {
      if (value instanceof Array) {
        return "array";
      }
      if (value instanceof Object) {
        return s;
      }
      var className = Object.prototype.toString.call(value);
      if ("[object Window]" == className) {
        return "object";
      }
      if ("[object Array]" == className || "number" == typeof value.length && "undefined" != typeof value.splice && "undefined" != typeof value.propertyIsEnumerable && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if ("[object Function]" == className || "undefined" != typeof value.call && "undefined" != typeof value.propertyIsEnumerable && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if ("function" == s && "undefined" == typeof value.call) {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return null === val;
};
goog.isDefAndNotNull = function(val) {
  return null != val;
};
goog.isArray = function(val) {
  return "array" == goog.typeOf(val);
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return "array" == type || "object" == type && "number" == typeof val.length;
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && "function" == typeof val.getFullYear;
};
goog.isFunction = function(val) {
  return "function" == goog.typeOf(val);
};
goog.isObject = function(val) {
  var type = typeof val;
  return "object" == type && null != val || "function" == type;
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  null !== obj && "removeAttribute" in obj && obj.removeAttribute(goog.UID_PROPERTY_);
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (1e9 * Math.random() >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if ("object" == type || "array" == type) {
    if ("function" === typeof obj.clone) {
      return obj.clone();
    }
    var clone = "array" == type ? [] : {}, key;
    for (key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw Error();
  }
  if (2 < arguments.length) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  }
  return function() {
    return fn.apply(selfObj, arguments);
  };
};
goog.bind = function(fn, selfObj, var_args) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (null == goog.evalWorksForGlobals_) {
        try {
          goog.global.eval("var _evalTest_ = 1;");
        } catch (ignore) {
        }
        if ("undefined" != typeof goog.global._evalTest_) {
          try {
            delete goog.global._evalTest_;
          } catch (ignore$125) {
          }
          goog.evalWorksForGlobals_ = !0;
        } else {
          goog.evalWorksForGlobals_ = !1;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document, scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = !1;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.head.appendChild(scriptElt);
        doc.head.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.getCssName = function(className, opt_modifier) {
  if ("." == String(className).charAt(0)) {
    throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  }, renameByParts = function(cssName) {
    for (var parts = cssName.split("-"), mapped = [], i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? getMapping : renameByParts : function(a) {
    return a;
  };
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(result) : result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.getMsg = function(str, opt_values, opt_options) {
  opt_options && opt_options.html && (str = str.replace(/</g, "&lt;"));
  opt_values && (str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
    return null != opt_values && key in opt_values ? opt_values[key] : match;
  }));
  return str;
};
goog.getMsgWithFallback = function(a) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    for (var args = Array(arguments.length - 2), i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if ("undefined" !== typeof caller.superClass_) {
    for (var ctorArgs = Array(arguments.length - 1), i = 1; i < arguments.length; i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  if ("string" != typeof opt_methodName && "symbol" != typeof opt_methodName) {
    throw Error("method names provided to goog.base must be a string or a symbol");
  }
  var args = Array(arguments.length - 2);
  for (i = 2; i < arguments.length; i++) {
    args[i - 2] = arguments[i];
  }
  for (var foundCaller = !1, proto = me.constructor.prototype; proto; proto = Object.getPrototypeOf(proto)) {
    if (proto[opt_methodName] === caller) {
      foundCaller = !0;
    } else {
      if (foundCaller) {
        return proto[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  }
  throw Error("goog.base called from a method of one name to a method of a different name");
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a module.");
  }
  fn.call(goog.global);
};
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor, statics = def.statics;
  constructor && constructor != Object.prototype.constructor || (constructor = function() {
    throw Error("cannot instantiate an interface (no constructor defined).");
  });
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  superClass && goog.inherits(cls, superClass);
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  null != statics && (statics instanceof Function ? statics(cls) : goog.defineClass.applyProperties_(cls, statics));
  return cls;
};
goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass), wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function && Object.seal(instance);
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_ = function(target, source) {
  for (var key in source) {
    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i], Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
  }
};
goog.tagUnsealableClass = function() {
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.TRUSTED_TYPES_POLICY_NAME = "";
goog.identity_ = function(s) {
  return s;
};
goog.createTrustedTypesPolicy = function(name) {
  var policy = null, policyFactory = goog.global.trustedTypes || goog.global.TrustedTypes;
  if (!policyFactory || !policyFactory.createPolicy) {
    return policy;
  }
  try {
    policy = policyFactory.createPolicy(name, {createHTML:goog.identity_, createScript:goog.identity_, createScriptURL:goog.identity_, createURL:goog.identity_});
  } catch (e) {
    goog.logToConsole_(e.message);
  }
  return policy;
};
goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null;
/*

Copyright 2010-2017 Mike Bostock
All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

 Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

 Neither the name of the author nor the names of contributors may be used to
  endorse or promote products derived from this software without specific prior
  written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
var d3 = {};
(function() {
  function ascending(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
  }
  function bisector(compare) {
    1 === compare.length && (compare = ascendingComparator(compare));
    return {left:function(a, x, lo, hi) {
      null == lo && (lo = 0);
      null == hi && (hi = a.length);
      for (; lo < hi;) {
        var mid = lo + hi >>> 1;
        0 > compare(a[mid], x) ? lo = mid + 1 : hi = mid;
      }
      return lo;
    }, right:function(a, x, lo, hi) {
      null == lo && (lo = 0);
      null == hi && (hi = a.length);
      for (; lo < hi;) {
        var mid = lo + hi >>> 1;
        0 < compare(a[mid], x) ? hi = mid : lo = mid + 1;
      }
      return lo;
    }};
  }
  function ascendingComparator(f) {
    return function(d, x) {
      return ascending(f(d), x);
    };
  }
  function pairs(array, f) {
    null == f && (f = pair);
    for (var i = 0, n = array.length - 1, p = array[0], pairs = Array(0 > n ? 0 : n); i < n;) {
      pairs[i] = f(p, p = array[++i]);
    }
    return pairs;
  }
  function pair(a, b) {
    return [a, b];
  }
  function cross(values0, values1, reduce) {
    var n0 = values0.length, n1 = values1.length, values = Array(n0 * n1), i0, i1, i;
    null == reduce && (reduce = pair);
    for (i0 = i = 0; i0 < n0; ++i0) {
      var value0 = values0[i0];
      for (i1 = 0; i1 < n1; ++i1, ++i) {
        values[i] = reduce(value0, values1[i1]);
      }
    }
    return values;
  }
  function descending(a, b) {
    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
  }
  function number(x) {
    return null === x ? NaN : +x;
  }
  function variance(values, valueof) {
    var n = values.length, m = 0, i = -1, mean = 0, value, sum = 0;
    if (null == valueof) {
      for (; ++i < n;) {
        if (!isNaN(value = number(values[i]))) {
          var delta = value - mean;
          mean += delta / ++m;
          sum += delta * (value - mean);
        }
      }
    } else {
      for (; ++i < n;) {
        isNaN(value = number(valueof(values[i], i, values))) || (delta = value - mean, mean += delta / ++m, sum += delta * (value - mean));
      }
    }
    if (1 < m) {
      return sum / (m - 1);
    }
  }
  function deviation(array, f) {
    var v = variance(array, f);
    return v ? Math.sqrt(v) : v;
  }
  function extent(values, valueof) {
    var n = values.length, i = -1, value, min, max;
    if (null == valueof) {
      for (; ++i < n;) {
        if (null != (value = values[i]) && value >= value) {
          for (min = max = value; ++i < n;) {
            null != (value = values[i]) && (min > value && (min = value), max < value && (max = value));
          }
        }
      }
    } else {
      for (; ++i < n;) {
        if (null != (value = valueof(values[i], i, values)) && value >= value) {
          for (min = max = value; ++i < n;) {
            null != (value = valueof(values[i], i, values)) && (min > value && (min = value), max < value && (max = value));
          }
        }
      }
    }
    return [min, max];
  }
  function constant(x) {
    return function() {
      return x;
    };
  }
  function identity(x) {
    return x;
  }
  function sequence(start, stop, step) {
    start = +start;
    stop = +stop;
    step = 2 > (n = arguments.length) ? (stop = start, start = 0, 1) : 3 > n ? 1 : +step;
    for (var i = -1, n = Math.max(0, Math.ceil((stop - start) / step)) | 0, range = Array(n); ++i < n;) {
      range[i] = start + i * step;
    }
    return range;
  }
  function ticks(start, stop, count) {
    var reverse, i = -1, ticks, step;
    stop = +stop;
    start = +start;
    count = +count;
    if (start === stop && 0 < count) {
      return [start];
    }
    if (reverse = stop < start) {
      var n = start;
      start = stop;
      stop = n;
    }
    if (0 === (step = tickIncrement(start, stop, count)) || !isFinite(step)) {
      return [];
    }
    if (0 < step) {
      for (start = Math.ceil(start / step), stop = Math.floor(stop / step), ticks = Array(n = Math.ceil(stop - start + 1)); ++i < n;) {
        ticks[i] = (start + i) * step;
      }
    } else {
      for (start = Math.floor(start * step), stop = Math.ceil(stop * step), ticks = Array(n = Math.ceil(start - stop + 1)); ++i < n;) {
        ticks[i] = (start - i) / step;
      }
    }
    reverse && ticks.reverse();
    return ticks;
  }
  function tickIncrement(start, stop, count) {
    var step = (stop - start) / Math.max(0, count), power = Math.floor(Math.log(step) / Math.LN10), error = step / Math.pow(10, power);
    return 0 <= power ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
  }
  function tickStep(start, stop, count) {
    var step0 = Math.abs(stop - start) / Math.max(0, count), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
    error >= e10 ? step1 *= 10 : error >= e5 ? step1 *= 5 : error >= e2 && (step1 *= 2);
    return stop < start ? -step1 : step1;
  }
  function thresholdSturges(values) {
    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
  }
  function histogram() {
    function histogram(data) {
      var i, n = data.length, values = Array(n);
      for (i = 0; i < n; ++i) {
        values[i] = value(data[i], i, data);
      }
      var xz = domain(values), x0 = xz[0], x1 = xz[1], tz = threshold(values, x0, x1);
      Array.isArray(tz) || (tz = tickStep(x0, x1, tz), tz = sequence(Math.ceil(x0 / tz) * tz, x1, tz));
      for (var m = tz.length; tz[0] <= x0;) {
        tz.shift(), --m;
      }
      for (; tz[m - 1] > x1;) {
        tz.pop(), --m;
      }
      var bins = Array(m + 1);
      for (i = 0; i <= m; ++i) {
        var bin = bins[i] = [];
        bin.x0 = 0 < i ? tz[i - 1] : x0;
        bin.x1 = i < m ? tz[i] : x1;
      }
      for (i = 0; i < n; ++i) {
        var x = values[i];
        x0 <= x && x <= x1 && bins[bisectRight(tz, x, 0, m)].push(data[i]);
      }
      return bins;
    }
    var value = identity, domain = extent, threshold = thresholdSturges;
    histogram.value = function(_) {
      return arguments.length ? (value = "function" === typeof _ ? _ : constant(_), histogram) : value;
    };
    histogram.domain = function(_) {
      return arguments.length ? (domain = "function" === typeof _ ? _ : constant([_[0], _[1]]), histogram) : domain;
    };
    histogram.thresholds = function(_) {
      return arguments.length ? (threshold = "function" === typeof _ ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;
    };
    return histogram;
  }
  function threshold(values, p, valueof) {
    null == valueof && (valueof = number);
    if (n = values.length) {
      if (0 >= (p = +p) || 2 > n) {
        return +valueof(values[0], 0, values);
      }
      if (1 <= p) {
        return +valueof(values[n - 1], n - 1, values);
      }
      var n, i = (n - 1) * p, i0 = Math.floor(i), value0 = +valueof(values[i0], i0, values), value1 = +valueof(values[i0 + 1], i0 + 1, values);
      return value0 + (value1 - value0) * (i - i0);
    }
  }
  function freedmanDiaconis(values, min, max) {
    values = map$jscomp$0.call(values, number).sort(ascending);
    return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));
  }
  function scott(values, min, max) {
    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));
  }
  function max(values, valueof) {
    var n = values.length, i = -1, value, max;
    if (null == valueof) {
      for (; ++i < n;) {
        if (null != (value = values[i]) && value >= value) {
          for (max = value; ++i < n;) {
            null != (value = values[i]) && value > max && (max = value);
          }
        }
      }
    } else {
      for (; ++i < n;) {
        if (null != (value = valueof(values[i], i, values)) && value >= value) {
          for (max = value; ++i < n;) {
            null != (value = valueof(values[i], i, values)) && value > max && (max = value);
          }
        }
      }
    }
    return max;
  }
  function mean(values, valueof) {
    var n = values.length, m = n, i = -1, value, sum = 0;
    if (null == valueof) {
      for (; ++i < n;) {
        isNaN(value = number(values[i])) ? --m : sum += value;
      }
    } else {
      for (; ++i < n;) {
        isNaN(value = number(valueof(values[i], i, values))) ? --m : sum += value;
      }
    }
    if (m) {
      return sum / m;
    }
  }
  function median(values, valueof) {
    var n = values.length, i = -1, value, numbers = [];
    if (null == valueof) {
      for (; ++i < n;) {
        isNaN(value = number(values[i])) || numbers.push(value);
      }
    } else {
      for (; ++i < n;) {
        isNaN(value = number(valueof(values[i], i, values))) || numbers.push(value);
      }
    }
    return threshold(numbers.sort(ascending), 0.5);
  }
  function merge(arrays) {
    for (var n = arrays.length, m, i = -1, j = 0, merged, array; ++i < n;) {
      j += arrays[i].length;
    }
    for (merged = Array(j); 0 <= --n;) {
      for (array = arrays[n], m = array.length; 0 <= --m;) {
        merged[--j] = array[m];
      }
    }
    return merged;
  }
  function min(values, valueof) {
    var n = values.length, i = -1, value, min;
    if (null == valueof) {
      for (; ++i < n;) {
        if (null != (value = values[i]) && value >= value) {
          for (min = value; ++i < n;) {
            null != (value = values[i]) && min > value && (min = value);
          }
        }
      }
    } else {
      for (; ++i < n;) {
        if (null != (value = valueof(values[i], i, values)) && value >= value) {
          for (min = value; ++i < n;) {
            null != (value = valueof(values[i], i, values)) && min > value && (min = value);
          }
        }
      }
    }
    return min;
  }
  function permute(array, indexes) {
    for (var i = indexes.length, permutes = Array(i); i--;) {
      permutes[i] = array[indexes[i]];
    }
    return permutes;
  }
  function scan(values, compare) {
    if (n = values.length) {
      var n, i = 0, j = 0, xi, xj = values[j];
      for (null == compare && (compare = ascending); ++i < n;) {
        if (0 > compare(xi = values[i], xj) || 0 !== compare(xj, xj)) {
          xj = xi, j = i;
        }
      }
      if (0 === compare(xj, xj)) {
        return j;
      }
    }
  }
  function shuffle(array, i0, i1) {
    for (var m = (null == i1 ? array.length : i1) - (i0 = null == i0 ? 0 : +i0), t, i; m;) {
      i = Math.random() * m-- | 0, t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;
    }
    return array;
  }
  function sum(values, valueof) {
    var n = values.length, i = -1, value, sum = 0;
    if (null == valueof) {
      for (; ++i < n;) {
        if (value = +values[i]) {
          sum += value;
        }
      }
    } else {
      for (; ++i < n;) {
        if (value = +valueof(values[i], i, values)) {
          sum += value;
        }
      }
    }
    return sum;
  }
  function transpose$jscomp$0(matrix) {
    if (!(n = matrix.length)) {
      return [];
    }
    for (var i = -1, m = min(matrix, length$jscomp$0), transpose = Array(m); ++i < m;) {
      for (var j = -1, n, row = transpose[i] = Array(n); ++j < n;) {
        row[j] = matrix[j][i];
      }
    }
    return transpose;
  }
  function length$jscomp$0(d) {
    return d.length;
  }
  function zip() {
    return transpose$jscomp$0(arguments);
  }
  function identity$1(x) {
    return x;
  }
  function translateX(x) {
    return "translate(" + (x + 0.5) + ",0)";
  }
  function translateY(y) {
    return "translate(0," + (y + 0.5) + ")";
  }
  function number$1(scale) {
    return function(d) {
      return +scale(d);
    };
  }
  function center(scale) {
    var offset = Math.max(0, scale.bandwidth() - 1) / 2;
    scale.round() && (offset = Math.round(offset));
    return function(d) {
      return +scale(d) + offset;
    };
  }
  function entering() {
    return !this.__axis;
  }
  function axis(orient, scale) {
    function axis(context) {
      var values = null == tickValues ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues, format = null == tickFormat ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1 : tickFormat, spacing = Math.max(tickSizeInner, 0) + tickPadding, range = scale.range(), range0 = +range[0] + 0.5, range1 = +range[range.length - 1] + 0.5, position = (scale.bandwidth ? center : number$1)(scale.copy()), selection = context.selection ? context.selection() : 
      context, path = selection.selectAll(".domain").data([null]), tick = selection.selectAll(".tick").data(values, scale).order(), tickExit = tick.exit(), tickEnter = tick.enter().append("g").attr("class", "tick"), line = tick.select("line"), text = tick.select("text");
      path = path.merge(path.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
      tick = tick.merge(tickEnter);
      line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x + "2", k * tickSizeInner));
      text = text.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x, k * spacing).attr("dy", 1 === orient ? "0em" : 3 === orient ? "0.71em" : "0.32em"));
      context !== selection && (path = path.transition(context), tick = tick.transition(context), line = line.transition(context), text = text.transition(context), tickExit = tickExit.transition(context).attr("opacity", 1e-6).attr("transform", function(d) {
        return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform");
      }), tickEnter.attr("opacity", 1e-6).attr("transform", function(d) {
        var p = this.parentNode.__axis;
        return transform(p && isFinite(p = p(d)) ? p : position(d));
      }));
      tickExit.remove();
      path.attr("d", 4 === orient || 2 == orient ? tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M0.5," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + ",0.5H" + range1);
      tick.attr("opacity", 1).attr("transform", function(d) {
        return transform(position(d));
      });
      line.attr(x + "2", k * tickSizeInner);
      text.attr(x, k * spacing).text(format);
      selection.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", 2 === orient ? "start" : 4 === orient ? "end" : "middle");
      selection.each(function() {
        this.__axis = position;
      });
    }
    var tickArguments = [], tickValues = null, tickFormat = null, tickSizeInner = 6, tickSizeOuter = 6, tickPadding = 3, k = 1 === orient || 4 === orient ? -1 : 1, x = 4 === orient || 2 === orient ? "x" : "y", transform = 1 === orient || 3 === orient ? translateX : translateY;
    axis.scale = function(_) {
      return arguments.length ? (scale = _, axis) : scale;
    };
    axis.ticks = function() {
      return tickArguments = slice$1.call(arguments), axis;
    };
    axis.tickArguments = function(_) {
      return arguments.length ? (tickArguments = null == _ ? [] : slice$1.call(_), axis) : tickArguments.slice();
    };
    axis.tickValues = function(_) {
      return arguments.length ? (tickValues = null == _ ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();
    };
    axis.tickFormat = function(_) {
      return arguments.length ? (tickFormat = _, axis) : tickFormat;
    };
    axis.tickSize = function(_) {
      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
    };
    axis.tickSizeInner = function(_) {
      return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
    };
    axis.tickSizeOuter = function(_) {
      return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
    };
    axis.tickPadding = function(_) {
      return arguments.length ? (tickPadding = +_, axis) : tickPadding;
    };
    return axis;
  }
  function axisTop(scale) {
    return axis(1, scale);
  }
  function axisRight(scale) {
    return axis(2, scale);
  }
  function axisBottom(scale) {
    return axis(3, scale);
  }
  function axisLeft(scale) {
    return axis(4, scale);
  }
  function dispatch() {
    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
      if (!(t = arguments[i] + "") || t in _) {
        throw Error("illegal type: " + t);
      }
      _[t] = [];
    }
    return new Dispatch(_);
  }
  function Dispatch(_) {
    this._ = _;
  }
  function parseTypenames(typenames, types) {
    return typenames.trim().split(/^|\s+/).map(function(t) {
      var name = "", i = t.indexOf(".");
      0 <= i && (name = t.slice(i + 1), t = t.slice(0, i));
      if (t && !types.hasOwnProperty(t)) {
        throw Error("unknown type: " + t);
      }
      return {type:t, name:name};
    });
  }
  function set$jscomp$0(type, name, callback) {
    for (var i = 0, n = type.length; i < n; ++i) {
      if (type[i].name === name) {
        type[i] = noop;
        type = type.slice(0, i).concat(type.slice(i + 1));
        break;
      }
    }
    null != callback && type.push({name:name, value:callback});
    return type;
  }
  function namespace(name) {
    var prefix = name += "", i = prefix.indexOf(":");
    0 <= i && "xmlns" !== (prefix = name.slice(0, i)) && (name = name.slice(i + 1));
    return namespaces.hasOwnProperty(prefix) ? {space:namespaces[prefix], local:name} : name;
  }
  function creatorInherit(name) {
    return function() {
      var document = this.ownerDocument, uri = this.namespaceURI;
      return "http://www.w3.org/1999/xhtml" === uri && "http://www.w3.org/1999/xhtml" === document.documentElement.namespaceURI ? document.createElement(name) : document.createElementNS(uri, name);
    };
  }
  function creatorFixed(fullname) {
    return function() {
      return this.ownerDocument.createElementNS(fullname.space, fullname.local);
    };
  }
  function creator(name) {
    var fullname = namespace(name);
    return (fullname.local ? creatorFixed : creatorInherit)(fullname);
  }
  function none() {
  }
  function selector$jscomp$0(selector) {
    return null == selector ? none : function() {
      return this.querySelector(selector);
    };
  }
  function selection_select(select) {
    "function" !== typeof select && (select = selector$jscomp$0(select));
    for (var groups = this._groups, m = groups.length, subgroups = Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = Array(n), node, subnode, i = 0; i < n; ++i) {
        (node = group[i]) && (subnode = select.call(node, node.__data__, i, group)) && ("__data__" in node && (subnode.__data__ = node.__data__), subgroup[i] = subnode);
      }
    }
    return new Selection(subgroups, this._parents);
  }
  function empty() {
    return [];
  }
  function selectorAll(selector) {
    return null == selector ? empty : function() {
      return this.querySelectorAll(selector);
    };
  }
  function selection_selectAll(select) {
    "function" !== typeof select && (select = selectorAll(select));
    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
        if (node = group[i]) {
          subgroups.push(select.call(node, node.__data__, i, group)), parents.push(node);
        }
      }
    }
    return new Selection(subgroups, parents);
  }
  function selection_filter(match) {
    "function" !== typeof match && (match = matcher$1(match));
    for (var groups = this._groups, m = groups.length, subgroups = Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
        (node = group[i]) && match.call(node, node.__data__, i, group) && subgroup.push(node);
      }
    }
    return new Selection(subgroups, this._parents);
  }
  function sparse(update) {
    return Array(update.length);
  }
  function selection_enter() {
    return new Selection(this._enter || this._groups.map(sparse), this._parents);
  }
  function EnterNode(parent, datum) {
    this.ownerDocument = parent.ownerDocument;
    this.namespaceURI = parent.namespaceURI;
    this._next = null;
    this._parent = parent;
    this.__data__ = datum;
  }
  function constant$1(x) {
    return function() {
      return x;
    };
  }
  function bindIndex(parent, group, enter, update, exit, data) {
    for (var i = 0, node, groupLength = group.length, dataLength = data.length; i < dataLength; ++i) {
      (node = group[i]) ? (node.__data__ = data[i], update[i] = node) : enter[i] = new EnterNode(parent, data[i]);
    }
    for (; i < groupLength; ++i) {
      if (node = group[i]) {
        exit[i] = node;
      }
    }
  }
  function bindKey(parent, group, enter, update, exit, data, key) {
    var i, node, nodeByKeyValue = {}, groupLength = group.length, dataLength = data.length, keyValues = Array(groupLength), keyValue;
    for (i = 0; i < groupLength; ++i) {
      if (node = group[i]) {
        keyValues[i] = keyValue = "$" + key.call(node, node.__data__, i, group), keyValue in nodeByKeyValue ? exit[i] = node : nodeByKeyValue[keyValue] = node;
      }
    }
    for (i = 0; i < dataLength; ++i) {
      keyValue = "$" + key.call(parent, data[i], i, data), (node = nodeByKeyValue[keyValue]) ? (update[i] = node, node.__data__ = data[i], nodeByKeyValue[keyValue] = null) : enter[i] = new EnterNode(parent, data[i]);
    }
    for (i = 0; i < groupLength; ++i) {
      (node = group[i]) && nodeByKeyValue[keyValues[i]] === node && (exit[i] = node);
    }
  }
  function selection_data(value, key) {
    if (!value) {
      return data = Array(this.size()), j = -1, this.each(function(d) {
        data[++j] = d;
      }), data;
    }
    var bind = key ? bindKey : bindIndex, parents = this._parents, groups = this._groups;
    "function" !== typeof value && (value = constant$1(value));
    for (var m = groups.length, update = Array(m), enter = Array(m), exit = Array(m), j = 0; j < m; ++j) {
      var parent = parents[j], group = groups[j], groupLength = group.length, data = value.call(parent, parent && parent.__data__, j, parents), dataLength = data.length, enterGroup = enter[j] = Array(dataLength), updateGroup = update[j] = Array(dataLength), exitGroup = exit[j] = Array(groupLength);
      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);
      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
        if (previous = enterGroup[i0]) {
          for (i0 >= i1 && (i1 = i0 + 1); !(next = updateGroup[i1]) && ++i1 < dataLength;) {
          }
          previous._next = next || null;
        }
      }
    }
    update = new Selection(update, parents);
    update._enter = enter;
    update._exit = exit;
    return update;
  }
  function selection_exit() {
    return new Selection(this._exit || this._groups.map(sparse), this._parents);
  }
  function selection_merge(selection$$1) {
    for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = Array(m0), j = 0; j < m; ++j) {
      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = Array(n), node, i = 0; i < n; ++i) {
        if (node = group0[i] || group1[i]) {
          merge[i] = node;
        }
      }
    }
    for (; j < m0; ++j) {
      merges[j] = groups0[j];
    }
    return new Selection(merges, this._parents);
  }
  function selection_order() {
    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
      for (var group = groups[j], i = group.length - 1, next = group[i], node; 0 <= --i;) {
        if (node = group[i]) {
          next && next !== node.nextSibling && next.parentNode.insertBefore(node, next), next = node;
        }
      }
    }
    return this;
  }
  function selection_sort(compare) {
    function compareNode(a, b) {
      return a && b ? compare(a.__data__, b.__data__) : !a - !b;
    }
    compare || (compare = ascending$1);
    for (var groups = this._groups, m = groups.length, sortgroups = Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = Array(n), node, i = 0; i < n; ++i) {
        if (node = group[i]) {
          sortgroup[i] = node;
        }
      }
      sortgroup.sort(compareNode);
    }
    return (new Selection(sortgroups, this._parents)).order();
  }
  function ascending$1(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
  }
  function selection_call() {
    var callback = arguments[0];
    arguments[0] = this;
    callback.apply(null, arguments);
    return this;
  }
  function selection_nodes() {
    var nodes = Array(this.size()), i = -1;
    this.each(function() {
      nodes[++i] = this;
    });
    return nodes;
  }
  function selection_node() {
    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
        var node = group[i];
        if (node) {
          return node;
        }
      }
    }
    return null;
  }
  function selection_size() {
    var size = 0;
    this.each(function() {
      ++size;
    });
    return size;
  }
  function selection_empty() {
    return !this.node();
  }
  function selection_each(callback) {
    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
        (node = group[i]) && callback.call(node, node.__data__, i, group);
      }
    }
    return this;
  }
  function attrRemove(name) {
    return function() {
      this.removeAttribute(name);
    };
  }
  function attrRemoveNS(fullname) {
    return function() {
      this.removeAttributeNS(fullname.space, fullname.local);
    };
  }
  function attrConstant(name, value) {
    return function() {
      this.setAttribute(name, value);
    };
  }
  function attrConstantNS(fullname, value) {
    return function() {
      this.setAttributeNS(fullname.space, fullname.local, value);
    };
  }
  function attrFunction(name, value) {
    return function() {
      var v = value.apply(this, arguments);
      null == v ? this.removeAttribute(name) : this.setAttribute(name, v);
    };
  }
  function attrFunctionNS(fullname, value) {
    return function() {
      var v = value.apply(this, arguments);
      null == v ? this.removeAttributeNS(fullname.space, fullname.local) : this.setAttributeNS(fullname.space, fullname.local, v);
    };
  }
  function selection_attr(name, value) {
    var fullname = namespace(name);
    if (2 > arguments.length) {
      var node = this.node();
      return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
    }
    return this.each((null == value ? fullname.local ? attrRemoveNS : attrRemove : "function" === typeof value ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
  }
  function defaultView(node) {
    return node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView;
  }
  function styleRemove(name) {
    return function() {
      this.style.removeProperty(name);
    };
  }
  function styleConstant(name, value, priority) {
    return function() {
      this.style.setProperty(name, value, priority);
    };
  }
  function styleFunction(name, value, priority) {
    return function() {
      var v = value.apply(this, arguments);
      null == v ? this.style.removeProperty(name) : this.style.setProperty(name, v, priority);
    };
  }
  function selection_style(name, value, priority) {
    return 1 < arguments.length ? this.each((null == value ? styleRemove : "function" === typeof value ? styleFunction : styleConstant)(name, value, null == priority ? "" : priority)) : styleValue(this.node(), name);
  }
  function styleValue(node, name) {
    return node.style.getPropertyValue(name) || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);
  }
  function propertyRemove(name) {
    return function() {
      delete this[name];
    };
  }
  function propertyConstant(name, value) {
    return function() {
      this[name] = value;
    };
  }
  function propertyFunction(name, value) {
    return function() {
      var v = value.apply(this, arguments);
      null == v ? delete this[name] : this[name] = v;
    };
  }
  function selection_property(name, value) {
    return 1 < arguments.length ? this.each((null == value ? propertyRemove : "function" === typeof value ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
  }
  function classList(node) {
    return node.classList || new ClassList(node);
  }
  function ClassList(node) {
    this._node = node;
    this._names = (node.getAttribute("class") || "").trim().split(/^|\s+/);
  }
  function classedAdd(node, names) {
    for (var list = classList(node), i = -1, n = names.length; ++i < n;) {
      list.add(names[i]);
    }
  }
  function classedRemove(node, names) {
    for (var list = classList(node), i = -1, n = names.length; ++i < n;) {
      list.remove(names[i]);
    }
  }
  function classedTrue(names) {
    return function() {
      classedAdd(this, names);
    };
  }
  function classedFalse(names) {
    return function() {
      classedRemove(this, names);
    };
  }
  function classedFunction(names, value) {
    return function() {
      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
    };
  }
  function selection_classed(name, value) {
    var names = (name + "").trim().split(/^|\s+/);
    if (2 > arguments.length) {
      for (var list = classList(this.node()), i = -1, n = names.length; ++i < n;) {
        if (!list.contains(names[i])) {
          return !1;
        }
      }
      return !0;
    }
    return this.each(("function" === typeof value ? classedFunction : value ? classedTrue : classedFalse)(names, value));
  }
  function textRemove() {
    this.textContent = "";
  }
  function textConstant(value) {
    return function() {
      this.textContent = value;
    };
  }
  function textFunction(value) {
    return function() {
      var v = value.apply(this, arguments);
      this.textContent = null == v ? "" : v;
    };
  }
  function selection_text(value) {
    return arguments.length ? this.each(null == value ? textRemove : ("function" === typeof value ? textFunction : textConstant)(value)) : this.node().textContent;
  }
  function htmlRemove() {
    this.innerHTML = "";
  }
  function htmlConstant(value) {
    return function() {
      this.innerHTML = value;
    };
  }
  function htmlFunction(value) {
    return function() {
      var v = value.apply(this, arguments);
      this.innerHTML = null == v ? "" : v;
    };
  }
  function selection_html(value) {
    return arguments.length ? this.each(null == value ? htmlRemove : ("function" === typeof value ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
  }
  function raise() {
    this.nextSibling && this.parentNode.appendChild(this);
  }
  function selection_raise() {
    return this.each(raise);
  }
  function lower() {
    this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild);
  }
  function selection_lower() {
    return this.each(lower);
  }
  function selection_append(name) {
    var create = "function" === typeof name ? name : creator(name);
    return this.select(function() {
      return this.appendChild(create.apply(this, arguments));
    });
  }
  function constantNull() {
    return null;
  }
  function selection_insert(name, before) {
    var create = "function" === typeof name ? name : creator(name), select = null == before ? constantNull : "function" === typeof before ? before : selector$jscomp$0(before);
    return this.select(function() {
      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
    });
  }
  function remove() {
    var parent = this.parentNode;
    parent && parent.removeChild(this);
  }
  function selection_remove() {
    return this.each(remove);
  }
  function selection_cloneShallow() {
    return this.parentNode.insertBefore(this.cloneNode(!1), this.nextSibling);
  }
  function selection_cloneDeep() {
    return this.parentNode.insertBefore(this.cloneNode(!0), this.nextSibling);
  }
  function selection_clone(deep) {
    return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
  }
  function selection_datum(value) {
    return arguments.length ? this.property("__data__", value) : this.node().__data__;
  }
  function filterContextListener(listener, index, group) {
    listener = contextListener(listener, index, group);
    return function(event) {
      var related = event.relatedTarget;
      related && (related === this || related.compareDocumentPosition(this) & 8) || listener.call(this, event);
    };
  }
  function contextListener(listener, index, group) {
    return function(event1) {
      var event0 = d3.event;
      d3.event = event1;
      try {
        listener.call(this, this.__data__, index, group);
      } finally {
        d3.event = event0;
      }
    };
  }
  function parseTypenames$1(typenames) {
    return typenames.trim().split(/^|\s+/).map(function(t) {
      var name = "", i = t.indexOf(".");
      0 <= i && (name = t.slice(i + 1), t = t.slice(0, i));
      return {type:t, name:name};
    });
  }
  function onRemove(typename) {
    return function() {
      var on = this.__on;
      if (on) {
        for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
          (o = on[j], typename.type && o.type !== typename.type || o.name !== typename.name) ? on[++i] = o : this.removeEventListener(o.type, o.listener, o.capture);
        }
        ++i ? on.length = i : delete this.__on;
      }
    };
  }
  function onAdd(typename, value, capture) {
    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
    return function(d, i, group) {
      var on = this.__on, o, listener = wrap(value, i, group);
      if (on) {
        for (var j = 0, m = on.length; j < m; ++j) {
          if ((o = on[j]).type === typename.type && o.name === typename.name) {
            this.removeEventListener(o.type, o.listener, o.capture);
            this.addEventListener(o.type, o.listener = listener, o.capture = capture);
            o.value = value;
            return;
          }
        }
      }
      this.addEventListener(typename.type, listener, capture);
      o = {type:typename.type, name:typename.name, value:value, listener:listener, capture:capture};
      on ? on.push(o) : this.__on = [o];
    };
  }
  function selection_on(typename, value, capture) {
    var typenames = parseTypenames$1(typename + ""), n = typenames.length, t;
    if (2 > arguments.length) {
      var on = this.node().__on;
      if (on) {
        for (var j = 0, m = on.length, o; j < m; ++j) {
          var i = 0;
          for (o = on[j]; i < n; ++i) {
            if ((t = typenames[i]).type === o.type && t.name === o.name) {
              return o.value;
            }
          }
        }
      }
    } else {
      on = value ? onAdd : onRemove;
      null == capture && (capture = !1);
      for (i = 0; i < n; ++i) {
        this.each(on(typenames[i], value, capture));
      }
      return this;
    }
  }
  function customEvent(event1, listener, that, args) {
    var event0 = d3.event;
    event1.sourceEvent = d3.event;
    d3.event = event1;
    try {
      return listener.apply(that, args);
    } finally {
      d3.event = event0;
    }
  }
  function dispatchEvent(node, type, params) {
    var window = defaultView(node), event = window.CustomEvent;
    "function" === typeof event ? event = new event(type, params) : (event = window.document.createEvent("Event"), params ? (event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail) : event.initEvent(type, !1, !1));
    node.dispatchEvent(event);
  }
  function dispatchConstant(type, params) {
    return function() {
      return dispatchEvent(this, type, params);
    };
  }
  function dispatchFunction(type, params) {
    return function() {
      return dispatchEvent(this, type, params.apply(this, arguments));
    };
  }
  function selection_dispatch(type, params) {
    return this.each(("function" === typeof params ? dispatchFunction : dispatchConstant)(type, params));
  }
  function Selection(groups, parents) {
    this._groups = groups;
    this._parents = parents;
  }
  function selection() {
    return new Selection([[document.documentElement]], root$jscomp$0);
  }
  function select(selector) {
    return "string" === typeof selector ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root$jscomp$0);
  }
  function create$jscomp$0(name) {
    return select(creator(name).call(document.documentElement));
  }
  function local() {
    return new Local;
  }
  function Local() {
    this._ = "@" + (++nextId).toString(36);
  }
  function sourceEvent() {
    for (var current = d3.event, source; source = current.sourceEvent;) {
      current = source;
    }
    return current;
  }
  function point(node, event) {
    var svg = node.ownerSVGElement || node;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      point.x = event.clientX;
      point.y = event.clientY;
      point = point.matrixTransform(node.getScreenCTM().inverse());
      return [point.x, point.y];
    }
    var rect = node.getBoundingClientRect();
    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
  }
  function mouse(node) {
    var event = sourceEvent();
    event.changedTouches && (event = event.changedTouches[0]);
    return point(node, event);
  }
  function selectAll(selector) {
    return "string" === typeof selector ? new Selection([document.querySelectorAll(selector)], [document.documentElement]) : new Selection([null == selector ? [] : selector], root$jscomp$0);
  }
  function touch(node, touches, identifier) {
    3 > arguments.length && (identifier = touches, touches = sourceEvent().changedTouches);
    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
      if ((touch = touches[i]).identifier === identifier) {
        return point(node, touch);
      }
    }
    return null;
  }
  function touches$jscomp$0(node, touches) {
    null == touches && (touches = sourceEvent().touches);
    for (var i = 0, n = touches ? touches.length : 0, points = Array(n); i < n; ++i) {
      points[i] = point(node, touches[i]);
    }
    return points;
  }
  function noevent() {
    d3.event.preventDefault();
    d3.event.stopImmediatePropagation();
  }
  function dragDisable(view) {
    var root = view.document.documentElement, selection$$1 = select(view).on("dragstart.drag", noevent, !0);
    if ("onselectstart" in root) {
      selection$$1.on("selectstart.drag", noevent, !0);
    } else {
      root.__noselect = root.style.MozUserSelect, root.style.MozUserSelect = "none";
    }
  }
  function yesdrag(view, noclick) {
    var root = view.document.documentElement, selection$$1 = select(view).on("dragstart.drag", null);
    noclick && (selection$$1.on("click.drag", noevent, !0), setTimeout(function() {
      selection$$1.on("click.drag", null);
    }, 0));
    if ("onselectstart" in root) {
      selection$$1.on("selectstart.drag", null);
    } else {
      root.style.MozUserSelect = root.__noselect, delete root.__noselect;
    }
  }
  function constant$2(x) {
    return function() {
      return x;
    };
  }
  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {
    this.target = target;
    this.type = type;
    this.subject = subject;
    this.identifier = id;
    this.active = active;
    this.x = x;
    this.y = y;
    this.dx = dx;
    this.dy = dy;
    this._ = dispatch;
  }
  function defaultFilter() {
    return !d3.event.button;
  }
  function defaultContainer() {
    return this.parentNode;
  }
  function defaultSubject(d) {
    return null == d ? {x:d3.event.x, y:d3.event.y} : d;
  }
  function defaultTouchable() {
    return "ontouchstart" in this;
  }
  function drag() {
    function drag(selection$$1) {
      selection$$1.on("mousedown.drag", mousedowned).filter(touchable).on("touchstart.drag", touchstarted).on("touchmove.drag", touchmoved).on("touchend.drag touchcancel.drag", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
    }
    function mousedowned() {
      if (!touchending && filter.apply(this, arguments)) {
        var gesture = beforestart("mouse", container$jscomp$0.apply(this, arguments), mouse, this, arguments);
        gesture && (select(d3.event.view).on("mousemove.drag", mousemoved, !0).on("mouseup.drag", mouseupped, !0), dragDisable(d3.event.view), d3.event.stopImmediatePropagation(), mousemoving = !1, mousedownx = d3.event.clientX, mousedowny = d3.event.clientY, gesture("start"));
      }
    }
    function mousemoved() {
      noevent();
      if (!mousemoving) {
        var dx = d3.event.clientX - mousedownx, dy = d3.event.clientY - mousedowny;
        mousemoving = dx * dx + dy * dy > clickDistance2;
      }
      gestures.mouse("drag");
    }
    function mouseupped() {
      select(d3.event.view).on("mousemove.drag mouseup.drag", null);
      yesdrag(d3.event.view, mousemoving);
      noevent();
      gestures.mouse("end");
    }
    function touchstarted() {
      if (filter.apply(this, arguments)) {
        var touches$$1 = d3.event.changedTouches, c = container$jscomp$0.apply(this, arguments), n = touches$$1.length, i, gesture;
        for (i = 0; i < n; ++i) {
          if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {
            d3.event.stopImmediatePropagation(), gesture("start");
          }
        }
      }
    }
    function touchmoved() {
      var touches$$1 = d3.event.changedTouches, n = touches$$1.length, i, gesture;
      for (i = 0; i < n; ++i) {
        if (gesture = gestures[touches$$1[i].identifier]) {
          noevent(), gesture("drag");
        }
      }
    }
    function touchended() {
      var touches$$1 = d3.event.changedTouches, n = touches$$1.length, i, gesture;
      touchending && clearTimeout(touchending);
      touchending = setTimeout(function() {
        touchending = null;
      }, 500);
      for (i = 0; i < n; ++i) {
        if (gesture = gestures[touches$$1[i].identifier]) {
          d3.event.stopImmediatePropagation(), gesture("end");
        }
      }
    }
    function beforestart(id, container, point$$1, that, args) {
      var p = point$$1(container, id), s, dx, dy, sublisteners = listeners.copy();
      if (customEvent(new DragEvent(drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {
        if (null == (d3.event.subject = s = subject.apply(that, args))) {
          return !1;
        }
        dx = s.x - p[0] || 0;
        dy = s.y - p[1] || 0;
        return !0;
      })) {
        return function gesture(type) {
          var p0 = p;
          switch(type) {
            case "start":
              gestures[id] = gesture;
              var n = active++;
              break;
            case "end":
              delete gestures[id], --active;
            case "drag":
              p = point$$1(container, id), n = active;
          }
          customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
        };
      }
    }
    var filter = defaultFilter, container$jscomp$0 = defaultContainer, subject = defaultSubject, touchable = defaultTouchable, gestures = {}, listeners = dispatch("start", "drag", "end"), active = 0, mousedownx, mousedowny, mousemoving, touchending, clickDistance2 = 0;
    drag.filter = function(_) {
      return arguments.length ? (filter = "function" === typeof _ ? _ : constant$2(!!_), drag) : filter;
    };
    drag.container = function(_) {
      return arguments.length ? (container$jscomp$0 = "function" === typeof _ ? _ : constant$2(_), drag) : container$jscomp$0;
    };
    drag.subject = function(_) {
      return arguments.length ? (subject = "function" === typeof _ ? _ : constant$2(_), drag) : subject;
    };
    drag.touchable = function(_) {
      return arguments.length ? (touchable = "function" === typeof _ ? _ : constant$2(!!_), drag) : touchable;
    };
    drag.on = function() {
      var value = listeners.on.apply(listeners, arguments);
      return value === listeners ? drag : value;
    };
    drag.clickDistance = function(_) {
      return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
    };
    return drag;
  }
  function define(constructor, factory, prototype) {
    constructor.prototype = factory.prototype = prototype;
    prototype.constructor = constructor;
  }
  function extend(parent, definition) {
    var prototype = Object.create(parent.prototype), key;
    for (key in definition) {
      prototype[key] = definition[key];
    }
    return prototype;
  }
  function Color() {
  }
  function color(format) {
    var m;
    format = (format + "").trim().toLowerCase();
    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb(m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, (m & 15) << 4 | m & 15, 1)) : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) : (m = reRgbPercent.exec(format)) ? new Rgb(255 * m[1] / 100, 255 * m[2] / 100, 255 * m[3] / 100, 1) : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) : (m = reRgbaPercent.exec(format)) ? rgba(255 * m[1] / 100, 255 * 
    m[2] / 100, 255 * m[3] / 100, m[4]) : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) : named.hasOwnProperty(format) ? rgbn(named[format]) : "transparent" === format ? new Rgb(NaN, NaN, NaN, 0) : null;
  }
  function rgbn(n) {
    return new Rgb(n >> 16 & 255, n >> 8 & 255, n & 255, 1);
  }
  function rgba(r, g, b, a) {
    0 >= a && (r = g = b = NaN);
    return new Rgb(r, g, b, a);
  }
  function rgbConvert(o) {
    o instanceof Color || (o = color(o));
    if (!o) {
      return new Rgb;
    }
    o = o.rgb();
    return new Rgb(o.r, o.g, o.b, o.opacity);
  }
  function rgb(r, g, b, opacity) {
    return 1 === arguments.length ? rgbConvert(r) : new Rgb(r, g, b, null == opacity ? 1 : opacity);
  }
  function Rgb(r, g, b, opacity) {
    this.r = +r;
    this.g = +g;
    this.b = +b;
    this.opacity = +opacity;
  }
  function hex(value) {
    value = Math.max(0, Math.min(255, Math.round(value) || 0));
    return (16 > value ? "0" : "") + value.toString(16);
  }
  function hsla(h, s, l, a) {
    0 >= a ? h = s = l = NaN : 0 >= l || 1 <= l ? h = s = NaN : 0 >= s && (h = NaN);
    return new Hsl(h, s, l, a);
  }
  function hslConvert(o) {
    if (o instanceof Hsl) {
      return new Hsl(o.h, o.s, o.l, o.opacity);
    }
    o instanceof Color || (o = color(o));
    if (!o) {
      return new Hsl;
    }
    if (o instanceof Hsl) {
      return o;
    }
    o = o.rgb();
    var r = o.r / 255, g = o.g / 255, b = o.b / 255, min = Math.min(r, g, b), max = Math.max(r, g, b), h = NaN, s = max - min, l = (max + min) / 2;
    s ? (h = r === max ? (g - b) / s + 6 * (g < b) : g === max ? (b - r) / s + 2 : (r - g) / s + 4, s /= 0.5 > l ? max + min : 2 - max - min, h *= 60) : s = 0 < l && 1 > l ? 0 : h;
    return new Hsl(h, s, l, o.opacity);
  }
  function hsl(h, s, l, opacity) {
    return 1 === arguments.length ? hslConvert(h) : new Hsl(h, s, l, null == opacity ? 1 : opacity);
  }
  function Hsl(h, s, l, opacity) {
    this.h = +h;
    this.s = +s;
    this.l = +l;
    this.opacity = +opacity;
  }
  function hsl2rgb(h, m1, m2) {
    return 255 * (60 > h ? m1 + (m2 - m1) * h / 60 : 180 > h ? m2 : 240 > h ? m1 + (m2 - m1) * (240 - h) / 60 : m1);
  }
  function labConvert(o) {
    if (o instanceof Lab) {
      return new Lab(o.l, o.a, o.b, o.opacity);
    }
    if (o instanceof Hcl) {
      if (isNaN(o.h)) {
        return new Lab(o.l, 0, 0, o.opacity);
      }
      var h = o.h * deg2rad;
      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
    }
    o instanceof Rgb || (o = rgbConvert(o));
    var r = rgb2lrgb(o.r), g = rgb2lrgb(o.g), b = rgb2lrgb(o.b), y = xyz2lab(0.2225045 * r + 0.7168786 * g + 0.0606169 * b), z;
    if (r === g && g === b) {
      var x = z = y;
    } else {
      x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / 0.96422), z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / 0.82521);
    }
    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
  }
  function gray(l, opacity) {
    return new Lab(l, 0, 0, null == opacity ? 1 : opacity);
  }
  function lab(l, a, b, opacity) {
    return 1 === arguments.length ? labConvert(l) : new Lab(l, a, b, null == opacity ? 1 : opacity);
  }
  function Lab(l, a, b, opacity) {
    this.l = +l;
    this.a = +a;
    this.b = +b;
    this.opacity = +opacity;
  }
  function xyz2lab(t) {
    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
  }
  function lab2xyz(t) {
    return t > t1 ? t * t * t : t2 * (t - t0);
  }
  function lrgb2rgb(x) {
    return 255 * (0.0031308 >= x ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
  }
  function rgb2lrgb(x) {
    return 0.04045 >= (x /= 255) ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
  }
  function hclConvert(o) {
    if (o instanceof Hcl) {
      return new Hcl(o.h, o.c, o.l, o.opacity);
    }
    o instanceof Lab || (o = labConvert(o));
    if (0 === o.a && 0 === o.b) {
      return new Hcl(NaN, 0, o.l, o.opacity);
    }
    var h = Math.atan2(o.b, o.a) * rad2deg;
    return new Hcl(0 > h ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
  }
  function lch(l, c, h, opacity) {
    return 1 === arguments.length ? hclConvert(l) : new Hcl(h, c, l, null == opacity ? 1 : opacity);
  }
  function hcl(h, c, l, opacity) {
    return 1 === arguments.length ? hclConvert(h) : new Hcl(h, c, l, null == opacity ? 1 : opacity);
  }
  function Hcl(h, c, l, opacity) {
    this.h = +h;
    this.c = +c;
    this.l = +l;
    this.opacity = +opacity;
  }
  function cubehelix(h$jscomp$0, s$jscomp$0, l$jscomp$0, opacity) {
    if (1 === arguments.length) {
      var o = h$jscomp$0;
      if (o instanceof Cubehelix) {
        var JSCompiler_temp = new Cubehelix(o.h, o.s, o.l, o.opacity);
      } else {
        o instanceof Rgb || (o = rgbConvert(o));
        var r = o.r / 255, g = o.g / 255, b = o.b / 255, l = (BC_DA * b + -1.7884503806 * r - 3.5172982438 * g) / (BC_DA + -1.7884503806 - 3.5172982438), bl = b - l, k = (1.97294 * (g - l) - -0.29227 * bl) / -0.90649, s = Math.sqrt(k * k + bl * bl) / (1.97294 * l * (1 - l)), h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;
        JSCompiler_temp = new Cubehelix(0 > h ? h + 360 : h, s, l, o.opacity);
      }
    } else {
      JSCompiler_temp = new Cubehelix(h$jscomp$0, s$jscomp$0, l$jscomp$0, null == opacity ? 1 : opacity);
    }
    return JSCompiler_temp;
  }
  function Cubehelix(h, s, l, opacity) {
    this.h = +h;
    this.s = +s;
    this.l = +l;
    this.opacity = +opacity;
  }
  function basis(t1, v0, v1, v2, v3) {
    var t2 = t1 * t1, t3 = t2 * t1;
    return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
  }
  function basis$1(values) {
    var n = values.length - 1;
    return function(t) {
      var i = 0 >= t ? t = 0 : 1 <= t ? (t = 1, n - 1) : Math.floor(t * n), v1 = values[i], v2 = values[i + 1], v0 = 0 < i ? values[i - 1] : 2 * v1 - v2, v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
      return basis((t - i / n) * n, v0, v1, v2, v3);
    };
  }
  function basisClosed(values) {
    var n = values.length;
    return function(t) {
      var i = Math.floor((0 > (t %= 1) ? ++t : t) * n), v0 = values[(i + n - 1) % n], v1 = values[i % n], v2 = values[(i + 1) % n], v3 = values[(i + 2) % n];
      return basis((t - i / n) * n, v0, v1, v2, v3);
    };
  }
  function constant$3(x) {
    return function() {
      return x;
    };
  }
  function linear(a, d) {
    return function(t) {
      return a + t * d;
    };
  }
  function exponential(a, b, y) {
    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
      return Math.pow(a + t * b, y);
    };
  }
  function hue(a, b) {
    var d = b - a;
    return d ? linear(a, 180 < d || -180 > d ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);
  }
  function gamma(y) {
    return 1 === (y = +y) ? nogamma : function(a, b) {
      return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);
    };
  }
  function nogamma(a, b) {
    var d = b - a;
    return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);
  }
  function rgbSpline(spline) {
    return function(colors) {
      var n = colors.length, r = Array(n), g = Array(n), b = Array(n), i;
      for (i = 0; i < n; ++i) {
        var color$$1 = rgb(colors[i]);
        r[i] = color$$1.r || 0;
        g[i] = color$$1.g || 0;
        b[i] = color$$1.b || 0;
      }
      r = spline(r);
      g = spline(g);
      b = spline(b);
      color$$1.opacity = 1;
      return function(t) {
        color$$1.r = r(t);
        color$$1.g = g(t);
        color$$1.b = b(t);
        return color$$1 + "";
      };
    };
  }
  function array$1(a, b) {
    var nb = b ? b.length : 0, na = a ? Math.min(nb, a.length) : 0, x = Array(na), c = Array(nb), i;
    for (i = 0; i < na; ++i) {
      x[i] = interpolateValue(a[i], b[i]);
    }
    for (; i < nb; ++i) {
      c[i] = b[i];
    }
    return function(t) {
      for (i = 0; i < na; ++i) {
        c[i] = x[i](t);
      }
      return c;
    };
  }
  function date$jscomp$0(a, b) {
    var d = new Date;
    return a = +a, b -= a, function(t) {
      return d.setTime(a + b * t), d;
    };
  }
  function interpolateNumber(a, b) {
    return a = +a, b -= a, function(t) {
      return a + b * t;
    };
  }
  function object$jscomp$0(a, b) {
    var i = {}, c = {}, k;
    if (null === a || "object" !== typeof a) {
      a = {};
    }
    if (null === b || "object" !== typeof b) {
      b = {};
    }
    for (k in b) {
      k in a ? i[k] = interpolateValue(a[k], b[k]) : c[k] = b[k];
    }
    return function(t) {
      for (k in i) {
        c[k] = i[k](t);
      }
      return c;
    };
  }
  function zero(b) {
    return function() {
      return b;
    };
  }
  function one(b) {
    return function(t) {
      return b(t) + "";
    };
  }
  function interpolateString(a, b) {
    var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i$jscomp$0 = -1, s = [], q = [];
    a += "";
    for (b += ""; (am = reA.exec(a)) && (bm = reB.exec(b));) {
      (bs = bm.index) > bi && (bs = b.slice(bi, bs), s[i$jscomp$0] ? s[i$jscomp$0] += bs : s[++i$jscomp$0] = bs), (am = am[0]) === (bm = bm[0]) ? s[i$jscomp$0] ? s[i$jscomp$0] += bm : s[++i$jscomp$0] = bm : (s[++i$jscomp$0] = null, q.push({i:i$jscomp$0, x:interpolateNumber(am, bm)})), bi = reB.lastIndex;
    }
    bi < b.length && (bs = b.slice(bi), s[i$jscomp$0] ? s[i$jscomp$0] += bs : s[++i$jscomp$0] = bs);
    return 2 > s.length ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function(t) {
      for (var i = 0, o; i < b; ++i) {
        s[(o = q[i]).i] = o.x(t);
      }
      return s.join("");
    });
  }
  function interpolateValue(a, b) {
    var t = typeof b, c;
    return null == b || "boolean" === t ? constant$3(b) : ("number" === t ? interpolateNumber : "string" === t ? (c = color(b)) ? (b = c, interpolateRgb) : interpolateString : b instanceof color ? interpolateRgb : b instanceof Date ? date$jscomp$0 : Array.isArray(b) ? array$1 : "function" !== typeof b.valueOf && "function" !== typeof b.toString || isNaN(b) ? object$jscomp$0 : interpolateNumber)(a, b);
  }
  function discrete(range) {
    var n = range.length;
    return function(t) {
      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
    };
  }
  function hue$1(a, b) {
    var i = hue(+a, +b);
    return function(t) {
      var x = i(t);
      return x - 360 * Math.floor(x / 360);
    };
  }
  function interpolateRound(a, b) {
    return a = +a, b -= a, function(t) {
      return Math.round(a + b * t);
    };
  }
  function decompose(a, b, c, d, e, f) {
    var scaleX, scaleY, skewX;
    if (scaleX = Math.sqrt(a * a + b * b)) {
      a /= scaleX, b /= scaleX;
    }
    if (skewX = a * c + b * d) {
      c -= a * skewX, d -= b * skewX;
    }
    if (scaleY = Math.sqrt(c * c + d * d)) {
      c /= scaleY, d /= scaleY, skewX /= scaleY;
    }
    a * d < b * c && (a = -a, b = -b, skewX = -skewX, scaleX = -scaleX);
    return {translateX:e, translateY:f, rotate:Math.atan2(b, a) * degrees, skewX:Math.atan(skewX) * degrees, scaleX:scaleX, scaleY:scaleY};
  }
  function parseCss(value) {
    if ("none" === value) {
      return identity$2;
    }
    cssNode || (cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView);
    cssNode.style.transform = value;
    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
    cssRoot.removeChild(cssNode);
    value = value.slice(7, -1).split(",");
    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
  }
  function parseSvg(value) {
    if (null == value) {
      return identity$2;
    }
    svgNode || (svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g"));
    svgNode.setAttribute("transform", value);
    if (!(value = svgNode.transform.baseVal.consolidate())) {
      return identity$2;
    }
    value = value.matrix;
    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
  }
  function interpolateTransform(parse, pxComma, pxParen, degParen) {
    function pop(s) {
      return s.length ? s.pop() + " " : "";
    }
    function translate(xa, ya, xb, yb, s, q) {
      if (xa !== xb || ya !== yb) {
        var i = s.push("translate(", null, pxComma, null, pxParen);
        q.push({i:i - 4, x:interpolateNumber(xa, xb)}, {i:i - 2, x:interpolateNumber(ya, yb)});
      } else {
        (xb || yb) && s.push("translate(" + xb + pxComma + yb + pxParen);
      }
    }
    function rotate(a, b, s, q) {
      a !== b ? (180 < a - b ? b += 360 : 180 < b - a && (a += 360), q.push({i:s.push(pop(s) + "rotate(", null, degParen) - 2, x:interpolateNumber(a, b)})) : b && s.push(pop(s) + "rotate(" + b + degParen);
    }
    function skewX(a, b, s, q) {
      a !== b ? q.push({i:s.push(pop(s) + "skewX(", null, degParen) - 2, x:interpolateNumber(a, b)}) : b && s.push(pop(s) + "skewX(" + b + degParen);
    }
    function scale(xa, ya, xb, yb, s, q) {
      if (xa !== xb || ya !== yb) {
        var i = s.push(pop(s) + "scale(", null, ",", null, ")");
        q.push({i:i - 4, x:interpolateNumber(xa, xb)}, {i:i - 2, x:interpolateNumber(ya, yb)});
      } else {
        1 === xb && 1 === yb || s.push(pop(s) + "scale(" + xb + "," + yb + ")");
      }
    }
    return function(a, b) {
      var s = [], q = [];
      a = parse(a);
      b = parse(b);
      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
      rotate(a.rotate, b.rotate, s, q);
      skewX(a.skewX, b.skewX, s, q);
      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
      a = b = null;
      return function(t) {
        for (var i = -1, n = q.length, o; ++i < n;) {
          s[(o = q[i]).i] = o.x(t);
        }
        return s.join("");
      };
    };
  }
  function cosh(x) {
    return ((x = Math.exp(x)) + 1 / x) / 2;
  }
  function interpolateZoom(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy;
    if (1e-12 > d2) {
      var S = Math.log(w1 / w0) / rho;
      var i = function(t) {
        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
      };
    } else {
      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + 4 * d2) / (4 * w0 * d1), b1 = (w1 * w1 - w0 * w0 - 4 * d2) / (4 * w1 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;
      i = function(t) {
        var s = t * S, coshr0 = cosh(r0), x = rho * s + r0;
        var JSCompiler_inline_result = ((x = Math.exp(2 * x)) - 1) / (x + 1);
        var JSCompiler_temp_const = coshr0 * JSCompiler_inline_result, x$jscomp$0 = r0;
        var JSCompiler_inline_result$jscomp$0 = ((x$jscomp$0 = Math.exp(x$jscomp$0)) - 1 / x$jscomp$0) / 2;
        var u = w0 / (2 * d1) * (JSCompiler_temp_const - JSCompiler_inline_result$jscomp$0);
        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
      };
    }
    i.duration = 1000 * S;
    return i;
  }
  function hsl$1(hue$$1) {
    return function(start, end) {
      var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h), s = nogamma(start.s, end.s), l = nogamma(start.l, end.l), opacity = nogamma(start.opacity, end.opacity);
      return function(t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(t);
        start.opacity = opacity(t);
        return start + "";
      };
    };
  }
  function lab$1(start, end) {
    var l = nogamma((start = lab(start)).l, (end = lab(end)).l), a = nogamma(start.a, end.a), b = nogamma(start.b, end.b), opacity = nogamma(start.opacity, end.opacity);
    return function(t) {
      start.l = l(t);
      start.a = a(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
  function hcl$1(hue$$1) {
    return function(start, end) {
      var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h), c = nogamma(start.c, end.c), l = nogamma(start.l, end.l), opacity = nogamma(start.opacity, end.opacity);
      return function(t) {
        start.h = h(t);
        start.c = c(t);
        start.l = l(t);
        start.opacity = opacity(t);
        return start + "";
      };
    };
  }
  function cubehelix$1(hue$$1) {
    return function cubehelixGamma(y) {
      function cubehelix$$1(start, end) {
        var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h), s = nogamma(start.s, end.s), l = nogamma(start.l, end.l), opacity = nogamma(start.opacity, end.opacity);
        return function(t) {
          start.h = h(t);
          start.s = s(t);
          start.l = l(Math.pow(t, y));
          start.opacity = opacity(t);
          return start + "";
        };
      }
      y = +y;
      cubehelix$$1.gamma = cubehelixGamma;
      return cubehelix$$1;
    }(1);
  }
  function piecewise(interpolate, values) {
    for (var i$jscomp$0 = 0, n = values.length - 1, v = values[0], I = Array(0 > n ? 0 : n); i$jscomp$0 < n;) {
      I[i$jscomp$0] = interpolate(v, v = values[++i$jscomp$0]);
    }
    return function(t) {
      var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
      return I[i](t - i);
    };
  }
  function quantize(interpolator, n) {
    for (var samples = Array(n), i = 0; i < n; ++i) {
      samples[i] = interpolator(i / (n - 1));
    }
    return samples;
  }
  function now() {
    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
  }
  function clearNow() {
    clockNow = 0;
  }
  function Timer() {
    this._call = this._time = this._next = null;
  }
  function timer(callback, delay, time) {
    var t = new Timer;
    t.restart(callback, delay, time);
    return t;
  }
  function timerFlush() {
    now();
    ++frame;
    for (var t = taskHead, e; t;) {
      0 <= (e = clockNow - t._time) && t._call.call(null, e), t = t._next;
    }
    --frame;
  }
  function wake() {
    clockNow = (clockLast = clock.now()) + clockSkew;
    frame = timeout = 0;
    try {
      timerFlush();
    } finally {
      frame = 0;
      for (var t0, t1 = taskHead, t2, time = Infinity; t1;) {
        t1._call ? (time > t1._time && (time = t1._time), t0 = t1, t1 = t1._next) : (t2 = t1._next, t1._next = null, t1 = t0 ? t0._next = t2 : taskHead = t2);
      }
      taskTail = t0;
      sleep(time);
      clockNow = 0;
    }
  }
  function poke() {
    var now = clock.now(), delay = now - clockLast;
    1000 < delay && (clockSkew -= delay, clockLast = now);
  }
  function sleep(time) {
    if (!frame) {
      timeout && (timeout = clearTimeout(timeout));
      var delay = time - clockNow;
      24 < delay ? (Infinity > time && (timeout = setTimeout(wake, time - clock.now() - clockSkew)), interval && (interval = clearInterval(interval))) : (interval || (clockLast = clock.now(), interval = setInterval(poke, 1000)), frame = 1, setFrame(wake));
    }
  }
  function timeout$1(callback, delay, time) {
    var t = new Timer;
    delay = null == delay ? 0 : +delay;
    t.restart(function(elapsed) {
      t.stop();
      callback(elapsed + delay);
    }, delay, time);
    return t;
  }
  function interval$1(callback, delay, time) {
    var t = new Timer, total = delay;
    if (null == delay) {
      return t.restart(callback, delay, time), t;
    }
    delay = +delay;
    time = null == time ? now() : +time;
    t.restart(function tick(elapsed) {
      elapsed += total;
      t.restart(tick, total += delay, time);
      callback(elapsed);
    }, delay, time);
    return t;
  }
  function schedule(node, name, id, index, group, timing) {
    var schedules = node.__transition;
    if (!schedules) {
      node.__transition = {};
    } else {
      if (id in schedules) {
        return;
      }
    }
    create$1(node, id, {name:name, index:index, group:group, on:emptyOn, tween:emptyTween, time:timing.time, delay:timing.delay, duration:timing.duration, ease:timing.ease, timer:null, state:0});
  }
  function init$jscomp$0(node, id) {
    var schedule = get$1(node, id);
    if (0 < schedule.state) {
      throw Error("too late; already scheduled");
    }
    return schedule;
  }
  function set$1(node, id) {
    var schedule = get$1(node, id);
    if (2 < schedule.state) {
      throw Error("too late; already started");
    }
    return schedule;
  }
  function get$1(node, id) {
    var schedule = node.__transition;
    if (!schedule || !(schedule = schedule[id])) {
      throw Error("transition not found");
    }
    return schedule;
  }
  function create$1(node, id, self) {
    function schedule(elapsed) {
      self.state = 1;
      self.timer.restart(start, self.delay, self.time);
      self.delay <= elapsed && start(elapsed - self.delay);
    }
    function start(elapsed) {
      var j, n;
      if (1 !== self.state) {
        return stop();
      }
      for (i in schedules) {
        var o = schedules[i];
        if (o.name === self.name) {
          if (3 === o.state) {
            return timeout$1(start);
          }
          4 === o.state ? (o.state = 6, o.timer.stop(), o.on.call("interrupt", node, node.__data__, o.index, o.group), delete schedules[i]) : +i < id && (o.state = 6, o.timer.stop(), delete schedules[i]);
        }
      }
      timeout$1(function() {
        3 === self.state && (self.state = 4, self.timer.restart(tick, self.delay, self.time), tick(elapsed));
      });
      self.state = 2;
      self.on.call("start", node, node.__data__, self.index, self.group);
      if (2 === self.state) {
        self.state = 3;
        tween = Array(n = self.tween.length);
        var i = 0;
        for (j = -1; i < n; ++i) {
          if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
            tween[++j] = o;
          }
        }
        tween.length = j + 1;
      }
    }
    function tick(elapsed) {
      for (var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = 5, 1), i = -1, n = tween.length; ++i < n;) {
        tween[i].call(null, t);
      }
      5 === self.state && (self.on.call("end", node, node.__data__, self.index, self.group), stop());
    }
    function stop() {
      self.state = 6;
      self.timer.stop();
      delete schedules[id];
      for (var i in schedules) {
        return;
      }
      delete node.__transition;
    }
    var schedules = node.__transition, tween;
    schedules[id] = self;
    self.timer = timer(schedule, 0, self.time);
  }
  function interrupt(node, name) {
    var schedules = node.__transition, schedule$$1, empty = !0, i;
    if (schedules) {
      name = null == name ? null : name + "";
      for (i in schedules) {
        if ((schedule$$1 = schedules[i]).name !== name) {
          empty = !1;
        } else {
          var active = 2 < schedule$$1.state && 5 > schedule$$1.state;
          schedule$$1.state = 6;
          schedule$$1.timer.stop();
          active && schedule$$1.on.call("interrupt", node, node.__data__, schedule$$1.index, schedule$$1.group);
          delete schedules[i];
        }
      }
      empty && delete node.__transition;
    }
  }
  function selection_interrupt(name) {
    return this.each(function() {
      interrupt(this, name);
    });
  }
  function tweenRemove(id, name) {
    var tween0, tween1;
    return function() {
      var schedule$$1 = set$1(this, id), tween = schedule$$1.tween;
      if (tween !== tween0) {
        tween1 = tween0 = tween;
        for (var i = 0, n = tween1.length; i < n; ++i) {
          if (tween1[i].name === name) {
            tween1 = tween1.slice();
            tween1.splice(i, 1);
            break;
          }
        }
      }
      schedule$$1.tween = tween1;
    };
  }
  function tweenFunction(id, name, value) {
    var tween0, tween1;
    if ("function" !== typeof value) {
      throw Error();
    }
    return function() {
      var schedule$$1 = set$1(this, id), tween = schedule$$1.tween;
      if (tween !== tween0) {
        tween1 = (tween0 = tween).slice();
        for (var t = {name:name, value:value}, i = 0, n = tween1.length; i < n; ++i) {
          if (tween1[i].name === name) {
            tween1[i] = t;
            break;
          }
        }
        i === n && tween1.push(t);
      }
      schedule$$1.tween = tween1;
    };
  }
  function transition_tween(name, value) {
    var id = this._id;
    name += "";
    if (2 > arguments.length) {
      for (var tween = get$1(this.node(), id).tween, i = 0, n = tween.length, t; i < n; ++i) {
        if ((t = tween[i]).name === name) {
          return t.value;
        }
      }
      return null;
    }
    return this.each((null == value ? tweenRemove : tweenFunction)(id, name, value));
  }
  function tweenValue(transition, name, value) {
    var id = transition._id;
    transition.each(function() {
      var schedule$$1 = set$1(this, id);
      (schedule$$1.value || (schedule$$1.value = {}))[name] = value.apply(this, arguments);
    });
    return function(node) {
      return get$1(node, id).value[name];
    };
  }
  function interpolate(a, b) {
    var c;
    return ("number" === typeof b ? interpolateNumber : b instanceof color ? interpolateRgb : (c = color(b)) ? (b = c, interpolateRgb) : interpolateString)(a, b);
  }
  function attrRemove$1(name) {
    return function() {
      this.removeAttribute(name);
    };
  }
  function attrRemoveNS$1(fullname) {
    return function() {
      this.removeAttributeNS(fullname.space, fullname.local);
    };
  }
  function attrConstant$1(name, interpolate$$1, value1) {
    var value00, interpolate0;
    return function() {
      var value0 = this.getAttribute(name);
      return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value1);
    };
  }
  function attrConstantNS$1(fullname, interpolate$$1, value1) {
    var value00, interpolate0;
    return function() {
      var value0 = this.getAttributeNS(fullname.space, fullname.local);
      return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value1);
    };
  }
  function attrFunction$1(name, interpolate$$1, value) {
    var value00, value10, interpolate0;
    return function() {
      var value1 = value(this);
      if (null == value1) {
        return void this.removeAttribute(name);
      }
      var value0 = this.getAttribute(name);
      return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);
    };
  }
  function attrFunctionNS$1(fullname, interpolate$$1, value) {
    var value00, value10, interpolate0;
    return function() {
      var value1 = value(this);
      if (null == value1) {
        return void this.removeAttributeNS(fullname.space, fullname.local);
      }
      var value0 = this.getAttributeNS(fullname.space, fullname.local);
      return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);
    };
  }
  function transition_attr(name, value) {
    var fullname = namespace(name), i = "transform" === fullname ? interpolateTransformSvg : interpolate;
    return this.attrTween(name, "function" === typeof value ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, "attr." + name, value)) : null == value ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname) : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + ""));
  }
  function attrTweenNS(fullname, value) {
    function tween() {
      var node = this, i = value.apply(node, arguments);
      return i && function(t) {
        node.setAttributeNS(fullname.space, fullname.local, i(t));
      };
    }
    tween._value = value;
    return tween;
  }
  function attrTween(name, value) {
    function tween() {
      var node = this, i = value.apply(node, arguments);
      return i && function(t) {
        node.setAttribute(name, i(t));
      };
    }
    tween._value = value;
    return tween;
  }
  function transition_attrTween(name, value) {
    var key = "attr." + name;
    if (2 > arguments.length) {
      return (key = this.tween(key)) && key._value;
    }
    if (null == value) {
      return this.tween(key, null);
    }
    if ("function" !== typeof value) {
      throw Error();
    }
    var fullname = namespace(name);
    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
  }
  function delayFunction(id, value) {
    return function() {
      init$jscomp$0(this, id).delay = +value.apply(this, arguments);
    };
  }
  function delayConstant(id, value) {
    return value = +value, function() {
      init$jscomp$0(this, id).delay = value;
    };
  }
  function transition_delay(value) {
    var id = this._id;
    return arguments.length ? this.each(("function" === typeof value ? delayFunction : delayConstant)(id, value)) : get$1(this.node(), id).delay;
  }
  function durationFunction(id, value) {
    return function() {
      set$1(this, id).duration = +value.apply(this, arguments);
    };
  }
  function durationConstant(id, value) {
    return value = +value, function() {
      set$1(this, id).duration = value;
    };
  }
  function transition_duration(value) {
    var id = this._id;
    return arguments.length ? this.each(("function" === typeof value ? durationFunction : durationConstant)(id, value)) : get$1(this.node(), id).duration;
  }
  function easeConstant(id, value) {
    if ("function" !== typeof value) {
      throw Error();
    }
    return function() {
      set$1(this, id).ease = value;
    };
  }
  function transition_ease(value) {
    var id = this._id;
    return arguments.length ? this.each(easeConstant(id, value)) : get$1(this.node(), id).ease;
  }
  function transition_filter(match) {
    "function" !== typeof match && (match = matcher$1(match));
    for (var groups = this._groups, m = groups.length, subgroups = Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
        (node = group[i]) && match.call(node, node.__data__, i, group) && subgroup.push(node);
      }
    }
    return new Transition(subgroups, this._parents, this._name, this._id);
  }
  function transition_merge(transition$$1) {
    if (transition$$1._id !== this._id) {
      throw Error();
    }
    for (var groups0 = this._groups, groups1 = transition$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = Array(m0), j = 0; j < m; ++j) {
      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = Array(n), node, i = 0; i < n; ++i) {
        if (node = group0[i] || group1[i]) {
          merge[i] = node;
        }
      }
    }
    for (; j < m0; ++j) {
      merges[j] = groups0[j];
    }
    return new Transition(merges, this._parents, this._name, this._id);
  }
  function start$jscomp$0(name) {
    return (name + "").trim().split(/^|\s+/).every(function(t) {
      var i = t.indexOf(".");
      0 <= i && (t = t.slice(0, i));
      return !t || "start" === t;
    });
  }
  function onFunction(id, name, listener) {
    var on0, on1, sit = start$jscomp$0(name) ? init$jscomp$0 : set$1;
    return function() {
      var schedule$$1 = sit(this, id), on = schedule$$1.on;
      if (on !== on0) {
        (on1 = (on0 = on).copy()).on(name, listener);
      }
      schedule$$1.on = on1;
    };
  }
  function transition_on(name, listener) {
    var id = this._id;
    return 2 > arguments.length ? get$1(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
  }
  function removeFunction(id) {
    return function() {
      var parent = this.parentNode, i;
      for (i in this.__transition) {
        if (+i !== id) {
          return;
        }
      }
      parent && parent.removeChild(this);
    };
  }
  function transition_remove() {
    return this.on("end.remove", removeFunction(this._id));
  }
  function transition_select(select$$1) {
    var name = this._name, id = this._id;
    "function" !== typeof select$$1 && (select$$1 = selector$jscomp$0(select$$1));
    for (var groups = this._groups, m = groups.length, subgroups = Array(m), j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = Array(n), node, subnode, i = 0; i < n; ++i) {
        (node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group)) && ("__data__" in node && (subnode.__data__ = node.__data__), subgroup[i] = subnode, schedule(subgroup[i], name, id, i, subgroup, get$1(node, id)));
      }
    }
    return new Transition(subgroups, this._parents, name, id);
  }
  function transition_selectAll(select$$1) {
    var name = this._name, id = this._id;
    "function" !== typeof select$$1 && (select$$1 = selectorAll(select$$1));
    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
        if (node = group[i]) {
          for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {
            (child = children[k]) && schedule(child, name, id, k, children, inherit);
          }
          subgroups.push(children);
          parents.push(node);
        }
      }
    }
    return new Transition(subgroups, parents, name, id);
  }
  function transition_selection() {
    return new Selection$1(this._groups, this._parents);
  }
  function styleRemove$1(name, interpolate$$1) {
    var value00, value10, interpolate0;
    return function() {
      var value0 = styleValue(this, name), value1 = (this.style.removeProperty(name), styleValue(this, name));
      return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);
    };
  }
  function styleRemoveEnd(name) {
    return function() {
      this.style.removeProperty(name);
    };
  }
  function styleConstant$1(name, interpolate$$1, value1) {
    var value00, interpolate0;
    return function() {
      var value0 = styleValue(this, name);
      return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value1);
    };
  }
  function styleFunction$1(name, interpolate$$1, value) {
    var value00, value10, interpolate0;
    return function() {
      var value0 = styleValue(this, name), value1 = value(this);
      null == value1 && (value1 = (this.style.removeProperty(name), styleValue(this, name)));
      return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);
    };
  }
  function transition_style(name, value, priority) {
    var i = "transform" === (name += "") ? interpolateTransformCss : interpolate;
    return null == value ? this.styleTween(name, styleRemove$1(name, i)).on("end.style." + name, styleRemoveEnd(name)) : this.styleTween(name, "function" === typeof value ? styleFunction$1(name, i, tweenValue(this, "style." + name, value)) : styleConstant$1(name, i, value + ""), priority);
  }
  function styleTween(name, value, priority) {
    function tween() {
      var node = this, i = value.apply(node, arguments);
      return i && function(t) {
        node.style.setProperty(name, i(t), priority);
      };
    }
    tween._value = value;
    return tween;
  }
  function transition_styleTween(name, value, priority) {
    var key = "style." + (name += "");
    if (2 > arguments.length) {
      return (key = this.tween(key)) && key._value;
    }
    if (null == value) {
      return this.tween(key, null);
    }
    if ("function" !== typeof value) {
      throw Error();
    }
    return this.tween(key, styleTween(name, value, null == priority ? "" : priority));
  }
  function textConstant$1(value) {
    return function() {
      this.textContent = value;
    };
  }
  function textFunction$1(value) {
    return function() {
      var value1 = value(this);
      this.textContent = null == value1 ? "" : value1;
    };
  }
  function transition_text(value) {
    return this.tween("text", "function" === typeof value ? textFunction$1(tweenValue(this, "text", value)) : textConstant$1(null == value ? "" : value + ""));
  }
  function transition_transition() {
    for (var name = this._name, id0 = this._id, id1 = ++id$jscomp$1, groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
        if (node = group[i]) {
          var inherit = get$1(node, id0);
          schedule(node, name, id1, i, group, {time:inherit.time + inherit.delay + inherit.duration, delay:0, duration:inherit.duration, ease:inherit.ease});
        }
      }
    }
    return new Transition(groups, this._parents, name, id1);
  }
  function Transition(groups, parents, name, id) {
    this._groups = groups;
    this._parents = parents;
    this._name = name;
    this._id = id;
  }
  function transition(name) {
    return selection().transition(name);
  }
  function linear$1(t) {
    return +t;
  }
  function quadIn(t) {
    return t * t;
  }
  function quadOut(t) {
    return t * (2 - t);
  }
  function quadInOut(t) {
    return (1 >= (t *= 2) ? t * t : --t * (2 - t) + 1) / 2;
  }
  function cubicIn(t) {
    return t * t * t;
  }
  function cubicOut(t) {
    return --t * t * t + 1;
  }
  function cubicInOut(t) {
    return (1 >= (t *= 2) ? t * t * t : (t -= 2) * t * t + 2) / 2;
  }
  function sinIn(t) {
    return 1 - Math.cos(t * halfPi);
  }
  function sinOut(t) {
    return Math.sin(t * halfPi);
  }
  function sinInOut(t) {
    return (1 - Math.cos(pi * t)) / 2;
  }
  function expIn(t) {
    return Math.pow(2, 10 * t - 10);
  }
  function expOut(t) {
    return 1 - Math.pow(2, -10 * t);
  }
  function expInOut(t) {
    return (1 >= (t *= 2) ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
  }
  function circleIn(t) {
    return 1 - Math.sqrt(1 - t * t);
  }
  function circleOut(t) {
    return Math.sqrt(1 - --t * t);
  }
  function circleInOut(t) {
    return (1 >= (t *= 2) ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
  }
  function bounceIn(t) {
    return 1 - bounceOut(1 - t);
  }
  function bounceOut(t) {
    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + .75 : t < b6 ? b0 * (t -= b5) * t + .9375 : b0 * (t -= b8) * t + .984375;
  }
  function bounceInOut(t) {
    return (1 >= (t *= 2) ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
  }
  function selection_transition(name) {
    var timing;
    if (name instanceof Transition) {
      var id = name._id;
      name = name._name;
    } else {
      id = ++id$jscomp$1, (timing = defaultTiming).time = now(), name = null == name ? null : name + "";
    }
    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
        if (node = group[i]) {
          var JSCompiler_temp_const = node, JSCompiler_temp_const$jscomp$0 = name, JSCompiler_temp_const$jscomp$1 = id, JSCompiler_temp_const$jscomp$2 = i, JSCompiler_temp_const$jscomp$3 = group, JSCompiler_temp;
          if (!(JSCompiler_temp = timing)) {
            a: {
              for (var timing$jscomp$0 = void 0, node$jscomp$0 = node, id$jscomp$0 = id; !(timing$jscomp$0 = node$jscomp$0.__transition) || !(timing$jscomp$0 = timing$jscomp$0[id$jscomp$0]);) {
                if (!(node$jscomp$0 = node$jscomp$0.parentNode)) {
                  JSCompiler_temp = (defaultTiming.time = now(), defaultTiming);
                  break a;
                }
              }
              JSCompiler_temp = timing$jscomp$0;
            }
          }
          schedule(JSCompiler_temp_const, JSCompiler_temp_const$jscomp$0, JSCompiler_temp_const$jscomp$1, JSCompiler_temp_const$jscomp$2, JSCompiler_temp_const$jscomp$3, JSCompiler_temp);
        }
      }
    }
    return new Transition(groups, this._parents, name, id);
  }
  function active(node, name) {
    var schedules = node.__transition, schedule$$1, i;
    if (schedules) {
      for (i in name = null == name ? null : name + "", schedules) {
        if (1 < (schedule$$1 = schedules[i]).state && schedule$$1.name === name) {
          return new Transition([[node]], root$1, name, +i);
        }
      }
    }
    return null;
  }
  function constant$4(x) {
    return function() {
      return x;
    };
  }
  function BrushEvent(target, type, selection) {
    this.target = target;
    this.type = type;
    this.selection = selection;
  }
  function noevent$1() {
    d3.event.preventDefault();
    d3.event.stopImmediatePropagation();
  }
  function type$jscomp$0(t) {
    return {type:t};
  }
  function defaultFilter$1() {
    return !d3.event.button;
  }
  function defaultExtent() {
    var svg = this.ownerSVGElement || this;
    return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
  }
  function local$1(node) {
    for (; !node.__brush;) {
      if (!(node = node.parentNode)) {
        return;
      }
    }
    return node.__brush;
  }
  function empty$1(extent) {
    return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];
  }
  function brushSelection(node) {
    var state = node.__brush;
    return state ? state.dim.output(state.selection) : null;
  }
  function brushX() {
    return brush$1(X);
  }
  function brushY() {
    return brush$1(Y);
  }
  function brush() {
    return brush$1(XY);
  }
  function brush$1(dim) {
    function brush(group) {
      var overlay = group.property("__brush", initialize).selectAll(".overlay").data([type$jscomp$0("overlay")]);
      overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function() {
        var extent = local$1(this).extent;
        select(this).attr("x", extent[0][0]).attr("y", extent[0][1]).attr("width", extent[1][0] - extent[0][0]).attr("height", extent[1][1] - extent[0][1]);
      });
      group.selectAll(".selection").data([type$jscomp$0("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
      var handle = group.selectAll(".handle").data(dim.handles, function(d) {
        return d.type;
      });
      handle.exit().remove();
      handle.enter().append("rect").attr("class", function(d) {
        return "handle handle--" + d.type;
      }).attr("cursor", function(d) {
        return cursors[d.type];
      });
      group.each(redraw).attr("fill", "none").attr("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush touchstart.brush", started);
    }
    function redraw() {
      var group = select(this), selection$$1 = local$1(this).selection;
      selection$$1 ? (group.selectAll(".selection").style("display", null).attr("x", selection$$1[0][0]).attr("y", selection$$1[0][1]).attr("width", selection$$1[1][0] - selection$$1[0][0]).attr("height", selection$$1[1][1] - selection$$1[0][1]), group.selectAll(".handle").style("display", null).attr("x", function(d) {
        return "e" === d.type[d.type.length - 1] ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2;
      }).attr("y", function(d) {
        return "s" === d.type[0] ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2;
      }).attr("width", function(d) {
        return "n" === d.type || "s" === d.type ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize;
      }).attr("height", function(d) {
        return "e" === d.type || "w" === d.type ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize;
      })) : group.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
    function emitter(that, args) {
      return that.__brush.emitter || new Emitter(that, args);
    }
    function Emitter(that, args) {
      this.that = that;
      this.args = args;
      this.state = that.__brush;
      this.active = 0;
    }
    function started() {
      function moved() {
        var point1 = mouse(that);
        !shifting || lockX || lockY || (Math.abs(point1[0] - point$$1[0]) > Math.abs(point1[1] - point$$1[1]) ? lockY = !0 : lockX = !0);
        point$$1 = point1;
        moving = !0;
        noevent$1();
        move();
      }
      function move() {
        dx = point$$1[0] - point0[0];
        dy = point$$1[1] - point0[1];
        switch(mode) {
          case MODE_SPACE:
          case MODE_DRAG:
            signX && (dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx);
            signY && (dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy);
            break;
          case MODE_HANDLE:
            0 > signX ? (dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0) : 0 < signX && (dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx);
            0 > signY ? (dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0) : 0 < signY && (dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy);
            break;
          case MODE_CENTER:
            signX && (w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX))), signY && (n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY)));
        }
        if (e1 < w1) {
          signX *= -1;
          var t = w0;
          w0 = e0;
          e0 = t;
          t = w1;
          w1 = e1;
          e1 = t;
          type in flipX && overlay.attr("cursor", cursors[type = flipX[type]]);
        }
        s1 < n1 && (signY *= -1, t = n0, n0 = s0, s0 = t, t = n1, n1 = s1, s1 = t, type in flipY && overlay.attr("cursor", cursors[type = flipY[type]]));
        state.selection && (selection$$1 = state.selection);
        lockX && (w1 = selection$$1[0][0], e1 = selection$$1[1][0]);
        lockY && (n1 = selection$$1[0][1], s1 = selection$$1[1][1]);
        if (selection$$1[0][0] !== w1 || selection$$1[0][1] !== n1 || selection$$1[1][0] !== e1 || selection$$1[1][1] !== s1) {
          state.selection = [[w1, n1], [e1, s1]], redraw.call(that), emit.brush();
        }
      }
      function ended() {
        d3.event.stopImmediatePropagation();
        if (d3.event.touches) {
          if (d3.event.touches.length) {
            return;
          }
          touchending && clearTimeout(touchending);
          touchending = setTimeout(function() {
            touchending = null;
          }, 500);
          group.on("touchmove.brush touchend.brush touchcancel.brush", null);
        } else {
          yesdrag(d3.event.view, moving), view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
        }
        group.attr("pointer-events", "all");
        overlay.attr("cursor", cursors.overlay);
        state.selection && (selection$$1 = state.selection);
        empty$1(selection$$1) && (state.selection = null, redraw.call(that));
        emit.end();
      }
      function keydowned() {
        switch(d3.event.keyCode) {
          case 16:
            shifting = signX && signY;
            break;
          case 18:
            mode === MODE_HANDLE && (signX && (e0 = e1 - dx * signX, w0 = w1 + dx * signX), signY && (s0 = s1 - dy * signY, n0 = n1 + dy * signY), mode = MODE_CENTER, move());
            break;
          case 32:
            if (mode === MODE_HANDLE || mode === MODE_CENTER) {
              0 > signX ? e0 = e1 - dx : 0 < signX && (w0 = w1 - dx), 0 > signY ? s0 = s1 - dy : 0 < signY && (n0 = n1 - dy), mode = MODE_SPACE, overlay.attr("cursor", cursors.selection), move();
            }
            break;
          default:
            return;
        }
        noevent$1();
      }
      function keyupped() {
        switch(d3.event.keyCode) {
          case 16:
            shifting && (lockX = lockY = shifting = !1, move());
            break;
          case 18:
            mode === MODE_CENTER && (0 > signX ? e0 = e1 : 0 < signX && (w0 = w1), 0 > signY ? s0 = s1 : 0 < signY && (n0 = n1), mode = MODE_HANDLE, move());
            break;
          case 32:
            mode === MODE_SPACE && (d3.event.altKey ? (signX && (e0 = e1 - dx * signX, w0 = w1 + dx * signX), signY && (s0 = s1 - dy * signY, n0 = n1 + dy * signY), mode = MODE_CENTER) : (0 > signX ? e0 = e1 : 0 < signX && (w0 = w1), 0 > signY ? s0 = s1 : 0 < signY && (n0 = n1), mode = MODE_HANDLE), overlay.attr("cursor", cursors[type]), move());
            break;
          default:
            return;
        }
        noevent$1();
      }
      if (d3.event.touches) {
        if (d3.event.changedTouches.length < d3.event.touches.length) {
          return noevent$1();
        }
      } else {
        if (touchending) {
          return;
        }
      }
      if (filter.apply(this, arguments)) {
        var that = this, type = d3.event.target.__data__.type, mode = "selection" === (d3.event.metaKey ? type = "overlay" : type) ? MODE_DRAG : d3.event.altKey ? MODE_CENTER : MODE_HANDLE, signX = dim === Y ? null : signsX[type], signY = dim === X ? null : signsY[type], state = local$1(that), extent = state.extent, selection$$1 = state.selection, W = extent[0][0], w0, N = extent[0][1], n0, E = extent[1][0], e0, S = extent[1][1], s0, dx, dy, moving, shifting = signX && signY && d3.event.shiftKey, 
        lockX, lockY, point0 = mouse(that), point$$1 = point0, emit = emitter(that, arguments).beforestart();
        "overlay" === type ? state.selection = selection$$1 = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]] : (w0 = selection$$1[0][0], n0 = selection$$1[0][1], e0 = selection$$1[1][0], s0 = selection$$1[1][1]);
        var w1 = w0;
        var n1 = n0;
        var e1 = e0;
        var s1 = s0;
        var group = select(that).attr("pointer-events", "none"), overlay = group.selectAll(".overlay").attr("cursor", cursors[type]);
        if (d3.event.touches) {
          group.on("touchmove.brush", moved, !0).on("touchend.brush touchcancel.brush", ended, !0);
        } else {
          var view = select(d3.event.view).on("keydown.brush", keydowned, !0).on("keyup.brush", keyupped, !0).on("mousemove.brush", moved, !0).on("mouseup.brush", ended, !0);
          dragDisable(d3.event.view);
        }
        d3.event.stopImmediatePropagation();
        interrupt(that);
        redraw.call(that);
        emit.start();
      }
    }
    function initialize() {
      var state = this.__brush || {selection:null};
      state.extent = extent$jscomp$0.apply(this, arguments);
      state.dim = dim;
      return state;
    }
    var extent$jscomp$0 = defaultExtent, filter = defaultFilter$1, listeners = dispatch(brush, "start", "brush", "end"), handleSize = 6, touchending;
    brush.move = function(group, selection$$1) {
      group.selection ? group.on("start.brush", function() {
        emitter(this, arguments).beforestart().start();
      }).on("interrupt.brush end.brush", function() {
        emitter(this, arguments).end();
      }).tween("brush", function() {
        function tween(t) {
          state.selection = 1 === t && empty$1(selection1) ? null : i(t);
          redraw.call(that);
          emit.brush();
        }
        var that = this, state = that.__brush, emit = emitter(that, arguments), selection0 = state.selection, selection1 = dim.input("function" === typeof selection$$1 ? selection$$1.apply(this, arguments) : selection$$1, state.extent), i = interpolateValue(selection0, selection1);
        return selection0 && selection1 ? tween : tween(1);
      }) : group.each(function() {
        var that = this, args = arguments, state = that.__brush, selection1 = dim.input("function" === typeof selection$$1 ? selection$$1.apply(that, args) : selection$$1, state.extent), emit = emitter(that, args).beforestart();
        interrupt(that);
        state.selection = null == selection1 || empty$1(selection1) ? null : selection1;
        redraw.call(that);
        emit.start().brush().end();
      });
    };
    Emitter.prototype = {beforestart:function() {
      1 === ++this.active && (this.state.emitter = this, this.starting = !0);
      return this;
    }, start:function() {
      this.starting && (this.starting = !1, this.emit("start"));
      return this;
    }, brush:function() {
      this.emit("brush");
      return this;
    }, end:function() {
      0 === --this.active && (delete this.state.emitter, this.emit("end"));
      return this;
    }, emit:function(type) {
      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);
    }};
    brush.extent = function(_) {
      return arguments.length ? (extent$jscomp$0 = "function" === typeof _ ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent$jscomp$0;
    };
    brush.filter = function(_) {
      return arguments.length ? (filter = "function" === typeof _ ? _ : constant$4(!!_), brush) : filter;
    };
    brush.handleSize = function(_) {
      return arguments.length ? (handleSize = +_, brush) : handleSize;
    };
    brush.on = function() {
      var value = listeners.on.apply(listeners, arguments);
      return value === listeners ? brush : value;
    };
    return brush;
  }
  function compareValue(compare) {
    return function(a, b) {
      return compare(a.source.value + a.target.value, b.source.value + b.target.value);
    };
  }
  function chord() {
    function chord(matrix) {
      var n = matrix.length, groupSums = [], groupIndex = sequence(n), subgroupIndex = [], chords = [], groups = chords.groups = Array(n), subgroups = Array(n * n), i$jscomp$0, j;
      var k = 0;
      for (i$jscomp$0 = -1; ++i$jscomp$0 < n;) {
        var x = 0;
        for (j = -1; ++j < n;) {
          x += matrix[i$jscomp$0][j];
        }
        groupSums.push(x);
        subgroupIndex.push(sequence(n));
        k += x;
      }
      sortGroups && groupIndex.sort(function(a, b) {
        return sortGroups(groupSums[a], groupSums[b]);
      });
      sortSubgroups && subgroupIndex.forEach(function(d, i) {
        d.sort(function(a, b) {
          return sortSubgroups(matrix[i][a], matrix[i][b]);
        });
      });
      var dx = (k = max$1(0, tau$1 - padAngle * n) / k) ? padAngle : tau$1 / n;
      x = 0;
      for (i$jscomp$0 = -1; ++i$jscomp$0 < n;) {
        var x0 = x;
        for (j = -1; ++j < n;) {
          var di = groupIndex[i$jscomp$0], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
          subgroups[dj * n + di] = {index:di, subindex:dj, startAngle:a0, endAngle:a1, value:v};
        }
        groups[di] = {index:di, startAngle:x0, endAngle:x, value:groupSums[di]};
        x += dx;
      }
      for (i$jscomp$0 = -1; ++i$jscomp$0 < n;) {
        for (j = i$jscomp$0 - 1; ++j < n;) {
          var source = subgroups[j * n + i$jscomp$0], target = subgroups[i$jscomp$0 * n + j];
          (source.value || target.value) && chords.push(source.value < target.value ? {source:target, target:source} : {source:source, target:target});
        }
      }
      return sortChords ? chords.sort(sortChords) : chords;
    }
    var padAngle = 0, sortGroups = null, sortSubgroups = null, sortChords = null;
    chord.padAngle = function(_) {
      return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;
    };
    chord.sortGroups = function(_) {
      return arguments.length ? (sortGroups = _, chord) : sortGroups;
    };
    chord.sortSubgroups = function(_) {
      return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
    };
    chord.sortChords = function(_) {
      return arguments.length ? (null == _ ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
    };
    return chord;
  }
  function constant$5(x) {
    return function() {
      return x;
    };
  }
  function Path() {
    this._x0 = this._y0 = this._x1 = this._y1 = null;
    this._ = "";
  }
  function path$jscomp$0() {
    return new Path;
  }
  function defaultSource(d) {
    return d.source;
  }
  function defaultTarget(d) {
    return d.target;
  }
  function defaultRadius(d) {
    return d.radius;
  }
  function defaultStartAngle(d) {
    return d.startAngle;
  }
  function defaultEndAngle(d) {
    return d.endAngle;
  }
  function ribbon() {
    function ribbon() {
      var buffer, argv = slice$2.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv), sr = +radius.apply(this, (argv[0] = s, argv)), sa0 = startAngle.apply(this, argv) - halfPi$1, sa1 = endAngle.apply(this, argv) - halfPi$1, sx0 = sr * cos(sa0), sy0 = sr * sin(sa0), tr = +radius.apply(this, (argv[0] = t, argv)), ta0 = startAngle.apply(this, argv) - halfPi$1, ta1 = endAngle.apply(this, argv) - halfPi$1;
      context || (context = buffer = path$jscomp$0());
      context.moveTo(sx0, sy0);
      context.arc(0, 0, sr, sa0, sa1);
      if (sa0 !== ta0 || sa1 !== ta1) {
        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0)), context.arc(0, 0, tr, ta0, ta1);
      }
      context.quadraticCurveTo(0, 0, sx0, sy0);
      context.closePath();
      if (buffer) {
        return context = null, buffer + "" || null;
      }
    }
    var source = defaultSource, target = defaultTarget, radius = defaultRadius, startAngle = defaultStartAngle, endAngle = defaultEndAngle, context = null;
    ribbon.radius = function(_) {
      return arguments.length ? (radius = "function" === typeof _ ? _ : constant$5(+_), ribbon) : radius;
    };
    ribbon.startAngle = function(_) {
      return arguments.length ? (startAngle = "function" === typeof _ ? _ : constant$5(+_), ribbon) : startAngle;
    };
    ribbon.endAngle = function(_) {
      return arguments.length ? (endAngle = "function" === typeof _ ? _ : constant$5(+_), ribbon) : endAngle;
    };
    ribbon.source = function(_) {
      return arguments.length ? (source = _, ribbon) : source;
    };
    ribbon.target = function(_) {
      return arguments.length ? (target = _, ribbon) : target;
    };
    ribbon.context = function(_) {
      return arguments.length ? (context = null == _ ? null : _, ribbon) : context;
    };
    return ribbon;
  }
  function Map() {
  }
  function map$1(object, f) {
    var map = new Map;
    if (object instanceof Map) {
      object.each(function(value, key) {
        map.set(key, value);
      });
    } else {
      if (Array.isArray(object)) {
        var i = -1, n = object.length, o;
        if (null == f) {
          for (; ++i < n;) {
            map.set(i, object[i]);
          }
        } else {
          for (; ++i < n;) {
            map.set(f(o = object[i], i, object), o);
          }
        }
      } else {
        if (object) {
          for (var key$jscomp$0 in object) {
            map.set(key$jscomp$0, object[key$jscomp$0]);
          }
        }
      }
    }
    return map;
  }
  function nest() {
    function apply(array, depth, createResult, setResult) {
      if (depth >= keys.length) {
        return null != sortValues && array.sort(sortValues), null != rollup ? rollup(array) : array;
      }
      for (var i = -1, n = array.length, key$jscomp$0 = keys[depth++], keyValue, value, valuesByKey = map$1(), values$jscomp$0, result = createResult(); ++i < n;) {
        (values$jscomp$0 = valuesByKey.get(keyValue = key$jscomp$0(value = array[i]) + "")) ? values$jscomp$0.push(value) : valuesByKey.set(keyValue, [value]);
      }
      valuesByKey.each(function(values, key) {
        setResult(result, key, apply(values, depth, createResult, setResult));
      });
      return result;
    }
    function entries(map, depth) {
      if (++depth > keys.length) {
        return map;
      }
      var sortKey = sortKeys[depth - 1];
      if (null != rollup && depth >= keys.length) {
        var array = map.entries();
      } else {
        array = [], map.each(function(v, k) {
          array.push({key:k, values:entries(v, depth)});
        });
      }
      return null != sortKey ? array.sort(function(a, b) {
        return sortKey(a.key, b.key);
      }) : array;
    }
    var keys = [], sortKeys = [], sortValues, rollup, nest;
    return nest = {object:function(array) {
      return apply(array, 0, createObject, setObject);
    }, map:function(array) {
      return apply(array, 0, createMap, setMap);
    }, entries:function(array) {
      return entries(apply(array, 0, createMap, setMap), 0);
    }, key:function(d) {
      keys.push(d);
      return nest;
    }, sortKeys:function(order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    }, sortValues:function(order) {
      sortValues = order;
      return nest;
    }, rollup:function(f) {
      rollup = f;
      return nest;
    }};
  }
  function createObject() {
    return {};
  }
  function setObject(object, key, value) {
    object[key] = value;
  }
  function createMap() {
    return map$1();
  }
  function setMap(map, key, value) {
    map.set(key, value);
  }
  function Set() {
  }
  function set$2(object, f) {
    var set = new Set;
    if (object instanceof Set) {
      object.each(function(value) {
        set.add(value);
      });
    } else {
      if (object) {
        var i = -1, n = object.length;
        if (null == f) {
          for (; ++i < n;) {
            set.add(object[i]);
          }
        } else {
          for (; ++i < n;) {
            set.add(f(object[i], i, object));
          }
        }
      }
    }
    return set;
  }
  function keys(map) {
    var keys = [], key;
    for (key in map) {
      keys.push(key);
    }
    return keys;
  }
  function values$jscomp$1(map) {
    var values = [], key;
    for (key in map) {
      values.push(map[key]);
    }
    return values;
  }
  function entries(map) {
    var entries = [], key;
    for (key in map) {
      entries.push({key:key, value:map[key]});
    }
    return entries;
  }
  function ascending$2(a, b) {
    return a - b;
  }
  function constant$6(x) {
    return function() {
      return x;
    };
  }
  function noop$1() {
  }
  function contours() {
    function contours(values) {
      var tz = threshold$$1(values);
      if (Array.isArray(tz)) {
        tz = tz.slice().sort(ascending$2);
      } else {
        var domain = extent(values), start = domain[0], stop = domain[1];
        tz = tickStep(start, stop, tz);
        tz = sequence(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
      }
      return tz.map(function(value) {
        return contour(values, value);
      });
    }
    function contour(values, value) {
      var polygons = [], holes = [];
      isorings(values, value, function(ring) {
        smooth(ring, values, value);
        for (var JSCompiler_inline_result, i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1]; ++i < n;) {
          area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];
        }
        JSCompiler_inline_result = area;
        0 < JSCompiler_inline_result ? polygons.push([ring]) : holes.push(ring);
      });
      holes.forEach(function(hole$jscomp$0) {
        for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
          a: {
            for (var c, ring = (polygon = polygons[i])[0], hole = hole$jscomp$0, i$jscomp$0 = -1, n$jscomp$0 = hole.length; ++i$jscomp$0 < n$jscomp$0;) {
              b: {
                for (var ring$jscomp$0 = ring, point = hole[i$jscomp$0], x = point[0], y = point[1], contains = -1, i$jscomp$1 = 0, n$jscomp$1 = ring$jscomp$0.length, j = n$jscomp$1 - 1; i$jscomp$1 < n$jscomp$1; j = i$jscomp$1++) {
                  var pi = ring$jscomp$0[i$jscomp$1], xi = pi[0], yi = pi[1], pj = ring$jscomp$0[j], xj = pj[0], yj = pj[1], JSCompiler_inline_result, i$jscomp$2;
                  var a = pi, b = pj, c$jscomp$0 = point, JSCompiler_temp;
                  if (JSCompiler_temp = (b[0] - a[0]) * (c$jscomp$0[1] - a[1]) === (c$jscomp$0[0] - a[0]) * (b[1] - a[1])) {
                    var p = a[i$jscomp$2 = +(a[0] === b[0])], q = c$jscomp$0[i$jscomp$2], r = b[i$jscomp$2];
                    JSCompiler_temp = p <= q && q <= r || r <= q && q <= p;
                  }
                  if (JSCompiler_inline_result = JSCompiler_temp) {
                    var JSCompiler_inline_result$jscomp$0 = 0;
                    break b;
                  }
                  yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi && (contains = -contains);
                }
                JSCompiler_inline_result$jscomp$0 = contains;
              }
              if (c = JSCompiler_inline_result$jscomp$0) {
                var JSCompiler_inline_result$jscomp$1 = c;
                break a;
              }
            }
            JSCompiler_inline_result$jscomp$1 = 0;
          }
          if (-1 !== JSCompiler_inline_result$jscomp$1) {
            polygon.push(hole$jscomp$0);
            break;
          }
        }
      });
      return {type:"MultiPolygon", value:value, coordinates:polygons};
    }
    function isorings(values, value, callback) {
      function stitch(line) {
        var start = [line[0][0] + x, line[0][1] + y], end = [line[1][0] + x, line[1][1] + y], startIndex = 2 * start[0] + start[1] * (dx + 1) * 4, endIndex = 2 * end[0] + end[1] * (dx + 1) * 4, f, g;
        (f = fragmentByEnd[startIndex]) ? (g = fragmentByStart[endIndex]) ? (delete fragmentByEnd[f.end], delete fragmentByStart[g.start], f === g ? (f.ring.push(end), callback(f.ring)) : fragmentByStart[f.start] = fragmentByEnd[g.end] = {start:f.start, end:g.end, ring:f.ring.concat(g.ring)}) : (delete fragmentByEnd[f.end], f.ring.push(end), fragmentByEnd[f.end = endIndex] = f) : (f = fragmentByStart[endIndex]) ? (g = fragmentByEnd[startIndex]) ? (delete fragmentByStart[f.start], delete fragmentByEnd[g.end], 
        f === g ? (f.ring.push(end), callback(f.ring)) : fragmentByStart[g.start] = fragmentByEnd[f.end] = {start:g.start, end:f.end, ring:g.ring.concat(f.ring)}) : (delete fragmentByStart[f.start], f.ring.unshift(start), fragmentByStart[f.start = startIndex] = f) : fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start:startIndex, end:endIndex, ring:[start, end]};
      }
      var fragmentByStart = [], fragmentByEnd = [], y;
      var x = y = -1;
      var t1 = values[0] >= value;
      for (cases[t1 << 1].forEach(stitch); ++x < dx - 1;) {
        var t0 = t1;
        t1 = values[x + 1] >= value;
        cases[t0 | t1 << 1].forEach(stitch);
      }
      for (cases[t1 << 0].forEach(stitch); ++y < dy - 1;) {
        x = -1;
        t1 = values[y * dx + dx] >= value;
        var t2 = values[y * dx] >= value;
        for (cases[t1 << 1 | t2 << 2].forEach(stitch); ++x < dx - 1;) {
          t0 = t1;
          t1 = values[y * dx + dx + x + 1] >= value;
          var t3 = t2;
          t2 = values[y * dx + x + 1] >= value;
          cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
        }
        cases[t1 | t2 << 3].forEach(stitch);
      }
      x = -1;
      t2 = values[y * dx] >= value;
      for (cases[t2 << 2].forEach(stitch); ++x < dx - 1;) {
        t3 = t2, t2 = values[y * dx + x + 1] >= value, cases[t2 << 2 | t3 << 3].forEach(stitch);
      }
      cases[t2 << 3].forEach(stitch);
    }
    function smoothLinear(ring, values, value) {
      ring.forEach(function(point) {
        var x = point[0], y = point[1], xt = x | 0, yt = y | 0, v1 = values[yt * dx + xt];
        if (0 < x && x < dx && xt === x) {
          var v0 = values[yt * dx + xt - 1];
          point[0] = x + (value - v0) / (v1 - v0) - 0.5;
        }
        0 < y && y < dy && yt === y && (v0 = values[(yt - 1) * dx + xt], point[1] = y + (value - v0) / (v1 - v0) - 0.5);
      });
    }
    var dx = 1, dy = 1, threshold$$1 = thresholdSturges, smooth = smoothLinear;
    contours.contour = contour;
    contours.size = function(_) {
      if (!arguments.length) {
        return [dx, dy];
      }
      var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);
      if (!(0 < _0 && 0 < _1)) {
        throw Error("invalid size");
      }
      return dx = _0, dy = _1, contours;
    };
    contours.thresholds = function(_) {
      return arguments.length ? (threshold$$1 = "function" === typeof _ ? _ : Array.isArray(_) ? constant$6(slice$3.call(_)) : constant$6(_), contours) : threshold$$1;
    };
    contours.smooth = function(_) {
      return arguments.length ? (smooth = _ ? smoothLinear : noop$1, contours) : smooth === smoothLinear;
    };
    return contours;
  }
  function blurX(source, target, r) {
    for (var n = source.width, m = source.height, w = (r << 1) + 1, j = 0; j < m; ++j) {
      for (var i = 0, sr = 0; i < n + r; ++i) {
        i < n && (sr += source.data[i + j * n]), i >= r && (i >= w && (sr -= source.data[i - w + j * n]), target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w));
      }
    }
  }
  function blurY(source, target, r) {
    for (var n = source.width, m = source.height, w = (r << 1) + 1, i = 0; i < n; ++i) {
      for (var j = 0, sr = 0; j < m + r; ++j) {
        j < m && (sr += source.data[i + j * n]), j >= r && (j >= w && (sr -= source.data[i + (j - w) * n]), target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w));
      }
    }
  }
  function defaultX(d) {
    return d[0];
  }
  function defaultY(d) {
    return d[1];
  }
  function defaultWeight() {
    return 1;
  }
  function density() {
    function density(data$jscomp$0) {
      var values0 = new Float32Array(n * m), values1 = new Float32Array(n * m);
      data$jscomp$0.forEach(function(d, i, data) {
        var xi = +x(d, i, data) + o >> k, yi = +y(d, i, data) + o >> k, wi = +weight(d, i, data);
        0 <= xi && xi < n && 0 <= yi && yi < m && (values0[xi + yi * n] += wi);
      });
      blurX({width:n, height:m, data:values0}, {width:n, height:m, data:values1}, r >> k);
      blurY({width:n, height:m, data:values1}, {width:n, height:m, data:values0}, r >> k);
      blurX({width:n, height:m, data:values0}, {width:n, height:m, data:values1}, r >> k);
      blurY({width:n, height:m, data:values1}, {width:n, height:m, data:values0}, r >> k);
      blurX({width:n, height:m, data:values0}, {width:n, height:m, data:values1}, r >> k);
      blurY({width:n, height:m, data:values1}, {width:n, height:m, data:values0}, r >> k);
      var tz = threshold$$1(values0);
      if (!Array.isArray(tz)) {
        var stop = max(values0);
        tz = tickStep(0, stop, tz);
        tz = sequence(0, Math.floor(stop / tz) * tz, tz);
        tz.shift();
      }
      return contours().thresholds(tz).size([n, m])(values0).map(transform);
    }
    function transform(geometry) {
      geometry.value *= Math.pow(2, -2 * k);
      geometry.coordinates.forEach(transformPolygon);
      return geometry;
    }
    function transformPolygon(coordinates) {
      coordinates.forEach(transformRing);
    }
    function transformRing(coordinates) {
      coordinates.forEach(transformPoint);
    }
    function transformPoint(coordinates) {
      coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
      coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
    }
    function resize() {
      o = 3 * r;
      n = dx + 2 * o >> k;
      m = dy + 2 * o >> k;
      return density;
    }
    var x = defaultX, y = defaultY, weight = defaultWeight, dx = 960, dy = 500, r = 20, k = 2, o = 3 * r, n = dx + 2 * o >> k, m = dy + 2 * o >> k, threshold$$1 = constant$6(20);
    density.x = function(_) {
      return arguments.length ? (x = "function" === typeof _ ? _ : constant$6(+_), density) : x;
    };
    density.y = function(_) {
      return arguments.length ? (y = "function" === typeof _ ? _ : constant$6(+_), density) : y;
    };
    density.weight = function(_) {
      return arguments.length ? (weight = "function" === typeof _ ? _ : constant$6(+_), density) : weight;
    };
    density.size = function(_) {
      if (!arguments.length) {
        return [dx, dy];
      }
      var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);
      if (!(0 <= _0 || 0 <= _0)) {
        throw Error("invalid size");
      }
      return dx = _0, dy = _1, resize();
    };
    density.cellSize = function(_) {
      if (!arguments.length) {
        return 1 << k;
      }
      if (!(1 <= (_ = +_))) {
        throw Error("invalid cell size");
      }
      return k = Math.floor(Math.log(_) / Math.LN2), resize();
    };
    density.thresholds = function(_) {
      return arguments.length ? (threshold$$1 = "function" === typeof _ ? _ : Array.isArray(_) ? constant$6(slice$3.call(_)) : constant$6(_), density) : threshold$$1;
    };
    density.bandwidth = function(_) {
      if (!arguments.length) {
        return Math.sqrt(r * (r + 1));
      }
      if (!(0 <= (_ = +_))) {
        throw Error("invalid bandwidth");
      }
      return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
    };
    return density;
  }
  function objectConverter(columns) {
    return new Function("d", "return {" + columns.map(function(name, i) {
      return JSON.stringify(name) + ": d[" + i + "]";
    }).join(",") + "}");
  }
  function customConverter(columns, f) {
    var object = objectConverter(columns);
    return function(row, i) {
      return f(object(row), i, columns);
    };
  }
  function inferColumns(rows) {
    var columnSet = Object.create(null), columns = [];
    rows.forEach(function(row) {
      for (var column in row) {
        column in columnSet || columns.push(columnSet[column] = column);
      }
    });
    return columns;
  }
  function dsvFormat(delimiter) {
    function parse(text, f) {
      var convert, columns, rows = parseRows(text, function(row, i) {
        if (convert) {
          return convert(row, i - 1);
        }
        columns = row;
        convert = f ? customConverter(row, f) : objectConverter(row);
      });
      rows.columns = columns || [];
      return rows;
    }
    function parseRows(text, f) {
      function token() {
        if (eof) {
          return EOF;
        }
        if (eol) {
          return eol = !1, EOL;
        }
        var i, j = I, c;
        if (34 === text.charCodeAt(j)) {
          for (; I++ < N && 34 !== text.charCodeAt(I) || 34 === text.charCodeAt(++I);) {
          }
          (i = I) >= N ? eof = !0 : 10 === (c = text.charCodeAt(I++)) ? eol = !0 : 13 === c && (eol = !0, 10 === text.charCodeAt(I) && ++I);
          return text.slice(j + 1, i - 1).replace(/""/g, '"');
        }
        for (; I < N;) {
          if (10 === (c = text.charCodeAt(i = I++))) {
            eol = !0;
          } else {
            if (13 === c) {
              eol = !0, 10 === text.charCodeAt(I) && ++I;
            } else {
              if (c !== DELIMITER) {
                continue;
              }
            }
          }
          return text.slice(j, i);
        }
        return eof = !0, text.slice(j, N);
      }
      var rows = [], N = text.length, I = 0, n = 0, t, eof = 0 >= N, eol = !1;
      10 === text.charCodeAt(N - 1) && --N;
      for (13 === text.charCodeAt(N - 1) && --N; (t = token()) !== EOF;) {
        for (var row = []; t !== EOL && t !== EOF;) {
          row.push(t), t = token();
        }
        f && null == (row = f(row, n++)) || rows.push(row);
      }
      return rows;
    }
    function format(rows, columns) {
      null == columns && (columns = inferColumns(rows));
      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {
        return columns.map(function(column) {
          return formatValue(row[column]);
        }).join(delimiter);
      })).join("\n");
    }
    function formatRows(rows) {
      return rows.map(formatRow).join("\n");
    }
    function formatRow(row) {
      return row.map(formatValue).join(delimiter);
    }
    function formatValue(text) {
      return null == text ? "" : reFormat.test(text += "") ? '"' + text.replace(/"/g, '""') + '"' : text;
    }
    var reFormat = new RegExp('["' + delimiter + "\n\r]"), DELIMITER = delimiter.charCodeAt(0);
    return {parse:parse, parseRows:parseRows, format:format, formatRows:formatRows};
  }
  function responseBlob(response) {
    if (!response.ok) {
      throw Error(response.status + " " + response.statusText);
    }
    return response.blob();
  }
  function blob(input, init) {
    return fetch(input, init).then(responseBlob);
  }
  function responseArrayBuffer(response) {
    if (!response.ok) {
      throw Error(response.status + " " + response.statusText);
    }
    return response.arrayBuffer();
  }
  function buffer$jscomp$0(input, init) {
    return fetch(input, init).then(responseArrayBuffer);
  }
  function responseText(response) {
    if (!response.ok) {
      throw Error(response.status + " " + response.statusText);
    }
    return response.text();
  }
  function text$jscomp$0(input, init) {
    return fetch(input, init).then(responseText);
  }
  function dsvParse(parse) {
    return function(input, init, row) {
      2 === arguments.length && "function" === typeof init && (row = init, init = void 0);
      return text$jscomp$0(input, init).then(function(response) {
        return parse(response, row);
      });
    };
  }
  function dsv(delimiter, input, init, row) {
    3 === arguments.length && "function" === typeof init && (row = init, init = void 0);
    var format = dsvFormat(delimiter);
    return text$jscomp$0(input, init).then(function(response) {
      return format.parse(response, row);
    });
  }
  function image$jscomp$0(input, init) {
    return new Promise(function(resolve, reject) {
      var image = new Image, key;
      for (key in init) {
        image[key] = init[key];
      }
      image.onerror = reject;
      image.onload = function() {
        resolve(image);
      };
      image.src = input;
    });
  }
  function responseJson(response) {
    if (!response.ok) {
      throw Error(response.status + " " + response.statusText);
    }
    return response.json();
  }
  function json(input, init) {
    return fetch(input, init).then(responseJson);
  }
  function parser(type) {
    return function(input, init) {
      return text$jscomp$0(input, init).then(function(text$$1) {
        return (new DOMParser).parseFromString(text$$1, type);
      });
    };
  }
  function center$1(x, y) {
    function force() {
      var i, n = nodes.length, sx = 0, sy = 0;
      for (i = 0; i < n; ++i) {
        var node = nodes[i];
        sx += node.x;
        sy += node.y;
      }
      sx = sx / n - x;
      sy = sy / n - y;
      for (i = 0; i < n; ++i) {
        node = nodes[i], node.x -= sx, node.y -= sy;
      }
    }
    var nodes;
    null == x && (x = 0);
    null == y && (y = 0);
    force.initialize = function(_) {
      nodes = _;
    };
    force.x = function(_) {
      return arguments.length ? (x = +_, force) : x;
    };
    force.y = function(_) {
      return arguments.length ? (y = +_, force) : y;
    };
    return force;
  }
  function constant$7(x) {
    return function() {
      return x;
    };
  }
  function jiggle() {
    return 1e-6 * (Math.random() - 0.5);
  }
  function tree_add(d) {
    var x = +this._x.call(null, d), y = +this._y.call(null, d);
    return add(this.cover(x, y), x, y, d);
  }
  function add(tree, x, y, d) {
    if (isNaN(x) || isNaN(y)) {
      return tree;
    }
    var parent, node = tree._root, leaf = {data:d}, x0 = tree._x0, y0 = tree._y0, x1 = tree._x1, y1 = tree._y1, xm, ym, right, bottom, i, j;
    if (!node) {
      return tree._root = leaf, tree;
    }
    for (; node.length;) {
      if ((right = x >= (xm = (x0 + x1) / 2)) ? x0 = xm : x1 = xm, (bottom = y >= (ym = (y0 + y1) / 2)) ? y0 = ym : y1 = ym, parent = node, !(node = node[i = bottom << 1 | right])) {
        return parent[i] = leaf, tree;
      }
    }
    var xp = +tree._x.call(null, node.data);
    var yp = +tree._y.call(null, node.data);
    if (x === xp && y === yp) {
      return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;
    }
    do {
      parent = parent ? parent[i] = Array(4) : tree._root = Array(4), (right = x >= (xm = (x0 + x1) / 2)) ? x0 = xm : x1 = xm, (bottom = y >= (ym = (y0 + y1) / 2)) ? y0 = ym : y1 = ym;
    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));
    return parent[j] = node, parent[i] = leaf, tree;
  }
  function addAll(data) {
    var d, i, n = data.length, x, y, xz = Array(n), yz = Array(n), x0 = Infinity, y0 = Infinity, x1 = -Infinity, y1 = -Infinity;
    for (i = 0; i < n; ++i) {
      isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d)) || (xz[i] = x, yz[i] = y, x < x0 && (x0 = x), x > x1 && (x1 = x), y < y0 && (y0 = y), y > y1 && (y1 = y));
    }
    x1 < x0 && (x0 = this._x0, x1 = this._x1);
    y1 < y0 && (y0 = this._y0, y1 = this._y1);
    this.cover(x0, y0).cover(x1, y1);
    for (i = 0; i < n; ++i) {
      add(this, xz[i], yz[i], data[i]);
    }
    return this;
  }
  function tree_cover(x, y) {
    if (isNaN(x = +x) || isNaN(y = +y)) {
      return this;
    }
    var x0 = this._x0, y0 = this._y0, x1 = this._x1, y1 = this._y1;
    if (isNaN(x0)) {
      x1 = (x0 = Math.floor(x)) + 1, y1 = (y0 = Math.floor(y)) + 1;
    } else {
      if (x0 > x || x > x1 || y0 > y || y > y1) {
        var z = x1 - x0, node = this._root, i;
        switch(i = (y < (y0 + y1) / 2) << 1 | x < (x0 + x1) / 2) {
          case 0:
            do {
              var parent = Array(4);
              parent[i] = node;
              node = parent;
            } while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);
            break;
          case 1:
            do {
              parent = Array(4), parent[i] = node, node = parent;
            } while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);
            break;
          case 2:
            do {
              parent = Array(4), parent[i] = node, node = parent;
            } while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);
            break;
          case 3:
            do {
              parent = Array(4), parent[i] = node, node = parent;
            } while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);
        }
        this._root && this._root.length && (this._root = node);
      } else {
        return this;
      }
    }
    this._x0 = x0;
    this._y0 = y0;
    this._x1 = x1;
    this._y1 = y1;
    return this;
  }
  function tree_data() {
    var data = [];
    this.visit(function(node) {
      if (!node.length) {
        do {
          data.push(node.data);
        } while (node = node.next);
      }
    });
    return data;
  }
  function tree_extent(_) {
    return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? void 0 : [[this._x0, this._y0], [this._x1, this._y1]];
  }
  function Quad(node, x0, y0, x1, y1) {
    this.node = node;
    this.x0 = x0;
    this.y0 = y0;
    this.x1 = x1;
    this.y1 = y1;
  }
  function tree_find(x, y, radius) {
    var x0 = this._x0, y0 = this._y0, x1, y1, x2, y2, x3 = this._x1, y3 = this._y1, quads = [], node = this._root, q, i;
    node && quads.push(new Quad(node, x0, y0, x3, y3));
    null == radius ? radius = Infinity : (x0 = x - radius, y0 = y - radius, x3 = x + radius, y3 = y + radius, radius *= radius);
    for (; q = quads.pop();) {
      if (!(!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0)) {
        if (node.length) {
          var xm = (x1 + x2) / 2, ym = (y1 + y2) / 2;
          quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym));
          if (i = (y >= ym) << 1 | x >= xm) {
            q = quads[quads.length - 1], quads[quads.length - 1] = quads[quads.length - 1 - i], quads[quads.length - 1 - i] = q;
          }
        } else {
          var dx = x - +this._x.call(null, node.data), dy = y - +this._y.call(null, node.data), d2 = dx * dx + dy * dy;
          if (d2 < radius) {
            var d = Math.sqrt(radius = d2);
            x0 = x - d;
            y0 = y - d;
            x3 = x + d;
            y3 = y + d;
            var data = node.data;
          }
        }
      }
    }
    return data;
  }
  function tree_remove(d) {
    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) {
      return this;
    }
    var parent, node = this._root, previous, next, x0 = this._x0, y0 = this._y0, x1 = this._x1, y1 = this._y1, x, y, xm, ym, right, bottom, i;
    if (!node) {
      return this;
    }
    if (node.length) {
      for (;;) {
        (right = x >= (xm = (x0 + x1) / 2)) ? x0 = xm : x1 = xm;
        (bottom = y >= (ym = (y0 + y1) / 2)) ? y0 = ym : y1 = ym;
        if (!(parent = node, node = node[i = bottom << 1 | right])) {
          return this;
        }
        if (!node.length) {
          break;
        }
        if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) {
          var retainer = parent;
          var j = i;
        }
      }
    }
    for (; node.data !== d;) {
      if (!(previous = node, node = node.next)) {
        return this;
      }
    }
    (next = node.next) && delete node.next;
    if (previous) {
      return next ? previous.next = next : delete previous.next, this;
    }
    if (!parent) {
      return this._root = next, this;
    }
    next ? parent[i] = next : delete parent[i];
    (node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length && (retainer ? retainer[j] = node : this._root = node);
    return this;
  }
  function removeAll(data) {
    for (var i = 0, n = data.length; i < n; ++i) {
      this.remove(data[i]);
    }
    return this;
  }
  function tree_root() {
    return this._root;
  }
  function tree_size() {
    var size = 0;
    this.visit(function(node) {
      if (!node.length) {
        do {
          ++size;
        } while (node = node.next);
      }
    });
    return size;
  }
  function tree_visit(callback) {
    var quads = [], q, node = this._root, child, x0, y0, x1, y1;
    for (node && quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1)); q = quads.pop();) {
      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
        var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
        (child = node[3]) && quads.push(new Quad(child, xm, ym, x1, y1));
        (child = node[2]) && quads.push(new Quad(child, x0, ym, xm, y1));
        (child = node[1]) && quads.push(new Quad(child, xm, y0, x1, ym));
        (child = node[0]) && quads.push(new Quad(child, x0, y0, xm, ym));
      }
    }
    return this;
  }
  function tree_visitAfter(callback) {
    var quads = [], next = [], q;
    for (this._root && quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1)); q = quads.pop();) {
      var node = q.node;
      if (node.length) {
        var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
        (child = node[0]) && quads.push(new Quad(child, x0, y0, xm, ym));
        (child = node[1]) && quads.push(new Quad(child, xm, y0, x1, ym));
        (child = node[2]) && quads.push(new Quad(child, x0, ym, xm, y1));
        (child = node[3]) && quads.push(new Quad(child, xm, ym, x1, y1));
      }
      next.push(q);
    }
    for (; q = next.pop();) {
      callback(q.node, q.x0, q.y0, q.x1, q.y1);
    }
    return this;
  }
  function defaultX$1(d) {
    return d[0];
  }
  function tree_x(_) {
    return arguments.length ? (this._x = _, this) : this._x;
  }
  function defaultY$1(d) {
    return d[1];
  }
  function tree_y(_) {
    return arguments.length ? (this._y = _, this) : this._y;
  }
  function quadtree(nodes, x, y) {
    var tree = new Quadtree(null == x ? defaultX$1 : x, null == y ? defaultY$1 : y, NaN, NaN, NaN, NaN);
    return null == nodes ? tree : tree.addAll(nodes);
  }
  function Quadtree(x, y, x0, y0, x1, y1) {
    this._x = x;
    this._y = y;
    this._x0 = x0;
    this._y0 = y0;
    this._x1 = x1;
    this._y1 = y1;
    this._root = void 0;
  }
  function leaf_copy(leaf) {
    for (var copy = {data:leaf.data}, next = copy; leaf = leaf.next;) {
      next = next.next = {data:leaf.data};
    }
    return copy;
  }
  function x$jscomp$2(d) {
    return d.x + d.vx;
  }
  function y$jscomp$1(d) {
    return d.y + d.vy;
  }
  function collide(radius) {
    function force() {
      function apply(quad, x0, y0, x1, y1) {
        var data = quad.data, rj = quad.r, r = ri + rj;
        if (data) {
          if (data.index > node.index) {
            var x = xi - data.x - data.vx, y = yi - data.y - data.vy, l = x * x + y * y;
            l < r * r && (0 === x && (x = jiggle(), l += x * x), 0 === y && (y = jiggle(), l += y * y), l = (r - (l = Math.sqrt(l))) / l * strength, node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj)), node.vy += (y *= l) * r, data.vx -= x * (r = 1 - r), data.vy -= y * r);
          }
        } else {
          return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
        }
      }
      for (var i, n = nodes.length, tree, node, xi, yi, ri, ri2, k = 0; k < iterations; ++k) {
        for (tree = quadtree(nodes, x$jscomp$2, y$jscomp$1).visitAfter(prepare), i = 0; i < n; ++i) {
          node = nodes[i], ri = radii[node.index], ri2 = ri * ri, xi = node.x + node.vx, yi = node.y + node.vy, tree.visit(apply);
        }
      }
    }
    function prepare(quad) {
      if (quad.data) {
        return quad.r = radii[quad.data.index];
      }
      for (var i = quad.r = 0; 4 > i; ++i) {
        quad[i] && quad[i].r > quad.r && (quad.r = quad[i].r);
      }
    }
    function initialize() {
      if (nodes) {
        var i, n = nodes.length;
        radii = Array(n);
        for (i = 0; i < n; ++i) {
          var node = nodes[i];
          radii[node.index] = +radius(node, i, nodes);
        }
      }
    }
    var nodes, radii, strength = 1, iterations = 1;
    "function" !== typeof radius && (radius = constant$7(null == radius ? 1 : +radius));
    force.initialize = function(_) {
      nodes = _;
      initialize();
    };
    force.iterations = function(_) {
      return arguments.length ? (iterations = +_, force) : iterations;
    };
    force.strength = function(_) {
      return arguments.length ? (strength = +_, force) : strength;
    };
    force.radius = function(_) {
      return arguments.length ? (radius = "function" === typeof _ ? _ : constant$7(+_), initialize(), force) : radius;
    };
    return force;
  }
  function index$jscomp$0(d) {
    return d.index;
  }
  function find(nodeById, nodeId) {
    var node = nodeById.get(nodeId);
    if (!node) {
      throw Error("missing: " + nodeId);
    }
    return node;
  }
  function link(links) {
    function defaultStrength(link) {
      return 1 / Math.min(count[link.source.index], count[link.target.index]);
    }
    function force(alpha) {
      for (var k = 0, n = links.length; k < iterations; ++k) {
        for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
          link = links[i], source = link.source, target = link.target, x = target.x + target.vx - source.x - source.vx || jiggle(), y = target.y + target.vy - source.y - source.vy || jiggle(), l = Math.sqrt(x * x + y * y), l = (l - distances[i]) / l * alpha * strengths[i], x *= l, y *= l, target.vx -= x * (b = bias[i]), target.vy -= y * b, source.vx += x * (b = 1 - b), source.vy += y * b;
        }
      }
    }
    function initialize() {
      if (nodes) {
        var n = nodes.length, m = links.length, nodeById = map$1(nodes, id);
        var i = 0;
        for (count = Array(n); i < m; ++i) {
          var link = links[i];
          link.index = i;
          "object" !== typeof link.source && (link.source = find(nodeById, link.source));
          "object" !== typeof link.target && (link.target = find(nodeById, link.target));
          count[link.source.index] = (count[link.source.index] || 0) + 1;
          count[link.target.index] = (count[link.target.index] || 0) + 1;
        }
        i = 0;
        for (bias = Array(m); i < m; ++i) {
          link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
        }
        strengths = Array(m);
        initializeStrength();
        distances = Array(m);
        initializeDistance();
      }
    }
    function initializeStrength() {
      if (nodes) {
        for (var i = 0, n = links.length; i < n; ++i) {
          strengths[i] = +strength(links[i], i, links);
        }
      }
    }
    function initializeDistance() {
      if (nodes) {
        for (var i = 0, n = links.length; i < n; ++i) {
          distances[i] = +distance(links[i], i, links);
        }
      }
    }
    var id = index$jscomp$0, strength = defaultStrength, strengths, distance = constant$7(30), distances, nodes, count, bias, iterations = 1;
    null == links && (links = []);
    force.initialize = function(_) {
      nodes = _;
      initialize();
    };
    force.links = function(_) {
      return arguments.length ? (links = _, initialize(), force) : links;
    };
    force.id = function(_) {
      return arguments.length ? (id = _, force) : id;
    };
    force.iterations = function(_) {
      return arguments.length ? (iterations = +_, force) : iterations;
    };
    force.strength = function(_) {
      return arguments.length ? (strength = "function" === typeof _ ? _ : constant$7(+_), initializeStrength(), force) : strength;
    };
    force.distance = function(_) {
      return arguments.length ? (distance = "function" === typeof _ ? _ : constant$7(+_), initializeDistance(), force) : distance;
    };
    return force;
  }
  function x$1(d) {
    return d.x;
  }
  function y$1(d) {
    return d.y;
  }
  function simulation(nodes) {
    function step() {
      tick();
      event.call("tick", simulation);
      alpha < alphaMin && (stepper.stop(), event.call("end", simulation));
    }
    function tick() {
      var i, n = nodes.length;
      alpha += (alphaTarget - alpha) * alphaDecay;
      forces.each(function(force) {
        force(alpha);
      });
      for (i = 0; i < n; ++i) {
        var node = nodes[i];
        null == node.fx ? node.x += node.vx *= velocityDecay : (node.x = node.fx, node.vx = 0);
        null == node.fy ? node.y += node.vy *= velocityDecay : (node.y = node.fy, node.vy = 0);
      }
    }
    function initializeNodes() {
      for (var i = 0, n = nodes.length, node; i < n; ++i) {
        node = nodes[i];
        node.index = i;
        if (isNaN(node.x) || isNaN(node.y)) {
          var radius = 10 * Math.sqrt(i), angle = i * initialAngle;
          node.x = radius * Math.cos(angle);
          node.y = radius * Math.sin(angle);
        }
        if (isNaN(node.vx) || isNaN(node.vy)) {
          node.vx = node.vy = 0;
        }
      }
    }
    function initializeForce(force) {
      force.initialize && force.initialize(nodes);
      return force;
    }
    var simulation, alpha = 1, alphaMin = 0.001, alphaDecay = 1 - Math.pow(alphaMin, 1 / 300), alphaTarget = 0, velocityDecay = 0.6, forces = map$1(), stepper = timer(step), event = dispatch("tick", "end");
    null == nodes && (nodes = []);
    initializeNodes();
    return simulation = {tick:tick, restart:function() {
      return stepper.restart(step), simulation;
    }, stop:function() {
      return stepper.stop(), simulation;
    }, nodes:function(_) {
      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;
    }, alpha:function(_) {
      return arguments.length ? (alpha = +_, simulation) : alpha;
    }, alphaMin:function(_) {
      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
    }, alphaDecay:function(_) {
      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
    }, alphaTarget:function(_) {
      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
    }, velocityDecay:function(_) {
      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
    }, force:function(name, _) {
      return 1 < arguments.length ? (null == _ ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);
    }, find:function(x, y, radius) {
      var i, n = nodes.length;
      radius = null == radius ? Infinity : radius * radius;
      for (i = 0; i < n; ++i) {
        var node = nodes[i];
        var dx = x - node.x;
        var dy = y - node.y;
        var d2 = dx * dx + dy * dy;
        if (d2 < radius) {
          var closest = node;
          radius = d2;
        }
      }
      return closest;
    }, on:function(name, _) {
      return 1 < arguments.length ? (event.on(name, _), simulation) : event.on(name);
    }};
  }
  function manyBody() {
    function force(_) {
      var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);
      alpha = _;
      for (i = 0; i < n; ++i) {
        node$jscomp$0 = nodes[i], tree.visit(apply);
      }
    }
    function initialize() {
      if (nodes) {
        var i, n = nodes.length;
        strengths = Array(n);
        for (i = 0; i < n; ++i) {
          var node = nodes[i];
          strengths[node.index] = +strength$jscomp$0(node, i, nodes);
        }
      }
    }
    function accumulate(quad) {
      var strength = 0, q, c, weight = 0, x, y, i;
      if (quad.length) {
        for (x = y = i = 0; 4 > i; ++i) {
          (q = quad[i]) && (c = Math.abs(q.value)) && (strength += q.value, weight += c, x += c * q.x, y += c * q.y);
        }
        quad.x = x / weight;
        quad.y = y / weight;
      } else {
        q = quad;
        q.x = q.data.x;
        q.y = q.data.y;
        do {
          strength += strengths[q.data.index];
        } while (q = q.next);
      }
      quad.value = strength;
    }
    function apply(quad, x1, _, x2) {
      if (!quad.value) {
        return !0;
      }
      var x = quad.x - node$jscomp$0.x, y = quad.y - node$jscomp$0.y, w = x2 - x1, l = x * x + y * y;
      if (w * w / theta2 < l) {
        return l < distanceMax2 && (0 === x && (x = jiggle(), l += x * x), 0 === y && (y = jiggle(), l += y * y), l < distanceMin2 && (l = Math.sqrt(distanceMin2 * l)), node$jscomp$0.vx += x * quad.value * alpha / l, node$jscomp$0.vy += y * quad.value * alpha / l), !0;
      }
      if (!(quad.length || l >= distanceMax2)) {
        if (quad.data !== node$jscomp$0 || quad.next) {
          0 === x && (x = jiggle(), l += x * x), 0 === y && (y = jiggle(), l += y * y), l < distanceMin2 && (l = Math.sqrt(distanceMin2 * l));
        }
        do {
          quad.data !== node$jscomp$0 && (w = strengths[quad.data.index] * alpha / l, node$jscomp$0.vx += x * w, node$jscomp$0.vy += y * w);
        } while (quad = quad.next);
      }
    }
    var nodes, node$jscomp$0, alpha, strength$jscomp$0 = constant$7(-30), strengths, distanceMin2 = 1, distanceMax2 = Infinity, theta2 = 0.81;
    force.initialize = function(_) {
      nodes = _;
      initialize();
    };
    force.strength = function(_) {
      return arguments.length ? (strength$jscomp$0 = "function" === typeof _ ? _ : constant$7(+_), initialize(), force) : strength$jscomp$0;
    };
    force.distanceMin = function(_) {
      return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
    };
    force.distanceMax = function(_) {
      return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
    };
    force.theta = function(_) {
      return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
    };
    return force;
  }
  function radial(radius, x, y) {
    function force(alpha) {
      for (var i = 0, n = nodes.length; i < n; ++i) {
        var node = nodes[i], dx = node.x - x || 1e-6, dy = node.y - y || 1e-6, r = Math.sqrt(dx * dx + dy * dy), k = (radiuses[i] - r) * strengths[i] * alpha / r;
        node.vx += dx * k;
        node.vy += dy * k;
      }
    }
    function initialize() {
      if (nodes) {
        var i, n = nodes.length;
        strengths = Array(n);
        radiuses = Array(n);
        for (i = 0; i < n; ++i) {
          radiuses[i] = +radius(nodes[i], i, nodes), strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
        }
      }
    }
    var nodes, strength = constant$7(0.1), strengths, radiuses;
    "function" !== typeof radius && (radius = constant$7(+radius));
    null == x && (x = 0);
    null == y && (y = 0);
    force.initialize = function(_) {
      nodes = _;
      initialize();
    };
    force.strength = function(_) {
      return arguments.length ? (strength = "function" === typeof _ ? _ : constant$7(+_), initialize(), force) : strength;
    };
    force.radius = function(_) {
      return arguments.length ? (radius = "function" === typeof _ ? _ : constant$7(+_), initialize(), force) : radius;
    };
    force.x = function(_) {
      return arguments.length ? (x = +_, force) : x;
    };
    force.y = function(_) {
      return arguments.length ? (y = +_, force) : y;
    };
    return force;
  }
  function x$2(x) {
    function force(alpha) {
      for (var i = 0, n = nodes.length, node; i < n; ++i) {
        node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
      }
    }
    function initialize() {
      if (nodes) {
        var i, n = nodes.length;
        strengths = Array(n);
        xz = Array(n);
        for (i = 0; i < n; ++i) {
          strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
        }
      }
    }
    var strength = constant$7(0.1), nodes, strengths, xz;
    "function" !== typeof x && (x = constant$7(null == x ? 0 : +x));
    force.initialize = function(_) {
      nodes = _;
      initialize();
    };
    force.strength = function(_) {
      return arguments.length ? (strength = "function" === typeof _ ? _ : constant$7(+_), initialize(), force) : strength;
    };
    force.x = function(_) {
      return arguments.length ? (x = "function" === typeof _ ? _ : constant$7(+_), initialize(), force) : x;
    };
    return force;
  }
  function y$2(y) {
    function force(alpha) {
      for (var i = 0, n = nodes.length, node; i < n; ++i) {
        node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
      }
    }
    function initialize() {
      if (nodes) {
        var i, n = nodes.length;
        strengths = Array(n);
        yz = Array(n);
        for (i = 0; i < n; ++i) {
          strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
        }
      }
    }
    var strength = constant$7(0.1), nodes, strengths, yz;
    "function" !== typeof y && (y = constant$7(null == y ? 0 : +y));
    force.initialize = function(_) {
      nodes = _;
      initialize();
    };
    force.strength = function(_) {
      return arguments.length ? (strength = "function" === typeof _ ? _ : constant$7(+_), initialize(), force) : strength;
    };
    force.y = function(_) {
      return arguments.length ? (y = "function" === typeof _ ? _ : constant$7(+_), initialize(), force) : y;
    };
    return force;
  }
  function formatDecimal(x, p) {
    if (0 > (i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e"))) {
      return null;
    }
    var i, coefficient = x.slice(0, i);
    return [1 < coefficient.length ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
  }
  function exponent$1(x) {
    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;
  }
  function formatGroup(grouping, thousands) {
    return function(value, width) {
      for (var i = value.length, t = [], j = 0, g = grouping[0], length = 0; 0 < i && 0 < g;) {
        length + g + 1 > width && (g = Math.max(1, width - length));
        t.push(value.substring(i -= g, i + g));
        if ((length += g + 1) > width) {
          break;
        }
        g = grouping[j = (j + 1) % grouping.length];
      }
      return t.reverse().join(thousands);
    };
  }
  function formatNumerals(numerals) {
    return function(value) {
      return value.replace(/[0-9]/g, function(i) {
        return numerals[+i];
      });
    };
  }
  function formatSpecifier(specifier) {
    return new FormatSpecifier(specifier);
  }
  function FormatSpecifier(specifier) {
    if (!(match = re.exec(specifier))) {
      throw Error("invalid format: " + specifier);
    }
    var match;
    this.fill = match[1] || " ";
    this.align = match[2] || ">";
    this.sign = match[3] || "-";
    this.symbol = match[4] || "";
    this.zero = !!match[5];
    this.width = match[6] && +match[6];
    this.comma = !!match[7];
    this.precision = match[8] && +match[8].slice(1);
    this.trim = !!match[9];
    this.type = match[10] || "";
  }
  function formatPrefixAuto(x, p) {
    var d = formatDecimal(x, p);
    if (!d) {
      return x + "";
    }
    var coefficient = d[0], exponent = d[1], i = exponent - (prefixExponent = 3 * Math.max(-8, Math.min(8, Math.floor(exponent / 3)))) + 1, n = coefficient.length;
    return i === n ? coefficient : i > n ? coefficient + Array(i - n + 1).join("0") : 0 < i ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0];
  }
  function formatRounded(x, p) {
    var d = formatDecimal(x, p);
    if (!d) {
      return x + "";
    }
    var coefficient = d[0], exponent = d[1];
    return 0 > exponent ? "0." + Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + Array(exponent - coefficient.length + 2).join("0");
  }
  function identity$3(x) {
    return x;
  }
  function formatLocale(locale) {
    function newFormat(specifier) {
      function format(value) {
        var valuePrefix = prefix, valueSuffix = suffix, n, c;
        if ("c" === type) {
          valueSuffix = formatType(value) + valueSuffix, value = "";
        } else {
          value = +value;
          var valueNegative = 0 > value;
          value = formatType(Math.abs(value), precision);
          if (trim) {
            var s = value, n$jscomp$0 = s.length, i = 1, i0 = -1, i1;
            a: for (; i < n$jscomp$0; ++i) {
              switch(s[i]) {
                case ".":
                  i0 = i1 = i;
                  break;
                case "0":
                  0 === i0 && (i0 = i);
                  i1 = i;
                  break;
                default:
                  if (0 < i0) {
                    if (!+s[i]) {
                      break a;
                    }
                    i0 = 0;
                  }
              }
            }
            value = 0 < i0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
          }
          valueNegative && 0 === +value && (valueNegative = !1);
          valuePrefix = (valueNegative ? "(" === sign ? sign : "-" : "-" === sign || "(" === sign ? "" : sign) + valuePrefix;
          valueSuffix = ("s" === type ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && "(" === sign ? ")" : "");
          if (maybeSuffix) {
            var i$jscomp$0 = -1;
            for (n = value.length; ++i$jscomp$0 < n;) {
              if (c = value.charCodeAt(i$jscomp$0), 48 > c || 57 < c) {
                valueSuffix = (46 === c ? decimal + value.slice(i$jscomp$0 + 1) : value.slice(i$jscomp$0)) + valueSuffix;
                value = value.slice(0, i$jscomp$0);
                break;
              }
            }
          }
        }
        comma && !zero && (value = group(value, Infinity));
        var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? Array(width - length + 1).join(fill) : "";
        comma && zero && (value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "");
        switch(align) {
          case "<":
            value = valuePrefix + value + valueSuffix + padding;
            break;
          case "=":
            value = valuePrefix + padding + value + valueSuffix;
            break;
          case "^":
            value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
            break;
          default:
            value = padding + valuePrefix + value + valueSuffix;
        }
        return numerals(value);
      }
      specifier = formatSpecifier(specifier);
      var fill = specifier.fill, align = specifier.align, sign = specifier.sign, symbol = specifier.symbol, zero = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type = specifier.type;
      "n" === type ? (comma = !0, type = "g") : formatTypes[type] || (null == precision && (precision = 12), trim = !0, type = "g");
      if (zero || "0" === fill && "=" === align) {
        zero = !0, fill = "0", align = "=";
      }
      var prefix = "$" === symbol ? currency[0] : "#" === symbol && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "", suffix = "$" === symbol ? currency[1] : /[%p]/.test(type) ? percent : "", formatType = formatTypes[type], maybeSuffix = /[defgprs%]/.test(type);
      precision = null == precision ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
      format.toString = function() {
        return specifier + "";
      };
      return format;
    }
    function formatPrefix(specifier, value$jscomp$0) {
      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e = 3 * Math.max(-8, Math.min(8, Math.floor(exponent$1(value$jscomp$0) / 3))), k = Math.pow(10, -e), prefix = prefixes[8 + e / 3];
      return function(value) {
        return f(k * value) + prefix;
      };
    }
    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3, currency = locale.currency, decimal = locale.decimal, numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3, percent = locale.percent || "%";
    return {format:newFormat, formatPrefix:formatPrefix};
  }
  function defaultLocale(definition) {
    locale = formatLocale(definition);
    d3.format = locale.format;
    d3.formatPrefix = locale.formatPrefix;
    return locale;
  }
  function precisionFixed(step) {
    return Math.max(0, -exponent$1(Math.abs(step)));
  }
  function precisionPrefix(step, value) {
    return Math.max(0, 3 * Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) - exponent$1(Math.abs(step)));
  }
  function precisionRound(step, max) {
    step = Math.abs(step);
    max = Math.abs(max) - step;
    return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;
  }
  function Adder() {
    this.reset();
  }
  function add$1(adder, a, b) {
    var x = adder.s = a + b, bv = x - a, av = x - bv;
    adder.t = a - av + (b - bv);
  }
  function acos(x) {
    return 1 < x ? 0 : -1 > x ? pi$3 : Math.acos(x);
  }
  function asin(x) {
    return 1 < x ? halfPi$2 : -1 > x ? -halfPi$2 : Math.asin(x);
  }
  function haversin(x) {
    return (x = sin$1(x / 2)) * x;
  }
  function noop$2() {
  }
  function streamGeometry(geometry, stream) {
    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
      streamGeometryType[geometry.type](geometry, stream);
    }
  }
  function streamLine(coordinates, stream, closed) {
    var i = -1, n = coordinates.length - closed;
    for (stream.lineStart(); ++i < n;) {
      var coordinate = coordinates[i];
      stream.point(coordinate[0], coordinate[1], coordinate[2]);
    }
    stream.lineEnd();
  }
  function streamPolygon(coordinates, stream) {
    var i = -1, n = coordinates.length;
    for (stream.polygonStart(); ++i < n;) {
      streamLine(coordinates[i], stream, 1);
    }
    stream.polygonEnd();
  }
  function geoStream(object, stream) {
    if (object && streamObjectType.hasOwnProperty(object.type)) {
      streamObjectType[object.type](object, stream);
    } else {
      streamGeometry(object, stream);
    }
  }
  function areaRingStart() {
    areaStream.point = areaPointFirst;
  }
  function areaRingEnd() {
    areaPoint(lambda00, phi00);
  }
  function areaPointFirst(lambda, phi) {
    areaStream.point = areaPoint;
    lambda00 = lambda;
    phi00 = phi;
    lambda *= radians;
    phi *= radians;
    lambda0 = lambda;
    cosPhi0 = cos$1(phi = phi / 2 + quarterPi);
    sinPhi0 = sin$1(phi);
  }
  function areaPoint(lambda, phi) {
    lambda *= radians;
    phi *= radians;
    phi = phi / 2 + quarterPi;
    var dLambda = lambda - lambda0, sdLambda = 0 <= dLambda ? 1 : -1, adLambda = sdLambda * dLambda, cosPhi = cos$1(phi), sinPhi = sin$1(phi), k = sinPhi0 * sinPhi, u = cosPhi0 * cosPhi + k * cos$1(adLambda), v = k * sdLambda * sin$1(adLambda);
    areaRingSum.add(atan2(v, u));
    lambda0 = lambda;
    cosPhi0 = cosPhi;
    sinPhi0 = sinPhi;
  }
  function area$1(object) {
    areaSum.reset();
    geoStream(object, areaStream);
    return 2 * areaSum;
  }
  function spherical(cartesian) {
    return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];
  }
  function cartesian(spherical) {
    var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);
    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];
  }
  function cartesianDot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  }
  function cartesianCross(a, b) {
    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
  }
  function cartesianAddInPlace(a, b) {
    a[0] += b[0];
    a[1] += b[1];
    a[2] += b[2];
  }
  function cartesianScale(vector, k) {
    return [vector[0] * k, vector[1] * k, vector[2] * k];
  }
  function cartesianNormalizeInPlace(d) {
    var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
    d[0] /= l;
    d[1] /= l;
    d[2] /= l;
  }
  function boundsPoint(lambda, phi) {
    ranges.push(range$jscomp$0 = [lambda0$1 = lambda, lambda1 = lambda]);
    phi < phi0 && (phi0 = phi);
    phi > phi1 && (phi1 = phi);
  }
  function linePoint(lambda, phi) {
    var p = cartesian([lambda * radians, phi * radians]);
    if (p0) {
      var normal = cartesianCross(p0, p), equatorial = [normal[1], -normal[0], 0], inflection = cartesianCross(equatorial, normal);
      cartesianNormalizeInPlace(inflection);
      inflection = spherical(inflection);
      var delta = lambda - lambda2, sign$$1 = 0 < delta ? 1 : -1, lambdai = inflection[0] * degrees$1 * sign$$1, antimeridian = 180 < abs(delta);
      if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {
        var phii = inflection[1] * degrees$1;
        phii > phi1 && (phi1 = phii);
      } else {
        (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) ? (phii = -inflection[1] * degrees$1, phii < phi0 && (phi0 = phii)) : (phi < phi0 && (phi0 = phi), phi > phi1 && (phi1 = phi));
      }
      antimeridian ? lambda < lambda2 ? angle$jscomp$0(lambda0$1, lambda) > angle$jscomp$0(lambda0$1, lambda1) && (lambda1 = lambda) : angle$jscomp$0(lambda, lambda1) > angle$jscomp$0(lambda0$1, lambda1) && (lambda0$1 = lambda) : lambda1 >= lambda0$1 ? (lambda < lambda0$1 && (lambda0$1 = lambda), lambda > lambda1 && (lambda1 = lambda)) : lambda > lambda2 ? angle$jscomp$0(lambda0$1, lambda) > angle$jscomp$0(lambda0$1, lambda1) && (lambda1 = lambda) : angle$jscomp$0(lambda, lambda1) > angle$jscomp$0(lambda0$1, 
      lambda1) && (lambda0$1 = lambda);
    } else {
      ranges.push(range$jscomp$0 = [lambda0$1 = lambda, lambda1 = lambda]);
    }
    phi < phi0 && (phi0 = phi);
    phi > phi1 && (phi1 = phi);
    p0 = p;
    lambda2 = lambda;
  }
  function boundsLineStart() {
    boundsStream.point = linePoint;
  }
  function boundsLineEnd() {
    range$jscomp$0[0] = lambda0$1;
    range$jscomp$0[1] = lambda1;
    boundsStream.point = boundsPoint;
    p0 = null;
  }
  function boundsRingPoint(lambda, phi) {
    if (p0) {
      var delta = lambda - lambda2;
      deltaSum.add(180 < abs(delta) ? delta + (0 < delta ? 360 : -360) : delta);
    } else {
      lambda00$1 = lambda, phi00$1 = phi;
    }
    areaStream.point(lambda, phi);
    linePoint(lambda, phi);
  }
  function boundsRingStart() {
    areaStream.lineStart();
  }
  function boundsRingEnd() {
    boundsRingPoint(lambda00$1, phi00$1);
    areaStream.lineEnd();
    1e-6 < abs(deltaSum) && (lambda0$1 = -(lambda1 = 180));
    range$jscomp$0[0] = lambda0$1;
    range$jscomp$0[1] = lambda1;
    p0 = null;
  }
  function angle$jscomp$0(lambda0, lambda1) {
    return 0 > (lambda1 -= lambda0) ? lambda1 + 360 : lambda1;
  }
  function rangeCompare(a, b) {
    return a[0] - b[0];
  }
  function rangeContains(range, x) {
    return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
  }
  function bounds(feature) {
    var n, merged, delta;
    phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);
    ranges = [];
    geoStream(feature, boundsStream);
    if (n = ranges.length) {
      ranges.sort(rangeCompare);
      var i = 1;
      var a = ranges[0];
      for (merged = [a]; i < n; ++i) {
        var b = ranges[i];
        rangeContains(a, b[0]) || rangeContains(a, b[1]) ? (angle$jscomp$0(a[0], b[1]) > angle$jscomp$0(a[0], a[1]) && (a[1] = b[1]), angle$jscomp$0(b[0], a[1]) > angle$jscomp$0(a[0], a[1]) && (a[0] = b[0])) : merged.push(a = b);
      }
      var deltaMax = -Infinity;
      n = merged.length - 1;
      i = 0;
      for (a = merged[n]; i <= n; a = b, ++i) {
        b = merged[i], (delta = angle$jscomp$0(a[1], b[0])) > deltaMax && (deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1]);
      }
    }
    ranges = range$jscomp$0 = null;
    return Infinity === lambda0$1 || Infinity === phi0 ? [[NaN, NaN], [NaN, NaN]] : [[lambda0$1, phi0], [lambda1, phi1]];
  }
  function centroidPoint(lambda, phi) {
    lambda *= radians;
    phi *= radians;
    var cosPhi = cos$1(phi);
    centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));
  }
  function centroidPointCartesian(x, y, z) {
    ++W0;
    X0 += (x - X0) / W0;
    Y0 += (y - Y0) / W0;
    Z0 += (z - Z0) / W0;
  }
  function centroidLineStart() {
    centroidStream.point = centroidLinePointFirst;
  }
  function centroidLinePointFirst(lambda, phi) {
    lambda *= radians;
    phi *= radians;
    var cosPhi = cos$1(phi);
    x0$jscomp$3 = cosPhi * cos$1(lambda);
    y0$jscomp$3 = cosPhi * sin$1(lambda);
    z0 = sin$1(phi);
    centroidStream.point = centroidLinePoint;
    centroidPointCartesian(x0$jscomp$3, y0$jscomp$3, z0);
  }
  function centroidLinePoint(lambda, phi) {
    lambda *= radians;
    phi *= radians;
    var cosPhi = cos$1(phi), x = cosPhi * cos$1(lambda), y = cosPhi * sin$1(lambda), z = sin$1(phi), w = atan2(sqrt((w = y0$jscomp$3 * z - z0 * y) * w + (w = z0 * x - x0$jscomp$3 * z) * w + (w = x0$jscomp$3 * y - y0$jscomp$3 * x) * w), x0$jscomp$3 * x + y0$jscomp$3 * y + z0 * z);
    W1 += w;
    X1 += w * (x0$jscomp$3 + (x0$jscomp$3 = x));
    Y1 += w * (y0$jscomp$3 + (y0$jscomp$3 = y));
    Z1 += w * (z0 + (z0 = z));
    centroidPointCartesian(x0$jscomp$3, y0$jscomp$3, z0);
  }
  function centroidLineEnd() {
    centroidStream.point = centroidPoint;
  }
  function centroidRingStart() {
    centroidStream.point = centroidRingPointFirst;
  }
  function centroidRingEnd() {
    centroidRingPoint(lambda00$2, phi00$2);
    centroidStream.point = centroidPoint;
  }
  function centroidRingPointFirst(lambda, phi) {
    lambda00$2 = lambda;
    phi00$2 = phi;
    lambda *= radians;
    phi *= radians;
    centroidStream.point = centroidRingPoint;
    var cosPhi = cos$1(phi);
    x0$jscomp$3 = cosPhi * cos$1(lambda);
    y0$jscomp$3 = cosPhi * sin$1(lambda);
    z0 = sin$1(phi);
    centroidPointCartesian(x0$jscomp$3, y0$jscomp$3, z0);
  }
  function centroidRingPoint(lambda, phi) {
    lambda *= radians;
    phi *= radians;
    var cosPhi = cos$1(phi), x = cosPhi * cos$1(lambda), y = cosPhi * sin$1(lambda), z = sin$1(phi), cx = y0$jscomp$3 * z - z0 * y, cy = z0 * x - x0$jscomp$3 * z, cz = x0$jscomp$3 * y - y0$jscomp$3 * x, m = sqrt(cx * cx + cy * cy + cz * cz), w = asin(m), v = m && -w / m;
    X2 += v * cx;
    Y2 += v * cy;
    Z2 += v * cz;
    W1 += w;
    X1 += w * (x0$jscomp$3 + (x0$jscomp$3 = x));
    Y1 += w * (y0$jscomp$3 + (y0$jscomp$3 = y));
    Z1 += w * (z0 + (z0 = z));
    centroidPointCartesian(x0$jscomp$3, y0$jscomp$3, z0);
  }
  function centroid(object) {
    W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
    geoStream(object, centroidStream);
    var x = X2, y = Y2, z = Z2, m = x * x + y * y + z * z;
    return 1e-12 > m && (x = X1, y = Y1, z = Z1, 1e-6 > W1 && (x = X0, y = Y0, z = Z0), m = x * x + y * y + z * z, 1e-12 > m) ? [NaN, NaN] : [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];
  }
  function constant$8(x) {
    return function() {
      return x;
    };
  }
  function compose(a, b) {
    function compose(x, y) {
      return x = a(x, y), b(x[0], x[1]);
    }
    a.invert && b.invert && (compose.invert = function(x, y) {
      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
    });
    return compose;
  }
  function rotationIdentity(lambda, phi) {
    return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];
  }
  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
    return (deltaLambda %= tau$3) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
  }
  function forwardRotationLambda(deltaLambda) {
    return function(lambda, phi) {
      return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];
    };
  }
  function rotationLambda(deltaLambda) {
    var rotation = forwardRotationLambda(deltaLambda);
    rotation.invert = forwardRotationLambda(-deltaLambda);
    return rotation;
  }
  function rotationPhiGamma(deltaPhi, deltaGamma) {
    function rotation(lambda, phi) {
      var cosPhi = cos$1(phi), x = cos$1(lambda) * cosPhi, y = sin$1(lambda) * cosPhi, z = sin$1(phi), k = z * cosDeltaPhi + x * sinDeltaPhi;
      return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];
    }
    var cosDeltaPhi = cos$1(deltaPhi), sinDeltaPhi = sin$1(deltaPhi), cosDeltaGamma = cos$1(deltaGamma), sinDeltaGamma = sin$1(deltaGamma);
    rotation.invert = function(lambda, phi) {
      var cosPhi = cos$1(phi), x = cos$1(lambda) * cosPhi, y = sin$1(lambda) * cosPhi, z = sin$1(phi), k = z * cosDeltaGamma - y * sinDeltaGamma;
      return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];
    };
    return rotation;
  }
  function rotation$jscomp$0(rotate) {
    function forward(coordinates) {
      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);
      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;
    }
    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, 2 < rotate.length ? rotate[2] * radians : 0);
    forward.invert = function(coordinates) {
      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);
      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;
    };
    return forward;
  }
  function circleStream(stream, radius, delta, direction, t0, t1) {
    if (delta) {
      var cosRadius = cos$1(radius), sinRadius = sin$1(radius), step = direction * delta;
      if (null == t0) {
        t0 = radius + direction * tau$3, t1 = radius - step / 2;
      } else {
        if (t0 = circleRadius(cosRadius, t0), t1 = circleRadius(cosRadius, t1), 0 < direction ? t0 < t1 : t0 > t1) {
          t0 += direction * tau$3;
        }
      }
      for (var point, t = t0; 0 < direction ? t > t1 : t < t1; t -= step) {
        point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]), stream.point(point[0], point[1]);
      }
    }
  }
  function circleRadius(cosRadius, point) {
    point = cartesian(point);
    point[0] -= cosRadius;
    cartesianNormalizeInPlace(point);
    var radius = acos(-point[1]);
    return ((0 > -point[2] ? -radius : radius) + tau$3 - 1e-6) % tau$3;
  }
  function circle() {
    function point(x, y) {
      ring.push(x = rotate(x, y));
      x[0] *= degrees$1;
      x[1] *= degrees$1;
    }
    function circle() {
      var c = center.apply(this, arguments), r = radius.apply(this, arguments) * radians, p = precision.apply(this, arguments) * radians;
      ring = [];
      rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;
      circleStream(stream, r, p, 1);
      c = {type:"Polygon", coordinates:[ring]};
      ring = rotate = null;
      return c;
    }
    var center = constant$8([0, 0]), radius = constant$8(90), precision = constant$8(6), ring, rotate, stream = {point:point};
    circle.center = function(_) {
      return arguments.length ? (center = "function" === typeof _ ? _ : constant$8([+_[0], +_[1]]), circle) : center;
    };
    circle.radius = function(_) {
      return arguments.length ? (radius = "function" === typeof _ ? _ : constant$8(+_), circle) : radius;
    };
    circle.precision = function(_) {
      return arguments.length ? (precision = "function" === typeof _ ? _ : constant$8(+_), circle) : precision;
    };
    return circle;
  }
  function clipBuffer() {
    var lines = [], line;
    return {point:function(x, y) {
      line.push([x, y]);
    }, lineStart:function() {
      lines.push(line = []);
    }, lineEnd:noop$2, rejoin:function() {
      1 < lines.length && lines.push(lines.pop().concat(lines.shift()));
    }, result:function() {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }};
  }
  function pointEqual(a, b) {
    return 1e-6 > abs(a[0] - b[0]) && 1e-6 > abs(a[1] - b[1]);
  }
  function Intersection(point, points, other, entry) {
    this.x = point;
    this.z = points;
    this.o = other;
    this.e = entry;
    this.v = !1;
    this.n = this.p = null;
  }
  function clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {
    var subject = [], clip = [], n$jscomp$0;
    segments.forEach(function(segment) {
      if (!(0 >= (n = segment.length - 1))) {
        var n, p0 = segment[0], p1 = segment[n], x;
        if (pointEqual(p0, p1)) {
          stream.lineStart();
          for (i = 0; i < n; ++i) {
            stream.point((p0 = segment[i])[0], p0[1]);
          }
          stream.lineEnd();
        } else {
          subject.push(x = new Intersection(p0, segment, null, !0)), clip.push(x.o = new Intersection(p0, null, x, !1)), subject.push(x = new Intersection(p1, segment, null, !1)), clip.push(x.o = new Intersection(p1, null, x, !0));
        }
      }
    });
    if (subject.length) {
      clip.sort(compareIntersection);
      link$1(subject);
      link$1(clip);
      var i = 0;
      for (n$jscomp$0 = clip.length; i < n$jscomp$0; ++i) {
        clip[i].e = startInside = !startInside;
      }
      for (var start = subject[0], points, point;;) {
        for (var current = start, isSubject = !0; current.v;) {
          if ((current = current.n) === start) {
            return;
          }
        }
        points = current.z;
        stream.lineStart();
        do {
          current.v = current.o.v = !0;
          if (current.e) {
            if (isSubject) {
              for (i = 0, n$jscomp$0 = points.length; i < n$jscomp$0; ++i) {
                stream.point((point = points[i])[0], point[1]);
              }
            } else {
              interpolate(current.x, current.n.x, 1, stream);
            }
            current = current.n;
          } else {
            if (isSubject) {
              for (points = current.p.z, i = points.length - 1; 0 <= i; --i) {
                stream.point((point = points[i])[0], point[1]);
              }
            } else {
              interpolate(current.x, current.p.x, -1, stream);
            }
            current = current.p;
          }
          current = current.o;
          points = current.z;
          isSubject = !isSubject;
        } while (!current.v);
        stream.lineEnd();
      }
    }
  }
  function link$1(array) {
    if (n = array.length) {
      for (var n, i = 0, a = array[0], b; ++i < n;) {
        a.n = b = array[i], b.p = a, a = b;
      }
      a.n = b = array[0];
      b.p = a;
    }
  }
  function polygonContains(polygon, point) {
    var lambda = point[0], phi = point[1], sinPhi = sin$1(phi), normal = [sin$1(lambda), -cos$1(lambda), 0], angle = 0, winding = 0;
    sum$1.reset();
    1 === sinPhi ? phi = halfPi$2 + 1e-6 : -1 === sinPhi && (phi = -halfPi$2 - 1e-6);
    for (var i = 0, n = polygon.length; i < n; ++i) {
      if (m = (ring = polygon[i]).length) {
        for (var ring, m, point0 = ring[m - 1], lambda0 = point0[0], phi0 = point0[1] / 2 + quarterPi, sinPhi0 = sin$1(phi0), cosPhi0 = cos$1(phi0), j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
          var point1 = ring[j], lambda1 = point1[0], phi1 = point1[1] / 2 + quarterPi, sinPhi1 = sin$1(phi1), cosPhi1 = cos$1(phi1), delta = lambda1 - lambda0, sign$$1 = 0 <= delta ? 1 : -1, absDelta = sign$$1 * delta, antimeridian = absDelta > pi$3, k = sinPhi0 * sinPhi1;
          sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));
          angle += antimeridian ? delta + sign$$1 * tau$3 : delta;
          if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
            var arc = cartesianCross(cartesian(point0), cartesian(point1));
            cartesianNormalizeInPlace(arc);
            var intersection = cartesianCross(normal, arc);
            cartesianNormalizeInPlace(intersection);
            var phiArc = (antimeridian ^ 0 <= delta ? -1 : 1) * asin(intersection[2]);
            if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
              winding += antimeridian ^ 0 <= delta ? 1 : -1;
            }
          }
        }
      }
    }
    return (-1E-6 > angle || 1e-6 > angle && -1E-6 > sum$1) ^ winding & 1;
  }
  function clip(pointVisible, clipLine, interpolate, start) {
    return function(sink) {
      function point$jscomp$0(lambda, phi) {
        pointVisible(lambda, phi) && sink.point(lambda, phi);
      }
      function pointLine(lambda, phi) {
        line.point(lambda, phi);
      }
      function lineStart() {
        clip.point = pointLine;
        line.lineStart();
      }
      function lineEnd() {
        clip.point = point$jscomp$0;
        line.lineEnd();
      }
      function pointRing(lambda, phi) {
        ring.push([lambda, phi]);
        ringSink.point(lambda, phi);
      }
      function ringStart() {
        ringSink.lineStart();
        ring = [];
      }
      function ringEnd() {
        pointRing(ring[0][0], ring[0][1]);
        ringSink.lineEnd();
        var clean = ringSink.clean(), ringSegments = ringBuffer.result(), i, n = ringSegments.length, m, point;
        ring.pop();
        polygon.push(ring);
        ring = null;
        if (n) {
          if (clean & 1) {
            var segment = ringSegments[0];
            if (0 < (m = segment.length - 1)) {
              polygonStarted || (sink.polygonStart(), polygonStarted = !0);
              sink.lineStart();
              for (i = 0; i < m; ++i) {
                sink.point((point = segment[i])[0], point[1]);
              }
              sink.lineEnd();
            }
          } else {
            1 < n && clean & 2 && ringSegments.push(ringSegments.pop().concat(ringSegments.shift())), segments.push(ringSegments.filter(validSegment));
          }
        }
      }
      var line = clipLine(sink), ringBuffer = clipBuffer(), ringSink = clipLine(ringBuffer), polygonStarted = !1, polygon, segments, ring, clip = {point:point$jscomp$0, lineStart:lineStart, lineEnd:lineEnd, polygonStart:function() {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      }, polygonEnd:function() {
        clip.point = point$jscomp$0;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = merge(segments);
        var startInside = polygonContains(polygon, start);
        segments.length ? (polygonStarted || (sink.polygonStart(), polygonStarted = !0), clipRejoin(segments, compareIntersection, startInside, interpolate, sink)) : startInside && (polygonStarted || (sink.polygonStart(), polygonStarted = !0), sink.lineStart(), interpolate(null, null, 1, sink), sink.lineEnd());
        polygonStarted && (sink.polygonEnd(), polygonStarted = !1);
        segments = polygon = null;
      }, sphere:function() {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }};
      return clip;
    };
  }
  function validSegment(segment) {
    return 1 < segment.length;
  }
  function compareIntersection(a, b) {
    return (0 > (a = a.x)[0] ? a[1] - halfPi$2 - 1e-6 : halfPi$2 - a[1]) - (0 > (b = b.x)[0] ? b[1] - halfPi$2 - 1e-6 : halfPi$2 - b[1]);
  }
  function clipAntimeridianLine(stream) {
    var lambda0$jscomp$0 = NaN, phi0$jscomp$0 = NaN, sign0 = NaN, clean;
    return {lineStart:function() {
      stream.lineStart();
      clean = 1;
    }, point:function(lambda1$jscomp$0, phi1$jscomp$0) {
      var sign1 = 0 < lambda1$jscomp$0 ? pi$3 : -pi$3, delta = abs(lambda1$jscomp$0 - lambda0$jscomp$0);
      if (1e-6 > abs(delta - pi$3)) {
        stream.point(lambda0$jscomp$0, phi0$jscomp$0 = 0 < (phi0$jscomp$0 + phi1$jscomp$0) / 2 ? halfPi$2 : -halfPi$2), stream.point(sign0, phi0$jscomp$0), stream.lineEnd(), stream.lineStart(), stream.point(sign1, phi0$jscomp$0), stream.point(lambda1$jscomp$0, phi0$jscomp$0), clean = 0;
      } else {
        if (sign0 !== sign1 && delta >= pi$3) {
          1e-6 > abs(lambda0$jscomp$0 - sign0) && (lambda0$jscomp$0 -= 1e-6 * sign0);
          1e-6 > abs(lambda1$jscomp$0 - sign1) && (lambda1$jscomp$0 -= 1e-6 * sign1);
          var lambda0 = lambda0$jscomp$0, phi0 = phi0$jscomp$0, lambda1 = lambda1$jscomp$0, phi1 = phi1$jscomp$0, cosPhi0, cosPhi1, sinLambda0Lambda1 = sin$1(lambda0 - lambda1);
          phi0$jscomp$0 = 1e-6 < abs(sinLambda0Lambda1) ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1) - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
          stream.point(sign0, phi0$jscomp$0);
          stream.lineEnd();
          stream.lineStart();
          stream.point(sign1, phi0$jscomp$0);
          clean = 0;
        }
      }
      stream.point(lambda0$jscomp$0 = lambda1$jscomp$0, phi0$jscomp$0 = phi1$jscomp$0);
      sign0 = sign1;
    }, lineEnd:function() {
      stream.lineEnd();
      lambda0$jscomp$0 = phi0$jscomp$0 = NaN;
    }, clean:function() {
      return 2 - clean;
    }};
  }
  function clipAntimeridianInterpolate(from, to, direction, stream) {
    if (null == from) {
      var phi = direction * halfPi$2;
      stream.point(-pi$3, phi);
      stream.point(0, phi);
      stream.point(pi$3, phi);
      stream.point(pi$3, 0);
      stream.point(pi$3, -phi);
      stream.point(0, -phi);
      stream.point(-pi$3, -phi);
      stream.point(-pi$3, 0);
      stream.point(-pi$3, phi);
    } else {
      if (1e-6 < abs(from[0] - to[0])) {
        var lambda = from[0] < to[0] ? pi$3 : -pi$3;
        phi = direction * lambda / 2;
        stream.point(-lambda, phi);
        stream.point(0, phi);
        stream.point(lambda, phi);
      } else {
        stream.point(to[0], to[1]);
      }
    }
  }
  function clipCircle(radius) {
    function interpolate(from, to, direction, stream) {
      circleStream(stream, radius, delta$jscomp$0, direction, from, to);
    }
    function visible(lambda, phi) {
      return cos$1(lambda) * cos$1(phi) > cr;
    }
    function clipLine(stream) {
      var point0, c0, v0, v00, clean;
      return {lineStart:function() {
        v00 = v0 = !1;
        clean = 1;
      }, point:function(lambda, phi) {
        var point1 = [lambda, phi], v = visible(lambda, phi), c = smallRadius ? v ? 0 : code$jscomp$0(lambda, phi) : v ? code$jscomp$0(lambda + (0 > lambda ? pi$3 : -pi$3), phi) : 0;
        !point0 && (v00 = v0 = v) && stream.lineStart();
        if (v !== v0) {
          var point2 = intersect(point0, point1);
          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {
            point1[0] += 1e-6, point1[1] += 1e-6, v = visible(point1[0], point1[1]);
          }
        }
        if (v !== v0) {
          clean = 0, v ? (stream.lineStart(), point2 = intersect(point1, point0), stream.point(point2[0], point2[1])) : (point2 = intersect(point0, point1), stream.point(point2[0], point2[1]), stream.lineEnd()), point0 = point2;
        } else {
          if (notHemisphere && point0 && smallRadius ^ v) {
            var t;
            c & c0 || !(t = intersect(point1, point0, !0)) || (clean = 0, smallRadius ? (stream.lineStart(), stream.point(t[0][0], t[0][1]), stream.point(t[1][0], t[1][1]), stream.lineEnd()) : (stream.point(t[1][0], t[1][1]), stream.lineEnd(), stream.lineStart(), stream.point(t[0][0], t[0][1])));
          }
        }
        !v || point0 && pointEqual(point0, point1) || stream.point(point1[0], point1[1]);
        point0 = point1;
        v0 = v;
        c0 = c;
      }, lineEnd:function() {
        v0 && stream.lineEnd();
        point0 = null;
      }, clean:function() {
        return clean | (v00 && v0) << 1;
      }};
    }
    function intersect(a, b, two) {
      var pa = cartesian(a), pb = cartesian(b), n1 = [1, 0, 0], n2 = cartesianCross(pa, pb), n2n2 = cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
      if (!determinant) {
        return !two && a;
      }
      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = cartesianCross(n1, n2), A = cartesianScale(n1, c1), B = cartesianScale(n2, c2);
      cartesianAddInPlace(A, B);
      var u = n1xn2, w = cartesianDot(A, u), uu = cartesianDot(u, u), t2 = w * w - uu * (cartesianDot(A, A) - 1);
      if (!(0 > t2)) {
        var t = sqrt(t2), q = cartesianScale(u, (-w - t) / uu);
        cartesianAddInPlace(q, A);
        q = spherical(q);
        if (!two) {
          return q;
        }
        var lambda0 = a[0], lambda1 = b[0], phi0 = a[1], phi1 = b[1];
        if (lambda1 < lambda0) {
          var z = lambda0;
          lambda0 = lambda1;
          lambda1 = z;
        }
        var delta = lambda1 - lambda0, polar = 1e-6 > abs(delta - pi$3), meridian = polar || 1e-6 > delta;
        !polar && phi1 < phi0 && (z = phi0, phi0 = phi1, phi1 = z);
        if (meridian ? polar ? 0 < phi0 + phi1 ^ q[1] < (1e-6 > abs(q[0] - lambda0) ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
          var q1 = cartesianScale(u, (-w + t) / uu);
          cartesianAddInPlace(q1, A);
          return [q, spherical(q1)];
        }
      }
    }
    function code$jscomp$0(lambda, phi) {
      var r = smallRadius ? radius : pi$3 - radius, code = 0;
      lambda < -r ? code |= 1 : lambda > r && (code |= 2);
      phi < -r ? code |= 4 : phi > r && (code |= 8);
      return code;
    }
    var cr = cos$1(radius), delta$jscomp$0 = 6 * radians, smallRadius = 0 < cr, notHemisphere = 1e-6 < abs(cr);
    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);
  }
  function clipLine(a, b, x0, y0, x1, y1) {
    var ax = a[0], ay = a[1], bx = b[0], by = b[1], t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay;
    var r = x0 - ax;
    if (dx || !(0 < r)) {
      r /= dx;
      if (0 > dx) {
        if (r < t0) {
          return;
        }
        r < t1 && (t1 = r);
      } else {
        if (0 < dx) {
          if (r > t1) {
            return;
          }
          r > t0 && (t0 = r);
        }
      }
      r = x1 - ax;
      if (dx || !(0 > r)) {
        r /= dx;
        if (0 > dx) {
          if (r > t1) {
            return;
          }
          r > t0 && (t0 = r);
        } else {
          if (0 < dx) {
            if (r < t0) {
              return;
            }
            r < t1 && (t1 = r);
          }
        }
        r = y0 - ay;
        if (dy || !(0 < r)) {
          r /= dy;
          if (0 > dy) {
            if (r < t0) {
              return;
            }
            r < t1 && (t1 = r);
          } else {
            if (0 < dy) {
              if (r > t1) {
                return;
              }
              r > t0 && (t0 = r);
            }
          }
          r = y1 - ay;
          if (dy || !(0 > r)) {
            r /= dy;
            if (0 > dy) {
              if (r > t1) {
                return;
              }
              r > t0 && (t0 = r);
            } else {
              if (0 < dy) {
                if (r < t0) {
                  return;
                }
                r < t1 && (t1 = r);
              }
            }
            0 < t0 && (a[0] = ax + t0 * dx, a[1] = ay + t0 * dy);
            1 > t1 && (b[0] = ax + t1 * dx, b[1] = ay + t1 * dy);
            return !0;
          }
        }
      }
    }
  }
  function clipRectangle(x0, y0, x1, y1) {
    function interpolate(from, to, direction, stream) {
      var a = 0, a1 = 0;
      if (null == from || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || 0 > comparePoint(from, to) ^ 0 < direction) {
        do {
          stream.point(0 === a || 3 === a ? x0 : x1, 1 < a ? y1 : y0);
        } while ((a = (a + direction + 4) % 4) !== a1);
      } else {
        stream.point(to[0], to[1]);
      }
    }
    function corner(p, direction) {
      return 1e-6 > abs(p[0] - x0) ? 0 < direction ? 0 : 3 : 1e-6 > abs(p[0] - x1) ? 0 < direction ? 2 : 1 : 1e-6 > abs(p[1] - y0) ? 0 < direction ? 1 : 0 : 0 < direction ? 3 : 2;
    }
    function compareIntersection(a, b) {
      return comparePoint(a.x, b.x);
    }
    function comparePoint(a, b) {
      var ca = corner(a, 1), cb = corner(b, 1);
      return ca !== cb ? ca - cb : 0 === ca ? b[1] - a[1] : 1 === ca ? a[0] - b[0] : 2 === ca ? a[1] - b[1] : b[0] - a[0];
    }
    return function(stream) {
      function point$jscomp$0(x, y) {
        x0 <= x && x <= x1 && y0 <= y && y <= y1 && activeStream.point(x, y);
      }
      function polygonStart() {
        activeStream = bufferStream;
        segments = [];
        polygon = [];
        clean = !0;
      }
      function polygonEnd() {
        for (var startInside, winding = 0, i = 0, n = polygon.length; i < n; ++i) {
          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1], a1 <= y1 ? b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0) && ++winding : b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0) && --winding;
          }
        }
        startInside = winding;
        var cleanInside = clean && startInside, visible = (segments = merge(segments)).length;
        if (cleanInside || visible) {
          stream.polygonStart(), cleanInside && (stream.lineStart(), interpolate(null, null, 1, stream), stream.lineEnd()), visible && clipRejoin(segments, compareIntersection, startInside, interpolate, stream), stream.polygonEnd();
        }
        activeStream = stream;
        segments = polygon = ring$jscomp$0 = null;
      }
      function lineStart() {
        clipStream.point = linePoint;
        polygon && polygon.push(ring$jscomp$0 = []);
        first = !0;
        v_ = !1;
        x_ = y_ = NaN;
      }
      function lineEnd() {
        segments && (linePoint(x__, y__), v__ && v_ && bufferStream.rejoin(), segments.push(bufferStream.result()));
        clipStream.point = point$jscomp$0;
        v_ && activeStream.lineEnd();
      }
      function linePoint(x, y) {
        var v = x0 <= x && x <= x1 && y0 <= y && y <= y1;
        polygon && ring$jscomp$0.push([x, y]);
        if (first) {
          x__ = x, y__ = y, v__ = v, first = !1, v && (activeStream.lineStart(), activeStream.point(x, y));
        } else {
          if (v && v_) {
            activeStream.point(x, y);
          } else {
            var a = [x_ = Math.max(-1E9, Math.min(1e9, x_)), y_ = Math.max(-1E9, Math.min(1e9, y_))], b = [x = Math.max(-1E9, Math.min(1e9, x)), y = Math.max(-1E9, Math.min(1e9, y))];
            clipLine(a, b, x0, y0, x1, y1) ? (v_ || (activeStream.lineStart(), activeStream.point(a[0], a[1])), activeStream.point(b[0], b[1]), v || activeStream.lineEnd(), clean = !1) : v && (activeStream.lineStart(), activeStream.point(x, y), clean = !1);
          }
        }
        x_ = x;
        y_ = y;
        v_ = v;
      }
      var activeStream = stream, bufferStream = clipBuffer(), segments, polygon, ring$jscomp$0, x__, y__, v__, x_, y_, v_, first, clean, clipStream = {point:point$jscomp$0, lineStart:lineStart, lineEnd:lineEnd, polygonStart:polygonStart, polygonEnd:polygonEnd};
      return clipStream;
    };
  }
  function extent$1() {
    var x0 = 0, y0 = 0, x1 = 960, y1 = 500, cache, cacheStream, clip;
    return clip = {stream:function(stream) {
      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);
    }, extent:function(_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }};
  }
  function lengthLineStart() {
    lengthStream.point = lengthPointFirst;
    lengthStream.lineEnd = lengthLineEnd;
  }
  function lengthLineEnd() {
    lengthStream.point = lengthStream.lineEnd = noop$2;
  }
  function lengthPointFirst(lambda, phi) {
    lambda *= radians;
    phi *= radians;
    lambda0$2 = lambda;
    sinPhi0$1 = sin$1(phi);
    cosPhi0$1 = cos$1(phi);
    lengthStream.point = lengthPoint;
  }
  function lengthPoint(lambda, phi) {
    lambda *= radians;
    phi *= radians;
    var sinPhi = sin$1(phi), cosPhi = cos$1(phi), delta = abs(lambda - lambda0$2), cosDelta = cos$1(delta), sinDelta = sin$1(delta), x = cosPhi * sinDelta, y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta, z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;
    lengthSum.add(atan2(sqrt(x * x + y * y), z));
    lambda0$2 = lambda;
    sinPhi0$1 = sinPhi;
    cosPhi0$1 = cosPhi;
  }
  function length$1(object) {
    lengthSum.reset();
    geoStream(object, lengthStream);
    return +lengthSum;
  }
  function distance(a, b) {
    coordinates[0] = a;
    coordinates[1] = b;
    return length$1(object$1);
  }
  function containsGeometry(geometry, point) {
    return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : !1;
  }
  function containsLine(coordinates, point) {
    var ab = distance(coordinates[0], coordinates[1]), ao = distance(coordinates[0], point), ob = distance(point, coordinates[1]);
    return ao + ob <= ab + 1e-6;
  }
  function containsPolygon(coordinates, point) {
    return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));
  }
  function ringRadians(ring) {
    return ring = ring.map(pointRadians), ring.pop(), ring;
  }
  function pointRadians(point) {
    return [point[0] * radians, point[1] * radians];
  }
  function contains$1(object, point) {
    return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);
  }
  function graticuleX(y0, y1, dy) {
    var y$jscomp$0 = sequence(y0, y1 - 1e-6, dy).concat(y1);
    return function(x) {
      return y$jscomp$0.map(function(y) {
        return [x, y];
      });
    };
  }
  function graticuleY(x0, x1, dx) {
    var x$jscomp$0 = sequence(x0, x1 - 1e-6, dx).concat(x1);
    return function(y) {
      return x$jscomp$0.map(function(x) {
        return [x, y];
      });
    };
  }
  function graticule() {
    function graticule() {
      return {type:"MultiLineString", coordinates:lines()};
    }
    function lines() {
      return sequence(ceil(X0 / DX) * DX, X1, DX).map(X).concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
        return 1e-6 < abs(x % DX);
      }).map(x$jscomp$0)).concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
        return 1e-6 < abs(y % DY);
      }).map(y$jscomp$0));
    }
    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x$jscomp$0, y$jscomp$0, X, Y, precision = 2.5;
    graticule.lines = function() {
      return lines().map(function(coordinates) {
        return {type:"LineString", coordinates:coordinates};
      });
    };
    graticule.outline = function() {
      return {type:"Polygon", coordinates:[X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]};
    };
    graticule.extent = function(_) {
      return arguments.length ? graticule.extentMajor(_).extentMinor(_) : graticule.extentMinor();
    };
    graticule.extentMajor = function(_) {
      if (!arguments.length) {
        return [[X0, Y0], [X1, Y1]];
      }
      X0 = +_[0][0];
      X1 = +_[1][0];
      Y0 = +_[0][1];
      Y1 = +_[1][1];
      X0 > X1 && (_ = X0, X0 = X1, X1 = _);
      Y0 > Y1 && (_ = Y0, Y0 = Y1, Y1 = _);
      return graticule.precision(precision);
    };
    graticule.extentMinor = function(_) {
      if (!arguments.length) {
        return [[x0, y0], [x1, y1]];
      }
      x0 = +_[0][0];
      x1 = +_[1][0];
      y0 = +_[0][1];
      y1 = +_[1][1];
      x0 > x1 && (_ = x0, x0 = x1, x1 = _);
      y0 > y1 && (_ = y0, y0 = y1, y1 = _);
      return graticule.precision(precision);
    };
    graticule.step = function(_) {
      return arguments.length ? graticule.stepMajor(_).stepMinor(_) : graticule.stepMinor();
    };
    graticule.stepMajor = function(_) {
      if (!arguments.length) {
        return [DX, DY];
      }
      DX = +_[0];
      DY = +_[1];
      return graticule;
    };
    graticule.stepMinor = function(_) {
      if (!arguments.length) {
        return [dx, dy];
      }
      dx = +_[0];
      dy = +_[1];
      return graticule;
    };
    graticule.precision = function(_) {
      if (!arguments.length) {
        return precision;
      }
      precision = +_;
      x$jscomp$0 = graticuleX(y0, y1, 90);
      y$jscomp$0 = graticuleY(x0, x1, precision);
      X = graticuleX(Y0, Y1, 90);
      Y = graticuleY(X0, X1, precision);
      return graticule;
    };
    return graticule.extentMajor([[-180, -89.999999], [180, 89.999999]]).extentMinor([[-180, -80.000001], [180, 80.000001]]);
  }
  function graticule10() {
    return graticule()();
  }
  function interpolate$1(a, b) {
    var x0 = a[0] * radians, y0 = a[1] * radians, x1 = b[0] * radians, y1 = b[1] * radians, cy0 = cos$1(y0), sy0 = sin$1(y0), cy1 = cos$1(y1), sy1 = sin$1(y1), kx0 = cy0 * cos$1(x0), ky0 = cy0 * sin$1(x0), kx1 = cy1 * cos$1(x1), ky1 = cy1 * sin$1(x1), d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))), k = sin$1(d), interpolate = d ? function(t) {
      var B = sin$1(t *= d) / k, A = sin$1(d - t) / k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
      return [atan2(y, x) * degrees$1, atan2(z, sqrt(x * x + y * y)) * degrees$1];
    } : function() {
      return [x0 * degrees$1, y0 * degrees$1];
    };
    interpolate.distance = d;
    return interpolate;
  }
  function identity$4(x) {
    return x;
  }
  function areaRingStart$1() {
    areaStream$1.point = areaPointFirst$1;
  }
  function areaPointFirst$1(x, y) {
    areaStream$1.point = areaPoint$1;
    x00 = x0$1 = x;
    y00 = y0$1 = y;
  }
  function areaPoint$1(x, y) {
    areaRingSum$1.add(y0$1 * x - x0$1 * y);
    x0$1 = x;
    y0$1 = y;
  }
  function areaRingEnd$1() {
    areaPoint$1(x00, y00);
  }
  function boundsPoint$1(x, y) {
    x < x0$2 && (x0$2 = x);
    x > x1$jscomp$2 && (x1$jscomp$2 = x);
    y < y0$2 && (y0$2 = y);
    y > y1$jscomp$2 && (y1$jscomp$2 = y);
  }
  function centroidPoint$1(x, y) {
    X0$1 += x;
    Y0$1 += y;
    ++Z0$1;
  }
  function centroidLineStart$1() {
    centroidStream$1.point = centroidPointFirstLine;
  }
  function centroidPointFirstLine(x, y) {
    centroidStream$1.point = centroidPointLine;
    centroidPoint$1(x0$3 = x, y0$3 = y);
  }
  function centroidPointLine(x, y) {
    var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);
    X1$1 += z * (x0$3 + x) / 2;
    Y1$1 += z * (y0$3 + y) / 2;
    Z1$1 += z;
    centroidPoint$1(x0$3 = x, y0$3 = y);
  }
  function centroidLineEnd$1() {
    centroidStream$1.point = centroidPoint$1;
  }
  function centroidRingStart$1() {
    centroidStream$1.point = centroidPointFirstRing;
  }
  function centroidRingEnd$1() {
    centroidPointRing(x00$1, y00$1);
  }
  function centroidPointFirstRing(x, y) {
    centroidStream$1.point = centroidPointRing;
    centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);
  }
  function centroidPointRing(x, y) {
    var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);
    X1$1 += z * (x0$3 + x) / 2;
    Y1$1 += z * (y0$3 + y) / 2;
    Z1$1 += z;
    z = y0$3 * x - x0$3 * y;
    X2$1 += z * (x0$3 + x);
    Y2$1 += z * (y0$3 + y);
    Z2$1 += 3 * z;
    centroidPoint$1(x0$3 = x, y0$3 = y);
  }
  function PathContext(context) {
    this._context = context;
  }
  function lengthPointFirst$1(x, y) {
    lengthStream$1.point = lengthPoint$1;
    x00$2 = x0$4 = x;
    y00$2 = y0$4 = y;
  }
  function lengthPoint$1(x, y) {
    x0$4 -= x;
    y0$4 -= y;
    lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));
    x0$4 = x;
    y0$4 = y;
  }
  function PathString() {
    this._string = [];
  }
  function circle$1(radius) {
    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
  }
  function index$1(projection, context) {
    function path(object) {
      object && ("function" === typeof pointRadius && contextStream.pointRadius(+pointRadius.apply(this, arguments)), geoStream(object, projectionStream(contextStream)));
      return contextStream.result();
    }
    var pointRadius = 4.5, projectionStream, contextStream;
    path.area = function(object) {
      geoStream(object, projectionStream(areaStream$1));
      return areaStream$1.result();
    };
    path.measure = function(object) {
      geoStream(object, projectionStream(lengthStream$1));
      return lengthStream$1.result();
    };
    path.bounds = function(object) {
      geoStream(object, projectionStream(boundsStream$1));
      return boundsStream$1.result();
    };
    path.centroid = function(object) {
      geoStream(object, projectionStream(centroidStream$1));
      return centroidStream$1.result();
    };
    path.projection = function(_) {
      return arguments.length ? (projectionStream = null == _ ? (projection = null, identity$4) : (projection = _).stream, path) : projection;
    };
    path.context = function(_) {
      if (!arguments.length) {
        return context;
      }
      contextStream = null == _ ? (context = null, new PathString) : new PathContext(context = _);
      "function" !== typeof pointRadius && contextStream.pointRadius(pointRadius);
      return path;
    };
    path.pointRadius = function(_) {
      if (!arguments.length) {
        return pointRadius;
      }
      pointRadius = "function" === typeof _ ? _ : (contextStream.pointRadius(+_), +_);
      return path;
    };
    return path.projection(projection).context(context);
  }
  function transform$jscomp$0(methods) {
    return {stream:transformer(methods)};
  }
  function transformer(methods) {
    return function(stream) {
      var s = new TransformStream, key;
      for (key in methods) {
        s[key] = methods[key];
      }
      s.stream = stream;
      return s;
    };
  }
  function TransformStream() {
  }
  function fit(projection, fitBounds, object) {
    var clip = projection.clipExtent && projection.clipExtent();
    projection.scale(150).translate([0, 0]);
    null != clip && projection.clipExtent(null);
    geoStream(object, projection.stream(boundsStream$1));
    fitBounds(boundsStream$1.result());
    null != clip && projection.clipExtent(clip);
    return projection;
  }
  function fitExtent(projection, extent, object) {
    return fit(projection, function(b) {
      var w = extent[1][0] - extent[0][0], h = extent[1][1] - extent[0][1], k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])), x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2, y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
      projection.scale(150 * k).translate([x, y]);
    }, object);
  }
  function fitWidth(projection, width, object) {
    return fit(projection, function(b) {
      var w = +width, k = w / (b[1][0] - b[0][0]), x = (w - k * (b[1][0] + b[0][0])) / 2, y = -k * b[0][1];
      projection.scale(150 * k).translate([x, y]);
    }, object);
  }
  function fitHeight(projection, height, object) {
    return fit(projection, function(b) {
      var h = +height, k = h / (b[1][1] - b[0][1]), x = -k * b[0][0], y = (h - k * (b[1][1] + b[0][1])) / 2;
      projection.scale(150 * k).translate([x, y]);
    }, object);
  }
  function resampleNone(project) {
    return transformer({point:function(x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }});
  }
  function resample$1(project, delta2) {
    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
      if (d2 > 4 * delta2 && depth--) {
        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = sqrt(a * a + b * b + c * c), phi2 = asin(c /= m), lambda2 = 1e-6 > abs(abs(c) - 1) || 1e-6 > abs(lambda0 - lambda1) ? (lambda0 + lambda1) / 2 : atan2(b, a), p = project(lambda2, phi2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
        if (dz * dz / d2 > delta2 || 0.3 < abs((dx * dx2 + dy * dy2) / d2 - 0.5) || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream), stream.point(x2, y2), resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
        }
      }
    }
    return function(stream) {
      function point(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      }
      function lineStart() {
        x0 = NaN;
        resampleStream.point = linePoint;
        stream.lineStart();
      }
      function linePoint(lambda, phi) {
        var c = cartesian([lambda, phi]), p = project(lambda, phi);
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], 16, stream);
        stream.point(x0, y0);
      }
      function lineEnd() {
        resampleStream.point = point;
        stream.lineEnd();
      }
      function ringStart() {
        lineStart();
        resampleStream.point = ringPoint;
        resampleStream.lineEnd = ringEnd;
      }
      function ringPoint(lambda, phi) {
        linePoint(lambda00 = lambda, phi);
        x00 = x0;
        y00 = y0;
        a00 = a0;
        b00 = b0;
        c00 = c0;
        resampleStream.point = linePoint;
      }
      function ringEnd() {
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, 16, stream);
        resampleStream.lineEnd = lineEnd;
        lineEnd();
      }
      var lambda00, x00, y00, a00, b00, c00, lambda0, x0, y0, a0, b0, c0, resampleStream = {point:point, lineStart:lineStart, lineEnd:lineEnd, polygonStart:function() {
        stream.polygonStart();
        resampleStream.lineStart = ringStart;
      }, polygonEnd:function() {
        stream.polygonEnd();
        resampleStream.lineStart = lineStart;
      }};
      return resampleStream;
    };
  }
  function transformRotate(rotate) {
    return transformer({point:function(x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }});
  }
  function scaleTranslate(k, dx, dy) {
    function transform$$1(x, y) {
      return [dx + k * x, dy - k * y];
    }
    transform$$1.invert = function(x, y) {
      return [(x - dx) / k, (dy - y) / k];
    };
    return transform$$1;
  }
  function scaleTranslateRotate(k, dx, dy, alpha) {
    function transform$$1(x, y) {
      return [a * x - b * y + dx, dy - b * x - a * y];
    }
    var cosAlpha = cos$1(alpha), sinAlpha = sin$1(alpha), a = cosAlpha * k, b = sinAlpha * k, ai = cosAlpha / k, bi = sinAlpha / k, ci = (sinAlpha * dy - cosAlpha * dx) / k, fi = (sinAlpha * dx + cosAlpha * dy) / k;
    transform$$1.invert = function(x, y) {
      return [ai * x - bi * y + ci, fi - bi * x - ai * y];
    };
    return transform$$1;
  }
  function projection(project) {
    return projectionMutator(function() {
      return project;
    })();
  }
  function projectionMutator(projectAt) {
    function projection(point) {
      return projectRotateTransform(point[0] * radians, point[1] * radians);
    }
    function invert(point) {
      return (point = projectRotateTransform.invert(point[0], point[1])) && [point[0] * degrees$1, point[1] * degrees$1];
    }
    function recenter() {
      var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project$jscomp$0(lambda, phi)), transform$$1 = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);
      rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);
      projectTransform = compose(project$jscomp$0, transform$$1);
      projectRotateTransform = compose(rotate, projectTransform);
      var project = projectTransform;
      projectResample = +delta2$jscomp$0 ? resample$1(project, delta2$jscomp$0) : resampleNone(project);
      return reset();
    }
    function reset() {
      cache = cacheStream = null;
      return projection;
    }
    var project$jscomp$0, k = 150, x = 480, y = 250, lambda = 0, phi = 0, deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, alpha = 0, theta = null, preclip = clipAntimeridian, x0 = null, y0, x1, y1, postclip = identity$4, delta2$jscomp$0 = 0.5, projectResample, projectTransform, projectRotateTransform, cache, cacheStream;
    projection.stream = function(stream) {
      return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
    };
    projection.preclip = function(_) {
      return arguments.length ? (preclip = _, theta = void 0, reset()) : preclip;
    };
    projection.postclip = function(_) {
      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
    };
    projection.clipAngle = function(_) {
      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;
    };
    projection.clipExtent = function(_) {
      return arguments.length ? (postclip = null == _ ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : null == x0 ? null : [[x0, y0], [x1, y1]];
    };
    projection.scale = function(_) {
      return arguments.length ? (k = +_, recenter()) : k;
    };
    projection.translate = function(_) {
      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
    };
    projection.center = function(_) {
      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];
    };
    projection.rotate = function(_) {
      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = 2 < _.length ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];
    };
    projection.angle = function(_) {
      return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees$1;
    };
    projection.precision = function(_) {
      if (arguments.length) {
        var project = projectTransform, delta2 = delta2$jscomp$0 = _ * _;
        var JSCompiler_inline_result = +delta2 ? resample$1(project, delta2) : resampleNone(project);
        var JSCompiler_temp = (projectResample = JSCompiler_inline_result, reset());
      } else {
        JSCompiler_temp = sqrt(delta2$jscomp$0);
      }
      return JSCompiler_temp;
    };
    projection.fitExtent = function(extent, object) {
      return fitExtent(projection, extent, object);
    };
    projection.fitSize = function(size, object) {
      return fitExtent(projection, [[0, 0], size], object);
    };
    projection.fitWidth = function(width, object) {
      return fitWidth(projection, width, object);
    };
    projection.fitHeight = function(height, object) {
      return fitHeight(projection, height, object);
    };
    return function() {
      project$jscomp$0 = projectAt.apply(this, arguments);
      projection.invert = project$jscomp$0.invert && invert;
      return recenter();
    };
  }
  function conicProjection(projectAt) {
    var phi0 = 0, phi1 = pi$3 / 3, m = projectionMutator(projectAt), p = m(phi0, phi1);
    p.parallels = function(_) {
      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];
    };
    return p;
  }
  function cylindricalEqualAreaRaw(phi0) {
    function forward(lambda, phi) {
      return [lambda * cosPhi0, sin$1(phi) / cosPhi0];
    }
    var cosPhi0 = cos$1(phi0);
    forward.invert = function(x, y) {
      return [x / cosPhi0, asin(y * cosPhi0)];
    };
    return forward;
  }
  function conicEqualAreaRaw(y0, y1) {
    function project(x, y) {
      var r = sqrt(c - 2 * n * sin$1(y)) / n;
      return [r * sin$1(x *= n), r0 - r * cos$1(x)];
    }
    var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;
    if (1e-6 > abs(n)) {
      return cylindricalEqualAreaRaw(y0);
    }
    var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;
    project.invert = function(x, y) {
      var r0y = r0 - y;
      return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
    };
    return project;
  }
  function conicEqualArea() {
    return conicProjection(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);
  }
  function albers() {
    return conicEqualArea().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);
  }
  function multiplex(streams) {
    var n = streams.length;
    return {point:function(x, y) {
      for (var i = -1; ++i < n;) {
        streams[i].point(x, y);
      }
    }, sphere:function() {
      for (var i = -1; ++i < n;) {
        streams[i].sphere();
      }
    }, lineStart:function() {
      for (var i = -1; ++i < n;) {
        streams[i].lineStart();
      }
    }, lineEnd:function() {
      for (var i = -1; ++i < n;) {
        streams[i].lineEnd();
      }
    }, polygonStart:function() {
      for (var i = -1; ++i < n;) {
        streams[i].polygonStart();
      }
    }, polygonEnd:function() {
      for (var i = -1; ++i < n;) {
        streams[i].polygonEnd();
      }
    }};
  }
  function albersUsa() {
    function albersUsa(coordinates) {
      var x = coordinates[0], y = coordinates[1];
      return point = null, (lower48Point.point(x, y), point) || (alaskaPoint.point(x, y), point) || (hawaiiPoint.point(x, y), point);
    }
    function reset() {
      cache = cacheStream = null;
      return albersUsa;
    }
    var cache, cacheStream, lower48 = albers(), lower48Point, alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, point, pointStream = {point:function(x, y) {
      point = [x, y];
    }};
    albersUsa.invert = function(coordinates) {
      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
      return (0.120 <= y && 0.234 > y && -0.425 <= x && -0.214 > x ? alaska : 0.166 <= y && 0.234 > y && -0.214 <= x && -0.115 > x ? hawaii : lower48).invert(coordinates);
    };
    albersUsa.stream = function(stream) {
      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
    };
    albersUsa.precision = function(_) {
      if (!arguments.length) {
        return lower48.precision();
      }
      lower48.precision(_);
      alaska.precision(_);
      hawaii.precision(_);
      return reset();
    };
    albersUsa.scale = function(_) {
      if (!arguments.length) {
        return lower48.scale();
      }
      lower48.scale(_);
      alaska.scale(0.35 * _);
      hawaii.scale(_);
      return albersUsa.translate(lower48.translate());
    };
    albersUsa.translate = function(_) {
      if (!arguments.length) {
        return lower48.translate();
      }
      var k = lower48.scale(), x = +_[0], y = +_[1];
      lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);
      alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + 1e-6, y + 0.120 * k + 1e-6], [x - 0.214 * k - 1e-6, y + 0.234 * k - 1e-6]]).stream(pointStream);
      hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + 1e-6, y + 0.166 * k + 1e-6], [x - 0.115 * k - 1e-6, y + 0.234 * k - 1e-6]]).stream(pointStream);
      return reset();
    };
    albersUsa.fitExtent = function(extent, object) {
      return fitExtent(albersUsa, extent, object);
    };
    albersUsa.fitSize = function(size, object) {
      return fitExtent(albersUsa, [[0, 0], size], object);
    };
    albersUsa.fitWidth = function(width, object) {
      return fitWidth(albersUsa, width, object);
    };
    albersUsa.fitHeight = function(height, object) {
      return fitHeight(albersUsa, height, object);
    };
    return albersUsa.scale(1070);
  }
  function azimuthalRaw(scale) {
    return function(x, y) {
      var cx = cos$1(x), cy = cos$1(y), k = scale(cx * cy);
      return [k * cy * sin$1(x), k * sin$1(y)];
    };
  }
  function azimuthalInvert(angle) {
    return function(x, y) {
      var z = sqrt(x * x + y * y), c = angle(z), sc = sin$1(c), cc = cos$1(c);
      return [atan2(x * sc, z * cc), asin(z && y * sc / z)];
    };
  }
  function azimuthalEqualArea() {
    return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(179.999);
  }
  function azimuthalEquidistant() {
    return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(179.999);
  }
  function mercatorRaw(lambda, phi) {
    return [lambda, log(tan((halfPi$2 + phi) / 2))];
  }
  function mercator() {
    return mercatorProjection(mercatorRaw).scale(961 / tau$3);
  }
  function mercatorProjection(project) {
    function reclip() {
      var k = pi$3 * scale(), t = m(rotation$jscomp$0(m.rotate()).invert([0, 0]));
      return clipExtent(null == x0 ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
    }
    var m = projection(project), center = m.center, scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, x0 = null, y0, x1, y1;
    m.scale = function(_) {
      return arguments.length ? (scale(_), reclip()) : scale();
    };
    m.translate = function(_) {
      return arguments.length ? (translate(_), reclip()) : translate();
    };
    m.center = function(_) {
      return arguments.length ? (center(_), reclip()) : center();
    };
    m.clipExtent = function(_) {
      return arguments.length ? (null == _ ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : null == x0 ? null : [[x0, y0], [x1, y1]];
    };
    return reclip();
  }
  function conicConformalRaw(y0, y1) {
    function project(x, y) {
      0 < f ? y < -halfPi$2 + 1e-6 && (y = -halfPi$2 + 1e-6) : y > halfPi$2 - 1e-6 && (y = halfPi$2 - 1e-6);
      var r = f / pow(tan((halfPi$2 + y) / 2), n);
      return [r * sin$1(n * x), f - r * cos$1(n * x)];
    }
    var cy0 = cos$1(y0), n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tan((halfPi$2 + y1) / 2) / tan((halfPi$2 + y0) / 2)), f = cy0 * pow(tan((halfPi$2 + y0) / 2), n) / n;
    if (!n) {
      return mercatorRaw;
    }
    project.invert = function(x, y) {
      var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);
      return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];
    };
    return project;
  }
  function conicConformal() {
    return conicProjection(conicConformalRaw).scale(109.5).parallels([30, 30]);
  }
  function equirectangularRaw(lambda, phi) {
    return [lambda, phi];
  }
  function equirectangular() {
    return projection(equirectangularRaw).scale(152.63);
  }
  function conicEquidistantRaw(y0, y1) {
    function project(x, y) {
      var gy = g - y, nx = n * x;
      return [gy * sin$1(nx), g - gy * cos$1(nx)];
    }
    var cy0 = cos$1(y0), n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0), g = cy0 / n + y0;
    if (1e-6 > abs(n)) {
      return equirectangularRaw;
    }
    project.invert = function(x, y) {
      var gy = g - y;
      return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];
    };
    return project;
  }
  function conicEquidistant() {
    return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);
  }
  function equalEarthRaw(lambda, phi) {
    var l = asin(M * sin$1(phi)), l2 = l * l, l6 = l2 * l2 * l2;
    return [lambda * cos$1(l) / (M * (1.340264 + 3 * -0.081106 * l2 + l6 * (7 * 0.000893 + .034164 * l2))), l * (1.340264 + -0.081106 * l2 + l6 * (0.000893 + 0.003796 * l2))];
  }
  function equalEarth() {
    return projection(equalEarthRaw).scale(177.158);
  }
  function gnomonicRaw(x, y) {
    var cy = cos$1(y), k = cos$1(x) * cy;
    return [cy * sin$1(x) / k, sin$1(y) / k];
  }
  function gnomonic() {
    return projection(gnomonicRaw).scale(144.049).clipAngle(60);
  }
  function scaleTranslate$1(kx, ky, tx, ty) {
    return 1 === kx && 1 === ky && 0 === tx && 0 === ty ? identity$4 : transformer({point:function(x, y) {
      this.stream.point(x * kx + tx, y * ky + ty);
    }});
  }
  function identity$5() {
    function reset() {
      cache = cacheStream = null;
      return projection;
    }
    var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity$4, x0 = null, y0, x1, y1, postclip = identity$4, cache, cacheStream, projection;
    return projection = {stream:function(stream) {
      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));
    }, postclip:function(_) {
      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
    }, clipExtent:function(_) {
      return arguments.length ? (postclip = null == _ ? (x0 = y0 = x1 = y1 = null, identity$4) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : null == x0 ? null : [[x0, y0], [x1, y1]];
    }, scale:function(_) {
      return arguments.length ? (transform$$1 = scaleTranslate$1((k = +_) * sx, k * sy, tx, ty), reset()) : k;
    }, translate:function(_) {
      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];
    }, reflectX:function(_) {
      return arguments.length ? (transform$$1 = scaleTranslate$1(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : 0 > sx;
    }, reflectY:function(_) {
      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : 0 > sy;
    }, fitExtent:function(extent, object) {
      return fitExtent(projection, extent, object);
    }, fitSize:function(size, object) {
      return fitExtent(projection, [[0, 0], size], object);
    }, fitWidth:function(width, object) {
      return fitWidth(projection, width, object);
    }, fitHeight:function(height, object) {
      return fitHeight(projection, height, object);
    }};
  }
  function naturalEarth1Raw(lambda, phi) {
    var phi2 = phi * phi, phi4 = phi2 * phi2;
    return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];
  }
  function naturalEarth1() {
    return projection(naturalEarth1Raw).scale(175.295);
  }
  function orthographicRaw(x, y) {
    return [cos$1(y) * sin$1(x), sin$1(y)];
  }
  function orthographic() {
    return projection(orthographicRaw).scale(249.5).clipAngle(90.000001);
  }
  function stereographicRaw(x, y) {
    var cy = cos$1(y), k = 1 + cos$1(x) * cy;
    return [cy * sin$1(x) / k, sin$1(y) / k];
  }
  function stereographic() {
    return projection(stereographicRaw).scale(250).clipAngle(142);
  }
  function transverseMercatorRaw(lambda, phi) {
    return [log(tan((halfPi$2 + phi) / 2)), -lambda];
  }
  function transverseMercator() {
    var m = mercatorProjection(transverseMercatorRaw), center = m.center, rotate = m.rotate;
    m.center = function(_) {
      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
    };
    m.rotate = function(_) {
      return arguments.length ? rotate([_[0], _[1], 2 < _.length ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
    };
    return rotate([0, 0, 90]).scale(159.155);
  }
  function defaultSeparation(a, b) {
    return a.parent === b.parent ? 1 : 2;
  }
  function meanXReduce(x, c) {
    return x + c.x;
  }
  function maxYReduce(y, c) {
    return Math.max(y, c.y);
  }
  function leafLeft(node) {
    for (var children; children = node.children;) {
      node = children[0];
    }
    return node;
  }
  function leafRight(node) {
    for (var children; children = node.children;) {
      node = children[children.length - 1];
    }
    return node;
  }
  function cluster() {
    function cluster(root) {
      var previousNode, x = 0;
      root.eachAfter(function(node) {
        var children = node.children;
        if (children) {
          var children$jscomp$0 = children;
          var JSCompiler_inline_result = children$jscomp$0.reduce(meanXReduce, 0) / children$jscomp$0.length;
          node.x = JSCompiler_inline_result;
          node.y = 1 + children.reduce(maxYReduce, 0);
        } else {
          node.x = previousNode ? x += separation(node, previousNode) : 0, node.y = 0, previousNode = node;
        }
      });
      var left = leafLeft(root), right = leafRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
      return root.eachAfter(nodeSize ? function(node) {
        node.x = (node.x - root.x) * dx;
        node.y = (root.y - node.y) * dy;
      } : function(node) {
        node.x = (node.x - x0) / (x1 - x0) * dx;
        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
      });
    }
    var separation = defaultSeparation, dx = 1, dy = 1, nodeSize = !1;
    cluster.separation = function(x) {
      return arguments.length ? (separation = x, cluster) : separation;
    };
    cluster.size = function(x) {
      return arguments.length ? (nodeSize = !1, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];
    };
    cluster.nodeSize = function(x) {
      return arguments.length ? (nodeSize = !0, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;
    };
    return cluster;
  }
  function count$jscomp$0(node) {
    var sum = 0, children = node.children, i = children && children.length;
    if (i) {
      for (; 0 <= --i;) {
        sum += children[i].value;
      }
    } else {
      sum = 1;
    }
    node.value = sum;
  }
  function node_count() {
    return this.eachAfter(count$jscomp$0);
  }
  function node_each(callback) {
    var node = this, next = [node], children, n;
    do {
      var current = next.reverse();
      for (next = []; node = current.pop();) {
        if (callback(node), children = node.children) {
          var i = 0;
          for (n = children.length; i < n; ++i) {
            next.push(children[i]);
          }
        }
      }
    } while (next.length);
    return this;
  }
  function node_eachBefore(callback) {
    for (var node = this, nodes = [node], children, i; node = nodes.pop();) {
      if (callback(node), children = node.children) {
        for (i = children.length - 1; 0 <= i; --i) {
          nodes.push(children[i]);
        }
      }
    }
    return this;
  }
  function node_eachAfter(callback) {
    for (var node = this, nodes = [node], next = [], children, i, n; node = nodes.pop();) {
      if (next.push(node), children = node.children) {
        for (i = 0, n = children.length; i < n; ++i) {
          nodes.push(children[i]);
        }
      }
    }
    for (; node = next.pop();) {
      callback(node);
    }
    return this;
  }
  function node_sum(value) {
    return this.eachAfter(function(node) {
      for (var sum = +value(node.data) || 0, children = node.children, i = children && children.length; 0 <= --i;) {
        sum += children[i].value;
      }
      node.value = sum;
    });
  }
  function node_sort(compare) {
    return this.eachBefore(function(node) {
      node.children && node.children.sort(compare);
    });
  }
  function node_path(end) {
    var start = this;
    var a = start, b = end;
    if (a === b) {
      var ancestor = a;
    } else {
      var aNodes = a.ancestors(), bNodes = b.ancestors(), c = null;
      a = aNodes.pop();
      for (b = bNodes.pop(); a === b;) {
        c = a, a = aNodes.pop(), b = bNodes.pop();
      }
      ancestor = c;
    }
    for (var nodes = [start]; start !== ancestor;) {
      start = start.parent, nodes.push(start);
    }
    for (var k = nodes.length; end !== ancestor;) {
      nodes.splice(k, 0, end), end = end.parent;
    }
    return nodes;
  }
  function node_ancestors() {
    for (var node = this, nodes = [node]; node = node.parent;) {
      nodes.push(node);
    }
    return nodes;
  }
  function node_descendants() {
    var nodes = [];
    this.each(function(node) {
      nodes.push(node);
    });
    return nodes;
  }
  function node_leaves() {
    var leaves = [];
    this.eachBefore(function(node) {
      node.children || leaves.push(node);
    });
    return leaves;
  }
  function node_links() {
    var root = this, links = [];
    root.each(function(node) {
      node !== root && links.push({source:node.parent, target:node});
    });
    return links;
  }
  function hierarchy(data, children) {
    var root = new Node(data), valued = +data.value && (root.value = data.value), node, nodes = [root], child, childs, i, n;
    for (null == children && (children = defaultChildren); node = nodes.pop();) {
      if (valued && (node.value = +node.data.value), (childs = children(node.data)) && (n = childs.length)) {
        for (node.children = Array(n), i = n - 1; 0 <= i; --i) {
          nodes.push(child = node.children[i] = new Node(childs[i])), child.parent = node, child.depth = node.depth + 1;
        }
      }
    }
    return root.eachBefore(computeHeight);
  }
  function node_copy() {
    return hierarchy(this).eachBefore(copyData);
  }
  function defaultChildren(d) {
    return d.children;
  }
  function copyData(node) {
    node.data = node.data.data;
  }
  function computeHeight(node) {
    var height = 0;
    do {
      node.height = height;
    } while ((node = node.parent) && node.height < ++height);
  }
  function Node(data) {
    this.data = data;
    this.depth = this.height = 0;
    this.parent = null;
  }
  function enclose(circles) {
    for (var i = 0, JSCompiler_inline_result, array = slice$4.call(circles), m = array.length, t, i$jscomp$0; m;) {
      i$jscomp$0 = Math.random() * m-- | 0, t = array[m], array[m] = array[i$jscomp$0], array[i$jscomp$0] = t;
    }
    JSCompiler_inline_result = array;
    for (var n = (circles = JSCompiler_inline_result).length, B = [], p, e; i < n;) {
      if (p = circles[i], e && enclosesWeak(e, p)) {
        ++i;
      } else {
        a: {
          var j, i$jscomp$1, B$jscomp$0 = B, p$jscomp$0 = p;
          if (enclosesWeakAll(p$jscomp$0, B$jscomp$0)) {
            var JSCompiler_inline_result$jscomp$0 = [p$jscomp$0];
          } else {
            for (i$jscomp$1 = 0; i$jscomp$1 < B$jscomp$0.length; ++i$jscomp$1) {
              if (enclosesNot(p$jscomp$0, B$jscomp$0[i$jscomp$1]) && enclosesWeakAll(encloseBasis2(B$jscomp$0[i$jscomp$1], p$jscomp$0), B$jscomp$0)) {
                JSCompiler_inline_result$jscomp$0 = [B$jscomp$0[i$jscomp$1], p$jscomp$0];
                break a;
              }
            }
            for (i$jscomp$1 = 0; i$jscomp$1 < B$jscomp$0.length - 1; ++i$jscomp$1) {
              for (j = i$jscomp$1 + 1; j < B$jscomp$0.length; ++j) {
                if (enclosesNot(encloseBasis2(B$jscomp$0[i$jscomp$1], B$jscomp$0[j]), p$jscomp$0) && enclosesNot(encloseBasis2(B$jscomp$0[i$jscomp$1], p$jscomp$0), B$jscomp$0[j]) && enclosesNot(encloseBasis2(B$jscomp$0[j], p$jscomp$0), B$jscomp$0[i$jscomp$1]) && enclosesWeakAll(encloseBasis3(B$jscomp$0[i$jscomp$1], B$jscomp$0[j], p$jscomp$0), B$jscomp$0)) {
                  JSCompiler_inline_result$jscomp$0 = [B$jscomp$0[i$jscomp$1], B$jscomp$0[j], p$jscomp$0];
                  break a;
                }
              }
            }
            throw Error();
            JSCompiler_inline_result$jscomp$0 = void 0;
          }
        }
        a: {
          var B$jscomp$1 = B = JSCompiler_inline_result$jscomp$0;
          switch(B$jscomp$1.length) {
            case 1:
              var a = B$jscomp$1[0];
              var JSCompiler_inline_result$jscomp$1 = {x:a.x, y:a.y, r:a.r};
              break a;
            case 2:
              JSCompiler_inline_result$jscomp$1 = encloseBasis2(B$jscomp$1[0], B$jscomp$1[1]);
              break a;
            case 3:
              JSCompiler_inline_result$jscomp$1 = encloseBasis3(B$jscomp$1[0], B$jscomp$1[1], B$jscomp$1[2]);
              break a;
          }
          JSCompiler_inline_result$jscomp$1 = void 0;
        }
        e = JSCompiler_inline_result$jscomp$1;
        i = 0;
      }
    }
    return e;
  }
  function enclosesNot(a, b) {
    var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;
    return 0 > dr || dr * dr < dx * dx + dy * dy;
  }
  function enclosesWeak(a, b) {
    var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;
    return 0 < dr && dr * dr > dx * dx + dy * dy;
  }
  function enclosesWeakAll(a, B) {
    for (var i = 0; i < B.length; ++i) {
      if (!enclosesWeak(a, B[i])) {
        return !1;
      }
    }
    return !0;
  }
  function encloseBasis2(a, b) {
    var x1 = a.x, y1 = a.y, r1 = a.r, x2 = b.x, y2 = b.y, r2 = b.r, x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1, l = Math.sqrt(x21 * x21 + y21 * y21);
    return {x:(x1 + x2 + x21 / l * r21) / 2, y:(y1 + y2 + y21 / l * r21) / 2, r:(l + r1 + r2) / 2};
  }
  function encloseBasis3(a, b, c) {
    var x1 = a.x, y1 = a.y, r1 = a.r, x2 = b.x, y2 = b.y, r2 = b.r, x3 = c.x, y3 = c.y, r3 = c.r, a2 = x1 - x2, a3 = x1 - x3, b2 = y1 - y2, b3 = y1 - y3, c2 = r2 - r1, c3 = r3 - r1, d1 = x1 * x1 + y1 * y1 - r1 * r1, d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2, d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3, ab = a3 * b2 - a2 * b3, xa = (b2 * d3 - b3 * d2) / (2 * ab) - x1, xb = (b3 * c2 - b2 * c3) / ab, ya = (a3 * d2 - a2 * d3) / (2 * ab) - y1, yb = (a2 * c3 - a3 * c2) / ab, A = xb * xb + yb * yb - 1, B = 2 * (r1 + 
    xa * xb + ya * yb), C = xa * xa + ya * ya - r1 * r1, r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
    return {x:x1 + xa + xb * r, y:y1 + ya + yb * r, r:r};
  }
  function place(b, a, c) {
    var dx = b.x - a.x, dy = b.y - a.y, d2 = dx * dx + dy * dy;
    if (d2) {
      var a2 = a.r + c.r;
      a2 *= a2;
      var b2 = b.r + c.r;
      b2 *= b2;
      if (a2 > b2) {
        var x = (d2 + b2 - a2) / (2 * d2);
        var y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
        c.x = b.x - x * dx - y * dy;
        c.y = b.y - x * dy + y * dx;
      } else {
        x = (d2 + a2 - b2) / (2 * d2), y = Math.sqrt(Math.max(0, a2 / d2 - x * x)), c.x = a.x + x * dx - y * dy, c.y = a.y + x * dy + y * dx;
      }
    } else {
      c.x = a.x + c.r, c.y = a.y;
    }
  }
  function intersects(a, b) {
    var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;
    return 0 < dr && dr * dr > dx * dx + dy * dy;
  }
  function score(node) {
    var a = node._, b = node.next._, ab = a.r + b.r, dx = (a.x * b.r + b.x * a.r) / ab, dy = (a.y * b.r + b.y * a.r) / ab;
    return dx * dx + dy * dy;
  }
  function Node$1(circle) {
    this._ = circle;
    this.previous = this.next = null;
  }
  function packEnclose(circles) {
    if (!(n = circles.length)) {
      return 0;
    }
    var c, n, aa, ca;
    var a = circles[0];
    a.x = 0;
    a.y = 0;
    if (!(1 < n)) {
      return a.r;
    }
    var b = circles[1];
    a.x = -b.r;
    b.x = a.r;
    b.y = 0;
    if (!(2 < n)) {
      return a.r + b.r;
    }
    place(b, a, c = circles[2]);
    a = new Node$1(a);
    b = new Node$1(b);
    c = new Node$1(c);
    a.next = c.previous = b;
    b.next = a.previous = c;
    c.next = b.previous = a;
    var i = 3;
    a: for (; i < n; ++i) {
      place(a._, b._, c = circles[i]);
      c = new Node$1(c);
      var j = b.next;
      var k = a.previous;
      var sj = b._.r;
      var sk = a._.r;
      do {
        if (sj <= sk) {
          if (intersects(j._, c._)) {
            b = j;
            a.next = b;
            b.previous = a;
            --i;
            continue a;
          }
          sj += j._.r;
          j = j.next;
        } else {
          if (intersects(k._, c._)) {
            a = k;
            a.next = b;
            b.previous = a;
            --i;
            continue a;
          }
          sk += k._.r;
          k = k.previous;
        }
      } while (j !== k.next);
      c.previous = a;
      c.next = b;
      a.next = b.previous = b = c;
      for (aa = score(a); (c = c.next) !== b;) {
        (ca = score(c)) < aa && (a = c, aa = ca);
      }
      b = a.next;
    }
    a = [b._];
    for (c = b; (c = c.next) !== b;) {
      a.push(c._);
    }
    c = enclose(a);
    for (i = 0; i < n; ++i) {
      a = circles[i], a.x -= c.x, a.y -= c.y;
    }
    return c.r;
  }
  function siblings(circles) {
    packEnclose(circles);
    return circles;
  }
  function required(f) {
    if ("function" !== typeof f) {
      throw Error();
    }
    return f;
  }
  function constantZero() {
    return 0;
  }
  function constant$9(x) {
    return function() {
      return x;
    };
  }
  function defaultRadius$1(d) {
    return Math.sqrt(d.value);
  }
  function index$2() {
    function pack(root) {
      root.x = dx / 2;
      root.y = dy / 2;
      radius ? root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1)) : root.eachBefore(radiusLeaf(defaultRadius$1)).eachAfter(packChildren(constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
      return root;
    }
    var radius = null, dx = 1, dy = 1, padding = constantZero;
    pack.radius = function(x) {
      return arguments.length ? (radius = null == x ? null : required(x), pack) : radius;
    };
    pack.size = function(x) {
      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
    };
    pack.padding = function(x) {
      return arguments.length ? (padding = "function" === typeof x ? x : constant$9(+x), pack) : padding;
    };
    return pack;
  }
  function radiusLeaf(radius) {
    return function(node) {
      node.children || (node.r = Math.max(0, +radius(node) || 0));
    };
  }
  function packChildren(padding, k) {
    return function(node) {
      if (children = node.children) {
        var children, i, n = children.length, r = padding(node) * k || 0;
        if (r) {
          for (i = 0; i < n; ++i) {
            children[i].r += r;
          }
        }
        var e = packEnclose(children);
        if (r) {
          for (i = 0; i < n; ++i) {
            children[i].r -= r;
          }
        }
        node.r = e + r;
      }
    };
  }
  function translateChild(k) {
    return function(node) {
      var parent = node.parent;
      node.r *= k;
      parent && (node.x = parent.x + k * node.x, node.y = parent.y + k * node.y);
    };
  }
  function roundNode(node) {
    node.x0 = Math.round(node.x0);
    node.y0 = Math.round(node.y0);
    node.x1 = Math.round(node.x1);
    node.y1 = Math.round(node.y1);
  }
  function treemapDice(parent, x0, y0, x1, y1) {
    for (var nodes = parent.children, node, i = -1, n = nodes.length, k = parent.value && (x1 - x0) / parent.value; ++i < n;) {
      node = nodes[i], node.y0 = y0, node.y1 = y1, node.x0 = x0, node.x1 = x0 += node.value * k;
    }
  }
  function partition() {
    function partition(root) {
      var n = root.height + 1;
      root.x0 = root.y0 = padding;
      root.x1 = dx;
      root.y1 = dy$jscomp$0 / n;
      root.eachBefore(positionNode(dy$jscomp$0, n));
      round && root.eachBefore(roundNode);
      return root;
    }
    function positionNode(dy, n) {
      return function(node) {
        node.children && treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
        var x0 = node.x0, y0 = node.y0, x1 = node.x1 - padding, y1 = node.y1 - padding;
        x1 < x0 && (x0 = x1 = (x0 + x1) / 2);
        y1 < y0 && (y0 = y1 = (y0 + y1) / 2);
        node.x0 = x0;
        node.y0 = y0;
        node.x1 = x1;
        node.y1 = y1;
      };
    }
    var dx = 1, dy$jscomp$0 = 1, padding = 0, round = !1;
    partition.round = function(x) {
      return arguments.length ? (round = !!x, partition) : round;
    };
    partition.size = function(x) {
      return arguments.length ? (dx = +x[0], dy$jscomp$0 = +x[1], partition) : [dx, dy$jscomp$0];
    };
    partition.padding = function(x) {
      return arguments.length ? (padding = +x, partition) : padding;
    };
    return partition;
  }
  function defaultId(d) {
    return d.id;
  }
  function defaultParentId(d) {
    return d.parentId;
  }
  function stratify() {
    function stratify(data) {
      var i, n = data.length, nodes = Array(n), nodeId, nodeByKey = {};
      for (i = 0; i < n; ++i) {
        var d = data[i];
        var node$jscomp$0 = nodes[i] = new Node(d);
        if (null != (nodeId = id(d, i, data)) && (nodeId += "")) {
          var nodeKey = "$" + (node$jscomp$0.id = nodeId);
          nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node$jscomp$0;
        }
      }
      for (i = 0; i < n; ++i) {
        if (node$jscomp$0 = nodes[i], nodeId = parentId(data[i], i, data), null != nodeId && (nodeId += "")) {
          var parent = nodeByKey["$" + nodeId];
          if (!parent) {
            throw Error("missing: " + nodeId);
          }
          if (parent === ambiguous) {
            throw Error("ambiguous: " + nodeId);
          }
          parent.children ? parent.children.push(node$jscomp$0) : parent.children = [node$jscomp$0];
          node$jscomp$0.parent = parent;
        } else {
          if (root) {
            throw Error("multiple roots");
          }
          var root = node$jscomp$0;
        }
      }
      if (!root) {
        throw Error("no root");
      }
      root.parent = preroot;
      root.eachBefore(function(node) {
        node.depth = node.parent.depth + 1;
        --n;
      }).eachBefore(computeHeight);
      root.parent = null;
      if (0 < n) {
        throw Error("cycle");
      }
      return root;
    }
    var id = defaultId, parentId = defaultParentId;
    stratify.id = function(x) {
      return arguments.length ? (id = required(x), stratify) : id;
    };
    stratify.parentId = function(x) {
      return arguments.length ? (parentId = required(x), stratify) : parentId;
    };
    return stratify;
  }
  function defaultSeparation$1(a, b) {
    return a.parent === b.parent ? 1 : 2;
  }
  function nextLeft(v) {
    var children = v.children;
    return children ? children[0] : v.t;
  }
  function nextRight(v) {
    var children = v.children;
    return children ? children[children.length - 1] : v.t;
  }
  function TreeNode(node, i) {
    this._ = node;
    this.A = this.children = this.parent = null;
    this.a = this;
    this.s = this.c = this.m = this.z = 0;
    this.t = null;
    this.i = i;
  }
  function treeRoot(root) {
    for (var tree = new TreeNode(root, 0), node, nodes = [tree], child, children, i, n; node = nodes.pop();) {
      if (children = node._.children) {
        for (node.children = Array(n = children.length), i = n - 1; 0 <= i; --i) {
          nodes.push(child = node.children[i] = new TreeNode(children[i], i)), child.parent = node;
        }
      }
    }
    (tree.parent = new TreeNode(null, 0)).children = [tree];
    return tree;
  }
  function tree() {
    function tree(root) {
      var t = treeRoot(root);
      t.eachAfter(firstWalk);
      t.parent.m = -t.z;
      t.eachBefore(secondWalk);
      if (nodeSize) {
        root.eachBefore(sizeNode);
      } else {
        var left = root, right = root, bottom = root;
        root.eachBefore(function(node) {
          node.x < left.x && (left = node);
          node.x > right.x && (right = node);
          node.depth > bottom.depth && (bottom = node);
        });
        var s = left === right ? 1 : separation(left, right) / 2, tx = s - left.x, kx = dx / (right.x + s + tx), ky = dy / (bottom.depth || 1);
        root.eachBefore(function(node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
      return root;
    }
    function firstWalk(v$jscomp$0) {
      var children = v$jscomp$0.children, siblings = v$jscomp$0.parent.children, w = v$jscomp$0.i ? siblings[v$jscomp$0.i - 1] : null;
      if (children) {
        for (var shift = 0, change = 0, children$jscomp$0 = v$jscomp$0.children, i = children$jscomp$0.length, w$jscomp$0; 0 <= --i;) {
          w$jscomp$0 = children$jscomp$0[i], w$jscomp$0.z += shift, w$jscomp$0.m += shift, shift += w$jscomp$0.s + (change += w$jscomp$0.c);
        }
        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
        w ? (v$jscomp$0.z = w.z + separation(v$jscomp$0._, w._), v$jscomp$0.m = v$jscomp$0.z - midpoint) : v$jscomp$0.z = midpoint;
      } else {
        w && (v$jscomp$0.z = w.z + separation(v$jscomp$0._, w._));
      }
      var JSCompiler_temp_const = v$jscomp$0.parent, v = v$jscomp$0, ancestor = v$jscomp$0.parent.A || siblings[0];
      if (w) {
        for (var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift$jscomp$0; vim = nextRight(vim), vip = nextLeft(vip), vim && vip;) {
          vom = nextLeft(vom);
          vop = nextRight(vop);
          vop.a = v;
          shift$jscomp$0 = vim.z + sim - vip.z - sip + separation(vim._, vip._);
          if (0 < shift$jscomp$0) {
            var wm = vim.a.parent === v.parent ? vim.a : ancestor, wp = v, shift$jscomp$1 = shift$jscomp$0, change$jscomp$0 = shift$jscomp$1 / (wp.i - wm.i);
            wp.c -= change$jscomp$0;
            wp.s += shift$jscomp$1;
            wm.c += change$jscomp$0;
            wp.z += shift$jscomp$1;
            wp.m += shift$jscomp$1;
            sip += shift$jscomp$0;
            sop += shift$jscomp$0;
          }
          sim += vim.m;
          sip += vip.m;
          som += vom.m;
          sop += vop.m;
        }
        vim && !nextRight(vop) && (vop.t = vim, vop.m += sim - sop);
        vip && !nextLeft(vom) && (vom.t = vip, vom.m += sip - som, ancestor = v);
      }
      var JSCompiler_inline_result = ancestor;
      JSCompiler_temp_const.A = JSCompiler_inline_result;
    }
    function secondWalk(v) {
      v._.x = v.z + v.parent.m;
      v.m += v.parent.m;
    }
    function sizeNode(node) {
      node.x *= dx;
      node.y = node.depth * dy;
    }
    var separation = defaultSeparation$1, dx = 1, dy = 1, nodeSize = null;
    tree.separation = function(x) {
      return arguments.length ? (separation = x, tree) : separation;
    };
    tree.size = function(x) {
      return arguments.length ? (nodeSize = !1, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];
    };
    tree.nodeSize = function(x) {
      return arguments.length ? (nodeSize = !0, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;
    };
    return tree;
  }
  function treemapSlice(parent, x0, y0, x1, y1) {
    for (var nodes = parent.children, node, i = -1, n = nodes.length, k = parent.value && (y1 - y0) / parent.value; ++i < n;) {
      node = nodes[i], node.x0 = x0, node.x1 = x1, node.y0 = y0, node.y1 = y0 += node.value * k;
    }
  }
  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
    for (var rows = [], nodes = parent.children, row, nodeValue, i0 = 0, i1 = 0, n = nodes.length, dx, dy, value = parent.value, sumValue, minValue, maxValue, newRatio, minRatio, alpha, beta; i0 < n;) {
      dx = x1 - x0;
      dy = y1 - y0;
      do {
        sumValue = nodes[i1++].value;
      } while (!sumValue && i1 < n);
      minValue = maxValue = sumValue;
      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
      beta = sumValue * sumValue * alpha;
      for (minRatio = Math.max(maxValue / beta, beta / minValue); i1 < n; ++i1) {
        sumValue += nodeValue = nodes[i1].value;
        nodeValue < minValue && (minValue = nodeValue);
        nodeValue > maxValue && (maxValue = nodeValue);
        beta = sumValue * sumValue * alpha;
        newRatio = Math.max(maxValue / beta, beta / minValue);
        if (newRatio > minRatio) {
          sumValue -= nodeValue;
          break;
        }
        minRatio = newRatio;
      }
      rows.push(row = {value:sumValue, dice:dx < dy, children:nodes.slice(i0, i1)});
      row.dice ? treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1) : treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
      value -= sumValue;
      i0 = i1;
    }
    return rows;
  }
  function index$3() {
    function treemap(root) {
      root.x0 = root.y0 = 0;
      root.x1 = dx;
      root.y1 = dy;
      root.eachBefore(positionNode);
      paddingStack = [0];
      round && root.eachBefore(roundNode);
      return root;
    }
    function positionNode(node) {
      var p = paddingStack[node.depth], x0 = node.x0 + p, y0 = node.y0 + p, x1 = node.x1 - p, y1 = node.y1 - p;
      x1 < x0 && (x0 = x1 = (x0 + x1) / 2);
      y1 < y0 && (y0 = y1 = (y0 + y1) / 2);
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
      node.children && (p = paddingStack[node.depth + 1] = paddingInner(node) / 2, x0 += paddingLeft(node) - p, y0 += paddingTop(node) - p, x1 -= paddingRight(node) - p, y1 -= paddingBottom(node) - p, x1 < x0 && (x0 = x1 = (x0 + x1) / 2), y1 < y0 && (y0 = y1 = (y0 + y1) / 2), tile(node, x0, y0, x1, y1));
    }
    var tile = squarify, round = !1, dx = 1, dy = 1, paddingStack = [0], paddingInner = constantZero, paddingTop = constantZero, paddingRight = constantZero, paddingBottom = constantZero, paddingLeft = constantZero;
    treemap.round = function(x) {
      return arguments.length ? (round = !!x, treemap) : round;
    };
    treemap.size = function(x) {
      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
    };
    treemap.tile = function(x) {
      return arguments.length ? (tile = required(x), treemap) : tile;
    };
    treemap.padding = function(x) {
      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
    };
    treemap.paddingInner = function(x) {
      return arguments.length ? (paddingInner = "function" === typeof x ? x : constant$9(+x), treemap) : paddingInner;
    };
    treemap.paddingOuter = function(x) {
      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
    };
    treemap.paddingTop = function(x) {
      return arguments.length ? (paddingTop = "function" === typeof x ? x : constant$9(+x), treemap) : paddingTop;
    };
    treemap.paddingRight = function(x) {
      return arguments.length ? (paddingRight = "function" === typeof x ? x : constant$9(+x), treemap) : paddingRight;
    };
    treemap.paddingBottom = function(x) {
      return arguments.length ? (paddingBottom = "function" === typeof x ? x : constant$9(+x), treemap) : paddingBottom;
    };
    treemap.paddingLeft = function(x) {
      return arguments.length ? (paddingLeft = "function" === typeof x ? x : constant$9(+x), treemap) : paddingLeft;
    };
    return treemap;
  }
  function binary(parent, x0$jscomp$0, y0$jscomp$0, x1$jscomp$0, y1$jscomp$0) {
    function partition(i, j, value, x0, y0, x1, y1) {
      if (i >= j - 1) {
        var node = nodes[i];
        node.x0 = x0;
        node.y0 = y0;
        node.x1 = x1;
        node.y1 = y1;
      } else {
        for (var valueOffset = sums[i], valueTarget = value / 2 + valueOffset, k = i + 1, hi = j - 1; k < hi;) {
          var mid = k + hi >>> 1;
          sums[mid] < valueTarget ? k = mid + 1 : hi = mid;
        }
        valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k && --k;
        var valueLeft = sums[k] - valueOffset, valueRight = value - valueLeft;
        if (x1 - x0 > y1 - y0) {
          var xk = (x0 * valueRight + x1 * valueLeft) / value;
          partition(i, k, valueLeft, x0, y0, xk, y1);
          partition(k, j, valueRight, xk, y0, x1, y1);
        } else {
          var yk = (y0 * valueRight + y1 * valueLeft) / value;
          partition(i, k, valueLeft, x0, y0, x1, yk);
          partition(k, j, valueRight, x0, yk, x1, y1);
        }
      }
    }
    var nodes = parent.children, i$jscomp$0, n = nodes.length, sum, sums = Array(n + 1);
    for (sums[0] = sum = i$jscomp$0 = 0; i$jscomp$0 < n; ++i$jscomp$0) {
      sums[i$jscomp$0 + 1] = sum += nodes[i$jscomp$0].value;
    }
    partition(0, n, parent.value, x0$jscomp$0, y0$jscomp$0, x1$jscomp$0, y1$jscomp$0);
  }
  function sliceDice(parent, x0, y0, x1, y1) {
    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);
  }
  function area$2(polygon) {
    for (var i = -1, n = polygon.length, a, b = polygon[n - 1], area = 0; ++i < n;) {
      a = b, b = polygon[i], area += a[1] * b[0] - a[0] * b[1];
    }
    return area / 2;
  }
  function centroid$1(polygon) {
    for (var i = -1, n = polygon.length, x = 0, y = 0, a, b = polygon[n - 1], c, k = 0; ++i < n;) {
      a = b, b = polygon[i], k += c = a[0] * b[1] - b[0] * a[1], x += (a[0] + b[0]) * c, y += (a[1] + b[1]) * c;
    }
    return k *= 3, [x / k, y / k];
  }
  function cross$1(a, b, c) {
    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
  }
  function lexicographicOrder(a, b) {
    return a[0] - b[0] || a[1] - b[1];
  }
  function computeUpperHullIndexes(points) {
    for (var n = points.length, indexes = [0, 1], size = 2, i = 2; i < n; ++i) {
      for (; 1 < size && 0 >= cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]);) {
        --size;
      }
      indexes[size++] = i;
    }
    return indexes.slice(0, size);
  }
  function hull(points) {
    if (3 > (n = points.length)) {
      return null;
    }
    var i, n, sortedPoints = Array(n), flippedPoints = Array(n);
    for (i = 0; i < n; ++i) {
      sortedPoints[i] = [+points[i][0], +points[i][1], i];
    }
    sortedPoints.sort(lexicographicOrder);
    for (i = 0; i < n; ++i) {
      flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];
    }
    var upperIndexes = computeUpperHullIndexes(sortedPoints), lowerIndexes = computeUpperHullIndexes(flippedPoints), skipLeft = lowerIndexes[0] === upperIndexes[0], skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1], hull = [];
    for (i = upperIndexes.length - 1; 0 <= i; --i) {
      hull.push(points[sortedPoints[upperIndexes[i]][2]]);
    }
    for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) {
      hull.push(points[sortedPoints[lowerIndexes[i]][2]]);
    }
    return hull;
  }
  function contains$2(polygon, point) {
    for (var n = polygon.length, p = polygon[n - 1], x = point[0], y = point[1], x0 = p[0], y0 = p[1], x1, y1, inside = !1, i = 0; i < n; ++i) {
      p = polygon[i], x1 = p[0], y1 = p[1], y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1 && (inside = !inside), x0 = x1, y0 = y1;
    }
    return inside;
  }
  function length$2(polygon) {
    for (var i = -1, n = polygon.length, b = polygon[n - 1], xa, ya, xb = b[0], yb = b[1], perimeter = 0; ++i < n;) {
      xa = xb, ya = yb, b = polygon[i], xb = b[0], yb = b[1], xa -= xb, ya -= yb, perimeter += Math.sqrt(xa * xa + ya * ya);
    }
    return perimeter;
  }
  function defaultSource$1() {
    return Math.random();
  }
  function ordinal(range) {
    function scale(d) {
      var key = d + "", i = index.get(key);
      if (!i) {
        if (unknown !== implicit) {
          return unknown;
        }
        index.set(key, i = domain.push(d));
      }
      return range[(i - 1) % range.length];
    }
    var index = map$1(), domain = [], unknown = implicit;
    range = null == range ? [] : slice$5.call(range);
    scale.domain = function(_) {
      if (!arguments.length) {
        return domain.slice();
      }
      domain = [];
      index = map$1();
      for (var i = -1, n = _.length, d, key; ++i < n;) {
        index.has(key = (d = _[i]) + "") || index.set(key, domain.push(d));
      }
      return scale;
    };
    scale.range = function(_) {
      return arguments.length ? (range = slice$5.call(_), scale) : range.slice();
    };
    scale.unknown = function(_) {
      return arguments.length ? (unknown = _, scale) : unknown;
    };
    scale.copy = function() {
      return ordinal().domain(domain).range(range).unknown(unknown);
    };
    return scale;
  }
  function band() {
    function rescale() {
      var n = domain().length, reverse = range$$1[1] < range$$1[0], start = range$$1[reverse - 0], stop = range$$1[1 - reverse];
      step = (stop - start) / Math.max(1, n - paddingInner + 2 * paddingOuter);
      round && (step = Math.floor(step));
      start += (stop - start - step * (n - paddingInner)) * align;
      bandwidth = step * (1 - paddingInner);
      round && (start = Math.round(start), bandwidth = Math.round(bandwidth));
      var values = sequence(n).map(function(i) {
        return start + step * i;
      });
      return ordinalRange(reverse ? values.reverse() : values);
    }
    var scale = ordinal().unknown(void 0), domain = scale.domain, ordinalRange = scale.range, range$$1 = [0, 1], step, bandwidth, round = !1, paddingInner = 0, paddingOuter = 0, align = 0.5;
    delete scale.unknown;
    scale.domain = function(_) {
      return arguments.length ? (domain(_), rescale()) : domain();
    };
    scale.range = function(_) {
      return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();
    };
    scale.rangeRound = function(_) {
      return range$$1 = [+_[0], +_[1]], round = !0, rescale();
    };
    scale.bandwidth = function() {
      return bandwidth;
    };
    scale.step = function() {
      return step;
    };
    scale.round = function(_) {
      return arguments.length ? (round = !!_, rescale()) : round;
    };
    scale.padding = function(_) {
      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
    };
    scale.paddingInner = function(_) {
      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
    };
    scale.paddingOuter = function(_) {
      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;
    };
    scale.align = function(_) {
      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
    };
    scale.copy = function() {
      return band().domain(domain()).range(range$$1).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
    };
    return rescale();
  }
  function pointish(scale) {
    var copy = scale.copy;
    scale.padding = scale.paddingOuter;
    delete scale.paddingInner;
    delete scale.paddingOuter;
    scale.copy = function() {
      return pointish(copy());
    };
    return scale;
  }
  function point$1() {
    return pointish(band().paddingInner(1));
  }
  function constant$a(x) {
    return function() {
      return x;
    };
  }
  function number$2(x) {
    return +x;
  }
  function deinterpolateLinear(a, b) {
    return (b -= a = +a) ? function(x) {
      return (x - a) / b;
    } : constant$a(b);
  }
  function deinterpolateClamp(deinterpolate) {
    return function(a, b) {
      var d = deinterpolate(a = +a, b = +b);
      return function(x) {
        return x <= a ? 0 : x >= b ? 1 : d(x);
      };
    };
  }
  function reinterpolateClamp(reinterpolate) {
    return function(a, b) {
      var r = reinterpolate(a = +a, b = +b);
      return function(t) {
        return 0 >= t ? a : 1 <= t ? b : r(t);
      };
    };
  }
  function bimap(domain, range, deinterpolate, reinterpolate) {
    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
    d1 < d0 ? (d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0)) : (d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1));
    return function(x) {
      return r0(d0(x));
    };
  }
  function polymap(domain, range, deinterpolate, reinterpolate) {
    var j = Math.min(domain.length, range.length) - 1, d = Array(j), r = Array(j), i$jscomp$0 = -1;
    domain[j] < domain[0] && (domain = domain.slice().reverse(), range = range.slice().reverse());
    for (; ++i$jscomp$0 < j;) {
      d[i$jscomp$0] = deinterpolate(domain[i$jscomp$0], domain[i$jscomp$0 + 1]), r[i$jscomp$0] = reinterpolate(range[i$jscomp$0], range[i$jscomp$0 + 1]);
    }
    return function(x) {
      var i = bisectRight(domain, x, 1, j) - 1;
      return r[i](d[i](x));
    };
  }
  function copy(source, target) {
    return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp());
  }
  function continuous(deinterpolate, reinterpolate) {
    function rescale() {
      piecewise$$1 = 2 < Math.min(domain.length, range.length) ? polymap : bimap;
      output = input = null;
      return scale;
    }
    function scale(x) {
      return (output || (output = piecewise$$1(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);
    }
    var domain = unit, range = unit, interpolate$$1 = interpolateValue, clamp = !1, piecewise$$1, output, input;
    scale.invert = function(y) {
      return (input || (input = piecewise$$1(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);
    };
    scale.domain = function(_) {
      return arguments.length ? (domain = map$2.call(_, number$2), rescale()) : domain.slice();
    };
    scale.range = function(_) {
      return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();
    };
    scale.rangeRound = function(_) {
      return range = slice$5.call(_), interpolate$$1 = interpolateRound, rescale();
    };
    scale.clamp = function(_) {
      return arguments.length ? (clamp = !!_, rescale()) : clamp;
    };
    scale.interpolate = function(_) {
      return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;
    };
    return rescale();
  }
  function linearish(scale) {
    var domain$jscomp$0 = scale.domain;
    scale.ticks = function(count) {
      var d = domain$jscomp$0();
      return ticks(d[0], d[d.length - 1], null == count ? 10 : count);
    };
    scale.tickFormat = function(count, specifier$jscomp$0) {
      a: {
        var domain = domain$jscomp$0(), specifier = specifier$jscomp$0, start = domain[0], stop = domain[domain.length - 1], step = tickStep(start, stop, null == count ? 10 : count), precision;
        specifier = formatSpecifier(null == specifier ? ",f" : specifier);
        switch(specifier.type) {
          case "s":
            var value = Math.max(Math.abs(start), Math.abs(stop));
            null != specifier.precision || isNaN(precision = precisionPrefix(step, value)) || (specifier.precision = precision);
            var JSCompiler_inline_result = d3.formatPrefix(specifier, value);
            break a;
          case "":
          case "e":
          case "g":
          case "p":
          case "r":
            null != specifier.precision || isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop)))) || (specifier.precision = precision - ("e" === specifier.type));
            break;
          case "f":
          case "%":
            null != specifier.precision || isNaN(precision = precisionFixed(step)) || (specifier.precision = precision - 2 * ("%" === specifier.type));
        }
        JSCompiler_inline_result = d3.format(specifier);
      }
      return JSCompiler_inline_result;
    };
    scale.nice = function(count) {
      null == count && (count = 10);
      var d = domain$jscomp$0(), i0 = 0, i1 = d.length - 1, start = d[i0], stop = d[i1];
      if (stop < start) {
        var step = start;
        start = stop;
        stop = step;
        step = i0;
        i0 = i1;
        i1 = step;
      }
      step = tickIncrement(start, stop, count);
      0 < step ? (start = Math.floor(start / step) * step, stop = Math.ceil(stop / step) * step, step = tickIncrement(start, stop, count)) : 0 > step && (start = Math.ceil(start * step) / step, stop = Math.floor(stop * step) / step, step = tickIncrement(start, stop, count));
      0 < step ? (d[i0] = Math.floor(start / step) * step, d[i1] = Math.ceil(stop / step) * step, domain$jscomp$0(d)) : 0 > step && (d[i0] = Math.ceil(start * step) / step, d[i1] = Math.floor(stop * step) / step, domain$jscomp$0(d));
      return scale;
    };
    return scale;
  }
  function linear$2() {
    var scale = continuous(deinterpolateLinear, interpolateNumber);
    scale.copy = function() {
      return copy(scale, linear$2());
    };
    return linearish(scale);
  }
  function identity$6() {
    function scale(x) {
      return +x;
    }
    var domain = [0, 1];
    scale.invert = scale;
    scale.domain = scale.range = function(_) {
      return arguments.length ? (domain = map$2.call(_, number$2), scale) : domain.slice();
    };
    scale.copy = function() {
      return identity$6().domain(domain);
    };
    return linearish(scale);
  }
  function nice(domain, interval) {
    domain = domain.slice();
    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1];
    if (x1 < x0) {
      var t = i0;
      i0 = i1;
      i1 = t;
      t = x0;
      x0 = x1;
      x1 = t;
    }
    domain[i0] = interval.floor(x0);
    domain[i1] = interval.ceil(x1);
    return domain;
  }
  function deinterpolate(a, b) {
    return (b = Math.log(b / a)) ? function(x) {
      return Math.log(x / a) / b;
    } : constant$a(b);
  }
  function reinterpolate(a, b) {
    return 0 > a ? function(t) {
      return -Math.pow(-b, t) * Math.pow(-a, 1 - t);
    } : function(t) {
      return Math.pow(b, t) * Math.pow(a, 1 - t);
    };
  }
  function pow10(x) {
    return isFinite(x) ? +("1e" + x) : 0 > x ? 0 : x;
  }
  function powp(base) {
    return 10 === base ? pow10 : base === Math.E ? Math.exp : function(x) {
      return Math.pow(base, x);
    };
  }
  function logp(base) {
    return base === Math.E ? Math.log : 10 === base && Math.log10 || 2 === base && Math.log2 || (base = Math.log(base), function(x) {
      return Math.log(x) / base;
    });
  }
  function reflect(f) {
    return function(x) {
      return -f(-x);
    };
  }
  function log$1() {
    function rescale() {
      logs = logp(base);
      pows = powp(base);
      0 > domain()[0] && (logs = reflect(logs), pows = reflect(pows));
      return scale;
    }
    var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]), domain = scale.domain, base = 10, logs = logp(10), pows = powp(10);
    scale.base = function(_) {
      return arguments.length ? (base = +_, rescale()) : base;
    };
    scale.domain = function(_) {
      return arguments.length ? (domain(_), rescale()) : domain();
    };
    scale.ticks = function(count) {
      var d = domain(), u = d[0], v = d[d.length - 1], r;
      if (r = v < u) {
        i = u, u = v, v = i;
      }
      var i = logs(u), j = logs(v), p, n = null == count ? 10 : +count, z = [];
      if (!(base % 1) && j - i < n) {
        if (i = Math.round(i) - 1, j = Math.round(j) + 1, 0 < u) {
          for (; i < j; ++i) {
            var k = 1;
            for (p = pows(i); k < base; ++k) {
              var t = p * k;
              if (!(t < u)) {
                if (t > v) {
                  break;
                }
                z.push(t);
              }
            }
          }
        } else {
          for (; i < j; ++i) {
            for (k = base - 1, p = pows(i); 1 <= k; --k) {
              if (t = p * k, !(t < u)) {
                if (t > v) {
                  break;
                }
                z.push(t);
              }
            }
          }
        }
      } else {
        z = ticks(i, j, Math.min(j - i, n)).map(pows);
      }
      return r ? z.reverse() : z;
    };
    scale.tickFormat = function(count, specifier) {
      null == specifier && (specifier = 10 === base ? ".0e" : ",");
      "function" !== typeof specifier && (specifier = d3.format(specifier));
      if (Infinity === count) {
        return specifier;
      }
      null == count && (count = 10);
      var k = Math.max(1, base * count / scale.ticks().length);
      return function(d) {
        var i = d / pows(Math.round(logs(d)));
        i * base < base - 0.5 && (i *= base);
        return i <= k ? specifier(d) : "";
      };
    };
    scale.nice = function() {
      return domain(nice(domain(), {floor:function(x) {
        return pows(Math.floor(logs(x)));
      }, ceil:function(x) {
        return pows(Math.ceil(logs(x)));
      }}));
    };
    scale.copy = function() {
      return copy(scale, log$1().base(base));
    };
    return scale;
  }
  function raise$1(x, exponent) {
    return 0 > x ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  }
  function pow$1() {
    function deinterpolate(a, b) {
      return (b = raise$1(b, exponent) - (a = raise$1(a, exponent))) ? function(x) {
        return (raise$1(x, exponent) - a) / b;
      } : constant$a(b);
    }
    function reinterpolate(a, b) {
      b = raise$1(b, exponent) - (a = raise$1(a, exponent));
      return function(t) {
        return raise$1(a + b * t, 1 / exponent);
      };
    }
    var exponent = 1, scale = continuous(deinterpolate, reinterpolate), domain = scale.domain;
    scale.exponent = function(_) {
      return arguments.length ? (exponent = +_, domain(domain())) : exponent;
    };
    scale.copy = function() {
      return copy(scale, pow$1().exponent(exponent));
    };
    return linearish(scale);
  }
  function sqrt$1() {
    return pow$1().exponent(0.5);
  }
  function quantile$$1() {
    function rescale() {
      var i = 0, n = Math.max(1, range.length);
      for (thresholds = Array(n - 1); ++i < n;) {
        thresholds[i - 1] = threshold(domain, i / n);
      }
      return scale;
    }
    function scale(x) {
      if (!isNaN(x = +x)) {
        return range[bisectRight(thresholds, x)];
      }
    }
    var domain = [], range = [], thresholds = [];
    scale.invertExtent = function(y) {
      var i = range.indexOf(y);
      return 0 > i ? [NaN, NaN] : [0 < i ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
    };
    scale.domain = function(_) {
      if (!arguments.length) {
        return domain.slice();
      }
      domain = [];
      for (var i = 0, n = _.length, d; i < n; ++i) {
        (d = _[i], null == d || isNaN(d = +d)) || domain.push(d);
      }
      domain.sort(ascending);
      return rescale();
    };
    scale.range = function(_) {
      return arguments.length ? (range = slice$5.call(_), rescale()) : range.slice();
    };
    scale.quantiles = function() {
      return thresholds.slice();
    };
    scale.copy = function() {
      return quantile$$1().domain(domain).range(range);
    };
    return scale;
  }
  function quantize$1() {
    function scale(x) {
      if (x <= x) {
        return range[bisectRight(domain, x, 0, n)];
      }
    }
    function rescale() {
      var i = -1;
      for (domain = Array(n); ++i < n;) {
        domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
      }
      return scale;
    }
    var x0 = 0, x1 = 1, n = 1, domain = [0.5], range = [0, 1];
    scale.domain = function(_) {
      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
    };
    scale.range = function(_) {
      return arguments.length ? (n = (range = slice$5.call(_)).length - 1, rescale()) : range.slice();
    };
    scale.invertExtent = function(y) {
      var i = range.indexOf(y);
      return 0 > i ? [NaN, NaN] : 1 > i ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
    };
    scale.copy = function() {
      return quantize$1().domain([x0, x1]).range(range);
    };
    return linearish(scale);
  }
  function threshold$1() {
    function scale(x) {
      if (x <= x) {
        return range[bisectRight(domain, x, 0, n)];
      }
    }
    var domain = [0.5], range = [0, 1], n = 1;
    scale.domain = function(_) {
      return arguments.length ? (domain = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
    };
    scale.range = function(_) {
      return arguments.length ? (range = slice$5.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
    };
    scale.invertExtent = function(y) {
      var i = range.indexOf(y);
      return [domain[i - 1], domain[i]];
    };
    scale.copy = function() {
      return threshold$1().domain(domain).range(range);
    };
    return scale;
  }
  function newInterval(floori, offseti, count, field) {
    function interval(date) {
      return floori(date = new Date(+date)), date;
    }
    interval.floor = interval;
    interval.ceil = function(date) {
      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
    };
    interval.round = function(date) {
      var d0 = interval(date), d1 = interval.ceil(date);
      return date - d0 < d1 - date ? d0 : d1;
    };
    interval.offset = function(date, step) {
      return offseti(date = new Date(+date), null == step ? 1 : Math.floor(step)), date;
    };
    interval.range = function(start, stop, step) {
      var range = [], previous;
      start = interval.ceil(start);
      step = null == step ? 1 : Math.floor(step);
      if (!(start < stop && 0 < step)) {
        return range;
      }
      do {
        range.push(previous = new Date(+start)), offseti(start, step), floori(start);
      } while (previous < start && start < stop);
      return range;
    };
    interval.filter = function(test) {
      return newInterval(function(date) {
        if (date >= date) {
          for (; floori(date), !test(date);) {
            date.setTime(date - 1);
          }
        }
      }, function(date, step) {
        if (date >= date) {
          if (0 > step) {
            for (; 0 >= ++step;) {
              for (; offseti(date, -1), !test(date);) {
              }
            }
          } else {
            for (; 0 <= --step;) {
              for (; offseti(date, 1), !test(date);) {
              }
            }
          }
        }
      });
    };
    count && (interval.count = function(start, end) {
      t0$1.setTime(+start);
      t1$1.setTime(+end);
      floori(t0$1);
      floori(t1$1);
      return Math.floor(count(t0$1, t1$1));
    }, interval.every = function(step) {
      step = Math.floor(step);
      return isFinite(step) && 0 < step ? 1 < step ? interval.filter(field ? function(d) {
        return 0 === field(d) % step;
      } : function(d) {
        return 0 === interval.count(0, d) % step;
      }) : interval : null;
    });
    return interval;
  }
  function weekday(i) {
    return newInterval(function(date) {
      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
      date.setHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setDate(date.getDate() + 7 * step);
    }, function(start, end) {
      return (end - start - 6e4 * (end.getTimezoneOffset() - start.getTimezoneOffset())) / 6048e5;
    });
  }
  function utcWeekday(i) {
    return newInterval(function(date) {
      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCDate(date.getUTCDate() + 7 * step);
    }, function(start, end) {
      return (end - start) / 6048e5;
    });
  }
  function localDate(d) {
    if (0 <= d.y && 100 > d.y) {
      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
      date.setFullYear(d.y);
      return date;
    }
    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
  }
  function utcDate(d) {
    if (0 <= d.y && 100 > d.y) {
      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
      date.setUTCFullYear(d.y);
      return date;
    }
    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
  }
  function newYear(y) {
    return {y:y, m:0, d:1, H:0, M:0, S:0, L:0};
  }
  function formatLocale$1(locale) {
    function newFormat(specifier, formats) {
      return function(date) {
        var string = [], i = -1, j = 0, n = specifier.length, c, pad, format;
        for (date instanceof Date || (date = new Date(+date)); ++i < n;) {
          if (37 === specifier.charCodeAt(i)) {
            string.push(specifier.slice(j, i));
            null != (pad = pads[c = specifier.charAt(++i)]) ? c = specifier.charAt(++i) : pad = "e" === c ? " " : "0";
            if (format = formats[c]) {
              c = format(date, pad);
            }
            string.push(c);
            j = i + 1;
          }
        }
        string.push(specifier.slice(j, i));
        return string.join("");
      };
    }
    function newParse(specifier, newDate) {
      return function(string) {
        var d = newYear(1900), i = parseSpecifier(d, specifier, string += "", 0);
        if (i != string.length) {
          return null;
        }
        if ("Q" in d) {
          return new Date(d.Q);
        }
        "p" in d && (d.H = d.H % 12 + 12 * d.p);
        if ("V" in d) {
          if (1 > d.V || 53 < d.V) {
            return null;
          }
          "w" in d || (d.w = 1);
          if ("Z" in d) {
            var week = utcDate(newYear(d.y));
            var day$$1 = week.getUTCDay();
            week = 4 < day$$1 || 0 === day$$1 ? utcMonday.ceil(week) : utcMonday(week);
            week = utcDay.offset(week, 7 * (d.V - 1));
            d.y = week.getUTCFullYear();
            d.m = week.getUTCMonth();
            d.d = week.getUTCDate() + (d.w + 6) % 7;
          } else {
            week = newDate(newYear(d.y)), day$$1 = week.getDay(), week = 4 < day$$1 || 0 === day$$1 ? monday.ceil(week) : monday(week), week = day.offset(week, 7 * (d.V - 1)), d.y = week.getFullYear(), d.m = week.getMonth(), d.d = week.getDate() + (d.w + 6) % 7;
          }
        } else {
          if ("W" in d || "U" in d) {
            "w" in d || (d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0), day$$1 = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay(), d.m = 0, d.d = "W" in d ? (d.w + 6) % 7 + 7 * d.W - (day$$1 + 5) % 7 : d.w + 7 * d.U - (day$$1 + 6) % 7;
          }
        }
        return "Z" in d ? (d.H += d.Z / 100 | 0, d.M += d.Z % 100, utcDate(d)) : newDate(d);
      };
    }
    function parseSpecifier(d, specifier, string, j) {
      for (var i = 0, n = specifier.length, m = string.length, c, parse; i < n;) {
        if (j >= m) {
          return -1;
        }
        c = specifier.charCodeAt(i++);
        if (37 === c) {
          if (c = specifier.charAt(i++), parse = parses[c in pads ? specifier.charAt(i++) : c], !parse || 0 > (j = parse(d, string, j))) {
            return -1;
          }
        } else {
          if (c != string.charCodeAt(j++)) {
            return -1;
          }
        }
      }
      return j;
    }
    function parsePeriod(d, string, i) {
      var n = periodRe.exec(string.slice(i));
      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
    }
    function parseShortWeekday(d, string, i) {
      var n = shortWeekdayRe.exec(string.slice(i));
      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
    }
    function parseWeekday(d, string, i) {
      var n = weekdayRe.exec(string.slice(i));
      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
    }
    function parseShortMonth(d, string, i) {
      var n = shortMonthRe.exec(string.slice(i));
      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
    }
    function parseMonth(d, string, i) {
      var n = monthRe.exec(string.slice(i));
      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
    }
    function parseLocaleDateTime(d, string, i) {
      return parseSpecifier(d, locale_dateTime, string, i);
    }
    function parseLocaleDate(d, string, i) {
      return parseSpecifier(d, locale_date, string, i);
    }
    function parseLocaleTime(d, string, i) {
      return parseSpecifier(d, locale_time, string, i);
    }
    function formatShortWeekday(d) {
      return locale_shortWeekdays[d.getDay()];
    }
    function formatWeekday(d) {
      return locale_weekdays[d.getDay()];
    }
    function formatShortMonth(d) {
      return locale_shortMonths[d.getMonth()];
    }
    function formatMonth(d) {
      return locale_months[d.getMonth()];
    }
    function formatPeriod(d) {
      return locale_periods[+(12 <= d.getHours())];
    }
    function formatUTCShortWeekday(d) {
      return locale_shortWeekdays[d.getUTCDay()];
    }
    function formatUTCWeekday(d) {
      return locale_weekdays[d.getUTCDay()];
    }
    function formatUTCShortMonth(d) {
      return locale_shortMonths[d.getUTCMonth()];
    }
    function formatUTCMonth(d) {
      return locale_months[d.getUTCMonth()];
    }
    function formatUTCPeriod(d) {
      return locale_periods[+(12 <= d.getUTCHours())];
    }
    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_weekdays = locale.days, locale_shortWeekdays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths, periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = 
    formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths), formats = {a:formatShortWeekday, A:formatWeekday, b:formatShortMonth, B:formatMonth, c:null, d:formatDayOfMonth, e:formatDayOfMonth, f:formatMicroseconds, H:formatHour24, I:formatHour12, j:formatDayOfYear, L:formatMilliseconds, m:formatMonthNumber, M:formatMinutes, p:formatPeriod, Q:formatUnixTimestamp, 
    s:formatUnixTimestampSeconds, S:formatSeconds, u:formatWeekdayNumberMonday, U:formatWeekNumberSunday, V:formatWeekNumberISO, w:formatWeekdayNumberSunday, W:formatWeekNumberMonday, x:null, X:null, y:formatYear, Y:formatFullYear, Z:formatZone, "%":formatLiteralPercent}, utcFormats = {a:formatUTCShortWeekday, A:formatUTCWeekday, b:formatUTCShortMonth, B:formatUTCMonth, c:null, d:formatUTCDayOfMonth, e:formatUTCDayOfMonth, f:formatUTCMicroseconds, H:formatUTCHour24, I:formatUTCHour12, j:formatUTCDayOfYear, 
    L:formatUTCMilliseconds, m:formatUTCMonthNumber, M:formatUTCMinutes, p:formatUTCPeriod, Q:formatUnixTimestamp, s:formatUnixTimestampSeconds, S:formatUTCSeconds, u:formatUTCWeekdayNumberMonday, U:formatUTCWeekNumberSunday, V:formatUTCWeekNumberISO, w:formatUTCWeekdayNumberSunday, W:formatUTCWeekNumberMonday, x:null, X:null, y:formatUTCYear, Y:formatUTCFullYear, Z:formatUTCZone, "%":formatLiteralPercent}, parses = {a:parseShortWeekday, A:parseWeekday, b:parseShortMonth, B:parseMonth, c:parseLocaleDateTime, 
    d:parseDayOfMonth, e:parseDayOfMonth, f:parseMicroseconds, H:parseHour24, I:parseHour24, j:parseDayOfYear, L:parseMilliseconds, m:parseMonthNumber, M:parseMinutes, p:parsePeriod, Q:parseUnixTimestamp, s:parseUnixTimestampSeconds, S:parseSeconds, u:parseWeekdayNumberMonday, U:parseWeekNumberSunday, V:parseWeekNumberISO, w:parseWeekdayNumberSunday, W:parseWeekNumberMonday, x:parseLocaleDate, X:parseLocaleTime, y:parseYear, Y:parseFullYear, Z:parseZone, "%":parseLiteralPercent};
    formats.x = newFormat(locale_date, formats);
    formats.X = newFormat(locale_time, formats);
    formats.c = newFormat(locale_dateTime, formats);
    utcFormats.x = newFormat(locale_date, utcFormats);
    utcFormats.X = newFormat(locale_time, utcFormats);
    utcFormats.c = newFormat(locale_dateTime, utcFormats);
    return {format:function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() {
        return specifier;
      };
      return f;
    }, parse:function(specifier) {
      var p = newParse(specifier += "", localDate);
      p.toString = function() {
        return specifier;
      };
      return p;
    }, utcFormat:function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() {
        return specifier;
      };
      return f;
    }, utcParse:function(specifier) {
      var p = newParse(specifier, utcDate);
      p.toString = function() {
        return specifier;
      };
      return p;
    }};
  }
  function pad(value, fill, width) {
    var sign = 0 > value ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
    return sign + (length < width ? Array(width - length + 1).join(fill) + string : string);
  }
  function requote(s) {
    return s.replace(requoteRe, "\\$&");
  }
  function formatRe(names) {
    return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
  }
  function formatLookup(names) {
    for (var map = {}, i = -1, n = names.length; ++i < n;) {
      map[names[i].toLowerCase()] = i;
    }
    return map;
  }
  function parseWeekdayNumberSunday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 1));
    return n ? (d.w = +n[0], i + n[0].length) : -1;
  }
  function parseWeekdayNumberMonday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 1));
    return n ? (d.u = +n[0], i + n[0].length) : -1;
  }
  function parseWeekNumberSunday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.U = +n[0], i + n[0].length) : -1;
  }
  function parseWeekNumberISO(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.V = +n[0], i + n[0].length) : -1;
  }
  function parseWeekNumberMonday(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.W = +n[0], i + n[0].length) : -1;
  }
  function parseFullYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 4));
    return n ? (d.y = +n[0], i + n[0].length) : -1;
  }
  function parseYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.y = +n[0] + (68 < +n[0] ? 1900 : 2000), i + n[0].length) : -1;
  }
  function parseZone(d, string, i) {
    var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
  }
  function parseMonthNumber(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
  }
  function parseDayOfMonth(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.d = +n[0], i + n[0].length) : -1;
  }
  function parseDayOfYear(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 3));
    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
  }
  function parseHour24(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.H = +n[0], i + n[0].length) : -1;
  }
  function parseMinutes(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.M = +n[0], i + n[0].length) : -1;
  }
  function parseSeconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 2));
    return n ? (d.S = +n[0], i + n[0].length) : -1;
  }
  function parseMilliseconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 3));
    return n ? (d.L = +n[0], i + n[0].length) : -1;
  }
  function parseMicroseconds(d, string, i) {
    var n = numberRe.exec(string.slice(i, i + 6));
    return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
  }
  function parseLiteralPercent(d, string, i) {
    var n = percentRe.exec(string.slice(i, i + 1));
    return n ? i + n[0].length : -1;
  }
  function parseUnixTimestamp(d, string, i) {
    var n = numberRe.exec(string.slice(i));
    return n ? (d.Q = +n[0], i + n[0].length) : -1;
  }
  function parseUnixTimestampSeconds(d, string, i) {
    var n = numberRe.exec(string.slice(i));
    return n ? (d.Q = 1000 * +n[0], i + n[0].length) : -1;
  }
  function formatDayOfMonth(d, p) {
    return pad(d.getDate(), p, 2);
  }
  function formatHour24(d, p) {
    return pad(d.getHours(), p, 2);
  }
  function formatHour12(d, p) {
    return pad(d.getHours() % 12 || 12, p, 2);
  }
  function formatDayOfYear(d, p) {
    return pad(1 + day.count(year(d), d), p, 3);
  }
  function formatMilliseconds(d, p) {
    return pad(d.getMilliseconds(), p, 3);
  }
  function formatMicroseconds(d, p) {
    return formatMilliseconds(d, p) + "000";
  }
  function formatMonthNumber(d, p) {
    return pad(d.getMonth() + 1, p, 2);
  }
  function formatMinutes(d, p) {
    return pad(d.getMinutes(), p, 2);
  }
  function formatSeconds(d, p) {
    return pad(d.getSeconds(), p, 2);
  }
  function formatWeekdayNumberMonday(d) {
    var day$$1 = d.getDay();
    return 0 === day$$1 ? 7 : day$$1;
  }
  function formatWeekNumberSunday(d, p) {
    return pad(sunday.count(year(d), d), p, 2);
  }
  function formatWeekNumberISO(d, p) {
    var day$$1 = d.getDay();
    d = 4 <= day$$1 || 0 === day$$1 ? thursday(d) : thursday.ceil(d);
    return pad(thursday.count(year(d), d) + (4 === year(d).getDay()), p, 2);
  }
  function formatWeekdayNumberSunday(d) {
    return d.getDay();
  }
  function formatWeekNumberMonday(d, p) {
    return pad(monday.count(year(d), d), p, 2);
  }
  function formatYear(d, p) {
    return pad(d.getFullYear() % 100, p, 2);
  }
  function formatFullYear(d, p) {
    return pad(d.getFullYear() % 10000, p, 4);
  }
  function formatZone(d) {
    var z = d.getTimezoneOffset();
    return (0 < z ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
  }
  function formatUTCDayOfMonth(d, p) {
    return pad(d.getUTCDate(), p, 2);
  }
  function formatUTCHour24(d, p) {
    return pad(d.getUTCHours(), p, 2);
  }
  function formatUTCHour12(d, p) {
    return pad(d.getUTCHours() % 12 || 12, p, 2);
  }
  function formatUTCDayOfYear(d, p) {
    return pad(1 + utcDay.count(utcYear(d), d), p, 3);
  }
  function formatUTCMilliseconds(d, p) {
    return pad(d.getUTCMilliseconds(), p, 3);
  }
  function formatUTCMicroseconds(d, p) {
    return formatUTCMilliseconds(d, p) + "000";
  }
  function formatUTCMonthNumber(d, p) {
    return pad(d.getUTCMonth() + 1, p, 2);
  }
  function formatUTCMinutes(d, p) {
    return pad(d.getUTCMinutes(), p, 2);
  }
  function formatUTCSeconds(d, p) {
    return pad(d.getUTCSeconds(), p, 2);
  }
  function formatUTCWeekdayNumberMonday(d) {
    var dow = d.getUTCDay();
    return 0 === dow ? 7 : dow;
  }
  function formatUTCWeekNumberSunday(d, p) {
    return pad(utcSunday.count(utcYear(d), d), p, 2);
  }
  function formatUTCWeekNumberISO(d, p) {
    var day$$1 = d.getUTCDay();
    d = 4 <= day$$1 || 0 === day$$1 ? utcThursday(d) : utcThursday.ceil(d);
    return pad(utcThursday.count(utcYear(d), d) + (4 === utcYear(d).getUTCDay()), p, 2);
  }
  function formatUTCWeekdayNumberSunday(d) {
    return d.getUTCDay();
  }
  function formatUTCWeekNumberMonday(d, p) {
    return pad(utcMonday.count(utcYear(d), d), p, 2);
  }
  function formatUTCYear(d, p) {
    return pad(d.getUTCFullYear() % 100, p, 2);
  }
  function formatUTCFullYear(d, p) {
    return pad(d.getUTCFullYear() % 10000, p, 4);
  }
  function formatUTCZone() {
    return "+0000";
  }
  function formatLiteralPercent() {
    return "%";
  }
  function formatUnixTimestamp(d) {
    return +d;
  }
  function formatUnixTimestampSeconds(d) {
    return Math.floor(+d / 1000);
  }
  function defaultLocale$1(definition) {
    locale$1 = formatLocale$1(definition);
    d3.timeFormat = locale$1.format;
    d3.timeParse = locale$1.parse;
    d3.utcFormat = locale$1.utcFormat;
    d3.utcParse = locale$1.utcParse;
    return locale$1;
  }
  function formatIsoNative(date) {
    return date.toISOString();
  }
  function parseIsoNative(string) {
    var date = new Date(string);
    return isNaN(date) ? null : date;
  }
  function date$1(t) {
    return new Date(t);
  }
  function number$3(t) {
    return t instanceof Date ? +t : +new Date(+t);
  }
  function calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {
    function tickFormat(date$$1) {
      return (second$$1(date$$1) < date$$1 ? formatMillisecond : minute$$1(date$$1) < date$$1 ? formatSecond : hour$$1(date$$1) < date$$1 ? formatMinute : day$$1(date$$1) < date$$1 ? formatHour : month$$1(date$$1) < date$$1 ? week(date$$1) < date$$1 ? formatDay : formatWeek : year$$1(date$$1) < date$$1 ? formatMonth : formatYear)(date$$1);
    }
    function tickInterval(interval, start, stop, step) {
      null == interval && (interval = 10);
      if ("number" === typeof interval) {
        var target = Math.abs(stop - start) / interval, i$jscomp$0 = bisector(function(i) {
          return i[2];
        }).right(tickIntervals, target);
        i$jscomp$0 === tickIntervals.length ? (step = tickStep(start / durationYear, stop / durationYear, interval), interval = year$$1) : i$jscomp$0 ? (i$jscomp$0 = tickIntervals[target / tickIntervals[i$jscomp$0 - 1][2] < tickIntervals[i$jscomp$0][2] / target ? i$jscomp$0 - 1 : i$jscomp$0], step = i$jscomp$0[1], interval = i$jscomp$0[0]) : (step = Math.max(tickStep(start, stop, interval), 1), interval = millisecond$$1);
      }
      return null == step ? interval : interval.every(step);
    }
    var scale = continuous(deinterpolateLinear, interpolateNumber), invert = scale.invert, domain = scale.domain, formatMillisecond = format(".%L"), formatSecond = format(":%S"), formatMinute = format("%I:%M"), formatHour = format("%I %p"), formatDay = format("%a %d"), formatWeek = format("%b %d"), formatMonth = format("%B"), formatYear = format("%Y"), tickIntervals = [[second$$1, 1, 1000], [second$$1, 5, 5E3], [second$$1, 15, 15E3], [second$$1, 30, 3E4], [minute$$1, 1, 6E4], [minute$$1, 5, 3E5], 
    [minute$$1, 15, 9E5], [minute$$1, 30, 18E5], [hour$$1, 1, 36E5], [hour$$1, 3, 108E5], [hour$$1, 6, 216E5], [hour$$1, 12, 432E5], [day$$1, 1, durationDay$1], [day$$1, 2, 2 * durationDay$1], [week, 1, durationWeek$1], [month$$1, 1, durationMonth], [month$$1, 3, 3 * durationMonth], [year$$1, 1, durationYear]];
    scale.invert = function(y) {
      return new Date(invert(y));
    };
    scale.domain = function(_) {
      return arguments.length ? domain(map$2.call(_, number$3)) : domain().map(date$1);
    };
    scale.ticks = function(interval, step) {
      var d = domain(), t0 = d[0], t1 = d[d.length - 1], r = t1 < t0;
      if (r) {
        var t = t0;
        t0 = t1;
        t1 = t;
      }
      t = (t = tickInterval(interval, t0, t1, step)) ? t.range(t0, t1 + 1) : [];
      return r ? t.reverse() : t;
    };
    scale.tickFormat = function(count, specifier) {
      return null == specifier ? tickFormat : format(specifier);
    };
    scale.nice = function(interval, step) {
      var d = domain();
      return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain(nice(d, interval)) : scale;
    };
    scale.copy = function() {
      return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));
    };
    return scale;
  }
  function time() {
    return calendar(year, month, sunday, day, hour, minute, second, millisecond, d3.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);
  }
  function utcTime() {
    return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, d3.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);
  }
  function sequential(interpolator) {
    function scale(x) {
      var t = (x - x0) * k10;
      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);
    }
    var x0 = 0, x1 = 1, k10 = 1, clamp = !1;
    scale.domain = function(_) {
      return arguments.length ? (x0 = +_[0], x1 = +_[1], k10 = x0 === x1 ? 0 : 1 / (x1 - x0), scale) : [x0, x1];
    };
    scale.clamp = function(_) {
      return arguments.length ? (clamp = !!_, scale) : clamp;
    };
    scale.interpolator = function(_) {
      return arguments.length ? (interpolator = _, scale) : interpolator;
    };
    scale.copy = function() {
      return sequential(interpolator).domain([x0, x1]).clamp(clamp);
    };
    return linearish(scale);
  }
  function diverging(interpolator) {
    function scale(x) {
      var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);
      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);
    }
    var x0 = 0, x1 = 0.5, x2 = 1, k10 = 1, k21 = 1, clamp = !1;
    scale.domain = function(_) {
      return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];
    };
    scale.clamp = function(_) {
      return arguments.length ? (clamp = !!_, scale) : clamp;
    };
    scale.interpolator = function(_) {
      return arguments.length ? (interpolator = _, scale) : interpolator;
    };
    scale.copy = function() {
      return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);
    };
    return linearish(scale);
  }
  function colors(specifier) {
    for (var n = specifier.length / 6 | 0, colors = Array(n), i = 0; i < n;) {
      colors[i] = "#" + specifier.slice(6 * i, 6 * ++i);
    }
    return colors;
  }
  function ramp(scheme) {
    return rgbBasis(scheme[scheme.length - 1]);
  }
  function rainbow(t) {
    if (0 > t || 1 < t) {
      t -= Math.floor(t);
    }
    var ts = Math.abs(t - 0.5);
    c.h = 360 * t - 100;
    c.s = 1.5 - 1.5 * ts;
    c.l = 0.8 - 0.9 * ts;
    return c + "";
  }
  function sinebow(t) {
    var x;
    t = (0.5 - t) * Math.PI;
    c$1.r = 255 * (x = Math.sin(t)) * x;
    c$1.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
    c$1.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
    return c$1 + "";
  }
  function ramp$1(range) {
    var n = range.length;
    return function(t) {
      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
    };
  }
  function constant$b(x) {
    return function() {
      return x;
    };
  }
  function asin$1(x) {
    return 1 <= x ? halfPi$3 : -1 >= x ? -halfPi$3 : Math.asin(x);
  }
  function arcInnerRadius(d) {
    return d.innerRadius;
  }
  function arcOuterRadius(d) {
    return d.outerRadius;
  }
  function arcStartAngle(d) {
    return d.startAngle;
  }
  function arcEndAngle(d) {
    return d.endAngle;
  }
  function arcPadAngle(d) {
    return d && d.padAngle;
  }
  function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
    var x01 = x0 - x1, y01 = y0 - y1, lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x11 = x0 + ox, y11 = y0 + oy, x10 = x1 + ox, y10 = y1 + oy, x00 = (x11 + x10) / 2, y00 = (y11 + y10) / 2, dx = x10 - x11, dy = y10 - y11, d2 = dx * dx + dy * dy, r = r1 - rc, D = x11 * y10 - x10 * y11, d = (0 > dy ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / 
    d2, dx0 = cx0 - x00, dy0 = cy0 - y00, dx1 = cx1 - x00, dy1 = cy1 - y00;
    dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1 && (cx0 = cx1, cy0 = cy1);
    return {cx:cx0, cy:cy0, x01:-ox, y01:-oy, x11:cx0 * (r1 / r - 1), y11:cy0 * (r1 / r - 1)};
  }
  function arc() {
    function arc() {
      var buffer, r0 = +innerRadius.apply(this, arguments), r1 = +outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) - halfPi$3, a1 = endAngle.apply(this, arguments) - halfPi$3, da = abs$1(a1 - a0), cw = a1 > a0;
      context || (context = buffer = path$jscomp$0());
      if (r1 < r0) {
        var r = r1;
        r1 = r0;
        r0 = r;
      }
      if (1e-12 < r1) {
        if (da > tau$4 - 1e-12) {
          context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0)), context.arc(0, 0, r1, a0, a1, !cw), 1e-12 < r0 && (context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1)), context.arc(0, 0, r0, a1, a0, cw));
        } else {
          var a01 = a0, a11 = a1, a00 = a0, a10 = a1, da0 = da, da1 = da, ap = padAngle.apply(this, arguments) / 2, rp = 1e-12 < ap && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)), rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)), rc0 = rc, rc1 = rc;
          if (1e-12 < rp) {
            var p0 = asin$1(rp / r0 * sin$2(ap)), p1 = asin$1(rp / r1 * sin$2(ap));
            1e-12 < (da0 -= 2 * p0) ? (p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0) : (da0 = 0, a00 = a10 = (a0 + a1) / 2);
            1e-12 < (da1 -= 2 * p1) ? (p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1) : (da1 = 0, a01 = a11 = (a0 + a1) / 2);
          }
          var x01 = r1 * cos$2(a01), y01 = r1 * sin$2(a01), x10 = r0 * cos$2(a10), y10 = r0 * sin$2(a10);
          if (1e-12 < rc) {
            var x11 = r1 * cos$2(a11), y11 = r1 * sin$2(a11), x00 = r0 * cos$2(a00), y00 = r0 * sin$2(a00);
            if (da < pi$4) {
              if (1e-12 < da0) {
                var x10$jscomp$0 = x00 - x01, y10$jscomp$0 = y00 - y01, x32 = x10 - x11, y32 = y10 - y11, t = (x32 * (y01 - y11) - y32 * (x01 - x11)) / (y32 * x10$jscomp$0 - x32 * y10$jscomp$0);
                var JSCompiler_temp = [x01 + t * x10$jscomp$0, y01 + t * y10$jscomp$0];
              } else {
                JSCompiler_temp = [x10, y10];
              }
              var oc = JSCompiler_temp, ax = x01 - oc[0], ay = y01 - oc[1], bx = x11 - oc[0], by = y11 - oc[1], x = (ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by));
              var JSCompiler_inline_result = 1 < x ? 0 : -1 > x ? pi$4 : Math.acos(x);
              var kc = 1 / sin$2(JSCompiler_inline_result / 2), lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = min$1(rc, (r0 - lc) / (kc - 1));
              rc1 = min$1(rc, (r1 - lc) / (kc + 1));
            }
          }
          if (1e-12 < da1) {
            if (1e-12 < rc1) {
              var t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
              var t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);
              rc1 < rc ? context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw) : (context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw), context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw), context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw));
            } else {
              context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
            }
          } else {
            context.moveTo(x01, y01);
          }
          1e-12 < r0 && 1e-12 < da0 ? 1e-12 < rc0 ? (t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw), t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw), context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01), rc0 < rc ? context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw) : (context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw), context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), 
          cw), context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw))) : context.arc(0, 0, r0, a10, a00, cw) : context.lineTo(x10, y10);
        }
      } else {
        context.moveTo(0, 0);
      }
      context.closePath();
      if (buffer) {
        return context = null, buffer + "" || null;
      }
    }
    var innerRadius = arcInnerRadius, outerRadius = arcOuterRadius, cornerRadius = constant$b(0), padRadius = null, startAngle = arcStartAngle, endAngle = arcEndAngle, padAngle = arcPadAngle, context = null;
    arc.centroid = function() {
      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;
      return [cos$2(a) * r, sin$2(a) * r];
    };
    arc.innerRadius = function(_) {
      return arguments.length ? (innerRadius = "function" === typeof _ ? _ : constant$b(+_), arc) : innerRadius;
    };
    arc.outerRadius = function(_) {
      return arguments.length ? (outerRadius = "function" === typeof _ ? _ : constant$b(+_), arc) : outerRadius;
    };
    arc.cornerRadius = function(_) {
      return arguments.length ? (cornerRadius = "function" === typeof _ ? _ : constant$b(+_), arc) : cornerRadius;
    };
    arc.padRadius = function(_) {
      return arguments.length ? (padRadius = null == _ ? null : "function" === typeof _ ? _ : constant$b(+_), arc) : padRadius;
    };
    arc.startAngle = function(_) {
      return arguments.length ? (startAngle = "function" === typeof _ ? _ : constant$b(+_), arc) : startAngle;
    };
    arc.endAngle = function(_) {
      return arguments.length ? (endAngle = "function" === typeof _ ? _ : constant$b(+_), arc) : endAngle;
    };
    arc.padAngle = function(_) {
      return arguments.length ? (padAngle = "function" === typeof _ ? _ : constant$b(+_), arc) : padAngle;
    };
    arc.context = function(_) {
      return arguments.length ? (context = null == _ ? null : _, arc) : context;
    };
    return arc;
  }
  function Linear(context) {
    this._context = context;
  }
  function curveLinear(context) {
    return new Linear(context);
  }
  function x$3(p) {
    return p[0];
  }
  function y$3(p) {
    return p[1];
  }
  function line() {
    function line(data) {
      var i, n = data.length, d, defined0 = !1, buffer;
      null == context && (output = curve(buffer = path$jscomp$0()));
      for (i = 0; i <= n; ++i) {
        !(i < n && defined(d = data[i], i, data)) === defined0 && ((defined0 = !defined0) ? output.lineStart() : output.lineEnd()), defined0 && output.point(+x$$1(d, i, data), +y$$1(d, i, data));
      }
      if (buffer) {
        return output = null, buffer + "" || null;
      }
    }
    var x$$1 = x$3, y$$1 = y$3, defined = constant$b(!0), context = null, curve = curveLinear, output = null;
    line.x = function(_) {
      return arguments.length ? (x$$1 = "function" === typeof _ ? _ : constant$b(+_), line) : x$$1;
    };
    line.y = function(_) {
      return arguments.length ? (y$$1 = "function" === typeof _ ? _ : constant$b(+_), line) : y$$1;
    };
    line.defined = function(_) {
      return arguments.length ? (defined = "function" === typeof _ ? _ : constant$b(!!_), line) : defined;
    };
    line.curve = function(_) {
      return arguments.length ? (curve = _, null != context && (output = curve(context)), line) : curve;
    };
    line.context = function(_) {
      return arguments.length ? (null == _ ? context = output = null : output = curve(context = _), line) : context;
    };
    return line;
  }
  function area$3() {
    function area(data) {
      var i, k, n = data.length, d, defined0 = !1, buffer, x0z = Array(n), y0z = Array(n);
      null == context && (output = curve(buffer = path$jscomp$0()));
      for (i = 0; i <= n; ++i) {
        if (!(i < n && defined(d = data[i], i, data)) === defined0) {
          if (defined0 = !defined0) {
            var j = i;
            output.areaStart();
            output.lineStart();
          } else {
            output.lineEnd();
            output.lineStart();
            for (k = i - 1; k >= j; --k) {
              output.point(x0z[k], y0z[k]);
            }
            output.lineEnd();
            output.areaEnd();
          }
        }
        defined0 && (x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data), output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]));
      }
      if (buffer) {
        return output = null, buffer + "" || null;
      }
    }
    function arealine() {
      return line().defined(defined).curve(curve).context(context);
    }
    var x0 = x$3, x1 = null, y0 = constant$b(0), y1 = y$3, defined = constant$b(!0), context = null, curve = curveLinear, output = null;
    area.x = function(_) {
      return arguments.length ? (x0 = "function" === typeof _ ? _ : constant$b(+_), x1 = null, area) : x0;
    };
    area.x0 = function(_) {
      return arguments.length ? (x0 = "function" === typeof _ ? _ : constant$b(+_), area) : x0;
    };
    area.x1 = function(_) {
      return arguments.length ? (x1 = null == _ ? null : "function" === typeof _ ? _ : constant$b(+_), area) : x1;
    };
    area.y = function(_) {
      return arguments.length ? (y0 = "function" === typeof _ ? _ : constant$b(+_), y1 = null, area) : y0;
    };
    area.y0 = function(_) {
      return arguments.length ? (y0 = "function" === typeof _ ? _ : constant$b(+_), area) : y0;
    };
    area.y1 = function(_) {
      return arguments.length ? (y1 = null == _ ? null : "function" === typeof _ ? _ : constant$b(+_), area) : y1;
    };
    area.lineX0 = area.lineY0 = function() {
      return arealine().x(x0).y(y0);
    };
    area.lineY1 = function() {
      return arealine().x(x0).y(y1);
    };
    area.lineX1 = function() {
      return arealine().x(x1).y(y0);
    };
    area.defined = function(_) {
      return arguments.length ? (defined = "function" === typeof _ ? _ : constant$b(!!_), area) : defined;
    };
    area.curve = function(_) {
      return arguments.length ? (curve = _, null != context && (output = curve(context)), area) : curve;
    };
    area.context = function(_) {
      return arguments.length ? (null == _ ? context = output = null : output = curve(context = _), area) : context;
    };
    return area;
  }
  function descending$1(a, b) {
    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
  }
  function identity$7(d) {
    return d;
  }
  function pie() {
    function pie(data) {
      var i$jscomp$0, n = data.length, k, sum = 0, index = Array(n), arcs = Array(n), a0 = +startAngle.apply(this, arguments), da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)), p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)), pa = p * (0 > da ? -1 : 1), v;
      for (i$jscomp$0 = 0; i$jscomp$0 < n; ++i$jscomp$0) {
        0 < (v = arcs[index[i$jscomp$0] = i$jscomp$0] = +value(data[i$jscomp$0], i$jscomp$0, data)) && (sum += v);
      }
      null != sortValues ? index.sort(function(i, j) {
        return sortValues(arcs[i], arcs[j]);
      }) : null != sort && index.sort(function(i, j) {
        return sort(data[i], data[j]);
      });
      i$jscomp$0 = 0;
      for (k = sum ? (da - n * pa) / sum : 0; i$jscomp$0 < n; ++i$jscomp$0, a0 = a1) {
        var j$jscomp$0 = index[i$jscomp$0];
        v = arcs[j$jscomp$0];
        var a1 = a0 + (0 < v ? v * k : 0) + pa;
        arcs[j$jscomp$0] = {data:data[j$jscomp$0], index:i$jscomp$0, value:v, startAngle:a0, endAngle:a1, padAngle:p};
      }
      return arcs;
    }
    var value = identity$7, sortValues = descending$1, sort = null, startAngle = constant$b(0), endAngle = constant$b(tau$4), padAngle = constant$b(0);
    pie.value = function(_) {
      return arguments.length ? (value = "function" === typeof _ ? _ : constant$b(+_), pie) : value;
    };
    pie.sortValues = function(_) {
      return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
    };
    pie.sort = function(_) {
      return arguments.length ? (sort = _, sortValues = null, pie) : sort;
    };
    pie.startAngle = function(_) {
      return arguments.length ? (startAngle = "function" === typeof _ ? _ : constant$b(+_), pie) : startAngle;
    };
    pie.endAngle = function(_) {
      return arguments.length ? (endAngle = "function" === typeof _ ? _ : constant$b(+_), pie) : endAngle;
    };
    pie.padAngle = function(_) {
      return arguments.length ? (padAngle = "function" === typeof _ ? _ : constant$b(+_), pie) : padAngle;
    };
    return pie;
  }
  function Radial(curve) {
    this._curve = curve;
  }
  function curveRadial(curve) {
    function radial(context) {
      return new Radial(curve(context));
    }
    radial._curve = curve;
    return radial;
  }
  function lineRadial(l) {
    var c = l.curve;
    l.angle = l.x;
    delete l.x;
    l.radius = l.y;
    delete l.y;
    l.curve = function(_) {
      return arguments.length ? c(curveRadial(_)) : c()._curve;
    };
    return l;
  }
  function lineRadial$1() {
    return lineRadial(line().curve(curveRadialLinear));
  }
  function areaRadial() {
    var a = area$3().curve(curveRadialLinear), c = a.curve, x0 = a.lineX0, x1 = a.lineX1, y0 = a.lineY0, y1 = a.lineY1;
    a.angle = a.x;
    delete a.x;
    a.startAngle = a.x0;
    delete a.x0;
    a.endAngle = a.x1;
    delete a.x1;
    a.radius = a.y;
    delete a.y;
    a.innerRadius = a.y0;
    delete a.y0;
    a.outerRadius = a.y1;
    delete a.y1;
    a.lineStartAngle = function() {
      return lineRadial(x0());
    };
    delete a.lineX0;
    a.lineEndAngle = function() {
      return lineRadial(x1());
    };
    delete a.lineX1;
    a.lineInnerRadius = function() {
      return lineRadial(y0());
    };
    delete a.lineY0;
    a.lineOuterRadius = function() {
      return lineRadial(y1());
    };
    delete a.lineY1;
    a.curve = function(_) {
      return arguments.length ? c(curveRadial(_)) : c()._curve;
    };
    return a;
  }
  function pointRadial(x, y) {
    return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
  }
  function linkSource(d) {
    return d.source;
  }
  function linkTarget(d) {
    return d.target;
  }
  function link$2(curve) {
    function link() {
      var buffer, argv = slice$6.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);
      context || (context = buffer = path$jscomp$0());
      curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));
      if (buffer) {
        return context = null, buffer + "" || null;
      }
    }
    var source = linkSource, target = linkTarget, x$$1 = x$3, y$$1 = y$3, context = null;
    link.source = function(_) {
      return arguments.length ? (source = _, link) : source;
    };
    link.target = function(_) {
      return arguments.length ? (target = _, link) : target;
    };
    link.x = function(_) {
      return arguments.length ? (x$$1 = "function" === typeof _ ? _ : constant$b(+_), link) : x$$1;
    };
    link.y = function(_) {
      return arguments.length ? (y$$1 = "function" === typeof _ ? _ : constant$b(+_), link) : y$$1;
    };
    link.context = function(_) {
      return arguments.length ? (context = null == _ ? null : _, link) : context;
    };
    return link;
  }
  function curveHorizontal(context, x0, y0, x1, y1) {
    context.moveTo(x0, y0);
    context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
  }
  function curveVertical(context, x0, y0, x1, y1) {
    context.moveTo(x0, y0);
    context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
  }
  function curveRadial$1(context, x0, y0, x1, y1) {
    var p0 = pointRadial(x0, y0), p1 = pointRadial(x0, y0 = (y0 + y1) / 2), p2 = pointRadial(x1, y0), p3 = pointRadial(x1, y1);
    context.moveTo(p0[0], p0[1]);
    context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
  }
  function linkHorizontal() {
    return link$2(curveHorizontal);
  }
  function linkVertical() {
    return link$2(curveVertical);
  }
  function linkRadial() {
    var l = link$2(curveRadial$1);
    l.angle = l.x;
    delete l.x;
    l.radius = l.y;
    delete l.y;
    return l;
  }
  function symbol$jscomp$0() {
    function symbol() {
      var buffer;
      context || (context = buffer = path$jscomp$0());
      type.apply(this, arguments).draw(context, +size.apply(this, arguments));
      if (buffer) {
        return context = null, buffer + "" || null;
      }
    }
    var type = constant$b(circle$2), size = constant$b(64), context = null;
    symbol.type = function(_) {
      return arguments.length ? (type = "function" === typeof _ ? _ : constant$b(_), symbol) : type;
    };
    symbol.size = function(_) {
      return arguments.length ? (size = "function" === typeof _ ? _ : constant$b(+_), symbol) : size;
    };
    symbol.context = function(_) {
      return arguments.length ? (context = null == _ ? null : _, symbol) : context;
    };
    return symbol;
  }
  function noop$3() {
  }
  function point$2(that, x, y) {
    that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
  }
  function Basis(context) {
    this._context = context;
  }
  function basis$2(context) {
    return new Basis(context);
  }
  function BasisClosed(context) {
    this._context = context;
  }
  function basisClosed$1(context) {
    return new BasisClosed(context);
  }
  function BasisOpen(context) {
    this._context = context;
  }
  function basisOpen(context) {
    return new BasisOpen(context);
  }
  function Bundle(context, beta) {
    this._basis = new Basis(context);
    this._beta = beta;
  }
  function point$3(that, x, y) {
    that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
  }
  function Cardinal(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
  }
  function CardinalClosed(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
  }
  function CardinalOpen(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
  }
  function point$4(that, x, y) {
    var x1 = that._x1, y1 = that._y1, x2 = that._x2, y2 = that._y2;
    if (1e-12 < that._l01_a) {
      var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n = 3 * that._l01_a * (that._l01_a + that._l12_a);
      x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
      y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
    }
    if (1e-12 < that._l23_a) {
      var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m = 3 * that._l23_a * (that._l23_a + that._l12_a);
      x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
      y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
    }
    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
  }
  function CatmullRom(context, alpha) {
    this._context = context;
    this._alpha = alpha;
  }
  function CatmullRomClosed(context, alpha) {
    this._context = context;
    this._alpha = alpha;
  }
  function CatmullRomOpen(context, alpha) {
    this._context = context;
    this._alpha = alpha;
  }
  function LinearClosed(context) {
    this._context = context;
  }
  function linearClosed(context) {
    return new LinearClosed(context);
  }
  function slope3(that, x2, y2) {
    var h0 = that._x1 - that._x0, h1 = x2 - that._x1, s0 = (that._y1 - that._y0) / (h0 || 0 > h1 && -0), s1 = (y2 - that._y1) / (h1 || 0 > h0 && -0), p = (s0 * h1 + s1 * h0) / (h0 + h1);
    return ((0 > s0 ? -1 : 1) + (0 > s1 ? -1 : 1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
  }
  function slope2(that, t) {
    var h = that._x1 - that._x0;
    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
  }
  function point$5(that, t0, t1) {
    var x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 3;
    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
  }
  function MonotoneX(context) {
    this._context = context;
  }
  function MonotoneY(context) {
    this._context = new ReflectContext(context);
  }
  function ReflectContext(context) {
    this._context = context;
  }
  function monotoneX(context) {
    return new MonotoneX(context);
  }
  function monotoneY(context) {
    return new MonotoneY(context);
  }
  function Natural(context) {
    this._context = context;
  }
  function controlPoints(x) {
    var i, n = x.length - 1, a = Array(n), b = Array(n), r = Array(n);
    a[0] = 0;
    b[0] = 2;
    r[0] = x[0] + 2 * x[1];
    for (i = 1; i < n - 1; ++i) {
      a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
    }
    a[n - 1] = 2;
    b[n - 1] = 7;
    r[n - 1] = 8 * x[n - 1] + x[n];
    for (i = 1; i < n; ++i) {
      var m = a[i] / b[i - 1];
      b[i] -= m;
      r[i] -= m * r[i - 1];
    }
    a[n - 1] = r[n - 1] / b[n - 1];
    for (i = n - 2; 0 <= i; --i) {
      a[i] = (r[i] - a[i + 1]) / b[i];
    }
    b[n - 1] = (x[n] + a[n - 1]) / 2;
    for (i = 0; i < n - 1; ++i) {
      b[i] = 2 * x[i + 1] - a[i + 1];
    }
    return [a, b];
  }
  function natural(context) {
    return new Natural(context);
  }
  function Step(context, t) {
    this._context = context;
    this._t = t;
  }
  function step(context) {
    return new Step(context, 0.5);
  }
  function stepBefore(context) {
    return new Step(context, 0);
  }
  function stepAfter(context) {
    return new Step(context, 1);
  }
  function none$1(series, order) {
    if (1 < (n = series.length)) {
      for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
        for (s0 = s1, s1 = series[order[i]], j = 0; j < m; ++j) {
          s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
        }
      }
    }
  }
  function none$2(series) {
    for (var n = series.length, o = Array(n); 0 <= --n;) {
      o[n] = n;
    }
    return o;
  }
  function stackValue(d, key) {
    return d[key];
  }
  function stack() {
    function stack(data) {
      var kz = keys.apply(this, arguments), i, m = data.length, n = kz.length, sz = Array(n), oz;
      for (i = 0; i < n; ++i) {
        for (var ki = kz[i], si = sz[i] = Array(m), j = 0, sij; j < m; ++j) {
          si[j] = sij = [0, +value(data[j], ki, j, data)], sij.data = data[j];
        }
        si.key = ki;
      }
      i = 0;
      for (oz = order(sz); i < n; ++i) {
        sz[oz[i]].index = i;
      }
      offset(sz, oz);
      return sz;
    }
    var keys = constant$b([]), order = none$2, offset = none$1, value = stackValue;
    stack.keys = function(_) {
      return arguments.length ? (keys = "function" === typeof _ ? _ : constant$b(slice$6.call(_)), stack) : keys;
    };
    stack.value = function(_) {
      return arguments.length ? (value = "function" === typeof _ ? _ : constant$b(+_), stack) : value;
    };
    stack.order = function(_) {
      return arguments.length ? (order = null == _ ? none$2 : "function" === typeof _ ? _ : constant$b(slice$6.call(_)), stack) : order;
    };
    stack.offset = function(_) {
      return arguments.length ? (offset = null == _ ? none$1 : _, stack) : offset;
    };
    return stack;
  }
  function expand(series, order) {
    if (0 < (n = series.length)) {
      for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
        for (y = i = 0; i < n; ++i) {
          y += series[i][j][1] || 0;
        }
        if (y) {
          for (i = 0; i < n; ++i) {
            series[i][j][1] /= y;
          }
        }
      }
      none$1(series, order);
    }
  }
  function diverging$1(series, order) {
    if (1 < (n = series.length)) {
      for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
        for (i = yp = yn = 0; i < n; ++i) {
          0 <= (dy = (d = series[order[i]][j])[1] - d[0]) ? (d[0] = yp, d[1] = yp += dy) : 0 > dy ? (d[1] = yn, d[0] = yn += dy) : d[0] = yp;
        }
      }
    }
  }
  function silhouette(series, order) {
    if (0 < (n = series.length)) {
      for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
        for (var i = 0, y = 0; i < n; ++i) {
          y += series[i][j][1] || 0;
        }
        s0[j][1] += s0[j][0] = -y / 2;
      }
      none$1(series, order);
    }
  }
  function wiggle(series, order) {
    if (0 < (n = series.length) && 0 < (m = (s0 = series[order[0]]).length)) {
      for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
        for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
          for (var si = series[order[i]], sij0 = si[j][1] || 0, sij1 = si[j - 1][1] || 0, s3 = (sij0 - sij1) / 2, k = 0; k < i; ++k) {
            var sk = series[order[k]], skj0 = sk[j][1] || 0, skj1 = sk[j - 1][1] || 0;
            s3 += skj0 - skj1;
          }
          s1 += sij0;
          s2 += s3 * sij0;
        }
        s0[j - 1][1] += s0[j - 1][0] = y;
        s1 && (y -= s2 / s1);
      }
      s0[j - 1][1] += s0[j - 1][0] = y;
      none$1(series, order);
    }
  }
  function ascending$3(series) {
    var sums = series.map(sum$2);
    return none$2(series).sort(function(a, b) {
      return sums[a] - sums[b];
    });
  }
  function sum$2(series) {
    for (var s = 0, i = -1, n = series.length, v; ++i < n;) {
      if (v = +series[i][1]) {
        s += v;
      }
    }
    return s;
  }
  function descending$2(series) {
    return ascending$3(series).reverse();
  }
  function insideOut(series) {
    var n = series.length, i, sums = series.map(sum$2), order = none$2(series).sort(function(a, b) {
      return sums[b] - sums[a];
    }), top = 0, bottom = 0, tops = [], bottoms = [];
    for (i = 0; i < n; ++i) {
      var j = order[i];
      top < bottom ? (top += sums[j], tops.push(j)) : (bottom += sums[j], bottoms.push(j));
    }
    return bottoms.reverse().concat(tops);
  }
  function reverse(series) {
    return none$2(series).reverse();
  }
  function constant$c(x) {
    return function() {
      return x;
    };
  }
  function x$4(d) {
    return d[0];
  }
  function y$4(d) {
    return d[1];
  }
  function RedBlackTree() {
    this._ = null;
  }
  function RedBlackNode(node) {
    node.U = node.C = node.L = node.R = node.P = node.N = null;
  }
  function RedBlackRotateLeft(tree, node) {
    var p = node, q = node.R, parent = p.U;
    parent ? parent.L === p ? parent.L = q : parent.R = q : tree._ = q;
    q.U = parent;
    p.U = q;
    p.R = q.L;
    p.R && (p.R.U = p);
    q.L = p;
  }
  function RedBlackRotateRight(tree, node) {
    var p = node, q = node.L, parent = p.U;
    parent ? parent.L === p ? parent.L = q : parent.R = q : tree._ = q;
    q.U = parent;
    p.U = q;
    p.L = q.R;
    p.L && (p.L.U = p);
    q.R = p;
  }
  function RedBlackFirst(node) {
    for (; node.L;) {
      node = node.L;
    }
    return node;
  }
  function createEdge(left, right, v0, v1) {
    var edge = [null, null], index = edges.push(edge) - 1;
    edge.left = left;
    edge.right = right;
    v0 && setEdgeEnd(edge, left, right, v0);
    v1 && setEdgeEnd(edge, right, left, v1);
    cells[left.index].halfedges.push(index);
    cells[right.index].halfedges.push(index);
    return edge;
  }
  function createBorderEdge(left, v0, v1) {
    var edge = [v0, v1];
    edge.left = left;
    return edge;
  }
  function setEdgeEnd(edge, left, right, vertex) {
    edge[0] || edge[1] ? edge.left === right ? edge[1] = vertex : edge[0] = vertex : (edge[0] = vertex, edge.left = left, edge.right = right);
  }
  function clipEdge(edge, x0, y0, x1, y1) {
    var a = edge[0], b = edge[1], ax = a[0], ay = a[1], bx = b[0], by = b[1], t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay;
    var r = x0 - ax;
    if (dx || !(0 < r)) {
      r /= dx;
      if (0 > dx) {
        if (r < t0) {
          return;
        }
        r < t1 && (t1 = r);
      } else {
        if (0 < dx) {
          if (r > t1) {
            return;
          }
          r > t0 && (t0 = r);
        }
      }
      r = x1 - ax;
      if (dx || !(0 > r)) {
        r /= dx;
        if (0 > dx) {
          if (r > t1) {
            return;
          }
          r > t0 && (t0 = r);
        } else {
          if (0 < dx) {
            if (r < t0) {
              return;
            }
            r < t1 && (t1 = r);
          }
        }
        r = y0 - ay;
        if (dy || !(0 < r)) {
          r /= dy;
          if (0 > dy) {
            if (r < t0) {
              return;
            }
            r < t1 && (t1 = r);
          } else {
            if (0 < dy) {
              if (r > t1) {
                return;
              }
              r > t0 && (t0 = r);
            }
          }
          r = y1 - ay;
          if (dy || !(0 > r)) {
            r /= dy;
            if (0 > dy) {
              if (r > t1) {
                return;
              }
              r > t0 && (t0 = r);
            } else {
              if (0 < dy) {
                if (r < t0) {
                  return;
                }
                r < t1 && (t1 = r);
              }
            }
            if (!(0 < t0 || 1 > t1)) {
              return !0;
            }
            0 < t0 && (edge[0] = [ax + t0 * dx, ay + t0 * dy]);
            1 > t1 && (edge[1] = [ax + t1 * dx, ay + t1 * dy]);
            return !0;
          }
        }
      }
    }
  }
  function connectEdge(edge, x0, y0, x1, y1) {
    var v1 = edge[1];
    if (v1) {
      return !0;
    }
    var v0 = edge[0], left = edge.left, right = edge.right, lx = left[0], ly = left[1], rx = right[0], ry = right[1], fx = (lx + rx) / 2, fy = (ly + ry) / 2;
    if (ry === ly) {
      if (fx < x0 || fx >= x1) {
        return;
      }
      if (lx > rx) {
        if (!v0) {
          v0 = [fx, y0];
        } else {
          if (v0[1] >= y1) {
            return;
          }
        }
        v1 = [fx, y1];
      } else {
        if (!v0) {
          v0 = [fx, y1];
        } else {
          if (v0[1] < y0) {
            return;
          }
        }
        v1 = [fx, y0];
      }
    } else {
      var fm = (lx - rx) / (ry - ly);
      var fb = fy - fm * fx;
      if (-1 > fm || 1 < fm) {
        if (lx > rx) {
          if (!v0) {
            v0 = [(y0 - fb) / fm, y0];
          } else {
            if (v0[1] >= y1) {
              return;
            }
          }
          v1 = [(y1 - fb) / fm, y1];
        } else {
          if (!v0) {
            v0 = [(y1 - fb) / fm, y1];
          } else {
            if (v0[1] < y0) {
              return;
            }
          }
          v1 = [(y0 - fb) / fm, y0];
        }
      } else {
        if (ly < ry) {
          if (!v0) {
            v0 = [x0, fm * x0 + fb];
          } else {
            if (v0[0] >= x1) {
              return;
            }
          }
          v1 = [x1, fm * x1 + fb];
        } else {
          if (!v0) {
            v0 = [x1, fm * x1 + fb];
          } else {
            if (v0[0] < x0) {
              return;
            }
          }
          v1 = [x0, fm * x0 + fb];
        }
      }
    }
    edge[0] = v0;
    edge[1] = v1;
    return !0;
  }
  function cellHalfedgeAngle(cell, edge) {
    var site = cell.site, va = edge.left, vb = edge.right;
    site === vb && (vb = va, va = site);
    if (vb) {
      return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
    }
    site === va ? (va = edge[1], vb = edge[0]) : (va = edge[0], vb = edge[1]);
    return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
  }
  function cellHalfedgeStart(cell, edge) {
    return edge[+(edge.left !== cell.site)];
  }
  function sortCellHalfedges() {
    for (var i$jscomp$0 = 0, n = cells.length, cell, halfedges, j$jscomp$0, m; i$jscomp$0 < n; ++i$jscomp$0) {
      if ((cell = cells[i$jscomp$0]) && (m = (halfedges = cell.halfedges).length)) {
        var index = Array(m), array = Array(m);
        for (j$jscomp$0 = 0; j$jscomp$0 < m; ++j$jscomp$0) {
          index[j$jscomp$0] = j$jscomp$0, array[j$jscomp$0] = cellHalfedgeAngle(cell, edges[halfedges[j$jscomp$0]]);
        }
        index.sort(function(i, j) {
          return array[j] - array[i];
        });
        for (j$jscomp$0 = 0; j$jscomp$0 < m; ++j$jscomp$0) {
          array[j$jscomp$0] = halfedges[index[j$jscomp$0]];
        }
        for (j$jscomp$0 = 0; j$jscomp$0 < m; ++j$jscomp$0) {
          halfedges[j$jscomp$0] = array[j$jscomp$0];
        }
      }
    }
  }
  function Circle() {
    RedBlackNode(this);
    this.x = this.y = this.arc = this.site = this.cy = null;
  }
  function attachCircle(arc) {
    var lArc = arc.P, rArc = arc.N;
    if (lArc && rArc) {
      var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
      if (lSite !== rSite) {
        var bx = cSite[0], by = cSite[1], ax = lSite[0] - bx, ay = lSite[1] - by, cx = rSite[0] - bx, cy = rSite[1] - by, d = 2 * (ax * cy - ay * cx);
        if (!(d >= -epsilon2$2)) {
          var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, circle = circlePool.pop() || new Circle;
          circle.arc = arc;
          circle.site = cSite;
          circle.x = x + bx;
          circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y);
          arc.circle = circle;
          for (var before = null, node = circles._; node;) {
            if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
              if (node.L) {
                node = node.L;
              } else {
                before = node.P;
                break;
              }
            } else {
              if (node.R) {
                node = node.R;
              } else {
                before = node;
                break;
              }
            }
          }
          circles.insert(before, circle);
          before || (firstCircle = circle);
        }
      }
    }
  }
  function detachCircle(arc) {
    var circle = arc.circle;
    circle && (circle.P || (firstCircle = circle.N), circles.remove(circle), circlePool.push(circle), RedBlackNode(circle), arc.circle = null);
  }
  function Beach() {
    RedBlackNode(this);
    this.edge = this.site = this.circle = null;
  }
  function createBeach(site) {
    var beach = beachPool.pop() || new Beach;
    beach.site = site;
    return beach;
  }
  function detachBeach(beach) {
    detachCircle(beach);
    beaches.remove(beach);
    beachPool.push(beach);
    RedBlackNode(beach);
  }
  function leftBreakPoint(arc, directrix) {
    var site = arc.site, rfocx = site[0], rfocy = site[1], pby2 = rfocy - directrix;
    if (!pby2) {
      return rfocx;
    }
    var lArc = arc.P;
    if (!lArc) {
      return -Infinity;
    }
    site = lArc.site;
    var lfocx = site[0], lfocy = site[1], plby2 = lfocy - directrix;
    if (!plby2) {
      return lfocx;
    }
    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
    return aby2 ? (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx : (rfocx + lfocx) / 2;
  }
  function lexicographic(a, b) {
    return b[1] - a[1] || b[0] - a[0];
  }
  function Diagram(sites, extent) {
    var site = sites.sort(lexicographic).pop();
    edges = [];
    cells = Array(sites.length);
    beaches = new RedBlackTree;
    for (circles = new RedBlackTree;;) {
      var circle = firstCircle;
      if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {
        if (site[0] !== x$jscomp$0 || site[1] !== y) {
          for (var dxr, dxl, rArc = void 0, lArc = void 0, site$jscomp$0 = site, x = site$jscomp$0[0], directrix = site$jscomp$0[1], node = beaches._; node;) {
            if (dxl = leftBreakPoint(node, directrix) - x, dxl > epsilon$4) {
              node = node.L;
            } else {
              var arc = node, directrix$jscomp$0 = directrix, rArc$jscomp$0 = arc.N;
              if (rArc$jscomp$0) {
                var JSCompiler_inline_result = leftBreakPoint(rArc$jscomp$0, directrix$jscomp$0);
              } else {
                var site$jscomp$1 = arc.site;
                JSCompiler_inline_result = site$jscomp$1[1] === directrix$jscomp$0 ? site$jscomp$1[0] : Infinity;
              }
              dxr = x - JSCompiler_inline_result;
              if (dxr > epsilon$4) {
                if (!node.R) {
                  lArc = node;
                  break;
                }
                node = node.R;
              } else {
                dxl > -epsilon$4 ? (lArc = node.P, rArc = node) : dxr > -epsilon$4 ? (lArc = node, rArc = node.N) : lArc = rArc = node;
                break;
              }
            }
          }
          cells[site$jscomp$0.index] = {site:site$jscomp$0, halfedges:[]};
          var newArc = createBeach(site$jscomp$0);
          beaches.insert(lArc, newArc);
          if (lArc || rArc) {
            if (lArc === rArc) {
              detachCircle(lArc), rArc = createBeach(lArc.site), beaches.insert(newArc, rArc), newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site), attachCircle(lArc), attachCircle(rArc);
            } else {
              if (rArc) {
                detachCircle(lArc);
                detachCircle(rArc);
                var lSite = lArc.site, ax = lSite[0], ay = lSite[1], bx = site$jscomp$0[0] - ax, by = site$jscomp$0[1] - ay, rSite = rArc.site, cx = rSite[0] - ax, cy = rSite[1] - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];
                setEdgeEnd(rArc.edge, lSite, rSite, vertex);
                newArc.edge = createEdge(lSite, site$jscomp$0, null, vertex);
                rArc.edge = createEdge(site$jscomp$0, rSite, null, vertex);
                attachCircle(lArc);
                attachCircle(rArc);
              } else {
                newArc.edge = createEdge(lArc.site, newArc.site);
              }
            }
          }
          var x$jscomp$0 = site[0];
          var y = site[1];
        }
        site = sites.pop();
      } else {
        if (circle) {
          var iArc, beach = circle.arc, circle$jscomp$0 = beach.circle, x$jscomp$1 = circle$jscomp$0.x, y$jscomp$0 = circle$jscomp$0.cy, vertex$jscomp$0 = [x$jscomp$1, y$jscomp$0], previous = beach.P, next = beach.N, disappearing = [beach];
          detachBeach(beach);
          for (var lArc$jscomp$0 = previous; lArc$jscomp$0.circle && Math.abs(x$jscomp$1 - lArc$jscomp$0.circle.x) < epsilon$4 && Math.abs(y$jscomp$0 - lArc$jscomp$0.circle.cy) < epsilon$4;) {
            previous = lArc$jscomp$0.P, disappearing.unshift(lArc$jscomp$0), detachBeach(lArc$jscomp$0), lArc$jscomp$0 = previous;
          }
          disappearing.unshift(lArc$jscomp$0);
          detachCircle(lArc$jscomp$0);
          for (var rArc$jscomp$1 = next; rArc$jscomp$1.circle && Math.abs(x$jscomp$1 - rArc$jscomp$1.circle.x) < epsilon$4 && Math.abs(y$jscomp$0 - rArc$jscomp$1.circle.cy) < epsilon$4;) {
            next = rArc$jscomp$1.N, disappearing.push(rArc$jscomp$1), detachBeach(rArc$jscomp$1), rArc$jscomp$1 = next;
          }
          disappearing.push(rArc$jscomp$1);
          detachCircle(rArc$jscomp$1);
          var nArcs = disappearing.length;
          for (iArc = 1; iArc < nArcs; ++iArc) {
            rArc$jscomp$1 = disappearing[iArc], lArc$jscomp$0 = disappearing[iArc - 1], setEdgeEnd(rArc$jscomp$1.edge, lArc$jscomp$0.site, rArc$jscomp$1.site, vertex$jscomp$0);
          }
          lArc$jscomp$0 = disappearing[0];
          rArc$jscomp$1 = disappearing[nArcs - 1];
          rArc$jscomp$1.edge = createEdge(lArc$jscomp$0.site, rArc$jscomp$1.site, null, vertex$jscomp$0);
          attachCircle(lArc$jscomp$0);
          attachCircle(rArc$jscomp$1);
        } else {
          break;
        }
      }
    }
    sortCellHalfedges();
    if (extent) {
      for (var x0 = +extent[0][0], y0 = +extent[0][1], x1 = +extent[1][0], y1 = +extent[1][1], x0$jscomp$0 = x0, y0$jscomp$0 = y0, x1$jscomp$0 = x1, y1$jscomp$0 = y1, i = edges.length, edge; i--;) {
        connectEdge(edge = edges[i], x0$jscomp$0, y0$jscomp$0, x1$jscomp$0, y1$jscomp$0) && clipEdge(edge, x0$jscomp$0, y0$jscomp$0, x1$jscomp$0, y1$jscomp$0) && (Math.abs(edge[0][0] - edge[1][0]) > epsilon$4 || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4) || delete edges[i];
      }
      var x0$jscomp$1 = x0, y0$jscomp$1 = y0, x1$jscomp$1 = x1, y1$jscomp$1 = y1, nCells = cells.length, iCell, cell, iHalfedge, nHalfedges, cover = !0;
      for (iCell = 0; iCell < nCells; ++iCell) {
        if (cell = cells[iCell]) {
          var site$jscomp$2 = cell.site;
          var halfedges = cell.halfedges;
          for (iHalfedge = halfedges.length; iHalfedge--;) {
            edges[halfedges[iHalfedge]] || halfedges.splice(iHalfedge, 1);
          }
          iHalfedge = 0;
          for (nHalfedges = halfedges.length; iHalfedge < nHalfedges;) {
            var edge$jscomp$0 = edges[halfedges[iHalfedge]];
            var end = edge$jscomp$0[+(edge$jscomp$0.left === cell.site)];
            var endX = end[0];
            var endY = end[1];
            var start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]);
            var startX = start[0];
            var startY = start[1];
            if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {
              halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site$jscomp$2, end, Math.abs(endX - x0$jscomp$1) < epsilon$4 && y1$jscomp$1 - endY > epsilon$4 ? [x0$jscomp$1, Math.abs(startX - x0$jscomp$1) < epsilon$4 ? startY : y1$jscomp$1] : Math.abs(endY - y1$jscomp$1) < epsilon$4 && x1$jscomp$1 - endX > epsilon$4 ? [Math.abs(startY - y1$jscomp$1) < epsilon$4 ? startX : x1$jscomp$1, y1$jscomp$1] : Math.abs(endX - x1$jscomp$1) < epsilon$4 && endY - y0$jscomp$1 > epsilon$4 ? [x1$jscomp$1, 
              Math.abs(startX - x1$jscomp$1) < epsilon$4 ? startY : y0$jscomp$1] : Math.abs(endY - y0$jscomp$1) < epsilon$4 && endX - x0$jscomp$1 > epsilon$4 ? [Math.abs(startY - y0$jscomp$1) < epsilon$4 ? startX : x0$jscomp$1, y0$jscomp$1] : null)) - 1), ++nHalfedges;
            }
          }
          nHalfedges && (cover = !1);
        }
      }
      if (cover) {
        var dc = Infinity;
        iCell = 0;
        for (cover = null; iCell < nCells; ++iCell) {
          if (cell = cells[iCell]) {
            site$jscomp$2 = cell.site;
            var dx = site$jscomp$2[0] - x0$jscomp$1;
            var dy = site$jscomp$2[1] - y0$jscomp$1;
            var d2 = dx * dx + dy * dy;
            d2 < dc && (dc = d2, cover = cell);
          }
        }
        if (cover) {
          var v00 = [x0$jscomp$1, y0$jscomp$1], v01 = [x0$jscomp$1, y1$jscomp$1], v11 = [x1$jscomp$1, y1$jscomp$1], v10 = [x1$jscomp$1, y0$jscomp$1];
          cover.halfedges.push(edges.push(createBorderEdge(site$jscomp$2 = cover.site, v00, v01)) - 1, edges.push(createBorderEdge(site$jscomp$2, v01, v11)) - 1, edges.push(createBorderEdge(site$jscomp$2, v11, v10)) - 1, edges.push(createBorderEdge(site$jscomp$2, v10, v00)) - 1);
        }
      }
      for (iCell = 0; iCell < nCells; ++iCell) {
        if (cell = cells[iCell]) {
          cell.halfedges.length || delete cells[iCell];
        }
      }
    }
    this.edges = edges;
    this.cells = cells;
    beaches = circles = edges = cells = null;
  }
  function voronoi() {
    function voronoi(data) {
      return new Diagram(data.map(function(d, i) {
        var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];
        s.index = i;
        s.data = d;
        return s;
      }), extent);
    }
    var x$$1 = x$4, y$$1 = y$4, extent = null;
    voronoi.polygons = function(data) {
      return voronoi(data).polygons();
    };
    voronoi.links = function(data) {
      return voronoi(data).links();
    };
    voronoi.triangles = function(data) {
      return voronoi(data).triangles();
    };
    voronoi.x = function(_) {
      return arguments.length ? (x$$1 = "function" === typeof _ ? _ : constant$c(+_), voronoi) : x$$1;
    };
    voronoi.y = function(_) {
      return arguments.length ? (y$$1 = "function" === typeof _ ? _ : constant$c(+_), voronoi) : y$$1;
    };
    voronoi.extent = function(_) {
      return arguments.length ? (extent = null == _ ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
    };
    voronoi.size = function(_) {
      return arguments.length ? (extent = null == _ ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];
    };
    return voronoi;
  }
  function constant$d(x) {
    return function() {
      return x;
    };
  }
  function ZoomEvent(target, type, transform) {
    this.target = target;
    this.type = type;
    this.transform = transform;
  }
  function Transform(k, x, y) {
    this.k = k;
    this.x = x;
    this.y = y;
  }
  function transform$1(node) {
    return node.__zoom || identity$8;
  }
  function noevent$2() {
    d3.event.preventDefault();
    d3.event.stopImmediatePropagation();
  }
  function defaultFilter$2() {
    return !d3.event.button;
  }
  function defaultExtent$1() {
    var e = this;
    if (e instanceof SVGElement) {
      e = e.ownerSVGElement || e;
      var w = e.width.baseVal.value;
      var h = e.height.baseVal.value;
    } else {
      w = e.clientWidth, h = e.clientHeight;
    }
    return [[0, 0], [w, h]];
  }
  function defaultTransform() {
    return this.__zoom || identity$8;
  }
  function defaultWheelDelta() {
    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1) / 500;
  }
  function defaultTouchable$1() {
    return "ontouchstart" in this;
  }
  function defaultConstrain(transform, extent, translateExtent) {
    var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0], dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0], dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1], dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
    return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
  }
  function zoom() {
    function zoom(selection$$1) {
      selection$$1.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
    }
    function scale(transform, k) {
      k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
      return k === transform.k ? transform : new Transform(k, transform.x, transform.y);
    }
    function translate(transform, p0, p1) {
      var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;
      return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);
    }
    function centroid(extent) {
      return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
    }
    function schedule(transition$$1, transform, center) {
      transition$$1.on("start.zoom", function() {
        gesture(this, arguments).start();
      }).on("interrupt.zoom end.zoom", function() {
        gesture(this, arguments).end();
      }).tween("zoom", function() {
        var that = this, args = arguments, g = gesture(that, args), e = extent$jscomp$0.apply(that, args), p = center || centroid(e), w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]), a = that.__zoom, b = "function" === typeof transform ? transform.apply(that, args) : transform, i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
        return function(t) {
          if (1 === t) {
            t = b;
          } else {
            var l = i(t), k = w / l[2];
            t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
          }
          g.zoom(null, t);
        };
      });
    }
    function gesture(that, args) {
      for (var i = 0, n = gestures.length, g; i < n; ++i) {
        if ((g = gestures[i]).that === that) {
          return g;
        }
      }
      return new Gesture(that, args);
    }
    function Gesture(that, args) {
      this.that = that;
      this.args = args;
      this.index = -1;
      this.active = 0;
      this.extent = extent$jscomp$0.apply(that, args);
    }
    function wheeled() {
      function wheelidled() {
        g.wheel = null;
        g.end();
      }
      if (filter.apply(this, arguments)) {
        var g = gesture(this, arguments), t = this.__zoom, k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))), p = mouse(this);
        if (g.wheel) {
          if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
            g.mouse[1] = t.invert(g.mouse[0] = p);
          }
          clearTimeout(g.wheel);
        } else {
          if (t.k === k) {
            return;
          }
          g.mouse = [p, t.invert(p)];
          interrupt(this);
          g.start();
        }
        noevent$2();
        g.wheel = setTimeout(wheelidled, 150);
        g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));
      }
    }
    function mousedowned() {
      function mousemoved() {
        noevent$2();
        if (!g.moved) {
          var dx = d3.event.clientX - x0, dy = d3.event.clientY - y0;
          g.moved = dx * dx + dy * dy > clickDistance2;
        }
        g.zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));
      }
      function mouseupped() {
        v.on("mousemove.zoom mouseup.zoom", null);
        yesdrag(d3.event.view, g.moved);
        noevent$2();
        g.end();
      }
      if (!touchending && filter.apply(this, arguments)) {
        var g = gesture(this, arguments), v = select(d3.event.view).on("mousemove.zoom", mousemoved, !0).on("mouseup.zoom", mouseupped, !0), p = mouse(this), x0 = d3.event.clientX, y0 = d3.event.clientY;
        dragDisable(d3.event.view);
        d3.event.stopImmediatePropagation();
        g.mouse = [p, this.__zoom.invert(p)];
        interrupt(this);
        g.start();
      }
    }
    function dblclicked() {
      if (filter.apply(this, arguments)) {
        var t0 = this.__zoom, p0 = mouse(this), p1 = t0.invert(p0), k1 = t0.k * (d3.event.shiftKey ? 0.5 : 2), t1 = constrain(translate(scale(t0, k1), p0, p1), extent$jscomp$0.apply(this, arguments), translateExtent);
        noevent$2();
        0 < duration ? select(this).transition().duration(duration).call(schedule, t1, p0) : select(this).call(zoom.transform, t1);
      }
    }
    function touchstarted() {
      if (filter.apply(this, arguments)) {
        var g = gesture(this, arguments), touches$$1 = d3.event.changedTouches, n = touches$$1.length, i;
        d3.event.stopImmediatePropagation();
        for (i = 0; i < n; ++i) {
          var t = touches$$1[i];
          var p = touch(this, touches$$1, t.identifier);
          p = [p, this.__zoom.invert(p), t.identifier];
          if (g.touch0) {
            g.touch1 || (g.touch1 = p);
          } else {
            g.touch0 = p;
            var started = !0;
          }
        }
        if (touchstarting && (touchstarting = clearTimeout(touchstarting), !g.touch1)) {
          g.end();
          (p = select(this).on("dblclick.zoom")) && p.apply(this, arguments);
          return;
        }
        started && (touchstarting = setTimeout(function() {
          touchstarting = null;
        }, 500), interrupt(this), g.start());
      }
    }
    function touchmoved() {
      var g = gesture(this, arguments), touches$$1 = d3.event.changedTouches, n = touches$$1.length, i;
      noevent$2();
      touchstarting && (touchstarting = clearTimeout(touchstarting));
      for (i = 0; i < n; ++i) {
        var t = touches$$1[i];
        var p = touch(this, touches$$1, t.identifier);
        g.touch0 && g.touch0[2] === t.identifier ? g.touch0[0] = p : g.touch1 && g.touch1[2] === t.identifier && (g.touch1[0] = p);
      }
      t = g.that.__zoom;
      if (g.touch1) {
        var p0 = g.touch0[0], l0 = g.touch0[1], p1 = g.touch1[0], l1 = g.touch1[1], dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp, dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
        t = scale(t, Math.sqrt(dp / dl));
        p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
        var l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
      } else {
        if (g.touch0) {
          p = g.touch0[0], l = g.touch0[1];
        } else {
          return;
        }
      }
      g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
    }
    function touchended() {
      var g = gesture(this, arguments), touches$$1 = d3.event.changedTouches, n = touches$$1.length, i;
      d3.event.stopImmediatePropagation();
      touchending && clearTimeout(touchending);
      touchending = setTimeout(function() {
        touchending = null;
      }, 500);
      for (i = 0; i < n; ++i) {
        var t = touches$$1[i];
        g.touch0 && g.touch0[2] === t.identifier ? delete g.touch0 : g.touch1 && g.touch1[2] === t.identifier && delete g.touch1;
      }
      g.touch1 && !g.touch0 && (g.touch0 = g.touch1, delete g.touch1);
      g.touch0 ? g.touch0[1] = this.__zoom.invert(g.touch0[0]) : g.end();
    }
    var filter = defaultFilter$2, extent$jscomp$0 = defaultExtent$1, constrain = defaultConstrain, wheelDelta = defaultWheelDelta, touchable = defaultTouchable$1, scaleExtent = [0, Infinity], translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]], duration = 250, interpolate = interpolateZoom, gestures = [], listeners = dispatch("start", "zoom", "end"), touchstarting, touchending, clickDistance2 = 0;
    zoom.transform = function(collection, transform) {
      var selection$$1 = collection.selection ? collection.selection() : collection;
      selection$$1.property("__zoom", defaultTransform);
      collection !== selection$$1 ? schedule(collection, transform) : selection$$1.interrupt().each(function() {
        gesture(this, arguments).start().zoom(null, "function" === typeof transform ? transform.apply(this, arguments) : transform).end();
      });
    };
    zoom.scaleBy = function(selection$$1, k) {
      zoom.scaleTo(selection$$1, function() {
        var k0 = this.__zoom.k, k1 = "function" === typeof k ? k.apply(this, arguments) : k;
        return k0 * k1;
      });
    };
    zoom.scaleTo = function(selection$$1, k) {
      zoom.transform(selection$$1, function() {
        var e = extent$jscomp$0.apply(this, arguments), t0 = this.__zoom, p0 = centroid(e), p1 = t0.invert(p0), k1 = "function" === typeof k ? k.apply(this, arguments) : k;
        return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
      });
    };
    zoom.translateBy = function(selection$$1, x, y) {
      zoom.transform(selection$$1, function() {
        return constrain(this.__zoom.translate("function" === typeof x ? x.apply(this, arguments) : x, "function" === typeof y ? y.apply(this, arguments) : y), extent$jscomp$0.apply(this, arguments), translateExtent);
      });
    };
    zoom.translateTo = function(selection$$1, x, y) {
      zoom.transform(selection$$1, function() {
        var e = extent$jscomp$0.apply(this, arguments), t = this.__zoom, p = centroid(e);
        return constrain(identity$8.translate(p[0], p[1]).scale(t.k).translate("function" === typeof x ? -x.apply(this, arguments) : -x, "function" === typeof y ? -y.apply(this, arguments) : -y), e, translateExtent);
      });
    };
    Gesture.prototype = {start:function() {
      1 === ++this.active && (this.index = gestures.push(this) - 1, this.emit("start"));
      return this;
    }, zoom:function(key, transform) {
      this.mouse && "mouse" !== key && (this.mouse[1] = transform.invert(this.mouse[0]));
      this.touch0 && "touch" !== key && (this.touch0[1] = transform.invert(this.touch0[0]));
      this.touch1 && "touch" !== key && (this.touch1[1] = transform.invert(this.touch1[0]));
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    }, end:function() {
      0 === --this.active && (gestures.splice(this.index, 1), this.index = -1, this.emit("end"));
      return this;
    }, emit:function(type) {
      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);
    }};
    zoom.wheelDelta = function(_) {
      return arguments.length ? (wheelDelta = "function" === typeof _ ? _ : constant$d(+_), zoom) : wheelDelta;
    };
    zoom.filter = function(_) {
      return arguments.length ? (filter = "function" === typeof _ ? _ : constant$d(!!_), zoom) : filter;
    };
    zoom.touchable = function(_) {
      return arguments.length ? (touchable = "function" === typeof _ ? _ : constant$d(!!_), zoom) : touchable;
    };
    zoom.extent = function(_) {
      return arguments.length ? (extent$jscomp$0 = "function" === typeof _ ? _ : constant$d([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent$jscomp$0;
    };
    zoom.scaleExtent = function(_) {
      return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
    };
    zoom.translateExtent = function(_) {
      return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
    };
    zoom.constrain = function(_) {
      return arguments.length ? (constrain = _, zoom) : constrain;
    };
    zoom.duration = function(_) {
      return arguments.length ? (duration = +_, zoom) : duration;
    };
    zoom.interpolate = function(_) {
      return arguments.length ? (interpolate = _, zoom) : interpolate;
    };
    zoom.on = function() {
      var value = listeners.on.apply(listeners, arguments);
      return value === listeners ? zoom : value;
    };
    zoom.clickDistance = function(_) {
      return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
    };
    return zoom;
  }
  var ascendingBisect = bisector(ascending), bisectRight = ascendingBisect.right, bisectLeft = ascendingBisect.left, array$jscomp$0 = Array.prototype, slice = array$jscomp$0.slice, map$jscomp$0 = array$jscomp$0.map, e10 = Math.sqrt(50), e5 = Math.sqrt(10), e2 = Math.sqrt(2), slice$1 = Array.prototype.slice, noop = {value:function() {
  }};
  Dispatch.prototype = dispatch.prototype = {constructor:Dispatch, on:function(typename, callback) {
    var _ = this._, T = parseTypenames(typename + "", _), t, i = -1, n = T.length;
    if (2 > arguments.length) {
      for (; ++i < n;) {
        var JSCompiler_temp;
        if (JSCompiler_temp = t = (typename = T[i]).type) {
          a: {
            for (var c, type = _[t], i$jscomp$0 = 0, n$jscomp$0 = type.length; i$jscomp$0 < n$jscomp$0; ++i$jscomp$0) {
              if ((c = type[i$jscomp$0]).name === typename.name) {
                var JSCompiler_inline_result = c.value;
                break a;
              }
            }
            JSCompiler_inline_result = void 0;
          }
          JSCompiler_temp = t = JSCompiler_inline_result;
        }
        if (JSCompiler_temp) {
          return t;
        }
      }
    } else {
      if (null != callback && "function" !== typeof callback) {
        throw Error("invalid callback: " + callback);
      }
      for (; ++i < n;) {
        if (t = (typename = T[i]).type) {
          _[t] = set$jscomp$0(_[t], typename.name, callback);
        } else {
          if (null == callback) {
            for (t in _) {
              _[t] = set$jscomp$0(_[t], typename.name, null);
            }
          }
        }
      }
      return this;
    }
  }, copy:function() {
    var copy = {}, _ = this._, t;
    for (t in _) {
      copy[t] = _[t].slice();
    }
    return new Dispatch(copy);
  }, call:function(type, that) {
    if (0 < (n = arguments.length - 2)) {
      for (var args = Array(n), i = 0, n, t; i < n; ++i) {
        args[i] = arguments[i + 2];
      }
    }
    if (!this._.hasOwnProperty(type)) {
      throw Error("unknown type: " + type);
    }
    t = this._[type];
    i = 0;
    for (n = t.length; i < n; ++i) {
      t[i].value.apply(that, args);
    }
  }, apply:function(type, that, args) {
    if (!this._.hasOwnProperty(type)) {
      throw Error("unknown type: " + type);
    }
    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {
      t[i].value.apply(that, args);
    }
  }};
  var namespaces = {svg:"http://www.w3.org/2000/svg", xhtml:"http://www.w3.org/1999/xhtml", xlink:"http://www.w3.org/1999/xlink", xml:"http://www.w3.org/XML/1998/namespace", xmlns:"http://www.w3.org/2000/xmlns/"}, matcher = function(selector) {
    return function() {
      return this.matches(selector);
    };
  };
  if ("undefined" !== typeof document) {
    var element = document.documentElement;
    if (!element.matches) {
      var vendorMatches = element.webkitMatchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector;
      matcher = function(selector) {
        return function() {
          return vendorMatches.call(this, selector);
        };
      };
    }
  }
  var matcher$1 = matcher;
  EnterNode.prototype = {constructor:EnterNode, appendChild:function(child) {
    return this._parent.insertBefore(child, this._next);
  }, insertBefore:function(child, next) {
    return this._parent.insertBefore(child, next);
  }, querySelector:function(selector) {
    return this._parent.querySelector(selector);
  }, querySelectorAll:function(selector) {
    return this._parent.querySelectorAll(selector);
  }};
  ClassList.prototype = {add:function(name) {
    var i = this._names.indexOf(name);
    0 > i && (this._names.push(name), this._node.setAttribute("class", this._names.join(" ")));
  }, remove:function(name) {
    var i = this._names.indexOf(name);
    0 <= i && (this._names.splice(i, 1), this._node.setAttribute("class", this._names.join(" ")));
  }, contains:function(name) {
    return 0 <= this._names.indexOf(name);
  }};
  var filterEvents = {};
  d3.event = null;
  if ("undefined" !== typeof document) {
    var element$1 = document.documentElement;
    "onmouseenter" in element$1 || (filterEvents = {mouseenter:"mouseover", mouseleave:"mouseout"});
  }
  var root$jscomp$0 = [null];
  Selection.prototype = selection.prototype = {constructor:Selection, select:selection_select, selectAll:selection_selectAll, filter:selection_filter, data:selection_data, enter:selection_enter, exit:selection_exit, merge:selection_merge, order:selection_order, sort:selection_sort, call:selection_call, nodes:selection_nodes, node:selection_node, size:selection_size, empty:selection_empty, each:selection_each, attr:selection_attr, style:selection_style, property:selection_property, classed:selection_classed, 
  text:selection_text, html:selection_html, raise:selection_raise, lower:selection_lower, append:selection_append, insert:selection_insert, remove:selection_remove, clone:selection_clone, datum:selection_datum, on:selection_on, dispatch:selection_dispatch};
  var nextId = 0;
  Local.prototype = local.prototype = {constructor:Local, get:function(node) {
    for (var id = this._; !(id in node);) {
      if (!(node = node.parentNode)) {
        return;
      }
    }
    return node[id];
  }, set:function(node, value) {
    return node[this._] = value;
  }, remove:function(node) {
    return this._ in node && delete node[this._];
  }, toString:function() {
    return this._;
  }};
  DragEvent.prototype.on = function() {
    var value = this._.on.apply(this._, arguments);
    return value === this._ ? this : value;
  };
  var brighter = 1 / 0.7, reHex3 = /^#([0-9a-f]{3})$/, reHex6 = /^#([0-9a-f]{6})$/, reRgbInteger = /^rgb\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*\)$/, reRgbPercent = /^rgb\(\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)%\s*,\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)%\s*,\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)%\s*\)$/, reRgbaInteger = /^rgba\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)\s*\)$/, reRgbaPercent = /^rgba\(\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)%\s*,\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)%\s*,\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)%\s*,\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)\s*\)$/, 
  reHslPercent = /^hsl\(\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)\s*,\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)%\s*,\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)%\s*\)$/, reHslaPercent = /^hsla\(\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)\s*,\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)%\s*,\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)%\s*,\s*([+-]?\d*\.?\d+(?:[eE][+-]?\d+)?)\s*\)$/, named = {aliceblue:15792383, antiquewhite:16444375, aqua:65535, aquamarine:8388564, azure:15794175, beige:16119260, bisque:16770244, black:0, blanchedalmond:16772045, 
  blue:255, blueviolet:9055202, brown:10824234, burlywood:14596231, cadetblue:6266528, chartreuse:8388352, chocolate:13789470, coral:16744272, cornflowerblue:6591981, cornsilk:16775388, crimson:14423100, cyan:65535, darkblue:139, darkcyan:35723, darkgoldenrod:12092939, darkgray:11119017, darkgreen:25600, darkgrey:11119017, darkkhaki:12433259, darkmagenta:9109643, darkolivegreen:5597999, darkorange:16747520, darkorchid:10040012, darkred:9109504, darksalmon:15308410, darkseagreen:9419919, darkslateblue:4734347, 
  darkslategray:3100495, darkslategrey:3100495, darkturquoise:52945, darkviolet:9699539, deeppink:16716947, deepskyblue:49151, dimgray:6908265, dimgrey:6908265, dodgerblue:2003199, firebrick:11674146, floralwhite:16775920, forestgreen:2263842, fuchsia:16711935, gainsboro:14474460, ghostwhite:16316671, gold:16766720, goldenrod:14329120, gray:8421504, green:32768, greenyellow:11403055, grey:8421504, honeydew:15794160, hotpink:16738740, indianred:13458524, indigo:4915330, ivory:16777200, khaki:15787660, 
  lavender:15132410, lavenderblush:16773365, lawngreen:8190976, lemonchiffon:16775885, lightblue:11393254, lightcoral:15761536, lightcyan:14745599, lightgoldenrodyellow:16448210, lightgray:13882323, lightgreen:9498256, lightgrey:13882323, lightpink:16758465, lightsalmon:16752762, lightseagreen:2142890, lightskyblue:8900346, lightslategray:7833753, lightslategrey:7833753, lightsteelblue:11584734, lightyellow:16777184, lime:65280, limegreen:3329330, linen:16445670, magenta:16711935, maroon:8388608, 
  mediumaquamarine:6737322, mediumblue:205, mediumorchid:12211667, mediumpurple:9662683, mediumseagreen:3978097, mediumslateblue:8087790, mediumspringgreen:64154, mediumturquoise:4772300, mediumvioletred:13047173, midnightblue:1644912, mintcream:16121850, mistyrose:16770273, moccasin:16770229, navajowhite:16768685, navy:128, oldlace:16643558, olive:8421376, olivedrab:7048739, orange:16753920, orangered:16729344, orchid:14315734, palegoldenrod:15657130, palegreen:10025880, paleturquoise:11529966, 
  palevioletred:14381203, papayawhip:16773077, peachpuff:16767673, peru:13468991, pink:16761035, plum:14524637, powderblue:11591910, purple:8388736, rebeccapurple:6697881, red:16711680, rosybrown:12357519, royalblue:4286945, saddlebrown:9127187, salmon:16416882, sandybrown:16032864, seagreen:3050327, seashell:16774638, sienna:10506797, silver:12632256, skyblue:8900331, slateblue:6970061, slategray:7372944, slategrey:7372944, snow:16775930, springgreen:65407, steelblue:4620980, tan:13808780, teal:32896, 
  thistle:14204888, tomato:16737095, turquoise:4251856, violet:15631086, wheat:16113331, white:16777215, whitesmoke:16119285, yellow:16776960, yellowgreen:10145074};
  define(Color, color, {displayable:function() {
    return this.rgb().displayable();
  }, hex:function() {
    return this.rgb().hex();
  }, toString:function() {
    return this.rgb() + "";
  }});
  define(Rgb, rgb, extend(Color, {brighter:function(k) {
    k = null == k ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  }, darker:function(k) {
    k = null == k ? 0.7 : Math.pow(0.7, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  }, rgb:function() {
    return this;
  }, displayable:function() {
    return 0 <= this.r && 255 >= this.r && 0 <= this.g && 255 >= this.g && 0 <= this.b && 255 >= this.b && 0 <= this.opacity && 1 >= this.opacity;
  }, hex:function() {
    return "#" + hex(this.r) + hex(this.g) + hex(this.b);
  }, toString:function() {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (1 === a ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (1 === a ? ")" : ", " + a + ")");
  }}));
  define(Hsl, hsl, extend(Color, {brighter:function(k) {
    k = null == k ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  }, darker:function(k) {
    k = null == k ? 0.7 : Math.pow(0.7, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  }, rgb:function() {
    var h = this.h % 360 + 360 * (0 > this.h), s = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (0.5 > l ? l : 1 - l) * s, m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(240 <= h ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(120 > h ? h + 240 : h - 120, m1, m2), this.opacity);
  }, displayable:function() {
    return (0 <= this.s && 1 >= this.s || isNaN(this.s)) && 0 <= this.l && 1 >= this.l && 0 <= this.opacity && 1 >= this.opacity;
  }}));
  var deg2rad = Math.PI / 180, rad2deg = 180 / Math.PI, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1;
  define(Lab, lab, extend(Color, {brighter:function(k) {
    return new Lab(this.l + 18 * (null == k ? 1 : k), this.a, this.b, this.opacity);
  }, darker:function(k) {
    return new Lab(this.l - 18 * (null == k ? 1 : k), this.a, this.b, this.opacity);
  }, rgb:function() {
    var y = (this.l + 16) / 116, x = isNaN(this.a) ? y : y + this.a / 500, z = isNaN(this.b) ? y : y - this.b / 200;
    x = 0.96422 * lab2xyz(x);
    y = 1 * lab2xyz(y);
    z = 0.82521 * lab2xyz(z);
    return new Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }}));
  define(Hcl, hcl, extend(Color, {brighter:function(k) {
    return new Hcl(this.h, this.c, this.l + 18 * (null == k ? 1 : k), this.opacity);
  }, darker:function(k) {
    return new Hcl(this.h, this.c, this.l - 18 * (null == k ? 1 : k), this.opacity);
  }, rgb:function() {
    return labConvert(this).rgb();
  }}));
  var BC_DA = 1.78277 * -0.29227 - .1347134789;
  define(Cubehelix, cubehelix, extend(Color, {brighter:function(k) {
    k = null == k ? brighter : Math.pow(brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  }, darker:function(k) {
    k = null == k ? 0.7 : Math.pow(0.7, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  }, rgb:function() {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad, l = +this.l, a = isNaN(this.s) ? 0 : this.s * l * (1 - l), cosh = Math.cos(h), sinh = Math.sin(h);
    return new Rgb(255 * (l + a * (-0.14861 * cosh + 1.78277 * sinh)), 255 * (l + a * (-0.29227 * cosh + -0.90649 * sinh)), 255 * (l + 1.97294 * a * cosh), this.opacity);
  }}));
  var interpolateRgb = function rgbGamma(y) {
    function rgb$$1(start, end) {
      var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r), g = color$$1(start.g, end.g), b = color$$1(start.b, end.b), opacity = nogamma(start.opacity, end.opacity);
      return function(t) {
        start.r = r(t);
        start.g = g(t);
        start.b = b(t);
        start.opacity = opacity(t);
        return start + "";
      };
    }
    var color$$1 = gamma(y);
    rgb$$1.gamma = rgbGamma;
    return rgb$$1;
  }(1), rgbBasis = rgbSpline(basis$1), rgbBasisClosed = rgbSpline(basisClosed), reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, reB = new RegExp(reA.source, "g"), degrees = 180 / Math.PI, identity$2 = {translateX:0, translateY:0, rotate:0, skewX:0, scaleX:1, scaleY:1}, cssNode, cssRoot, cssView, svgNode, interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)"), interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")"), rho = Math.SQRT2, hsl$2 = hsl$1(hue), 
  hslLong = hsl$1(nogamma), hcl$2 = hcl$1(hue), hclLong = hcl$1(nogamma), cubehelix$2 = cubehelix$1(hue), cubehelixLong = cubehelix$1(nogamma), frame = 0, timeout = 0, interval = 0, taskHead, taskTail, clockLast = 0, clockNow = 0, clockSkew = 0, clock = "object" === typeof performance && performance.now ? performance : Date, setFrame = "object" === typeof window && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) {
    setTimeout(f, 17);
  };
  Timer.prototype = timer.prototype = {constructor:Timer, restart:function(callback, delay, time) {
    if ("function" !== typeof callback) {
      throw new TypeError("callback is not a function");
    }
    time = (null == time ? now() : +time) + (null == delay ? 0 : +delay);
    this._next || taskTail === this || (taskTail ? taskTail._next = this : taskHead = this, taskTail = this);
    this._call = callback;
    this._time = time;
    sleep();
  }, stop:function() {
    this._call && (this._call = null, this._time = Infinity, sleep());
  }};
  var emptyOn = dispatch("start", "end", "interrupt"), emptyTween = [], Selection$1 = selection.prototype.constructor, id$jscomp$1 = 0, selection_prototype = selection.prototype;
  Transition.prototype = transition.prototype = {constructor:Transition, select:transition_select, selectAll:transition_selectAll, filter:transition_filter, merge:transition_merge, selection:transition_selection, transition:transition_transition, call:selection_prototype.call, nodes:selection_prototype.nodes, node:selection_prototype.node, size:selection_prototype.size, empty:selection_prototype.empty, each:selection_prototype.each, on:transition_on, attr:transition_attr, attrTween:transition_attrTween, 
  style:transition_style, styleTween:transition_styleTween, text:transition_text, remove:transition_remove, tween:transition_tween, delay:transition_delay, duration:transition_duration, ease:transition_ease};
  var polyIn = function custom(e) {
    function polyIn(t) {
      return Math.pow(t, e);
    }
    e = +e;
    polyIn.exponent = custom;
    return polyIn;
  }(3), polyOut = function custom(e) {
    function polyOut(t) {
      return 1 - Math.pow(1 - t, e);
    }
    e = +e;
    polyOut.exponent = custom;
    return polyOut;
  }(3), polyInOut = function custom(e) {
    function polyInOut(t) {
      return (1 >= (t *= 2) ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
    }
    e = +e;
    polyInOut.exponent = custom;
    return polyInOut;
  }(3), pi = Math.PI, halfPi = pi / 2, b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b5 = 9 / 11, b6 = 10 / 11, b8 = 21 / 22, b0 = 1 / b1 / b1, backIn = function custom(s) {
    function backIn(t) {
      return t * t * ((s + 1) * t - s);
    }
    s = +s;
    backIn.overshoot = custom;
    return backIn;
  }(1.70158), backOut = function custom(s) {
    function backOut(t) {
      return --t * t * ((s + 1) * t + s) + 1;
    }
    s = +s;
    backOut.overshoot = custom;
    return backOut;
  }(1.70158), backInOut = function custom(s) {
    function backInOut(t) {
      return (1 > (t *= 2) ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
    }
    s = +s;
    backInOut.overshoot = custom;
    return backInOut;
  }(1.70158), tau = 2 * Math.PI, elasticIn = function custom(a$jscomp$0, p$jscomp$0) {
    function elasticIn(t) {
      return a$jscomp$0 * Math.pow(2, 10 * --t) * Math.sin((s - t) / p$jscomp$0);
    }
    var s = Math.asin(1 / (a$jscomp$0 = Math.max(1, a$jscomp$0))) * (p$jscomp$0 /= tau);
    elasticIn.amplitude = function(a) {
      return custom(a, p$jscomp$0 * tau);
    };
    elasticIn.period = function(p) {
      return custom(a$jscomp$0, p);
    };
    return elasticIn;
  }(1, 0.3), elasticOut = function custom(a$jscomp$0, p$jscomp$0) {
    function elasticOut(t) {
      return 1 - a$jscomp$0 * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p$jscomp$0);
    }
    var s = Math.asin(1 / (a$jscomp$0 = Math.max(1, a$jscomp$0))) * (p$jscomp$0 /= tau);
    elasticOut.amplitude = function(a) {
      return custom(a, p$jscomp$0 * tau);
    };
    elasticOut.period = function(p) {
      return custom(a$jscomp$0, p);
    };
    return elasticOut;
  }(1, 0.3), elasticInOut = function custom(a$jscomp$0, p$jscomp$0) {
    function elasticInOut(t) {
      return (0 > (t = 2 * t - 1) ? a$jscomp$0 * Math.pow(2, 10 * t) * Math.sin((s - t) / p$jscomp$0) : 2 - a$jscomp$0 * Math.pow(2, -10 * t) * Math.sin((s + t) / p$jscomp$0)) / 2;
    }
    var s = Math.asin(1 / (a$jscomp$0 = Math.max(1, a$jscomp$0))) * (p$jscomp$0 /= tau);
    elasticInOut.amplitude = function(a) {
      return custom(a, p$jscomp$0 * tau);
    };
    elasticInOut.period = function(p) {
      return custom(a$jscomp$0, p);
    };
    return elasticInOut;
  }(1, 0.3), defaultTiming = {time:null, delay:0, duration:250, ease:cubicInOut};
  selection.prototype.interrupt = selection_interrupt;
  selection.prototype.transition = selection_transition;
  var root$1 = [null], MODE_DRAG = {name:"drag"}, MODE_SPACE = {name:"space"}, MODE_HANDLE = {name:"handle"}, MODE_CENTER = {name:"center"}, X = {name:"x", handles:["e", "w"].map(type$jscomp$0), input:function(x, e) {
    return x && [[x[0], e[0][1]], [x[1], e[1][1]]];
  }, output:function(xy) {
    return xy && [xy[0][0], xy[1][0]];
  }}, Y = {name:"y", handles:["n", "s"].map(type$jscomp$0), input:function(y, e) {
    return y && [[e[0][0], y[0]], [e[1][0], y[1]]];
  }, output:function(xy) {
    return xy && [xy[0][1], xy[1][1]];
  }}, XY = {name:"xy", handles:"n e s w nw ne se sw".split(" ").map(type$jscomp$0), input:function(xy) {
    return xy;
  }, output:function(xy) {
    return xy;
  }}, cursors = {overlay:"crosshair", selection:"move", n:"ns-resize", e:"ew-resize", s:"ns-resize", w:"ew-resize", nw:"nwse-resize", ne:"nesw-resize", se:"nwse-resize", sw:"nesw-resize"}, flipX = {e:"w", w:"e", nw:"ne", ne:"nw", se:"sw", sw:"se"}, flipY = {n:"s", s:"n", nw:"sw", ne:"se", se:"ne", sw:"nw"}, signsX = {overlay:1, selection:1, n:null, e:1, s:null, w:-1, nw:-1, ne:1, se:1, sw:-1}, signsY = {overlay:1, selection:1, n:-1, e:null, s:1, w:null, nw:-1, ne:-1, se:1, sw:1}, cos = Math.cos, 
  sin = Math.sin, pi$1 = Math.PI, halfPi$1 = pi$1 / 2, tau$1 = 2 * pi$1, max$1 = Math.max, slice$2 = Array.prototype.slice, pi$2 = Math.PI, tau$2 = 2 * pi$2, tauEpsilon = tau$2 - 1e-6;
  Path.prototype = path$jscomp$0.prototype = {constructor:Path, moveTo:function(x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  }, closePath:function() {
    null !== this._x1 && (this._x1 = this._x0, this._y1 = this._y0, this._ += "Z");
  }, lineTo:function(x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  }, quadraticCurveTo:function(x1, y1, x, y) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  }, bezierCurveTo:function(x1, y1, x2, y2, x, y) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  }, arcTo:function(x1, y1, x2, y2, r) {
    x1 = +x1;
    y1 = +y1;
    x2 = +x2;
    y2 = +y2;
    r = +r;
    var x0 = this._x1, y0 = this._y1, x21 = x2 - x1, y21 = y2 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01;
    if (0 > r) {
      throw Error("negative radius: " + r);
    }
    if (null === this._x1) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } else {
      if (1e-6 < l01_2) {
        if (1e-6 < Math.abs(y01 * x21 - y21 * x01) && r) {
          var x20 = x2 - x0, y20 = y2 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
          1e-6 < Math.abs(t01 - 1) && (this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01));
          this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
        } else {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        }
      }
    }
  }, arc:function(x, y, r, a0, a1, ccw) {
    x = +x;
    y = +y;
    r = +r;
    var dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x + dx, y0 = y + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
    if (0 > r) {
      throw Error("negative radius: " + r);
    }
    if (null === this._x1) {
      this._ += "M" + x0 + "," + y0;
    } else {
      if (1e-6 < Math.abs(this._x1 - x0) || 1e-6 < Math.abs(this._y1 - y0)) {
        this._ += "L" + x0 + "," + y0;
      }
    }
    r && (0 > da && (da = da % tau$2 + tau$2), da > tauEpsilon ? this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0) : 1e-6 < da && (this._ += "A" + r + "," + r + ",0," + +(da >= pi$2) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1))));
  }, rect:function(x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
  }, toString:function() {
    return this._;
  }};
  Map.prototype = map$1.prototype = {constructor:Map, has:function(key) {
    return "$" + key in this;
  }, get:function(key) {
    return this["$" + key];
  }, set:function(key, value) {
    this["$" + key] = value;
    return this;
  }, remove:function(key) {
    var property = "$" + key;
    return property in this && delete this[property];
  }, clear:function() {
    for (var property in this) {
      "$" === property[0] && delete this[property];
    }
  }, keys:function() {
    var keys = [], property;
    for (property in this) {
      "$" === property[0] && keys.push(property.slice(1));
    }
    return keys;
  }, values:function() {
    var values = [], property;
    for (property in this) {
      "$" === property[0] && values.push(this[property]);
    }
    return values;
  }, entries:function() {
    var entries = [], property;
    for (property in this) {
      "$" === property[0] && entries.push({key:property.slice(1), value:this[property]});
    }
    return entries;
  }, size:function() {
    var size = 0, property;
    for (property in this) {
      "$" === property[0] && ++size;
    }
    return size;
  }, empty:function() {
    for (var property in this) {
      if ("$" === property[0]) {
        return !1;
      }
    }
    return !0;
  }, each:function(f) {
    for (var property in this) {
      "$" === property[0] && f(this[property], property.slice(1), this);
    }
  }};
  var proto = map$1.prototype;
  Set.prototype = set$2.prototype = {constructor:Set, has:proto.has, add:function(value) {
    value += "";
    this["$" + value] = value;
    return this;
  }, remove:proto.remove, clear:proto.clear, values:proto.keys, size:proto.size, empty:proto.empty, each:proto.each};
  var array$2 = Array.prototype, slice$3 = array$2.slice, cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], 
  [1.0, 1.5]]], []], EOL = {}, EOF = {}, csv = dsvFormat(","), csvParse = csv.parse, csvParseRows = csv.parseRows, csvFormat = csv.format, csvFormatRows = csv.formatRows, tsv = dsvFormat("\t"), tsvParse = tsv.parse, tsvParseRows = tsv.parseRows, tsvFormat = tsv.format, tsvFormatRows = tsv.formatRows, csv$1 = dsvParse(csvParse), tsv$1 = dsvParse(tsvParse), xml = parser("application/xml"), html = parser("text/html"), svg = parser("image/svg+xml"), treeProto = quadtree.prototype = Quadtree.prototype;
  treeProto.copy = function() {
    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1), node = this._root, nodes, child;
    if (!node) {
      return copy;
    }
    if (!node.length) {
      return copy._root = leaf_copy(node), copy;
    }
    for (nodes = [{source:node, target:copy._root = Array(4)}]; node = nodes.pop();) {
      for (var i = 0; 4 > i; ++i) {
        if (child = node.source[i]) {
          child.length ? nodes.push({source:child, target:node.target[i] = Array(4)}) : node.target[i] = leaf_copy(child);
        }
      }
    }
    return copy;
  };
  treeProto.add = tree_add;
  treeProto.addAll = addAll;
  treeProto.cover = tree_cover;
  treeProto.data = tree_data;
  treeProto.extent = tree_extent;
  treeProto.find = tree_find;
  treeProto.remove = tree_remove;
  treeProto.removeAll = removeAll;
  treeProto.root = tree_root;
  treeProto.size = tree_size;
  treeProto.visit = tree_visit;
  treeProto.visitAfter = tree_visitAfter;
  treeProto.x = tree_x;
  treeProto.y = tree_y;
  var initialAngle = Math.PI * (3 - Math.sqrt(5)), re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
  formatSpecifier.prototype = FormatSpecifier.prototype;
  FormatSpecifier.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (null == this.width ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (null == this.precision ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
  };
  var prefixExponent, formatTypes = {"%":function(x, p) {
    return (100 * x).toFixed(p);
  }, b:function(x) {
    return Math.round(x).toString(2);
  }, c:function(x) {
    return x + "";
  }, d:function(x) {
    return Math.round(x).toString(10);
  }, e:function(x, p) {
    return x.toExponential(p);
  }, f:function(x, p) {
    return x.toFixed(p);
  }, g:function(x, p) {
    return x.toPrecision(p);
  }, o:function(x) {
    return Math.round(x).toString(8);
  }, p:function(x, p) {
    return formatRounded(100 * x, p);
  }, r:formatRounded, s:formatPrefixAuto, X:function(x) {
    return Math.round(x).toString(16).toUpperCase();
  }, x:function(x) {
    return Math.round(x).toString(16);
  }}, prefixes = "y z a f p n \u00b5 m  k M G T P E Z Y".split(" "), locale;
  defaultLocale({decimal:".", thousands:",", grouping:[3], currency:["$", ""]});
  Adder.prototype = {constructor:Adder, reset:function() {
    this.s = this.t = 0;
  }, add:function(y) {
    add$1(temp, y, this.t);
    add$1(this, temp.s, this.s);
    this.s ? this.t += temp.t : this.s = temp.t;
  }, valueOf:function() {
    return this.s;
  }};
  var temp = new Adder, pi$3 = Math.PI, halfPi$2 = pi$3 / 2, quarterPi = pi$3 / 4, tau$3 = 2 * pi$3, degrees$1 = 180 / pi$3, radians = pi$3 / 180, abs = Math.abs, atan = Math.atan, atan2 = Math.atan2, cos$1 = Math.cos, ceil = Math.ceil, exp = Math.exp, log = Math.log, pow = Math.pow, sin$1 = Math.sin, sign = Math.sign || function(x) {
    return 0 < x ? 1 : 0 > x ? -1 : 0;
  }, sqrt = Math.sqrt, tan = Math.tan, streamObjectType = {Feature:function(object, stream) {
    streamGeometry(object.geometry, stream);
  }, FeatureCollection:function(object, stream) {
    for (var features = object.features, i = -1, n = features.length; ++i < n;) {
      streamGeometry(features[i].geometry, stream);
    }
  }}, streamGeometryType = {Sphere:function(object, stream) {
    stream.sphere();
  }, Point:function(object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  }, MultiPoint:function(object, stream) {
    for (var coordinates = object.coordinates, i = -1, n = coordinates.length; ++i < n;) {
      object = coordinates[i], stream.point(object[0], object[1], object[2]);
    }
  }, LineString:function(object, stream) {
    streamLine(object.coordinates, stream, 0);
  }, MultiLineString:function(object, stream) {
    for (var coordinates = object.coordinates, i = -1, n = coordinates.length; ++i < n;) {
      streamLine(coordinates[i], stream, 0);
    }
  }, Polygon:function(object, stream) {
    streamPolygon(object.coordinates, stream);
  }, MultiPolygon:function(object, stream) {
    for (var coordinates = object.coordinates, i = -1, n = coordinates.length; ++i < n;) {
      streamPolygon(coordinates[i], stream);
    }
  }, GeometryCollection:function(object, stream) {
    for (var geometries = object.geometries, i = -1, n = geometries.length; ++i < n;) {
      streamGeometry(geometries[i], stream);
    }
  }}, areaRingSum = new Adder, areaSum = new Adder, lambda00, phi00, lambda0, cosPhi0, sinPhi0, areaStream = {point:noop$2, lineStart:noop$2, lineEnd:noop$2, polygonStart:function() {
    areaRingSum.reset();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  }, polygonEnd:function() {
    var areaRing = +areaRingSum;
    areaSum.add(0 > areaRing ? tau$3 + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = noop$2;
  }, sphere:function() {
    areaSum.add(tau$3);
  }}, lambda0$1, phi0, lambda1, phi1, lambda2, lambda00$1, phi00$1, p0, deltaSum = new Adder, ranges, range$jscomp$0, boundsStream = {point:boundsPoint, lineStart:boundsLineStart, lineEnd:boundsLineEnd, polygonStart:function() {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum.reset();
    areaStream.polygonStart();
  }, polygonEnd:function() {
    areaStream.polygonEnd();
    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    0 > areaRingSum ? (lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90)) : 1e-6 < deltaSum ? phi1 = 90 : -1E-6 > deltaSum && (phi0 = -90);
    range$jscomp$0[0] = lambda0$1;
    range$jscomp$0[1] = lambda1;
  }}, W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00$2, phi00$2, x0$jscomp$3, y0$jscomp$3, z0, centroidStream = {sphere:noop$2, point:centroidPoint, lineStart:centroidLineStart, lineEnd:centroidLineEnd, polygonStart:function() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  }, polygonEnd:function() {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }};
  rotationIdentity.invert = rotationIdentity;
  var sum$1 = new Adder, clipAntimeridian = clip(function() {
    return !0;
  }, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi$3, -halfPi$2]), lengthSum = new Adder, lambda0$2, sinPhi0$1, cosPhi0$1, lengthStream = {sphere:noop$2, point:noop$2, lineStart:lengthLineStart, lineEnd:noop$2, polygonStart:noop$2, polygonEnd:noop$2}, coordinates = [null, null], object$1 = {type:"LineString", coordinates:coordinates}, containsObjectType = {Feature:function(object, point) {
    return containsGeometry(object.geometry, point);
  }, FeatureCollection:function(object, point) {
    for (var features = object.features, i = -1, n = features.length; ++i < n;) {
      if (containsGeometry(features[i].geometry, point)) {
        return !0;
      }
    }
    return !1;
  }}, containsGeometryType = {Sphere:function() {
    return !0;
  }, Point:function(object, point) {
    return 0 === distance(object.coordinates, point);
  }, MultiPoint:function(object, point) {
    for (var coordinates = object.coordinates, i = -1, n = coordinates.length; ++i < n;) {
      if (0 === distance(coordinates[i], point)) {
        return !0;
      }
    }
    return !1;
  }, LineString:function(object, point) {
    return containsLine(object.coordinates, point);
  }, MultiLineString:function(object, point) {
    for (var coordinates = object.coordinates, i = -1, n = coordinates.length; ++i < n;) {
      if (containsLine(coordinates[i], point)) {
        return !0;
      }
    }
    return !1;
  }, Polygon:function(object, point) {
    return containsPolygon(object.coordinates, point);
  }, MultiPolygon:function(object, point) {
    for (var coordinates = object.coordinates, i = -1, n = coordinates.length; ++i < n;) {
      if (containsPolygon(coordinates[i], point)) {
        return !0;
      }
    }
    return !1;
  }, GeometryCollection:function(object, point) {
    for (var geometries = object.geometries, i = -1, n = geometries.length; ++i < n;) {
      if (containsGeometry(geometries[i], point)) {
        return !0;
      }
    }
    return !1;
  }}, areaSum$1 = new Adder, areaRingSum$1 = new Adder, x00, y00, x0$1, y0$1, areaStream$1 = {point:noop$2, lineStart:noop$2, lineEnd:noop$2, polygonStart:function() {
    areaStream$1.lineStart = areaRingStart$1;
    areaStream$1.lineEnd = areaRingEnd$1;
  }, polygonEnd:function() {
    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;
    areaSum$1.add(abs(areaRingSum$1));
    areaRingSum$1.reset();
  }, result:function() {
    var area = areaSum$1 / 2;
    areaSum$1.reset();
    return area;
  }}, x0$2 = Infinity, y0$2 = x0$2, x1$jscomp$2 = -x0$2, y1$jscomp$2 = x1$jscomp$2, boundsStream$1 = {point:boundsPoint$1, lineStart:noop$2, lineEnd:noop$2, polygonStart:noop$2, polygonEnd:noop$2, result:function() {
    var bounds = [[x0$2, y0$2], [x1$jscomp$2, y1$jscomp$2]];
    x1$jscomp$2 = y1$jscomp$2 = -(y0$2 = x0$2 = Infinity);
    return bounds;
  }}, X0$1 = 0, Y0$1 = 0, Z0$1 = 0, X1$1 = 0, Y1$1 = 0, Z1$1 = 0, X2$1 = 0, Y2$1 = 0, Z2$1 = 0, x00$1, y00$1, x0$3, y0$3, centroidStream$1 = {point:centroidPoint$1, lineStart:centroidLineStart$1, lineEnd:centroidLineEnd$1, polygonStart:function() {
    centroidStream$1.lineStart = centroidRingStart$1;
    centroidStream$1.lineEnd = centroidRingEnd$1;
  }, polygonEnd:function() {
    centroidStream$1.point = centroidPoint$1;
    centroidStream$1.lineStart = centroidLineStart$1;
    centroidStream$1.lineEnd = centroidLineEnd$1;
  }, result:function() {
    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1] : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1] : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1] : [NaN, NaN];
    X0$1 = Y0$1 = Z0$1 = X1$1 = Y1$1 = Z1$1 = X2$1 = Y2$1 = Z2$1 = 0;
    return centroid;
  }};
  PathContext.prototype = {_radius:4.5, pointRadius:function(_) {
    return this._radius = _, this;
  }, polygonStart:function() {
    this._line = 0;
  }, polygonEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._point = 0;
  }, lineEnd:function() {
    0 === this._line && this._context.closePath();
    this._point = NaN;
  }, point:function(x, y) {
    switch(this._point) {
      case 0:
        this._context.moveTo(x, y);
        this._point = 1;
        break;
      case 1:
        this._context.lineTo(x, y);
        break;
      default:
        this._context.moveTo(x + this._radius, y), this._context.arc(x, y, this._radius, 0, tau$3);
    }
  }, result:noop$2};
  var lengthSum$1 = new Adder, lengthRing, x00$2, y00$2, x0$4, y0$4, lengthStream$1 = {point:noop$2, lineStart:function() {
    lengthStream$1.point = lengthPointFirst$1;
  }, lineEnd:function() {
    lengthRing && lengthPoint$1(x00$2, y00$2);
    lengthStream$1.point = noop$2;
  }, polygonStart:function() {
    lengthRing = !0;
  }, polygonEnd:function() {
    lengthRing = null;
  }, result:function() {
    var length = +lengthSum$1;
    lengthSum$1.reset();
    return length;
  }};
  PathString.prototype = {_radius:4.5, _circle:circle$1(4.5), pointRadius:function(_) {
    (_ = +_) !== this._radius && (this._radius = _, this._circle = null);
    return this;
  }, polygonStart:function() {
    this._line = 0;
  }, polygonEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._point = 0;
  }, lineEnd:function() {
    0 === this._line && this._string.push("Z");
    this._point = NaN;
  }, point:function(x, y) {
    switch(this._point) {
      case 0:
        this._string.push("M", x, ",", y);
        this._point = 1;
        break;
      case 1:
        this._string.push("L", x, ",", y);
        break;
      default:
        null == this._circle && (this._circle = circle$1(this._radius)), this._string.push("M", x, ",", y, this._circle);
    }
  }, result:function() {
    if (this._string.length) {
      var result = this._string.join("");
      this._string = [];
      return result;
    }
    return null;
  }};
  TransformStream.prototype = {constructor:TransformStream, point:function(x, y) {
    this.stream.point(x, y);
  }, sphere:function() {
    this.stream.sphere();
  }, lineStart:function() {
    this.stream.lineStart();
  }, lineEnd:function() {
    this.stream.lineEnd();
  }, polygonStart:function() {
    this.stream.polygonStart();
  }, polygonEnd:function() {
    this.stream.polygonEnd();
  }};
  var cosMinDistance = cos$1(30 * radians), transformRadians = transformer({point:function(x, y) {
    this.stream.point(x * radians, y * radians);
  }}), azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {
    return sqrt(2 / (1 + cxcy));
  });
  azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {
    return 2 * asin(z / 2);
  });
  var azimuthalEquidistantRaw = azimuthalRaw(function(c) {
    return (c = acos(c)) && c / sin$1(c);
  });
  azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {
    return z;
  });
  mercatorRaw.invert = function(x, y) {
    return [x, 2 * atan(exp(y)) - halfPi$2];
  };
  equirectangularRaw.invert = equirectangularRaw;
  var M = sqrt(3) / 2;
  equalEarthRaw.invert = function(x, y) {
    for (var l = y, l2 = l * l, l6 = l2 * l2 * l2, i = 0, delta, fy, fpy; 12 > i && !(fy = l * (1.340264 + -0.081106 * l2 + l6 * (0.000893 + 0.003796 * l2)) - y, fpy = 1.340264 + 3 * -0.081106 * l2 + l6 * (7 * 0.000893 + .034164 * l2), l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2, 1e-12 > abs(delta)); ++i) {
    }
    return [M * x * (1.340264 + 3 * -0.081106 * l2 + l6 * (7 * 0.000893 + .034164 * l2)) / cos$1(l), asin(sin$1(l) / M)];
  };
  gnomonicRaw.invert = azimuthalInvert(atan);
  naturalEarth1Raw.invert = function(x, y) {
    var phi = y, i = 25, delta;
    do {
      var phi2 = phi * phi, phi4 = phi2 * phi2;
      phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (.045255 + phi4 * (-.311325 + .259866 * phi2 - 0.005916 * 11 * phi4)));
    } while (1e-6 < abs(delta) && 0 < --i);
    return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];
  };
  orthographicRaw.invert = azimuthalInvert(asin);
  stereographicRaw.invert = azimuthalInvert(function(z) {
    return 2 * atan(z);
  });
  transverseMercatorRaw.invert = function(x, y) {
    return [-y, 2 * atan(exp(x)) - halfPi$2];
  };
  Node.prototype = hierarchy.prototype = {constructor:Node, count:node_count, each:node_each, eachAfter:node_eachAfter, eachBefore:node_eachBefore, sum:node_sum, sort:node_sort, path:node_path, ancestors:node_ancestors, descendants:node_descendants, leaves:node_leaves, links:node_links, copy:node_copy};
  var slice$4 = Array.prototype.slice, preroot = {depth:-1}, ambiguous = {};
  TreeNode.prototype = Object.create(Node.prototype);
  var phi = (1 + Math.sqrt(5)) / 2, squarify = function custom(ratio) {
    function squarify(parent, x0, y0, x1, y1) {
      squarifyRatio(ratio, parent, x0, y0, x1, y1);
    }
    squarify.ratio = function(x) {
      return custom(1 < (x = +x) ? x : 1);
    };
    return squarify;
  }(phi), resquarify = function custom(ratio) {
    function resquarify(parent, x0, y0, x1, y1) {
      if ((rows = parent._squarify) && rows.ratio === ratio) {
        for (var rows, row, nodes, i, j = -1, n, m = rows.length, value = parent.value; ++j < m;) {
          row = rows[j];
          nodes = row.children;
          i = row.value = 0;
          for (n = nodes.length; i < n; ++i) {
            row.value += nodes[i].value;
          }
          row.dice ? treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value) : treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
          value -= row.value;
        }
      } else {
        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1), rows.ratio = ratio;
      }
    }
    resquarify.ratio = function(x) {
      return custom(1 < (x = +x) ? x : 1);
    };
    return resquarify;
  }(phi), uniform = function sourceRandomUniform(source) {
    function randomUniform(min, max) {
      min = null == min ? 0 : +min;
      max = null == max ? 1 : +max;
      1 === arguments.length ? (max = min, min = 0) : max -= min;
      return function() {
        return source() * max + min;
      };
    }
    randomUniform.source = sourceRandomUniform;
    return randomUniform;
  }(defaultSource$1), normal = function sourceRandomNormal(source) {
    function randomNormal(mu, sigma) {
      var x, r;
      mu = null == mu ? 0 : +mu;
      sigma = null == sigma ? 1 : +sigma;
      return function() {
        if (null != x) {
          var y = x;
          x = null;
        } else {
          do {
            x = 2 * source() - 1, y = 2 * source() - 1, r = x * x + y * y;
          } while (!r || 1 < r);
        }
        return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
      };
    }
    randomNormal.source = sourceRandomNormal;
    return randomNormal;
  }(defaultSource$1), logNormal = function sourceRandomLogNormal(source) {
    function randomLogNormal() {
      var randomNormal = normal.source(source).apply(this, arguments);
      return function() {
        return Math.exp(randomNormal());
      };
    }
    randomLogNormal.source = sourceRandomLogNormal;
    return randomLogNormal;
  }(defaultSource$1), irwinHall = function sourceRandomIrwinHall(source) {
    function randomIrwinHall(n) {
      return function() {
        for (var sum = 0, i = 0; i < n; ++i) {
          sum += source();
        }
        return sum;
      };
    }
    randomIrwinHall.source = sourceRandomIrwinHall;
    return randomIrwinHall;
  }(defaultSource$1), bates = function sourceRandomBates(source) {
    function randomBates(n) {
      var randomIrwinHall = irwinHall.source(source)(n);
      return function() {
        return randomIrwinHall() / n;
      };
    }
    randomBates.source = sourceRandomBates;
    return randomBates;
  }(defaultSource$1), exponential$1 = function sourceRandomExponential(source) {
    function randomExponential(lambda) {
      return function() {
        return -Math.log(1 - source()) / lambda;
      };
    }
    randomExponential.source = sourceRandomExponential;
    return randomExponential;
  }(defaultSource$1), array$3 = Array.prototype, map$2 = array$3.map, slice$5 = array$3.slice, implicit = {name:"implicit"}, unit = [0, 1], t0$1 = new Date, t1$1 = new Date, millisecond = newInterval(function() {
  }, function(date, step) {
    date.setTime(+date + step);
  }, function(start, end) {
    return end - start;
  });
  millisecond.every = function(k) {
    k = Math.floor(k);
    return isFinite(k) && 0 < k ? 1 < k ? newInterval(function(date) {
      date.setTime(Math.floor(date / k) * k);
    }, function(date, step) {
      date.setTime(+date + step * k);
    }, function(start, end) {
      return (end - start) / k;
    }) : millisecond : null;
  };
  var milliseconds = millisecond.range, second = newInterval(function(date) {
    date.setTime(1e3 * Math.floor(date / 1e3));
  }, function(date, step) {
    date.setTime(+date + 1e3 * step);
  }, function(start, end) {
    return (end - start) / 1e3;
  }, function(date) {
    return date.getUTCSeconds();
  }), seconds = second.range, minute = newInterval(function(date) {
    date.setTime(6e4 * Math.floor(date / 6e4));
  }, function(date, step) {
    date.setTime(+date + 6e4 * step);
  }, function(start, end) {
    return (end - start) / 6e4;
  }, function(date) {
    return date.getMinutes();
  }), minutes = minute.range, hour = newInterval(function(date) {
    var offset = 6e4 * date.getTimezoneOffset() % 36e5;
    0 > offset && (offset += 36e5);
    date.setTime(36e5 * Math.floor((+date - offset) / 36e5) + offset);
  }, function(date, step) {
    date.setTime(+date + 36e5 * step);
  }, function(start, end) {
    return (end - start) / 36e5;
  }, function(date) {
    return date.getHours();
  }), hours = hour.range, day = newInterval(function(date) {
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step);
  }, function(start, end) {
    return (end - start - 6e4 * (end.getTimezoneOffset() - start.getTimezoneOffset())) / 864e5;
  }, function(date) {
    return date.getDate() - 1;
  }), days = day.range, sunday = weekday(0), monday = weekday(1), tuesday = weekday(2), wednesday = weekday(3), thursday = weekday(4), friday = weekday(5), saturday = weekday(6), sundays = sunday.range, mondays = monday.range, tuesdays = tuesday.range, wednesdays = wednesday.range, thursdays = thursday.range, fridays = friday.range, saturdays = saturday.range, month = newInterval(function(date) {
    date.setDate(1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setMonth(date.getMonth() + step);
  }, function(start, end) {
    return end.getMonth() - start.getMonth() + 12 * (end.getFullYear() - start.getFullYear());
  }, function(date) {
    return date.getMonth();
  }), months = month.range, year = newInterval(function(date) {
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step);
  }, function(start, end) {
    return end.getFullYear() - start.getFullYear();
  }, function(date) {
    return date.getFullYear();
  });
  year.every = function(k) {
    return isFinite(k = Math.floor(k)) && 0 < k ? newInterval(function(date) {
      date.setFullYear(Math.floor(date.getFullYear() / k) * k);
      date.setMonth(0, 1);
      date.setHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setFullYear(date.getFullYear() + step * k);
    }) : null;
  };
  var years = year.range, utcMinute = newInterval(function(date) {
    date.setUTCSeconds(0, 0);
  }, function(date, step) {
    date.setTime(+date + 6e4 * step);
  }, function(start, end) {
    return (end - start) / 6e4;
  }, function(date) {
    return date.getUTCMinutes();
  }), utcMinutes = utcMinute.range, utcHour = newInterval(function(date) {
    date.setUTCMinutes(0, 0, 0);
  }, function(date, step) {
    date.setTime(+date + 36e5 * step);
  }, function(start, end) {
    return (end - start) / 36e5;
  }, function(date) {
    return date.getUTCHours();
  }), utcHours = utcHour.range, utcDay = newInterval(function(date) {
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step);
  }, function(start, end) {
    return (end - start) / 864e5;
  }, function(date) {
    return date.getUTCDate() - 1;
  }), utcDays = utcDay.range, utcSunday = utcWeekday(0), utcMonday = utcWeekday(1), utcTuesday = utcWeekday(2), utcWednesday = utcWeekday(3), utcThursday = utcWeekday(4), utcFriday = utcWeekday(5), utcSaturday = utcWeekday(6), utcSundays = utcSunday.range, utcMondays = utcMonday.range, utcTuesdays = utcTuesday.range, utcWednesdays = utcWednesday.range, utcThursdays = utcThursday.range, utcFridays = utcFriday.range, utcSaturdays = utcSaturday.range, utcMonth = newInterval(function(date) {
    date.setUTCDate(1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCMonth(date.getUTCMonth() + step);
  }, function(start, end) {
    return end.getUTCMonth() - start.getUTCMonth() + 12 * (end.getUTCFullYear() - start.getUTCFullYear());
  }, function(date) {
    return date.getUTCMonth();
  }), utcMonths = utcMonth.range, utcYear = newInterval(function(date) {
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step);
  }, function(start, end) {
    return end.getUTCFullYear() - start.getUTCFullYear();
  }, function(date) {
    return date.getUTCFullYear();
  });
  utcYear.every = function(k) {
    return isFinite(k = Math.floor(k)) && 0 < k ? newInterval(function(date) {
      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
      date.setUTCMonth(0, 1);
      date.setUTCHours(0, 0, 0, 0);
    }, function(date, step) {
      date.setUTCFullYear(date.getUTCFullYear() + step * k);
    }) : null;
  };
  var utcYears = utcYear.range, pads = {"-":"", _:" ", 0:"0"}, numberRe = /^\s*\d+/, percentRe = /^%/, requoteRe = /[\\^$*+?|[\]().{}]/g, locale$1;
  defaultLocale$1({dateTime:"%x, %X", date:"%-m/%-d/%Y", time:"%-I:%M:%S %p", periods:["AM", "PM"], days:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "), shortDays:"Sun Mon Tue Wed Thu Fri Sat".split(" "), months:"January February March April May June July August September October November December".split(" "), shortMonths:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" ")});
  var formatIso = Date.prototype.toISOString ? formatIsoNative : d3.utcFormat("%Y-%m-%dT%H:%M:%S.%LZ"), parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : d3.utcParse("%Y-%m-%dT%H:%M:%S.%LZ"), durationDay$1 = 864E5, durationWeek$1 = 7 * durationDay$1, durationMonth = 30 * durationDay$1, durationYear = 365 * durationDay$1, category10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"), category20b = colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6"), 
  category20c = colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9"), category20 = colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5"), Accent = colors("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"), Dark2 = colors("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"), Paired = colors("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"), 
  Pastel1 = colors("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"), Pastel2 = colors("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"), Set1 = colors("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"), Set2 = colors("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"), Set3 = colors("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"), scheme$jscomp$0 = "   d8b365f5f5f55ab4ac a6611adfc27d80cdc1018571 a6611adfc27df5f5f580cdc1018571 8c510ad8b365f6e8c3c7eae55ab4ac01665e 8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e 8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e 8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e 5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30 5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30".split(" ").map(colors), 
  BrBG = ramp(scheme$jscomp$0), scheme$1 = "   af8dc3f7f7f77fbf7b 7b3294c2a5cfa6dba0008837 7b3294c2a5cff7f7f7a6dba0008837 762a83af8dc3e7d4e8d9f0d37fbf7b1b7837 762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837 762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837 762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837 40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b 40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b".split(" ").map(colors), PRGn = ramp(scheme$1), scheme$2 = "   e9a3c9f7f7f7a1d76a d01c8bf1b6dab8e1864dac26 d01c8bf1b6daf7f7f7b8e1864dac26 c51b7de9a3c9fde0efe6f5d0a1d76a4d9221 c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221 c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221 c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221 8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419 8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419".split(" ").map(colors), 
  PiYG = ramp(scheme$2), scheme$3 = "   998ec3f7f7f7f1a340 5e3c99b2abd2fdb863e66101 5e3c99b2abd2f7f7f7fdb863e66101 542788998ec3d8daebfee0b6f1a340b35806 542788998ec3d8daebf7f7f7fee0b6f1a340b35806 5427888073acb2abd2d8daebfee0b6fdb863e08214b35806 5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806 2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08 2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08".split(" ").map(colors), PuOr = ramp(scheme$3), scheme$4 = "   ef8a62f7f7f767a9cf ca0020f4a58292c5de0571b0 ca0020f4a582f7f7f792c5de0571b0 b2182bef8a62fddbc7d1e5f067a9cf2166ac b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac 67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061 67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061".split(" ").map(colors), 
  RdBu = ramp(scheme$4), scheme$5 = "   ef8a62ffffff999999 ca0020f4a582bababa404040 ca0020f4a582ffffffbababa404040 b2182bef8a62fddbc7e0e0e09999994d4d4d b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d 67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a 67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a".split(" ").map(colors), RdGy = ramp(scheme$5), scheme$6 = "   fc8d59ffffbf91bfdb d7191cfdae61abd9e92c7bb6 d7191cfdae61ffffbfabd9e92c7bb6 d73027fc8d59fee090e0f3f891bfdb4575b4 d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4 d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4 d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4 a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695 a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695".split(" ").map(colors), 
  RdYlBu = ramp(scheme$6), scheme$7 = "   fc8d59ffffbf91cf60 d7191cfdae61a6d96a1a9641 d7191cfdae61ffffbfa6d96a1a9641 d73027fc8d59fee08bd9ef8b91cf601a9850 d73027fc8d59fee08bffffbfd9ef8b91cf601a9850 d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850 d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850 a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837 a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837".split(" ").map(colors), RdYlGn = ramp(scheme$7), scheme$8 = "   fc8d59ffffbf99d594 d7191cfdae61abdda42b83ba d7191cfdae61ffffbfabdda42b83ba d53e4ffc8d59fee08be6f59899d5943288bd d53e4ffc8d59fee08bffffbfe6f59899d5943288bd d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd 9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2 9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2".split(" ").map(colors), 
  Spectral = ramp(scheme$8), scheme$9 = "   e5f5f999d8c92ca25f edf8fbb2e2e266c2a4238b45 edf8fbb2e2e266c2a42ca25f006d2c edf8fbccece699d8c966c2a42ca25f006d2c edf8fbccece699d8c966c2a441ae76238b45005824 f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824 f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b".split(" ").map(colors), BuGn = ramp(scheme$9), scheme$a = "   e0ecf49ebcda8856a7 edf8fbb3cde38c96c688419d edf8fbb3cde38c96c68856a7810f7c edf8fbbfd3e69ebcda8c96c68856a7810f7c edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b".split(" ").map(colors), 
  BuPu = ramp(scheme$a), scheme$b = "   e0f3dba8ddb543a2ca f0f9e8bae4bc7bccc42b8cbe f0f9e8bae4bc7bccc443a2ca0868ac f0f9e8ccebc5a8ddb57bccc443a2ca0868ac f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081".split(" ").map(colors), GnBu = ramp(scheme$b), scheme$c = "   fee8c8fdbb84e34a33 fef0d9fdcc8afc8d59d7301f fef0d9fdcc8afc8d59e34a33b30000 fef0d9fdd49efdbb84fc8d59e34a33b30000 fef0d9fdd49efdbb84fc8d59ef6548d7301f990000 fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000 fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000".split(" ").map(colors), 
  OrRd = ramp(scheme$c), scheme$d = "   ece2f0a6bddb1c9099 f6eff7bdc9e167a9cf02818a f6eff7bdc9e167a9cf1c9099016c59 f6eff7d0d1e6a6bddb67a9cf1c9099016c59 f6eff7d0d1e6a6bddb67a9cf3690c002818a016450 fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450 fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636".split(" ").map(colors), PuBuGn = ramp(scheme$d), scheme$e = "   ece7f2a6bddb2b8cbe f1eef6bdc9e174a9cf0570b0 f1eef6bdc9e174a9cf2b8cbe045a8d f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858".split(" ").map(colors), 
  PuBu = ramp(scheme$e), scheme$f = "   e7e1efc994c7dd1c77 f1eef6d7b5d8df65b0ce1256 f1eef6d7b5d8df65b0dd1c77980043 f1eef6d4b9dac994c7df65b0dd1c77980043 f1eef6d4b9dac994c7df65b0e7298ace125691003f f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f".split(" ").map(colors), PuRd = ramp(scheme$f), scheme$g = "   fde0ddfa9fb5c51b8a feebe2fbb4b9f768a1ae017e feebe2fbb4b9f768a1c51b8a7a0177 feebe2fcc5c0fa9fb5f768a1c51b8a7a0177 feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177 fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177 fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a".split(" ").map(colors), 
  RdPu = ramp(scheme$g), scheme$h = "   edf8b17fcdbb2c7fb8 ffffcca1dab441b6c4225ea8 ffffcca1dab441b6c42c7fb8253494 ffffccc7e9b47fcdbb41b6c42c7fb8253494 ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84 ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84 ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58".split(" ").map(colors), YlGnBu = ramp(scheme$h), scheme$i = "   f7fcb9addd8e31a354 ffffccc2e69978c679238443 ffffccc2e69978c67931a354006837 ffffccd9f0a3addd8e78c67931a354006837 ffffccd9f0a3addd8e78c67941ab5d238443005a32 ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32 ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529".split(" ").map(colors), 
  YlGn = ramp(scheme$i), scheme$j = "   fff7bcfec44fd95f0e ffffd4fed98efe9929cc4c02 ffffd4fed98efe9929d95f0e993404 ffffd4fee391fec44ffe9929d95f0e993404 ffffd4fee391fec44ffe9929ec7014cc4c028c2d04 ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04 ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506".split(" ").map(colors), YlOrBr = ramp(scheme$j), scheme$k = "   ffeda0feb24cf03b20 ffffb2fecc5cfd8d3ce31a1c ffffb2fecc5cfd8d3cf03b20bd0026 ffffb2fed976feb24cfd8d3cf03b20bd0026 ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026 ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026 ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026".split(" ").map(colors), 
  YlOrRd = ramp(scheme$k), scheme$l = "   deebf79ecae13182bd eff3ffbdd7e76baed62171b5 eff3ffbdd7e76baed63182bd08519c eff3ffc6dbef9ecae16baed63182bd08519c eff3ffc6dbef9ecae16baed64292c62171b5084594 f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594 f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b".split(" ").map(colors), Blues = ramp(scheme$l), scheme$m = "   e5f5e0a1d99b31a354 edf8e9bae4b374c476238b45 edf8e9bae4b374c47631a354006d2c edf8e9c7e9c0a1d99b74c47631a354006d2c edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32 f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32 f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b".split(" ").map(colors), 
  Greens = ramp(scheme$m), scheme$n = "   f0f0f0bdbdbd636363 f7f7f7cccccc969696525252 f7f7f7cccccc969696636363252525 f7f7f7d9d9d9bdbdbd969696636363252525 f7f7f7d9d9d9bdbdbd969696737373525252252525 fffffff0f0f0d9d9d9bdbdbd969696737373525252252525 fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000".split(" ").map(colors), Greys = ramp(scheme$n), scheme$o = "   efedf5bcbddc756bb1 f2f0f7cbc9e29e9ac86a51a3 f2f0f7cbc9e29e9ac8756bb154278f f2f0f7dadaebbcbddc9e9ac8756bb154278f f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486 fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486 fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d".split(" ").map(colors), 
  Purples = ramp(scheme$o), scheme$p = "   fee0d2fc9272de2d26 fee5d9fcae91fb6a4acb181d fee5d9fcae91fb6a4ade2d26a50f15 fee5d9fcbba1fc9272fb6a4ade2d26a50f15 fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d".split(" ").map(colors), Reds = ramp(scheme$p), scheme$q = "   fee6cefdae6be6550d feeddefdbe85fd8d3cd94701 feeddefdbe85fd8d3ce6550da63603 feeddefdd0a2fdae6bfd8d3ce6550da63603 feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04 fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04 fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704".split(" ").map(colors), 
  Oranges = ramp(scheme$q), cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0)), warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8)), cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8)), c = cubehelix(), c$1 = rgb(), pi_1_3 = Math.PI / 3, pi_2_3 = 2 * Math.PI / 3, viridis = ramp$1(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")), 
  magma = ramp$1(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")), 
  inferno = ramp$1(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")), 
  plasma = ramp$1(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")), 
  abs$1 = Math.abs, atan2$1 = Math.atan2, cos$2 = Math.cos, max$2 = Math.max, min$1 = Math.min, sin$2 = Math.sin, sqrt$2 = Math.sqrt, pi$4 = Math.PI, halfPi$3 = pi$4 / 2, tau$4 = 2 * pi$4;
  Linear.prototype = {areaStart:function() {
    this._line = 0;
  }, areaEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._point = 0;
  }, lineEnd:function() {
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath();
    this._line = 1 - this._line;
  }, point:function(x, y) {
    x = +x;
    y = +y;
    switch(this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(x, y);
    }
  }};
  var curveRadialLinear = curveRadial(curveLinear);
  Radial.prototype = {areaStart:function() {
    this._curve.areaStart();
  }, areaEnd:function() {
    this._curve.areaEnd();
  }, lineStart:function() {
    this._curve.lineStart();
  }, lineEnd:function() {
    this._curve.lineEnd();
  }, point:function(a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }};
  var slice$6 = Array.prototype.slice, circle$2 = {draw:function(context, size) {
    var r = Math.sqrt(size / pi$4);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, tau$4);
  }}, cross$2 = {draw:function(context, size) {
    var r = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }}, tan30 = Math.sqrt(1 / 3), tan30_2 = 2 * tan30, diamond = {draw:function(context, size) {
    var y = Math.sqrt(size / tan30_2), x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }}, kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10), kx = Math.sin(tau$4 / 10) * kr, ky = -Math.cos(tau$4 / 10) * kr, star = {draw:function(context, size) {
    var r = Math.sqrt(0.89081309152928522810 * size), x = kx * r, y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);
    for (var i = 1; 5 > i; ++i) {
      var a = tau$4 * i / 5, c = Math.cos(a), s = Math.sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }
    context.closePath();
  }}, square = {draw:function(context, size) {
    var w = Math.sqrt(size), x = -w / 2;
    context.rect(x, x, w, w);
  }}, sqrt3 = Math.sqrt(3), triangle = {draw:function(context, size) {
    var y = -Math.sqrt(size / (3 * sqrt3));
    context.moveTo(0, 2 * y);
    context.lineTo(-sqrt3 * y, -y);
    context.lineTo(sqrt3 * y, -y);
    context.closePath();
  }}, s$jscomp$1 = Math.sqrt(3) / 2, k$jscomp$0 = 1 / Math.sqrt(12), a$jscomp$1 = 3 * (k$jscomp$0 / 2 + 1), wye = {draw:function(context, size) {
    var r = Math.sqrt(size / a$jscomp$1), x0 = r / 2, y0 = r * k$jscomp$0, x1 = x0, y1 = r * k$jscomp$0 + r, x2 = -x1, y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(-0.5 * x0 - s$jscomp$1 * y0, s$jscomp$1 * x0 + -0.5 * y0);
    context.lineTo(-0.5 * x1 - s$jscomp$1 * y1, s$jscomp$1 * x1 + -0.5 * y1);
    context.lineTo(-0.5 * x2 - s$jscomp$1 * y2, s$jscomp$1 * x2 + -0.5 * y2);
    context.lineTo(-0.5 * x0 + s$jscomp$1 * y0, -0.5 * y0 - s$jscomp$1 * x0);
    context.lineTo(-0.5 * x1 + s$jscomp$1 * y1, -0.5 * y1 - s$jscomp$1 * x1);
    context.lineTo(-0.5 * x2 + s$jscomp$1 * y2, -0.5 * y2 - s$jscomp$1 * x2);
    context.closePath();
  }}, symbols = [circle$2, cross$2, diamond, square, star, triangle, wye];
  Basis.prototype = {areaStart:function() {
    this._line = 0;
  }, areaEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  }, lineEnd:function() {
    switch(this._point) {
      case 3:
        point$2(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
    }
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath();
    this._line = 1 - this._line;
  }, point:function(x, y) {
    x = +x;
    y = +y;
    switch(this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3, this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        point$2(this, x, y);
    }
    this._x0 = this._x1;
    this._x1 = x;
    this._y0 = this._y1;
    this._y1 = y;
  }};
  BasisClosed.prototype = {areaStart:noop$3, areaEnd:noop$3, lineStart:function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  }, lineEnd:function() {
    switch(this._point) {
      case 1:
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      case 2:
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      case 3:
        this.point(this._x2, this._y2), this.point(this._x3, this._y3), this.point(this._x4, this._y4);
    }
  }, point:function(x, y) {
    x = +x;
    y = +y;
    switch(this._point) {
      case 0:
        this._point = 1;
        this._x2 = x;
        this._y2 = y;
        break;
      case 1:
        this._point = 2;
        this._x3 = x;
        this._y3 = y;
        break;
      case 2:
        this._point = 3;
        this._x4 = x;
        this._y4 = y;
        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);
        break;
      default:
        point$2(this, x, y);
    }
    this._x0 = this._x1;
    this._x1 = x;
    this._y0 = this._y1;
    this._y1 = y;
  }};
  BasisOpen.prototype = {areaStart:function() {
    this._line = 0;
  }, areaEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  }, lineEnd:function() {
    (this._line || 0 !== this._line && 3 === this._point) && this._context.closePath();
    this._line = 1 - this._line;
  }, point:function(x, y) {
    x = +x;
    y = +y;
    switch(this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;
      case 3:
        this._point = 4;
      default:
        point$2(this, x, y);
    }
    this._x0 = this._x1;
    this._x1 = x;
    this._y0 = this._y1;
    this._y1 = y;
  }};
  Bundle.prototype = {lineStart:function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  }, lineEnd:function() {
    var x = this._x, y = this._y, j = x.length - 1;
    if (0 < j) {
      for (var x0 = x[0], y0 = y[0], dx = x[j] - x0, dy = y[j] - y0, i = -1, t; ++i <= j;) {
        t = i / j, this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
      }
    }
    this._x = this._y = null;
    this._basis.lineEnd();
  }, point:function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }};
  var bundle = function custom(beta$jscomp$0) {
    function bundle(context) {
      return 1 === beta$jscomp$0 ? new Basis(context) : new Bundle(context, beta$jscomp$0);
    }
    bundle.beta = function(beta) {
      return custom(+beta);
    };
    return bundle;
  }(0.85);
  Cardinal.prototype = {areaStart:function() {
    this._line = 0;
  }, areaEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  }, lineEnd:function() {
    switch(this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        point$3(this, this._x1, this._y1);
    }
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath();
    this._line = 1 - this._line;
  }, point:function(x, y) {
    x = +x;
    y = +y;
    switch(this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;
      case 1:
        this._point = 2;
        this._x1 = x;
        this._y1 = y;
        break;
      case 2:
        this._point = 3;
      default:
        point$3(this, x, y);
    }
    this._x0 = this._x1;
    this._x1 = this._x2;
    this._x2 = x;
    this._y0 = this._y1;
    this._y1 = this._y2;
    this._y2 = y;
  }};
  var cardinal = function custom(tension$jscomp$0) {
    function cardinal(context) {
      return new Cardinal(context, tension$jscomp$0);
    }
    cardinal.tension = function(tension) {
      return custom(+tension);
    };
    return cardinal;
  }(0);
  CardinalClosed.prototype = {areaStart:noop$3, areaEnd:noop$3, lineStart:function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  }, lineEnd:function() {
    switch(this._point) {
      case 1:
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      case 2:
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      case 3:
        this.point(this._x3, this._y3), this.point(this._x4, this._y4), this.point(this._x5, this._y5);
    }
  }, point:function(x, y) {
    x = +x;
    y = +y;
    switch(this._point) {
      case 0:
        this._point = 1;
        this._x3 = x;
        this._y3 = y;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x, this._y4 = y);
        break;
      case 2:
        this._point = 3;
        this._x5 = x;
        this._y5 = y;
        break;
      default:
        point$3(this, x, y);
    }
    this._x0 = this._x1;
    this._x1 = this._x2;
    this._x2 = x;
    this._y0 = this._y1;
    this._y1 = this._y2;
    this._y2 = y;
  }};
  var cardinalClosed = function custom(tension$jscomp$0) {
    function cardinal$$1(context) {
      return new CardinalClosed(context, tension$jscomp$0);
    }
    cardinal$$1.tension = function(tension) {
      return custom(+tension);
    };
    return cardinal$$1;
  }(0);
  CardinalOpen.prototype = {areaStart:function() {
    this._line = 0;
  }, areaEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  }, lineEnd:function() {
    (this._line || 0 !== this._line && 3 === this._point) && this._context.closePath();
    this._line = 1 - this._line;
  }, point:function(x, y) {
    x = +x;
    y = +y;
    switch(this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point$3(this, x, y);
    }
    this._x0 = this._x1;
    this._x1 = this._x2;
    this._x2 = x;
    this._y0 = this._y1;
    this._y1 = this._y2;
    this._y2 = y;
  }};
  var cardinalOpen = function custom(tension$jscomp$0) {
    function cardinal$$1(context) {
      return new CardinalOpen(context, tension$jscomp$0);
    }
    cardinal$$1.tension = function(tension) {
      return custom(+tension);
    };
    return cardinal$$1;
  }(0);
  CatmullRom.prototype = {areaStart:function() {
    this._line = 0;
  }, areaEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  }, lineEnd:function() {
    switch(this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        this.point(this._x2, this._y2);
    }
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath();
    this._line = 1 - this._line;
  }, point:function(x, y) {
    x = +x;
    y = +y;
    if (this._point) {
      var x23 = this._x2 - x, y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch(this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
      default:
        point$4(this, x, y);
    }
    this._l01_a = this._l12_a;
    this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a;
    this._l12_2a = this._l23_2a;
    this._x0 = this._x1;
    this._x1 = this._x2;
    this._x2 = x;
    this._y0 = this._y1;
    this._y1 = this._y2;
    this._y2 = y;
  }};
  var catmullRom = function custom(alpha$jscomp$0) {
    function catmullRom(context) {
      return alpha$jscomp$0 ? new CatmullRom(context, alpha$jscomp$0) : new Cardinal(context, 0);
    }
    catmullRom.alpha = function(alpha) {
      return custom(+alpha);
    };
    return catmullRom;
  }(0.5);
  CatmullRomClosed.prototype = {areaStart:noop$3, areaEnd:noop$3, lineStart:function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  }, lineEnd:function() {
    switch(this._point) {
      case 1:
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      case 2:
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      case 3:
        this.point(this._x3, this._y3), this.point(this._x4, this._y4), this.point(this._x5, this._y5);
    }
  }, point:function(x, y) {
    x = +x;
    y = +y;
    if (this._point) {
      var x23 = this._x2 - x, y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch(this._point) {
      case 0:
        this._point = 1;
        this._x3 = x;
        this._y3 = y;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x, this._y4 = y);
        break;
      case 2:
        this._point = 3;
        this._x5 = x;
        this._y5 = y;
        break;
      default:
        point$4(this, x, y);
    }
    this._l01_a = this._l12_a;
    this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a;
    this._l12_2a = this._l23_2a;
    this._x0 = this._x1;
    this._x1 = this._x2;
    this._x2 = x;
    this._y0 = this._y1;
    this._y1 = this._y2;
    this._y2 = y;
  }};
  var catmullRomClosed = function custom(alpha$jscomp$0) {
    function catmullRom$$1(context) {
      return alpha$jscomp$0 ? new CatmullRomClosed(context, alpha$jscomp$0) : new CardinalClosed(context, 0);
    }
    catmullRom$$1.alpha = function(alpha) {
      return custom(+alpha);
    };
    return catmullRom$$1;
  }(0.5);
  CatmullRomOpen.prototype = {areaStart:function() {
    this._line = 0;
  }, areaEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  }, lineEnd:function() {
    (this._line || 0 !== this._line && 3 === this._point) && this._context.closePath();
    this._line = 1 - this._line;
  }, point:function(x, y) {
    x = +x;
    y = +y;
    if (this._point) {
      var x23 = this._x2 - x, y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch(this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point$4(this, x, y);
    }
    this._l01_a = this._l12_a;
    this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a;
    this._l12_2a = this._l23_2a;
    this._x0 = this._x1;
    this._x1 = this._x2;
    this._x2 = x;
    this._y0 = this._y1;
    this._y1 = this._y2;
    this._y2 = y;
  }};
  var catmullRomOpen = function custom(alpha$jscomp$0) {
    function catmullRom$$1(context) {
      return alpha$jscomp$0 ? new CatmullRomOpen(context, alpha$jscomp$0) : new CardinalOpen(context, 0);
    }
    catmullRom$$1.alpha = function(alpha) {
      return custom(+alpha);
    };
    return catmullRom$$1;
  }(0.5);
  LinearClosed.prototype = {areaStart:noop$3, areaEnd:noop$3, lineStart:function() {
    this._point = 0;
  }, lineEnd:function() {
    this._point && this._context.closePath();
  }, point:function(x, y) {
    x = +x;
    y = +y;
    this._point ? this._context.lineTo(x, y) : (this._point = 1, this._context.moveTo(x, y));
  }};
  MonotoneX.prototype = {areaStart:function() {
    this._line = 0;
  }, areaEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  }, lineEnd:function() {
    switch(this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        point$5(this, this._t0, slope2(this, this._t0));
    }
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath();
    this._line = 1 - this._line;
  }, point:function(x, y) {
    var t1 = NaN;
    x = +x;
    y = +y;
    if (x !== this._x1 || y !== this._y1) {
      switch(this._point) {
        case 0:
          this._point = 1;
          this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
          break;
        case 1:
          this._point = 2;
          break;
        case 2:
          this._point = 3;
          point$5(this, slope2(this, t1 = slope3(this, x, y)), t1);
          break;
        default:
          point$5(this, this._t0, t1 = slope3(this, x, y));
      }
      this._x0 = this._x1;
      this._x1 = x;
      this._y0 = this._y1;
      this._y1 = y;
      this._t0 = t1;
    }
  }};
  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
    MonotoneX.prototype.point.call(this, y, x);
  };
  ReflectContext.prototype = {moveTo:function(x, y) {
    this._context.moveTo(y, x);
  }, closePath:function() {
    this._context.closePath();
  }, lineTo:function(x, y) {
    this._context.lineTo(y, x);
  }, bezierCurveTo:function(x1, y1, x2, y2, x, y) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
  }};
  Natural.prototype = {areaStart:function() {
    this._line = 0;
  }, areaEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._x = [];
    this._y = [];
  }, lineEnd:function() {
    var x = this._x, y = this._y, n = x.length;
    if (n) {
      if (this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]), 2 === n) {
        this._context.lineTo(x[1], y[1]);
      } else {
        for (var px = controlPoints(x), py = controlPoints(y), i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }
    (this._line || 0 !== this._line && 1 === n) && this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  }, point:function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }};
  Step.prototype = {areaStart:function() {
    this._line = 0;
  }, areaEnd:function() {
    this._line = NaN;
  }, lineStart:function() {
    this._x = this._y = NaN;
    this._point = 0;
  }, lineEnd:function() {
    0 < this._t && 1 > this._t && 2 === this._point && this._context.lineTo(this._x, this._y);
    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath();
    0 <= this._line && (this._t = 1 - this._t, this._line = 1 - this._line);
  }, point:function(x, y) {
    x = +x;
    y = +y;
    switch(this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;
      case 1:
        this._point = 2;
      default:
        if (0 >= this._t) {
          this._context.lineTo(this._x, y), this._context.lineTo(x, y);
        } else {
          var x1 = this._x * (1 - this._t) + x * this._t;
          this._context.lineTo(x1, this._y);
          this._context.lineTo(x1, y);
        }
    }
    this._x = x;
    this._y = y;
  }};
  RedBlackTree.prototype = {constructor:RedBlackTree, insert:function(after, node) {
    var uncle;
    if (after) {
      node.P = after;
      if (node.N = after.N) {
        after.N.P = node;
      }
      after.N = node;
      if (after.R) {
        for (after = after.R; after.L;) {
          after = after.L;
        }
        after.L = node;
      } else {
        after.R = node;
      }
      var parent = after;
    } else {
      this._ ? (after = RedBlackFirst(this._), node.P = null, node.N = after, after.P = after.L = node, parent = after) : (node.P = node.N = null, this._ = node, parent = null);
    }
    node.L = node.R = null;
    node.U = parent;
    node.C = !0;
    for (after = node; parent && parent.C;) {
      var grandpa = parent.U;
      parent === grandpa.L ? (uncle = grandpa.R) && uncle.C ? (parent.C = uncle.C = !1, grandpa.C = !0, after = grandpa) : (after === parent.R && (RedBlackRotateLeft(this, parent), after = parent, parent = after.U), parent.C = !1, grandpa.C = !0, RedBlackRotateRight(this, grandpa)) : (uncle = grandpa.L) && uncle.C ? (parent.C = uncle.C = !1, grandpa.C = !0, after = grandpa) : (after === parent.L && (RedBlackRotateRight(this, parent), after = parent, parent = after.U), parent.C = !1, grandpa.C = !0, 
      RedBlackRotateLeft(this, grandpa));
      parent = after.U;
    }
    this._.C = !1;
  }, remove:function(node) {
    node.N && (node.N.P = node.P);
    node.P && (node.P.N = node.N);
    node.N = node.P = null;
    var parent = node.U, left = node.L, right = node.R;
    var next = left ? right ? RedBlackFirst(right) : left : right;
    parent ? parent.L === node ? parent.L = next : parent.R = next : this._ = next;
    if (left && right) {
      var red = next.C;
      next.C = node.C;
      next.L = left;
      left.U = next;
      next !== right ? (parent = next.U, next.U = node.U, node = next.R, parent.L = node, next.R = right, right.U = next) : (next.U = parent, parent = next, node = next.R);
    } else {
      red = node.C, node = next;
    }
    node && (node.U = parent);
    if (!red) {
      if (node && node.C) {
        node.C = !1;
      } else {
        do {
          if (node === this._) {
            break;
          }
          if (node === parent.L) {
            var sibling = parent.R;
            sibling.C && (sibling.C = !1, parent.C = !0, RedBlackRotateLeft(this, parent), sibling = parent.R);
            if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
              sibling.R && sibling.R.C || (sibling.L.C = !1, sibling.C = !0, RedBlackRotateRight(this, sibling), sibling = parent.R);
              sibling.C = parent.C;
              parent.C = sibling.R.C = !1;
              RedBlackRotateLeft(this, parent);
              node = this._;
              break;
            }
          } else {
            if (sibling = parent.L, sibling.C && (sibling.C = !1, parent.C = !0, RedBlackRotateRight(this, parent), sibling = parent.L), sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
              sibling.L && sibling.L.C || (sibling.R.C = !1, sibling.C = !0, RedBlackRotateLeft(this, sibling), sibling = parent.L);
              sibling.C = parent.C;
              parent.C = sibling.L.C = !1;
              RedBlackRotateRight(this, parent);
              node = this._;
              break;
            }
          }
          sibling.C = !0;
          node = parent;
          parent = parent.U;
        } while (!node.C);
        node && (node.C = !1);
      }
    }
  }};
  var circlePool = [], firstCircle, beachPool = [], epsilon$4 = 1e-6, epsilon2$2 = 1e-12, beaches, cells, circles, edges;
  Diagram.prototype = {constructor:Diagram, polygons:function() {
    var edges = this.edges;
    return this.cells.map(function(cell) {
      var polygon = cell.halfedges.map(function(i) {
        return cellHalfedgeStart(cell, edges[i]);
      });
      polygon.data = cell.site.data;
      return polygon;
    });
  }, triangles:function() {
    var triangles = [], edges = this.edges;
    this.cells.forEach(function(cell, i) {
      if (m = (halfedges = cell.halfedges).length) {
        for (var site = cell.site, halfedges, j = -1, m, s0, e1 = edges[halfedges[m - 1]], s1 = e1.left === site ? e1.right : e1.left; ++j < m;) {
          s0 = s1, e1 = edges[halfedges[j]], s1 = e1.left === site ? e1.right : e1.left, s0 && s1 && i < s0.index && i < s1.index && 0 > (site[0] - s1[0]) * (s0[1] - site[1]) - (site[0] - s0[0]) * (s1[1] - site[1]) && triangles.push([site.data, s0.data, s1.data]);
        }
      }
    });
    return triangles;
  }, links:function() {
    return this.edges.filter(function(edge) {
      return edge.right;
    }).map(function(edge) {
      return {source:edge.left.data, target:edge.right.data};
    });
  }, find:function(x, y, radius) {
    for (var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell; !(cell = that.cells[i1]);) {
      if (++i1 >= n) {
        return null;
      }
    }
    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;
    do {
      cell = that.cells[i0 = i1], i1 = null, cell.halfedges.forEach(function(e) {
        var edge = that.edges[e], v = edge.left;
        if (v !== cell.site && v || (v = edge.right)) {
          var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;
          v2 < d2 && (d2 = v2, i1 = v.index);
        }
      });
    } while (null !== i1);
    that._found = i0;
    return null == radius || d2 <= radius * radius ? cell.site : null;
  }};
  Transform.prototype = {constructor:Transform, scale:function(k) {
    return 1 === k ? this : new Transform(this.k * k, this.x, this.y);
  }, translate:function(x, y) {
    return 0 === x & 0 === y ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  }, apply:function(point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  }, applyX:function(x) {
    return x * this.k + this.x;
  }, applyY:function(y) {
    return y * this.k + this.y;
  }, invert:function(location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  }, invertX:function(x) {
    return (x - this.x) / this.k;
  }, invertY:function(y) {
    return (y - this.y) / this.k;
  }, rescaleX:function(x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  }, rescaleY:function(y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  }, toString:function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }};
  var identity$8 = new Transform(1, 0, 0);
  transform$1.prototype = Transform.prototype;
  d3.version = "5.7.0";
  d3.bisect = bisectRight;
  d3.bisectRight = bisectRight;
  d3.bisectLeft = bisectLeft;
  d3.ascending = ascending;
  d3.bisector = bisector;
  d3.cross = cross;
  d3.descending = descending;
  d3.deviation = deviation;
  d3.extent = extent;
  d3.histogram = histogram;
  d3.thresholdFreedmanDiaconis = freedmanDiaconis;
  d3.thresholdScott = scott;
  d3.thresholdSturges = thresholdSturges;
  d3.max = max;
  d3.mean = mean;
  d3.median = median;
  d3.merge = merge;
  d3.min = min;
  d3.pairs = pairs;
  d3.permute = permute;
  d3.quantile = threshold;
  d3.range = sequence;
  d3.scan = scan;
  d3.shuffle = shuffle;
  d3.sum = sum;
  d3.ticks = ticks;
  d3.tickIncrement = tickIncrement;
  d3.tickStep = tickStep;
  d3.transpose = transpose$jscomp$0;
  d3.variance = variance;
  d3.zip = zip;
  d3.axisTop = axisTop;
  d3.axisRight = axisRight;
  d3.axisBottom = axisBottom;
  d3.axisLeft = axisLeft;
  d3.brush = brush;
  d3.brushX = brushX;
  d3.brushY = brushY;
  d3.brushSelection = brushSelection;
  d3.chord = chord;
  d3.ribbon = ribbon;
  d3.nest = nest;
  d3.set = set$2;
  d3.map = map$1;
  d3.keys = keys;
  d3.values = values$jscomp$1;
  d3.entries = entries;
  d3.color = color;
  d3.rgb = rgb;
  d3.hsl = hsl;
  d3.lab = lab;
  d3.hcl = hcl;
  d3.lch = lch;
  d3.gray = gray;
  d3.cubehelix = cubehelix;
  d3.contours = contours;
  d3.contourDensity = density;
  d3.dispatch = dispatch;
  d3.drag = drag;
  d3.dragDisable = dragDisable;
  d3.dragEnable = yesdrag;
  d3.dsvFormat = dsvFormat;
  d3.csvParse = csvParse;
  d3.csvParseRows = csvParseRows;
  d3.csvFormat = csvFormat;
  d3.csvFormatRows = csvFormatRows;
  d3.tsvParse = tsvParse;
  d3.tsvParseRows = tsvParseRows;
  d3.tsvFormat = tsvFormat;
  d3.tsvFormatRows = tsvFormatRows;
  d3.easeLinear = linear$1;
  d3.easeQuad = quadInOut;
  d3.easeQuadIn = quadIn;
  d3.easeQuadOut = quadOut;
  d3.easeQuadInOut = quadInOut;
  d3.easeCubic = cubicInOut;
  d3.easeCubicIn = cubicIn;
  d3.easeCubicOut = cubicOut;
  d3.easeCubicInOut = cubicInOut;
  d3.easePoly = polyInOut;
  d3.easePolyIn = polyIn;
  d3.easePolyOut = polyOut;
  d3.easePolyInOut = polyInOut;
  d3.easeSin = sinInOut;
  d3.easeSinIn = sinIn;
  d3.easeSinOut = sinOut;
  d3.easeSinInOut = sinInOut;
  d3.easeExp = expInOut;
  d3.easeExpIn = expIn;
  d3.easeExpOut = expOut;
  d3.easeExpInOut = expInOut;
  d3.easeCircle = circleInOut;
  d3.easeCircleIn = circleIn;
  d3.easeCircleOut = circleOut;
  d3.easeCircleInOut = circleInOut;
  d3.easeBounce = bounceOut;
  d3.easeBounceIn = bounceIn;
  d3.easeBounceOut = bounceOut;
  d3.easeBounceInOut = bounceInOut;
  d3.easeBack = backInOut;
  d3.easeBackIn = backIn;
  d3.easeBackOut = backOut;
  d3.easeBackInOut = backInOut;
  d3.easeElastic = elasticOut;
  d3.easeElasticIn = elasticIn;
  d3.easeElasticOut = elasticOut;
  d3.easeElasticInOut = elasticInOut;
  d3.blob = blob;
  d3.buffer = buffer$jscomp$0;
  d3.dsv = dsv;
  d3.csv = csv$1;
  d3.tsv = tsv$1;
  d3.image = image$jscomp$0;
  d3.json = json;
  d3.text = text$jscomp$0;
  d3.xml = xml;
  d3.html = html;
  d3.svg = svg;
  d3.forceCenter = center$1;
  d3.forceCollide = collide;
  d3.forceLink = link;
  d3.forceManyBody = manyBody;
  d3.forceRadial = radial;
  d3.forceSimulation = simulation;
  d3.forceX = x$2;
  d3.forceY = y$2;
  d3.formatDefaultLocale = defaultLocale;
  d3.formatLocale = formatLocale;
  d3.formatSpecifier = formatSpecifier;
  d3.precisionFixed = precisionFixed;
  d3.precisionPrefix = precisionPrefix;
  d3.precisionRound = precisionRound;
  d3.geoArea = area$1;
  d3.geoBounds = bounds;
  d3.geoCentroid = centroid;
  d3.geoCircle = circle;
  d3.geoClipAntimeridian = clipAntimeridian;
  d3.geoClipCircle = clipCircle;
  d3.geoClipExtent = extent$1;
  d3.geoClipRectangle = clipRectangle;
  d3.geoContains = contains$1;
  d3.geoDistance = distance;
  d3.geoGraticule = graticule;
  d3.geoGraticule10 = graticule10;
  d3.geoInterpolate = interpolate$1;
  d3.geoLength = length$1;
  d3.geoPath = index$1;
  d3.geoAlbers = albers;
  d3.geoAlbersUsa = albersUsa;
  d3.geoAzimuthalEqualArea = azimuthalEqualArea;
  d3.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;
  d3.geoAzimuthalEquidistant = azimuthalEquidistant;
  d3.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;
  d3.geoConicConformal = conicConformal;
  d3.geoConicConformalRaw = conicConformalRaw;
  d3.geoConicEqualArea = conicEqualArea;
  d3.geoConicEqualAreaRaw = conicEqualAreaRaw;
  d3.geoConicEquidistant = conicEquidistant;
  d3.geoConicEquidistantRaw = conicEquidistantRaw;
  d3.geoEqualEarth = equalEarth;
  d3.geoEqualEarthRaw = equalEarthRaw;
  d3.geoEquirectangular = equirectangular;
  d3.geoEquirectangularRaw = equirectangularRaw;
  d3.geoGnomonic = gnomonic;
  d3.geoGnomonicRaw = gnomonicRaw;
  d3.geoIdentity = identity$5;
  d3.geoProjection = projection;
  d3.geoProjectionMutator = projectionMutator;
  d3.geoMercator = mercator;
  d3.geoMercatorRaw = mercatorRaw;
  d3.geoNaturalEarth1 = naturalEarth1;
  d3.geoNaturalEarth1Raw = naturalEarth1Raw;
  d3.geoOrthographic = orthographic;
  d3.geoOrthographicRaw = orthographicRaw;
  d3.geoStereographic = stereographic;
  d3.geoStereographicRaw = stereographicRaw;
  d3.geoTransverseMercator = transverseMercator;
  d3.geoTransverseMercatorRaw = transverseMercatorRaw;
  d3.geoRotation = rotation$jscomp$0;
  d3.geoStream = geoStream;
  d3.geoTransform = transform$jscomp$0;
  d3.cluster = cluster;
  d3.hierarchy = hierarchy;
  d3.pack = index$2;
  d3.packSiblings = siblings;
  d3.packEnclose = enclose;
  d3.partition = partition;
  d3.stratify = stratify;
  d3.tree = tree;
  d3.treemap = index$3;
  d3.treemapBinary = binary;
  d3.treemapDice = treemapDice;
  d3.treemapSlice = treemapSlice;
  d3.treemapSliceDice = sliceDice;
  d3.treemapSquarify = squarify;
  d3.treemapResquarify = resquarify;
  d3.interpolate = interpolateValue;
  d3.interpolateArray = array$1;
  d3.interpolateBasis = basis$1;
  d3.interpolateBasisClosed = basisClosed;
  d3.interpolateDate = date$jscomp$0;
  d3.interpolateDiscrete = discrete;
  d3.interpolateHue = hue$1;
  d3.interpolateNumber = interpolateNumber;
  d3.interpolateObject = object$jscomp$0;
  d3.interpolateRound = interpolateRound;
  d3.interpolateString = interpolateString;
  d3.interpolateTransformCss = interpolateTransformCss;
  d3.interpolateTransformSvg = interpolateTransformSvg;
  d3.interpolateZoom = interpolateZoom;
  d3.interpolateRgb = interpolateRgb;
  d3.interpolateRgbBasis = rgbBasis;
  d3.interpolateRgbBasisClosed = rgbBasisClosed;
  d3.interpolateHsl = hsl$2;
  d3.interpolateHslLong = hslLong;
  d3.interpolateLab = lab$1;
  d3.interpolateHcl = hcl$2;
  d3.interpolateHclLong = hclLong;
  d3.interpolateCubehelix = cubehelix$2;
  d3.interpolateCubehelixLong = cubehelixLong;
  d3.piecewise = piecewise;
  d3.quantize = quantize;
  d3.path = path$jscomp$0;
  d3.polygonArea = area$2;
  d3.polygonCentroid = centroid$1;
  d3.polygonHull = hull;
  d3.polygonContains = contains$2;
  d3.polygonLength = length$2;
  d3.quadtree = quadtree;
  d3.randomUniform = uniform;
  d3.randomNormal = normal;
  d3.randomLogNormal = logNormal;
  d3.randomBates = bates;
  d3.randomIrwinHall = irwinHall;
  d3.randomExponential = exponential$1;
  d3.scaleBand = band;
  d3.scalePoint = point$1;
  d3.scaleIdentity = identity$6;
  d3.scaleLinear = linear$2;
  d3.scaleLog = log$1;
  d3.scaleOrdinal = ordinal;
  d3.scaleImplicit = implicit;
  d3.scalePow = pow$1;
  d3.scaleSqrt = sqrt$1;
  d3.scaleQuantile = quantile$$1;
  d3.scaleQuantize = quantize$1;
  d3.scaleThreshold = threshold$1;
  d3.scaleTime = time;
  d3.scaleUtc = utcTime;
  d3.scaleSequential = sequential;
  d3.scaleDiverging = diverging;
  d3.schemeCategory10 = category10;
  d3.schemeCategory20b = category20b;
  d3.schemeCategory20c = category20c;
  d3.schemeCategory20 = category20;
  d3.schemeAccent = Accent;
  d3.schemeDark2 = Dark2;
  d3.schemePaired = Paired;
  d3.schemePastel1 = Pastel1;
  d3.schemePastel2 = Pastel2;
  d3.schemeSet1 = Set1;
  d3.schemeSet2 = Set2;
  d3.schemeSet3 = Set3;
  d3.interpolateBrBG = BrBG;
  d3.schemeBrBG = scheme$jscomp$0;
  d3.interpolatePRGn = PRGn;
  d3.schemePRGn = scheme$1;
  d3.interpolatePiYG = PiYG;
  d3.schemePiYG = scheme$2;
  d3.interpolatePuOr = PuOr;
  d3.schemePuOr = scheme$3;
  d3.interpolateRdBu = RdBu;
  d3.schemeRdBu = scheme$4;
  d3.interpolateRdGy = RdGy;
  d3.schemeRdGy = scheme$5;
  d3.interpolateRdYlBu = RdYlBu;
  d3.schemeRdYlBu = scheme$6;
  d3.interpolateRdYlGn = RdYlGn;
  d3.schemeRdYlGn = scheme$7;
  d3.interpolateSpectral = Spectral;
  d3.schemeSpectral = scheme$8;
  d3.interpolateBuGn = BuGn;
  d3.schemeBuGn = scheme$9;
  d3.interpolateBuPu = BuPu;
  d3.schemeBuPu = scheme$a;
  d3.interpolateGnBu = GnBu;
  d3.schemeGnBu = scheme$b;
  d3.interpolateOrRd = OrRd;
  d3.schemeOrRd = scheme$c;
  d3.interpolatePuBuGn = PuBuGn;
  d3.schemePuBuGn = scheme$d;
  d3.interpolatePuBu = PuBu;
  d3.schemePuBu = scheme$e;
  d3.interpolatePuRd = PuRd;
  d3.schemePuRd = scheme$f;
  d3.interpolateRdPu = RdPu;
  d3.schemeRdPu = scheme$g;
  d3.interpolateYlGnBu = YlGnBu;
  d3.schemeYlGnBu = scheme$h;
  d3.interpolateYlGn = YlGn;
  d3.schemeYlGn = scheme$i;
  d3.interpolateYlOrBr = YlOrBr;
  d3.schemeYlOrBr = scheme$j;
  d3.interpolateYlOrRd = YlOrRd;
  d3.schemeYlOrRd = scheme$k;
  d3.interpolateBlues = Blues;
  d3.schemeBlues = scheme$l;
  d3.interpolateGreens = Greens;
  d3.schemeGreens = scheme$m;
  d3.interpolateGreys = Greys;
  d3.schemeGreys = scheme$n;
  d3.interpolatePurples = Purples;
  d3.schemePurples = scheme$o;
  d3.interpolateReds = Reds;
  d3.schemeReds = scheme$p;
  d3.interpolateOranges = Oranges;
  d3.schemeOranges = scheme$q;
  d3.interpolateCubehelixDefault = cubehelix$3;
  d3.interpolateRainbow = rainbow;
  d3.interpolateWarm = warm;
  d3.interpolateCool = cool;
  d3.interpolateSinebow = sinebow;
  d3.interpolateViridis = viridis;
  d3.interpolateMagma = magma;
  d3.interpolateInferno = inferno;
  d3.interpolatePlasma = plasma;
  d3.create = create$jscomp$0;
  d3.creator = creator;
  d3.local = local;
  d3.matcher = matcher$1;
  d3.mouse = mouse;
  d3.namespace = namespace;
  d3.namespaces = namespaces;
  d3.clientPoint = point;
  d3.select = select;
  d3.selectAll = selectAll;
  d3.selection = selection;
  d3.selector = selector$jscomp$0;
  d3.selectorAll = selectorAll;
  d3.style = styleValue;
  d3.touch = touch;
  d3.touches = touches$jscomp$0;
  d3.window = defaultView;
  d3.customEvent = customEvent;
  d3.arc = arc;
  d3.area = area$3;
  d3.line = line;
  d3.pie = pie;
  d3.areaRadial = areaRadial;
  d3.radialArea = areaRadial;
  d3.lineRadial = lineRadial$1;
  d3.radialLine = lineRadial$1;
  d3.pointRadial = pointRadial;
  d3.linkHorizontal = linkHorizontal;
  d3.linkVertical = linkVertical;
  d3.linkRadial = linkRadial;
  d3.symbol = symbol$jscomp$0;
  d3.symbols = symbols;
  d3.symbolCircle = circle$2;
  d3.symbolCross = cross$2;
  d3.symbolDiamond = diamond;
  d3.symbolSquare = square;
  d3.symbolStar = star;
  d3.symbolTriangle = triangle;
  d3.symbolWye = wye;
  d3.curveBasisClosed = basisClosed$1;
  d3.curveBasisOpen = basisOpen;
  d3.curveBasis = basis$2;
  d3.curveBundle = bundle;
  d3.curveCardinalClosed = cardinalClosed;
  d3.curveCardinalOpen = cardinalOpen;
  d3.curveCardinal = cardinal;
  d3.curveCatmullRomClosed = catmullRomClosed;
  d3.curveCatmullRomOpen = catmullRomOpen;
  d3.curveCatmullRom = catmullRom;
  d3.curveLinearClosed = linearClosed;
  d3.curveLinear = curveLinear;
  d3.curveMonotoneX = monotoneX;
  d3.curveMonotoneY = monotoneY;
  d3.curveNatural = natural;
  d3.curveStep = step;
  d3.curveStepAfter = stepAfter;
  d3.curveStepBefore = stepBefore;
  d3.stack = stack;
  d3.stackOffsetExpand = expand;
  d3.stackOffsetDiverging = diverging$1;
  d3.stackOffsetNone = none$1;
  d3.stackOffsetSilhouette = silhouette;
  d3.stackOffsetWiggle = wiggle;
  d3.stackOrderAscending = ascending$3;
  d3.stackOrderDescending = descending$2;
  d3.stackOrderInsideOut = insideOut;
  d3.stackOrderNone = none$2;
  d3.stackOrderReverse = reverse;
  d3.timeInterval = newInterval;
  d3.timeMillisecond = millisecond;
  d3.timeMilliseconds = milliseconds;
  d3.utcMillisecond = millisecond;
  d3.utcMilliseconds = milliseconds;
  d3.timeSecond = second;
  d3.timeSeconds = seconds;
  d3.utcSecond = second;
  d3.utcSeconds = seconds;
  d3.timeMinute = minute;
  d3.timeMinutes = minutes;
  d3.timeHour = hour;
  d3.timeHours = hours;
  d3.timeDay = day;
  d3.timeDays = days;
  d3.timeWeek = sunday;
  d3.timeWeeks = sundays;
  d3.timeSunday = sunday;
  d3.timeSundays = sundays;
  d3.timeMonday = monday;
  d3.timeMondays = mondays;
  d3.timeTuesday = tuesday;
  d3.timeTuesdays = tuesdays;
  d3.timeWednesday = wednesday;
  d3.timeWednesdays = wednesdays;
  d3.timeThursday = thursday;
  d3.timeThursdays = thursdays;
  d3.timeFriday = friday;
  d3.timeFridays = fridays;
  d3.timeSaturday = saturday;
  d3.timeSaturdays = saturdays;
  d3.timeMonth = month;
  d3.timeMonths = months;
  d3.timeYear = year;
  d3.timeYears = years;
  d3.utcMinute = utcMinute;
  d3.utcMinutes = utcMinutes;
  d3.utcHour = utcHour;
  d3.utcHours = utcHours;
  d3.utcDay = utcDay;
  d3.utcDays = utcDays;
  d3.utcWeek = utcSunday;
  d3.utcWeeks = utcSundays;
  d3.utcSunday = utcSunday;
  d3.utcSundays = utcSundays;
  d3.utcMonday = utcMonday;
  d3.utcMondays = utcMondays;
  d3.utcTuesday = utcTuesday;
  d3.utcTuesdays = utcTuesdays;
  d3.utcWednesday = utcWednesday;
  d3.utcWednesdays = utcWednesdays;
  d3.utcThursday = utcThursday;
  d3.utcThursdays = utcThursdays;
  d3.utcFriday = utcFriday;
  d3.utcFridays = utcFridays;
  d3.utcSaturday = utcSaturday;
  d3.utcSaturdays = utcSaturdays;
  d3.utcMonth = utcMonth;
  d3.utcMonths = utcMonths;
  d3.utcYear = utcYear;
  d3.utcYears = utcYears;
  d3.timeFormatDefaultLocale = defaultLocale$1;
  d3.timeFormatLocale = formatLocale$1;
  d3.isoFormat = formatIso;
  d3.isoParse = parseIso;
  d3.now = now;
  d3.timer = timer;
  d3.timerFlush = timerFlush;
  d3.timeout = timeout$1;
  d3.interval = interval$1;
  d3.transition = transition;
  d3.active = active;
  d3.interrupt = interrupt;
  d3.voronoi = voronoi;
  d3.zoom = zoom;
  d3.zoomTransform = transform$1;
  d3.zoomIdentity = identity$8;
  namespaces.svg = namespaces.svg;
  namespaces.xhtml = namespaces.xhtml;
  namespaces.xlink = namespaces.xlink;
  namespaces.xml = namespaces.xml;
  namespaces.xmlns = namespaces.xmlns;
})();
goog.debug = {};
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = Error().stack;
    stack && (this.stack = stack);
  }
  opt_msg && (this.message = String(opt_msg));
  this.reportErrorToServer = !0;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.dom = {};
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.asserts = {};
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  goog.debug.Error.call(this, goog.asserts.subs_(messagePattern, messageArgs));
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.subs_ = function(pattern, subs) {
  for (var splitParts = pattern.split("%s"), returnString = "", subLast = splitParts.length - 1, i = 0; i < subLast; i++) {
    var sub = i < subs.length ? subs[i] : "%s";
    returnString += splitParts[i] + sub;
  }
  return returnString + splitParts[subLast];
};
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    defaultMessage && (message += ": " + defaultMessage, args = defaultArgs);
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = errorHandler);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !condition && goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  return condition;
};
goog.asserts.assertExists = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && null == value && goog.asserts.doAssertFailure_("Expected to exist: %s.", [value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.fail = function(opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && "number" !== typeof value && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && "string" !== typeof value && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isObject(value) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isArray(value) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && "boolean" !== typeof value && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  !goog.asserts.ENABLE_ASSERTS || goog.isObject(value) && value.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  !goog.asserts.ENABLE_ASSERTS || value instanceof type || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  return value;
};
goog.asserts.assertFinite = function(value, opt_message, var_args) {
  !goog.asserts.ENABLE_ASSERTS || "number" == typeof value && isFinite(value) || goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  return value instanceof Function ? value.displayName || value.name || "unknown type name" : value instanceof Object ? value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value) : null === value ? "null" : typeof value;
};
goog.fs = {};
goog.fs.url = {};
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.getUrlObject_ = function() {
  var urlObject = goog.fs.url.findUrlObject_();
  if (null != urlObject) {
    return urlObject;
  }
  throw Error("This browser doesn't seem to support blob URLs");
};
goog.fs.url.findUrlObject_ = function() {
  return void 0 !== goog.global.URL && void 0 !== goog.global.URL.createObjectURL ? goog.global.URL : void 0 !== goog.global.webkitURL && void 0 !== goog.global.webkitURL.createObjectURL ? goog.global.webkitURL : void 0 !== goog.global.createObjectURL ? goog.global : null;
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return null != goog.fs.url.findUrlObject_();
};
goog.html = {};
goog.html.trustedtypes = {};
goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#html") : null;
goog.i18n = {};
goog.i18n.bidi = {};
goog.i18n.bidi.FORCE_RTL = !1;
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || ("ar" == goog.LOCALE.substring(0, 2).toLowerCase() || "fa" == goog.LOCALE.substring(0, 2).toLowerCase() || "he" == goog.LOCALE.substring(0, 2).toLowerCase() || "iw" == goog.LOCALE.substring(0, 2).toLowerCase() || "ps" == goog.LOCALE.substring(0, 2).toLowerCase() || "sd" == goog.LOCALE.substring(0, 2).toLowerCase() || "ug" == goog.LOCALE.substring(0, 2).toLowerCase() || "ur" == goog.LOCALE.substring(0, 2).toLowerCase() || "yi" == goog.LOCALE.substring(0, 
2).toLowerCase()) && (2 == goog.LOCALE.length || "-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) || 3 <= goog.LOCALE.length && "ckb" == goog.LOCALE.substring(0, 3).toLowerCase() && (3 == goog.LOCALE.length || "-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) || 7 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) && ("adlm" == goog.LOCALE.substring(3, 7).toLowerCase() || "arab" == goog.LOCALE.substring(3, 
7).toLowerCase() || "hebr" == goog.LOCALE.substring(3, 7).toLowerCase() || "nkoo" == goog.LOCALE.substring(3, 7).toLowerCase() || "rohg" == goog.LOCALE.substring(3, 7).toLowerCase() || "thaa" == goog.LOCALE.substring(3, 7).toLowerCase()) || 8 <= goog.LOCALE.length && ("-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4)) && ("adlm" == goog.LOCALE.substring(4, 8).toLowerCase() || "arab" == goog.LOCALE.substring(4, 8).toLowerCase() || "hebr" == goog.LOCALE.substring(4, 8).toLowerCase() || 
"nkoo" == goog.LOCALE.substring(4, 8).toLowerCase() || "rohg" == goog.LOCALE.substring(4, 8).toLowerCase() || "thaa" == goog.LOCALE.substring(4, 8).toLowerCase());
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  return "number" == typeof givenDir ? 0 < givenDir ? goog.i18n.bidi.Dir.LTR : 0 > givenDir ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL : null == givenDir ? null : givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0900-\u1fff\u200e\u2c00-\ud801\ud804-\ud839\ud83c-\udbff\uf900-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u06ef\u06fa-\u08ff\u200f\ud802-\ud803\ud83a-\ud83b\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = void 0 === opt_isRtlContext ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext, mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$&" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  return "<" == html.charAt(0) ? html.replace(/<\w+/, "$& dir=rtl") : "\n<span dir=rtl>" + html + "</span>";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  return "<" == html.charAt(0) ? html.replace(/<\w+/, "$& dir=ltr") : "\n<span dir=ltr>" + html + "</span>";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = 0.40;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  for (var rtlCount = 0, totalCount = 0, hasWeaklyLtr = !1, tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_), i = 0; i < tokens.length; i++) {
    var token = tokens[i];
    goog.i18n.bidi.startsWithRtl(token) ? (rtlCount++, totalCount++) : goog.i18n.bidi.isRequiredLtrRe_.test(token) ? hasWeaklyLtr = !0 : goog.i18n.bidi.hasAnyLtr(token) ? totalCount++ : goog.i18n.bidi.hasNumeralsRe_.test(token) && (hasWeaklyLtr = !0);
  }
  return 0 == totalCount ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    var htmlElement = element;
    if (dir = goog.i18n.bidi.toDir(dir)) {
      htmlElement.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, htmlElement.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  var htmlElement = element;
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      htmlElement.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      htmlElement.dir = "rtl";
      break;
    default:
      htmlElement.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.string = {};
goog.string.TypedString = function() {
};
goog.string.Const = function(opt_token, opt_content) {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = opt_token === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && opt_content || "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = !0;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.DEBUG && (goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
});
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  }
  goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
  return "type_error:Const";
};
goog.string.Const.from = function(s) {
  return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.string.Const.EMPTY = goog.string.Const.from("");
goog.html.TrustedResourceUrl = function(opt_token, opt_content) {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = opt_token === goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && opt_content || "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = !0;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.html.TrustedResourceUrl.prototype.cloneWithParams = function(searchParams, opt_hashParams) {
  var url = goog.html.TrustedResourceUrl.unwrap(this), parts = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(url), urlBase = parts[1], urlSearch = parts[2] || "", urlHash = parts[3] || "";
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(urlBase + goog.html.TrustedResourceUrl.stringifyParams_("?", urlSearch, searchParams) + goog.html.TrustedResourceUrl.stringifyParams_("#", urlHash, opt_hashParams));
};
goog.DEBUG && (goog.html.TrustedResourceUrl.prototype.toString = function() {
  return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
});
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(trustedResourceUrl).toString();
};
goog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  }
  goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "' of type " + goog.typeOf(trustedResourceUrl));
  return "type_error:TrustedResourceUrl";
};
goog.html.TrustedResourceUrl.format = function(format, args) {
  var formatStr = goog.string.Const.unwrap(format);
  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {
    throw Error("Invalid TrustedResourceUrl format: " + formatStr);
  }
  var result = formatStr.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {
    if (!Object.prototype.hasOwnProperty.call(args, id)) {
      throw Error('Found marker, "' + id + '", in format string, "' + formatStr + '", but no valid label mapping found in args: ' + JSON.stringify(args));
    }
    var arg = args[id];
    return arg instanceof goog.string.Const ? goog.string.Const.unwrap(arg) : encodeURIComponent(String(arg));
  });
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
goog.html.TrustedResourceUrl.BASE_URL_ = /^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i;
goog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
goog.html.TrustedResourceUrl.formatWithParams = function(format, args, searchParams, opt_hashParams) {
  var url = goog.html.TrustedResourceUrl.format(format, args);
  return url.cloneWithParams(searchParams, opt_hashParams);
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.fromConstants = function(parts) {
  for (var unwrapped = "", i = 0; i < parts.length; i++) {
    unwrapped += goog.string.Const.unwrap(parts[i]);
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var value = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(url) : url;
  return new goog.html.TrustedResourceUrl(goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_, value);
};
goog.html.TrustedResourceUrl.stringifyParams_ = function(prefix, currentString, params) {
  if (null == params) {
    return currentString;
  }
  if ("string" === typeof params) {
    return params ? prefix + encodeURIComponent(params) : "";
  }
  for (var key in params) {
    for (var value = params[key], outputValues = goog.isArray(value) ? value : [value], i = 0; i < outputValues.length; i++) {
      var outputValue = outputValues[i];
      null != outputValue && (currentString || (currentString = prefix), currentString += (currentString.length > prefix.length ? "&" : "") + encodeURIComponent(key) + "=" + encodeURIComponent(String(outputValue)));
    }
  }
  return currentString;
};
goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.string.internal = {};
goog.string.internal.startsWith = function(str, prefix) {
  return 0 == str.lastIndexOf(prefix, 0);
};
goog.string.internal.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return 0 <= l && str.indexOf(suffix, l) == l;
};
goog.string.internal.caseInsensitiveStartsWith = function(str, prefix) {
  return 0 == goog.string.internal.caseInsensitiveCompare(prefix, str.substr(0, prefix.length));
};
goog.string.internal.caseInsensitiveEndsWith = function(str, suffix) {
  return 0 == goog.string.internal.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length));
};
goog.string.internal.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.internal.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(str)[1];
};
goog.string.internal.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase(), test2 = String(str2).toLowerCase();
  return test1 < test2 ? -1 : test1 == test2 ? 0 : 1;
};
goog.string.internal.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>");
};
goog.string.internal.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.internal.AMP_RE_, "&amp;").replace(goog.string.internal.LT_RE_, "&lt;").replace(goog.string.internal.GT_RE_, "&gt;").replace(goog.string.internal.QUOT_RE_, "&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.internal.NULL_RE_, "&#0;");
  } else {
    if (!goog.string.internal.ALL_RE_.test(str)) {
      return str;
    }
    -1 != str.indexOf("&") && (str = str.replace(goog.string.internal.AMP_RE_, "&amp;"));
    -1 != str.indexOf("<") && (str = str.replace(goog.string.internal.LT_RE_, "&lt;"));
    -1 != str.indexOf(">") && (str = str.replace(goog.string.internal.GT_RE_, "&gt;"));
    -1 != str.indexOf('"') && (str = str.replace(goog.string.internal.QUOT_RE_, "&quot;"));
    -1 != str.indexOf("'") && (str = str.replace(goog.string.internal.SINGLE_QUOTE_RE_, "&#39;"));
    -1 != str.indexOf("\x00") && (str = str.replace(goog.string.internal.NULL_RE_, "&#0;"));
  }
  return str;
};
goog.string.internal.AMP_RE_ = /&/g;
goog.string.internal.LT_RE_ = /</g;
goog.string.internal.GT_RE_ = />/g;
goog.string.internal.QUOT_RE_ = /"/g;
goog.string.internal.SINGLE_QUOTE_RE_ = /'/g;
goog.string.internal.NULL_RE_ = /\x00/g;
goog.string.internal.ALL_RE_ = /[\x00&<>"']/;
goog.string.internal.whitespaceEscape = function(str, opt_xml) {
  return goog.string.internal.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml);
};
goog.string.internal.contains = function(str, subString) {
  return -1 != str.indexOf(subString);
};
goog.string.internal.caseInsensitiveContains = function(str, subString) {
  return goog.string.internal.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.internal.compareVersions = function(version1, version2) {
  for (var order = 0, v1Subs = goog.string.internal.trim(String(version1)).split("."), v2Subs = goog.string.internal.trim(String(version2)).split("."), subCount = Math.max(v1Subs.length, v2Subs.length), subIdx = 0; 0 == order && subIdx < subCount; subIdx++) {
    var v1Sub = v1Subs[subIdx] || "", v2Sub = v2Subs[subIdx] || "";
    do {
      var v1Comp = /(\d*)(\D*)(.*)/.exec(v1Sub) || ["", "", "", ""], v2Comp = /(\d*)(\D*)(.*)/.exec(v2Sub) || ["", "", "", ""];
      if (0 == v1Comp[0].length && 0 == v2Comp[0].length) {
        break;
      }
      var v1CompNum = 0 == v1Comp[1].length ? 0 : parseInt(v1Comp[1], 10), v2CompNum = 0 == v2Comp[1].length ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.internal.compareElements_(v1CompNum, v2CompNum) || goog.string.internal.compareElements_(0 == v1Comp[2].length, 0 == v2Comp[2].length) || goog.string.internal.compareElements_(v1Comp[2], v2Comp[2]);
      v1Sub = v1Comp[3];
      v2Sub = v2Comp[3];
    } while (0 == order);
  }
  return order;
};
goog.string.internal.compareElements_ = function(left, right) {
  return left < right ? -1 : left > right ? 1 : 0;
};
goog.html.SafeUrl = function(opt_token, opt_content) {
  this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = opt_token === goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && opt_content || "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.DEBUG && (goog.html.SafeUrl.prototype.toString = function() {
  return "SafeUrl{" + this.privateDoNotAccessOrElseSafeUrlWrappedValue_ + "}";
});
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeUrlWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "' of type " + goog.typeOf(safeUrl));
  return "type_error:SafeUrl";
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-wav|wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime))(?:;\w+=(?:\w+|"[\w;=]+"))*$/i;
goog.html.SafeUrl.isSafeMimeType = function(mimeType) {
  return goog.html.SAFE_MIME_TYPE_PATTERN_.test(mimeType);
};
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var filteredDataUrl = dataUrl.replace(/(%0A|%0D)/g, ""), match = filteredDataUrl.match(goog.html.DATA_URL_PATTERN_), valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? filteredDataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SafeUrl.fromTelUrl = function(telUrl) {
  goog.string.internal.caseInsensitiveStartsWith(telUrl, "tel:") || (telUrl = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);
};
goog.html.SIP_URL_PATTERN_ = /^sip[s]?:[+a-z0-9_.!$%&'*\/=^`{|}~-]+@([a-z0-9-]+\.)+[a-z0-9]{2,63}$/i;
goog.html.SafeUrl.fromSipUrl = function(sipUrl) {
  goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(sipUrl)) || (sipUrl = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sipUrl);
};
goog.html.SafeUrl.fromFacebookMessengerUrl = function(facebookMessengerUrl) {
  goog.string.internal.caseInsensitiveStartsWith(facebookMessengerUrl, "fb-messenger://share") || (facebookMessengerUrl = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(facebookMessengerUrl);
};
goog.html.SafeUrl.fromWhatsAppUrl = function(whatsAppUrl) {
  goog.string.internal.caseInsensitiveStartsWith(whatsAppUrl, "whatsapp://send") || (whatsAppUrl = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(whatsAppUrl);
};
goog.html.SafeUrl.fromSmsUrl = function(smsUrl) {
  goog.string.internal.caseInsensitiveStartsWith(smsUrl, "sms:") && goog.html.SafeUrl.isSmsUrlBodyValid_(smsUrl) || (smsUrl = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(smsUrl);
};
goog.html.SafeUrl.isSmsUrlBodyValid_ = function(smsUrl) {
  var hash = smsUrl.indexOf("#");
  0 < hash && (smsUrl = smsUrl.substring(0, hash));
  var bodyParams = smsUrl.match(/[?&]body=/gi);
  if (!bodyParams) {
    return !0;
  }
  if (1 < bodyParams.length) {
    return !1;
  }
  var bodyValue = smsUrl.match(/[?&]body=([^&]*)/)[1];
  if (!bodyValue) {
    return !0;
  }
  try {
    decodeURIComponent(bodyValue);
  } catch (error) {
    return !1;
  }
  return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(bodyValue);
};
goog.html.SafeUrl.fromSshUrl = function(sshUrl) {
  goog.string.internal.caseInsensitiveStartsWith(sshUrl, "ssh://") || (sshUrl = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sshUrl);
};
goog.html.SafeUrl.sanitizeChromeExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeEdgeExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeExtensionUrl_ = function(scheme, url, extensionId) {
  var matches = scheme.exec(url);
  if (matches) {
    var extractedExtensionId = matches[1];
    var acceptedExtensionIds = extensionId instanceof goog.string.Const ? [goog.string.Const.unwrap(extensionId)] : extensionId.map(function(x) {
      return goog.string.Const.unwrap(x);
    });
    -1 == acceptedExtensionIds.indexOf(extractedExtensionId) && (url = goog.html.SafeUrl.INNOCUOUS_STRING);
  } else {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.fromTrustedResourceUrl = function(trustedResourceUrl) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  }
  url = "object" == typeof url && url.implementsGoogStringTypedString ? url.getTypedStringValue() : String(url);
  goog.html.SAFE_URL_PATTERN_.test(url) || (url = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.sanitizeAssertUnchanged = function(url, opt_allowDataUrl) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  }
  url = "object" == typeof url && url.implementsGoogStringTypedString ? url.getTypedStringValue() : String(url);
  if (opt_allowDataUrl && /^data:/i.test(url)) {
    var safeUrl = goog.html.SafeUrl.fromDataUrl(url);
    if (safeUrl.getTypedStringValue() == url) {
      return safeUrl;
    }
  }
  goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url), "%s does not match the safe URL pattern", url) || (url = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  return new goog.html.SafeUrl(goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_, url);
};
goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.array = {};
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ASSUME_NATIVE_FUNCTIONS = 2012 < goog.FEATURESET_YEAR;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = null == opt_fromIndex ? 0 : 0 > opt_fromIndex ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if ("string" === typeof arr) {
    return "string" !== typeof obj || 1 != obj.length ? -1 : arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i < arr.length; i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(null != arr.length);
  var fromIndex = null == opt_fromIndex ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = null == opt_fromIndex ? arr.length - 1 : opt_fromIndex;
  0 > fromIndex && (fromIndex = Math.max(0, arr.length + fromIndex));
  if ("string" === typeof arr) {
    return "string" !== typeof obj || 1 != obj.length ? -1 : arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex; 0 <= i; i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = "string" === typeof arr ? arr.split("") : arr, i = 0; i < l; i++) {
    i in arr2 && f.call(opt_obj, arr2[i], i, arr);
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = "string" === typeof arr ? arr.split("") : arr, i = l - 1; 0 <= i; --i) {
    i in arr2 && f.call(opt_obj, arr2[i], i, arr);
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  for (var l = arr.length, res = [], resLength = 0, arr2 = "string" === typeof arr ? arr.split("") : arr, i = 0; i < l; i++) {
    if (i in arr2) {
      var val = arr2[i];
      f.call(opt_obj, val, i, arr) && (res[resLength++] = val);
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  for (var l = arr.length, res = Array(l), arr2 = "string" === typeof arr ? arr.split("") : arr, i = 0; i < l; i++) {
    i in arr2 && (res[i] = f.call(opt_obj, arr2[i], i, arr));
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(null != arr.length);
  opt_obj && (f = goog.bind(f, opt_obj));
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val$jscomp$0, opt_obj) {
  var rval = val$jscomp$0;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(null != arr.length);
  goog.asserts.assert(null != f);
  opt_obj && (f = goog.bind(f, opt_obj));
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val$jscomp$0, opt_obj) {
  var rval = val$jscomp$0;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = "string" === typeof arr ? arr.split("") : arr, i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return !0;
    }
  }
  return !1;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = "string" === typeof arr ? arr.split("") : arr, i = 0; i < l; i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return !1;
    }
  }
  return !0;
};
goog.array.count = function(arr$jscomp$0, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr$jscomp$0, function(element, index, arr) {
    f.call(opt_obj, element, index, arr) && ++count;
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return 0 > i ? null : "string" === typeof arr ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = "string" === typeof arr ? arr.split("") : arr, i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return 0 > i ? null : "string" === typeof arr ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  for (var l = arr.length, arr2 = "string" === typeof arr ? arr.split("") : arr, i = l - 1; 0 <= i; i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return 0 <= goog.array.indexOf(arr, obj);
};
goog.array.isEmpty = function(arr) {
  return 0 == arr.length;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1; 0 <= i; i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  goog.array.contains(arr, obj) || arr.push(obj);
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  2 == arguments.length || 0 > (i = goog.array.indexOf(arr, opt_obj2)) ? arr.push(obj) : goog.array.insertAt(arr, obj, i);
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj), rv;
  (rv = 0 <= i) && goog.array.removeAt(arr, i);
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  return 0 <= i ? (goog.array.removeAt(arr, i), !0) : !1;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(null != arr.length);
  return 1 == Array.prototype.splice.call(arr, i, 1).length;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return 0 <= i ? (goog.array.removeAt(arr, i), !0) : !1;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    f.call(opt_obj, val, index, arr) && goog.array.removeAt(arr, index) && removedCount++;
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (0 < length) {
    for (var rv = Array(length), i = 0; i < length; i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0, len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0; j < len2; j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(null != arr.length);
  return 2 >= arguments.length ? Array.prototype.slice.call(arr, start) : Array.prototype.slice.call(arr, start, opt_end);
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  for (var returnArray = opt_rv || arr, defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  }, hashFn = opt_hashFn || defaultHashFn, seen = {}, cursorInsert = 0, cursorRead = 0; cursorRead < arr.length;) {
    var current = arr[cursorRead++], key = hashFn(current);
    Object.prototype.hasOwnProperty.call(seen, key) || (seen[key] = !0, returnArray[cursorInsert++] = current);
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, !1, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, !0, void 0, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  for (var left = 0, right = arr.length, found; left < right;) {
    var middle = left + (right - left >>> 1);
    var compareResult = isEvaluator ? compareFn.call(opt_selfObj, arr[middle], middle, arr) : compareFn(opt_target, arr[middle]);
    0 < compareResult ? left = middle + 1 : (right = middle, found = !compareResult);
  }
  return found ? left : -left - 1;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  for (var compArr = Array(arr.length), i = 0; i < arr.length; i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(compArr, stableCompareFn);
  for (i = 0; i < arr.length; i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  for (var compare = opt_compareFn || goog.array.defaultCompare, i = 1; i < arr.length; i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (0 < compareResult || 0 == compareResult && opt_strict) {
      return !1;
    }
  }
  return !0;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return !1;
  }
  for (var l = arr1.length, equalsFn = opt_equalsFn || goog.array.defaultCompareEquality, i = 0; i < l; i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return !1;
    }
  }
  return !0;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  for (var compare = opt_compareFn || goog.array.defaultCompare, l = Math.min(arr1.length, arr2.length), i = 0; i < l; i++) {
    var result = compare(arr1[i], arr2[i]);
    if (0 != result) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return 0 > index ? (goog.array.insertAt(array, value, -(index + 1)), !0) : !1;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return 0 <= index ? goog.array.removeAt(array, index) : !1;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  for (var buckets = {}, i = 0; i < array.length; i++) {
    var value = array[i], key = sorter.call(opt_obj, value, i, array);
    if (void 0 !== key) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [], start = 0, end = startOrEnd, step = opt_step || 1;
  void 0 !== opt_end && (start = startOrEnd, end = opt_end);
  if (0 > step * (end - start)) {
    return [];
  }
  if (0 < step) {
    for (var i = start; i < end; i += step) {
      array.push(i);
    }
  } else {
    for (i = start; i > end; i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  for (var array = [], i = 0; i < n; i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  for (var result = [], i = 0; i < arguments.length; i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0; c < element.length; c += 8192) {
        for (var chunk = goog.array.slice(element, c, c + 8192), recurseResult = goog.array.flatten.apply(null, chunk), r = 0; r < recurseResult.length; r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(null != array.length);
  array.length && (n %= array.length, 0 < n ? Array.prototype.unshift.apply(array, array.splice(-n, n)) : 0 > n && Array.prototype.push.apply(array, array.splice(0, -n)));
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(0 <= fromIndex && fromIndex < arr.length);
  goog.asserts.assert(0 <= toIndex && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  for (var result = [], minLen = arguments[0].length, i = 1; i < arguments.length; i++) {
    arguments[i].length < minLen && (minLen = arguments[i].length);
  }
  for (i = 0; i < minLen; i++) {
    for (var value = [], j = 0; j < arguments.length; j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  for (var randFn = opt_randFn || Math.random, i = arr.length - 1; 0 < i; i--) {
    var j = Math.floor(randFn() * (i + 1)), tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.dom.asserts = {};
goog.dom.asserts.assertIsLocation = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    win && (!o || !(o instanceof win.Location) && o instanceof win.Element) && goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
  }
  return o;
};
goog.dom.asserts.assertIsElementType_ = function(o, typename) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    win && "undefined" != typeof win[typename] && (o && (o instanceof win[typename] || !(o instanceof win.Location || o instanceof win.Element)) || goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s", typename, goog.dom.asserts.debugStringForType_(o)));
  }
  return o;
};
goog.dom.asserts.assertIsHTMLAnchorElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLAnchorElement");
};
goog.dom.asserts.assertIsHTMLButtonElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLButtonElement");
};
goog.dom.asserts.assertIsHTMLLinkElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLLinkElement");
};
goog.dom.asserts.assertIsHTMLImageElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLImageElement");
};
goog.dom.asserts.assertIsHTMLAudioElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLAudioElement");
};
goog.dom.asserts.assertIsHTMLVideoElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLVideoElement");
};
goog.dom.asserts.assertIsHTMLInputElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLInputElement");
};
goog.dom.asserts.assertIsHTMLTextAreaElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLTextAreaElement");
};
goog.dom.asserts.assertIsHTMLCanvasElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLCanvasElement");
};
goog.dom.asserts.assertIsHTMLEmbedElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLEmbedElement");
};
goog.dom.asserts.assertIsHTMLFormElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLFormElement");
};
goog.dom.asserts.assertIsHTMLFrameElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLFrameElement");
};
goog.dom.asserts.assertIsHTMLIFrameElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLIFrameElement");
};
goog.dom.asserts.assertIsHTMLObjectElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLObjectElement");
};
goog.dom.asserts.assertIsHTMLScriptElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLScriptElement");
};
goog.dom.asserts.debugStringForType_ = function(value) {
  if (goog.isObject(value)) {
    try {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } catch (e) {
      return "<object could not be stringified>";
    }
  } else {
    return void 0 === value ? "undefined" : null === value ? "null" : typeof value;
  }
};
goog.dom.asserts.getWindow_ = function(o) {
  try {
    var doc = o && o.ownerDocument, win = doc && (doc.defaultView || doc.parentWindow);
    win = win || goog.global;
    if (win.Element && win.Location) {
      return win;
    }
  } catch (ex) {
  }
  return null;
};
goog.dom.HtmlElement = function() {
};
goog.functions = {};
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = function() {
  return !1;
};
goog.functions.TRUE = function() {
  return !0;
};
goog.functions.NULL = function() {
  return null;
};
goog.functions.identity = function(opt_returnValue) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    var self = this;
    return f.apply(self, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  var rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    var self = this, newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(self, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments, length = functions.length;
  return function() {
    var self = this, result;
    length && (result = functions[length - 1].apply(self, arguments));
    for (var i = length - 2; 0 <= i; i--) {
      result = functions[i].call(self, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments, length = functions.length;
  return function() {
    for (var self = this, result, i = 0; i < length; i++) {
      result = functions[i].apply(self, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments, length = functions.length;
  return function() {
    for (var self = this, i = 0; i < length; i++) {
      if (!functions[i].apply(self, arguments)) {
        return !1;
      }
    }
    return !0;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments, length = functions.length;
  return function() {
    for (var self = this, i = 0; i < length; i++) {
      if (functions[i].apply(self, arguments)) {
        return !0;
      }
    }
    return !1;
  };
};
goog.functions.not = function(f) {
  return function() {
    var self = this;
    return !f.apply(self, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.functions.CACHE_RETURN_VALUE = !0;
goog.functions.cacheReturnValue = function(fn) {
  var called = !1, value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    called || (value = fn(), called = !0);
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  var timeout = 0;
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(opt_scope, args);
    }, interval);
  };
};
goog.functions.throttle = function(f, interval, opt_scope) {
  var timeout = 0, shouldFire = !1, args = [], handleTimeout = function() {
    timeout = 0;
    shouldFire && (shouldFire = !1, fire());
  }, fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(opt_scope, args);
  };
  return function(var_args) {
    args = arguments;
    timeout ? shouldFire = !0 : fire();
  };
};
goog.functions.rateLimit = function(f, interval, opt_scope) {
  var timeout = 0, handleTimeout = function() {
    timeout = 0;
  };
  return function(var_args) {
    timeout || (timeout = goog.global.setTimeout(handleTimeout, interval), f.apply(opt_scope, arguments));
  };
};
goog.dom.TagName = function(tagName) {
  this.tagName_ = tagName;
};
goog.dom.TagName.prototype.toString = function() {
  return this.tagName_;
};
goog.dom.TagName.A = new goog.dom.TagName("A");
goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
goog.dom.TagName.B = new goog.dom.TagName("B");
goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
goog.dom.TagName.BR = new goog.dom.TagName("BR");
goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
goog.dom.TagName.COL = new goog.dom.TagName("COL");
goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
goog.dom.TagName.DD = new goog.dom.TagName("DD");
goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
goog.dom.TagName.DL = new goog.dom.TagName("DL");
goog.dom.TagName.DT = new goog.dom.TagName("DT");
goog.dom.TagName.EM = new goog.dom.TagName("EM");
goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
goog.dom.TagName.H1 = new goog.dom.TagName("H1");
goog.dom.TagName.H2 = new goog.dom.TagName("H2");
goog.dom.TagName.H3 = new goog.dom.TagName("H3");
goog.dom.TagName.H4 = new goog.dom.TagName("H4");
goog.dom.TagName.H5 = new goog.dom.TagName("H5");
goog.dom.TagName.H6 = new goog.dom.TagName("H6");
goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
goog.dom.TagName.HR = new goog.dom.TagName("HR");
goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
goog.dom.TagName.I = new goog.dom.TagName("I");
goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
goog.dom.TagName.INS = new goog.dom.TagName("INS");
goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
goog.dom.TagName.LI = new goog.dom.TagName("LI");
goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
goog.dom.TagName.MAIN = new goog.dom.TagName("MAIN");
goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
goog.dom.TagName.MENUITEM = new goog.dom.TagName("MENUITEM");
goog.dom.TagName.META = new goog.dom.TagName("META");
goog.dom.TagName.METER = new goog.dom.TagName("METER");
goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
goog.dom.TagName.OL = new goog.dom.TagName("OL");
goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
goog.dom.TagName.P = new goog.dom.TagName("P");
goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
goog.dom.TagName.PICTURE = new goog.dom.TagName("PICTURE");
goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
goog.dom.TagName.Q = new goog.dom.TagName("Q");
goog.dom.TagName.RP = new goog.dom.TagName("RP");
goog.dom.TagName.RT = new goog.dom.TagName("RT");
goog.dom.TagName.RTC = new goog.dom.TagName("RTC");
goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
goog.dom.TagName.S = new goog.dom.TagName("S");
goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
goog.dom.TagName.TD = new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
goog.dom.TagName.TH = new goog.dom.TagName("TH");
goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
goog.dom.TagName.TR = new goog.dom.TagName("TR");
goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
goog.dom.TagName.TT = new goog.dom.TagName("TT");
goog.dom.TagName.U = new goog.dom.TagName("U");
goog.dom.TagName.UL = new goog.dom.TagName("UL");
goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
goog.object = {};
goog.object.is = function(v, v2) {
  return v === v2 ? 0 !== v || 1 / v === 1 / v2 : v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {}, key;
  for (key in obj) {
    f.call(opt_obj, obj[key], key, obj) && (res[key] = obj[key]);
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {}, key;
  for (key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return !0;
    }
  }
  return !1;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return !1;
    }
  }
  return !0;
};
goog.object.getCount = function(obj) {
  var rv = 0, key;
  for (key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [], i = 0, key;
  for (key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [], i = 0, key;
  for (key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  for (var isArrayLike = goog.isArrayLike(var_args), keys = isArrayLike ? var_args : arguments, i = isArrayLike ? 0 : 1; i < keys.length; i++) {
    if (null == obj) {
      return;
    }
    obj = obj[keys[i]];
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return null !== obj && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return !0;
    }
  }
  return !1;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return !1;
  }
  return !0;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  (rv = key in obj) && delete obj[key];
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (null !== obj && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  return null !== obj && key in obj ? obj[key] : opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  return obj[key] = val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return !1;
    }
  }
  for (var k$126 in b) {
    if (!(k$126 in a)) {
      return !1;
    }
  }
  return !0;
};
goog.object.clone = function(obj) {
  var res = {}, key;
  for (key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if ("object" == type || "array" == type) {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone$127 = "array" == type ? [] : {}, key;
    for (key in obj) {
      clone$127[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone$127;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {}, key;
  for (key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend = function(target, var_args) {
  for (var key, source, i = 1; i < arguments.length; i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j], Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (1 == argLength && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  for (var rv = {}, i = 0; i < argLength; i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (1 == argLength && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  for (var rv = {}, i = 0; i < argLength; i++) {
    rv[arguments[i]] = !0;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  Object.isFrozen && !Object.isFrozen(obj) && (result = Object.create(obj), Object.freeze(result));
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.object.getAllPropertyNames = function(obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {
  if (!obj) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(obj);
  }
  for (var visitedSet = {}, proto = obj; proto && (proto !== Object.prototype || opt_includeObjectPrototype) && (proto !== Function.prototype || opt_includeFunctionPrototype);) {
    for (var names = Object.getOwnPropertyNames(proto), i = 0; i < names.length; i++) {
      visitedSet[names[i]] = !0;
    }
    proto = Object.getPrototypeOf(proto);
  }
  return goog.object.getKeys(visitedSet);
};
goog.object.getSuperClass = function(constructor) {
  var proto = Object.getPrototypeOf(constructor.prototype);
  return proto && proto.constructor;
};
goog.dom.tags = {};
goog.dom.tags.VOID_TAGS_ = {area:!0, base:!0, br:!0, col:!0, command:!0, embed:!0, hr:!0, img:!0, input:!0, keygen:!0, link:!0, meta:!0, param:!0, source:!0, track:!0, wbr:!0};
goog.dom.tags.isVoidTag = function(tagName) {
  return !0 === goog.dom.tags.VOID_TAGS_[tagName];
};
goog.html.SafeScript = function() {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeScript.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeScript.fromConstant = function(script) {
  var scriptString = goog.string.Const.unwrap(script);
  return 0 === scriptString.length ? goog.html.SafeScript.EMPTY : goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);
};
goog.html.SafeScript.fromConstantAndArgs = function(code, var_args) {
  for (var args = [], i = 1; i < arguments.length; i++) {
    args.push(goog.html.SafeScript.stringify_(arguments[i]));
  }
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("(" + goog.string.Const.unwrap(code) + ")(" + args.join(", ") + ");");
};
goog.html.SafeScript.fromJson = function(val) {
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(val));
};
goog.html.SafeScript.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
};
goog.DEBUG && (goog.html.SafeScript.prototype.toString = function() {
  return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
});
goog.html.SafeScript.unwrap = function(safeScript) {
  return goog.html.SafeScript.unwrapTrustedScript(safeScript).toString();
};
goog.html.SafeScript.unwrapTrustedScript = function(safeScript) {
  if (safeScript instanceof goog.html.SafeScript && safeScript.constructor === goog.html.SafeScript && safeScript.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeScript, got '" + safeScript + "' of type " + goog.typeOf(safeScript));
  return "type_error:SafeScript";
};
goog.html.SafeScript.stringify_ = function(val) {
  var json = JSON.stringify(val);
  return json.replace(/</g, "\\x3c");
};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(script) {
  return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(script);
};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(script) {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(script) : script;
  return this;
};
goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (0 === styleString.length) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.asserts.assert(goog.string.internal.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.internal.contains(styleString, ":"), "Style string must contain at least one ':', to specify a \"name: value\" pair: " + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
goog.DEBUG && (goog.html.SafeStyle.prototype.toString = function() {
  return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
});
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "' of type " + goog.typeOf(safeStyle));
  return "type_error:SafeStyle";
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.create = function(map) {
  var style = "", name;
  for (name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    null != value && (value = goog.isArray(value) ? goog.array.map(value, goog.html.SafeStyle.sanitizePropertyValue_).join(" ") : goog.html.SafeStyle.sanitizePropertyValue_(value), style += name + ":" + value + ";");
  }
  return style ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style) : goog.html.SafeStyle.EMPTY;
};
goog.html.SafeStyle.sanitizePropertyValue_ = function(value) {
  if (value instanceof goog.html.SafeUrl) {
    var url = goog.html.SafeUrl.unwrap(value);
    return 'url("' + url.replace(/</g, "%3c").replace(/[\\"]/g, "\\$&") + '")';
  }
  var result = value instanceof goog.string.Const ? goog.string.Const.unwrap(value) : goog.html.SafeStyle.sanitizePropertyValueString_(String(value));
  if (/[{;}]/.test(result)) {
    throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.", [result]);
  }
  return result;
};
goog.html.SafeStyle.sanitizePropertyValueString_ = function(value) {
  var valueWithoutFunctions = value.replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.URL_RE_, "url");
  if (goog.html.SafeStyle.VALUE_RE_.test(valueWithoutFunctions)) {
    if (goog.html.SafeStyle.COMMENT_RE_.test(value)) {
      return goog.asserts.fail("String value disallows comments, got: " + value), goog.html.SafeStyle.INNOCUOUS_STRING;
    }
    if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
      return goog.asserts.fail("String value requires balanced quotes, got: " + value), goog.html.SafeStyle.INNOCUOUS_STRING;
    }
    if (!goog.html.SafeStyle.hasBalancedSquareBrackets_(value)) {
      return goog.asserts.fail("String value requires balanced square brackets and one identifier per pair of brackets, got: " + value), goog.html.SafeStyle.INNOCUOUS_STRING;
    }
  } else {
    return goog.asserts.fail("String value allows only " + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + " and simple functions, got: " + value), goog.html.SafeStyle.INNOCUOUS_STRING;
  }
  return goog.html.SafeStyle.sanitizeUrl_(value);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  for (var outsideSingle = !0, outsideDouble = !0, i = 0; i < value.length; i++) {
    var c = value.charAt(i);
    "'" == c && outsideDouble ? outsideSingle = !outsideSingle : '"' == c && outsideSingle && (outsideDouble = !outsideDouble);
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.hasBalancedSquareBrackets_ = function(value) {
  for (var outside = !0, tokenRe = /^[-_a-zA-Z0-9]$/, i = 0; i < value.length; i++) {
    var c = value.charAt(i);
    if ("]" == c) {
      if (outside) {
        return !1;
      }
      outside = !0;
    } else {
      if ("[" == c) {
        if (!outside) {
          return !1;
        }
        outside = !1;
      } else {
        if (!outside && !tokenRe.test(c)) {
          return !1;
        }
      }
    }
  }
  return outside;
};
goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ = "[-,.\"'%_!# a-zA-Z0-9\\[\\]]";
goog.html.SafeStyle.VALUE_RE_ = new RegExp("^" + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + "+$");
goog.html.SafeStyle.URL_RE_ = /\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g;
goog.html.SafeStyle.ALLOWED_FUNCTIONS_ = "calc cubic-bezier fit-content hsl hsla matrix minmax repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)?".split(" ");
goog.html.SafeStyle.FUNCTIONS_RE_ = new RegExp("\\b(" + goog.html.SafeStyle.ALLOWED_FUNCTIONS_.join("|") + ")\\([-+*/0-9a-z.%\\[\\], ]+\\)", "g");
goog.html.SafeStyle.COMMENT_RE_ = /\/\*/;
goog.html.SafeStyle.sanitizeUrl_ = function(value) {
  return value.replace(goog.html.SafeStyle.URL_RE_, function(match$jscomp$0, before, url, after) {
    var quote = "";
    url = url.replace(/^(['"])(.*)\1$/, function(match, start, inside) {
      quote = start;
      return inside;
    });
    var sanitized = goog.html.SafeUrl.sanitize(url).getTypedStringValue();
    return before + quote + sanitized + quote + after;
  });
};
goog.html.SafeStyle.concat = function(var_args) {
  var style = "", addArgument = function(argument) {
    goog.isArray(argument) ? goog.array.forEach(argument, addArgument) : style += goog.html.SafeStyle.unwrap(argument);
  };
  goog.array.forEach(arguments, addArgument);
  return style ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style) : goog.html.SafeStyle.EMPTY;
};
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.createRule = function(selector, style) {
  if (goog.string.internal.contains(selector, "<")) {
    throw Error("Selector does not allow '<', got: " + selector);
  }
  var selectorToCheck = selector.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
  if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(selectorToCheck)) {
    throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: " + selector);
  }
  if (!goog.html.SafeStyleSheet.hasBalancedBrackets_(selectorToCheck)) {
    throw Error("() and [] in selector must be balanced, got: " + selector);
  }
  style instanceof goog.html.SafeStyle || (style = goog.html.SafeStyle.create(style));
  var styleSheet = selector + "{" + goog.html.SafeStyle.unwrap(style).replace(/</g, "\\3C ") + "}";
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.SafeStyleSheet.hasBalancedBrackets_ = function(s) {
  for (var brackets = {"(":")", "[":"]"}, expectedBrackets = [], i = 0; i < s.length; i++) {
    var ch = s[i];
    if (brackets[ch]) {
      expectedBrackets.push(brackets[ch]);
    } else {
      if (goog.object.contains(brackets, ch) && expectedBrackets.pop() != ch) {
        return !1;
      }
    }
  }
  return 0 == expectedBrackets.length;
};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "", addArgument = function(argument) {
    goog.isArray(argument) ? goog.array.forEach(argument, addArgument) : result += goog.html.SafeStyleSheet.unwrap(argument);
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (0 === styleSheetString.length) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.internal.contains(styleSheetString, "<"), "Forbidden '<' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
goog.DEBUG && (goog.html.SafeStyleSheet.prototype.toString = function() {
  return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
});
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "' of type " + goog.typeOf(safeStyleSheet));
  return "type_error:SafeStyleSheet";
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.labs = {};
goog.labs.userAgent = {};
goog.labs.userAgent.util = {};
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.internal.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.internal.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  for (var versionRegExp = /(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g, data = [], match; match = versionRegExp.exec(userAgent);) {
    data.push([match[1], match[2], match[3] || void 0]);
  }
  return data;
};
goog.labs.userAgent.browser = {};
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdgeHtml_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchEdgeChromium_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edg/");
};
goog.labs.userAgent.browser.matchOperaChromium_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox") || goog.labs.userAgent.util.matchUserAgent("FxiOS");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdgeHtml_() || goog.labs.userAgent.browser.matchEdgeChromium_() || goog.labs.userAgent.browser.matchOperaChromium_() || goog.labs.userAgent.browser.matchFirefox_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && !goog.labs.userAgent.browser.matchFirefox_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdgeHtml_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdgeHtml_;
goog.labs.userAgent.browser.isEdgeChromium = goog.labs.userAgent.browser.matchEdgeChromium_;
goog.labs.userAgent.browser.isOperaChromium = goog.labs.userAgent.browser.matchOperaChromium_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString), versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0], value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isEdgeChromium()) {
    return lookUpValueWithKeys(["Edg"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return 0 <= goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(), version);
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "", msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if ("7.0" == msie[1]) {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.ENABLE_ERROR_MESSAGES = goog.DEBUG;
goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE = !0;
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = !0;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
};
goog.DEBUG && (goog.html.SafeHtml.prototype.toString = function() {
  return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
});
goog.html.SafeHtml.unwrap = function(safeHtml) {
  return goog.html.SafeHtml.unwrapTrustedHTML(safeHtml).toString();
};
goog.html.SafeHtml.unwrapTrustedHTML = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "' of type " + goog.typeOf(safeHtml));
  return "type_error:SafeHtml";
};
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var textIsObject = "object" == typeof textOrHtml, dir = null;
  textIsObject && textOrHtml.implementsGoogI18nBidiDirectionalString && (dir = textOrHtml.getDirection());
  var textAsString = textIsObject && textOrHtml.implementsGoogStringTypedString ? textOrHtml.getTypedStringValue() : String(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = {action:!0, cite:!0, data:!0, formaction:!0, href:!0, manifest:!0, poster:!0, src:!0};
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = {APPLET:!0, BASE:!0, EMBED:!0, IFRAME:!0, LINK:!0, MATH:!0, META:!0, OBJECT:!0, SCRIPT:!0, STYLE:!0, SVG:!0, TEMPLATE:!0};
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  goog.html.SafeHtml.verifyTagName(String(tagName));
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName), opt_attributes, opt_content);
};
goog.html.SafeHtml.verifyTagName = function(tagName) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Invalid tag name <" + tagName + ">." : "");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Tag name <" + tagName + "> is not allowed for SafeHtml." : "");
  }
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  opt_src && goog.html.TrustedResourceUrl.unwrap(opt_src);
  var fixedAttributes = {};
  fixedAttributes.src = opt_src || null;
  fixedAttributes.srcdoc = opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);
  var defaultAttributes = {sandbox:""}, attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createSandboxIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.canUseSandboxIframe()) {
    throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "The browser does not support sandboxed iframes." : "");
  }
  var fixedAttributes = {};
  fixedAttributes.src = opt_src ? goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src)) : null;
  fixedAttributes.srcdoc = opt_srcdoc || null;
  fixedAttributes.sandbox = "";
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.canUseSandboxIframe = function() {
  return goog.global.HTMLIFrameElement && "sandbox" in goog.global.HTMLIFrameElement.prototype;
};
goog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {
  goog.html.TrustedResourceUrl.unwrap(src);
  var fixedAttributes = {src:src}, defaultAttributes = {}, attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", attributes);
};
goog.html.SafeHtml.createScript = function(script, opt_attributes) {
  for (var attr in opt_attributes) {
    var attrLower = attr.toLowerCase();
    if ("language" == attrLower || "src" == attrLower || "text" == attrLower || "type" == attrLower) {
      throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot set "' + attrLower + '" attribute' : "");
    }
  }
  var content = "";
  script = goog.array.concat(script);
  for (var i = 0; i < script.length; i++) {
    content += goog.html.SafeScript.unwrap(script[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", opt_attributes, htmlContent);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {type:"text/css"}, defaultAttributes = {}, attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes), content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0; i < styleSheet.length; i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {
  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));
  (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) && goog.string.internal.contains(unwrappedUrl, ";") && (unwrappedUrl = "'" + unwrappedUrl.replace(/'/g, "%27") + "'");
  var attributes = {"http-equiv":"refresh", content:(opt_secs || 0) + "; url=" + unwrappedUrl};
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", attributes);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if ("style" == name.toLowerCase()) {
      if (goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {
        value = goog.html.SafeHtml.getStyleValue_(value);
      } else {
        throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "style" not supported.' : "");
      }
    } else {
      if (/^on/i.test(name)) {
        throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.' : "");
      }
      if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
        if (value instanceof goog.html.TrustedResourceUrl) {
          value = goog.html.TrustedResourceUrl.unwrap(value);
        } else {
          if (value instanceof goog.html.SafeUrl) {
            value = goog.html.SafeUrl.unwrap(value);
          } else {
            if ("string" === typeof value) {
              value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
            } else {
              throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or string, value "' + value + '" given.' : "");
            }
          }
        }
      }
    }
  }
  value.implementsGoogStringTypedString && (value = value.getTypedStringValue());
  goog.asserts.assert("string" === typeof value || "number" === typeof value, "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '="' + goog.string.internal.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'The "style" attribute requires goog.html.SafeStyle or map of style properties, ' + typeof value + " given: " + value : "");
  }
  value instanceof goog.html.SafeStyle || (value = goog.html.SafeStyle.create(value));
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.join = function(separator, parts) {
  var separatorHtml = goog.html.SafeHtml.htmlEscape(separator), dir = separatorHtml.getDirection(), content = [], addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content.push(goog.html.SafeHtml.unwrap(html));
      var htmlDir = html.getDirection();
      dir == goog.i18n.bidi.Dir.NEUTRAL ? dir = htmlDir : htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir && (dir = null);
    }
  };
  goog.array.forEach(parts, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content.join(goog.html.SafeHtml.unwrap(separatorHtml)), dir);
};
goog.html.SafeHtml.concat = function(var_args) {
  return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments));
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(html) : html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null, result = "<" + tagName;
  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);
  var content = opt_content;
  null == content ? content = [] : goog.isArray(content) || (content = [content]);
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag <" + tagName + "> does not allow content."), result += ">";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += ">" + goog.html.SafeHtml.unwrap(html) + "</" + tagName + ">";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes.dir;
  dirAttribute && (dir = /^(ltr|rtl|auto)$/i.test(dirAttribute) ? goog.i18n.bidi.Dir.NEUTRAL : null);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {
  var result = "";
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Invalid attribute name "' + name + '".' : "");
      }
      var value = opt_attributes[name];
      null != value && (result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value));
    }
  }
  return result;
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {}, name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case"), combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case"), combinedAttributes[name] = defaultAttributes[name];
  }
  if (opt_attributes) {
    for (name in opt_attributes) {
      var nameLower = name.toLowerCase();
      if (nameLower in fixedAttributes) {
        throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"' : "");
      }
      nameLower in defaultAttributes && delete combinedAttributes[nameLower];
      combinedAttributes[name] = opt_attributes[name];
    }
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.uncheckedconversions = {};
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(justification, html, opt_dir) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(justification, script) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(justification, style) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(justification, styleSheet) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.dom.safe = {};
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(node, position, html) {
  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrapTrustedHTML(html));
};
goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {MATH:!0, SCRIPT:!0, STYLE:!0, SVG:!0, TEMPLATE:!0};
goog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function() {
  if (goog.DEBUG && "undefined" === typeof document) {
    return !1;
  }
  var div = document.createElement("div"), childDiv = document.createElement("div");
  childDiv.appendChild(document.createElement("div"));
  div.appendChild(childDiv);
  if (goog.DEBUG && !div.firstChild) {
    return !1;
  }
  var innerChild = div.firstChild.firstChild;
  div.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);
  return !innerChild.parentElement;
});
goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function(elem, html) {
  if (goog.dom.safe.isInnerHtmlCleanupRecursive_()) {
    for (; elem.lastChild;) {
      elem.removeChild(elem.lastChild);
    }
  }
  elem.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setInnerHtml = function(elem, html) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var tagName = elem.tagName.toUpperCase();
    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName]) {
      throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + elem.tagName + ".");
    }
  }
  goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(elem, html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setFormElementAction = function(form, url) {
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  goog.dom.asserts.assertIsHTMLFormElement(form).action = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setButtonFormAction = function(button, url) {
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  goog.dom.asserts.assertIsHTMLButtonElement(button).formAction = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setInputFormAction = function(input, url) {
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  goog.dom.asserts.assertIsHTMLInputElement(input).formAction = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setStyle = function(elem, style) {
  elem.style.cssText = goog.html.SafeStyle.unwrap(style);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrapTrustedHTML(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setImageSrc = function(imageElement, url) {
  goog.dom.asserts.assertIsHTMLImageElement(imageElement);
  if (url instanceof goog.html.SafeUrl) {
    var safeUrl = url;
  } else {
    var allowDataUrl = /^data:image\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  imageElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setAudioSrc = function(audioElement, url) {
  goog.dom.asserts.assertIsHTMLAudioElement(audioElement);
  if (url instanceof goog.html.SafeUrl) {
    var safeUrl = url;
  } else {
    var allowDataUrl = /^data:audio\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  audioElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setVideoSrc = function(videoElement, url) {
  goog.dom.asserts.assertIsHTMLVideoElement(videoElement);
  if (url instanceof goog.html.SafeUrl) {
    var safeUrl = url;
  } else {
    var allowDataUrl = /^data:video\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  videoElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  goog.dom.asserts.assertIsHTMLEmbedElement(embed);
  embed.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  goog.dom.asserts.assertIsHTMLFrameElement(frame);
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrcdoc = function(iframe, html) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.srcdoc = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  goog.dom.asserts.assertIsHTMLLinkElement(link);
  link.rel = rel;
  goog.string.internal.caseInsensitiveContains(rel, "stylesheet") ? (goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'), link.href = goog.html.TrustedResourceUrl.unwrap(url)) : link.href = url instanceof goog.html.TrustedResourceUrl ? goog.html.TrustedResourceUrl.unwrap(url) : url instanceof goog.html.SafeUrl ? goog.html.SafeUrl.unwrap(url) : goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(url));
};
goog.dom.safe.setObjectData = function(object, url) {
  goog.dom.asserts.assertIsHTMLObjectElement(object);
  object.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
  var nonce = goog.getScriptNonce();
  nonce && script.setAttribute("nonce", nonce);
};
goog.dom.safe.setScriptContent = function(script, content) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.text = goog.html.SafeScript.unwrapTrustedScript(content);
  var nonce = goog.getScriptNonce();
  nonce && script.setAttribute("nonce", nonce);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.assignLocation = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  loc.assign(goog.html.SafeUrl.unwrap(safeUrl));
};
goog.dom.safe.replaceLocation = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  loc.replace(goog.html.SafeUrl.unwrap(safeUrl));
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs, opt_replace) {
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  var win = opt_openerWin || goog.global;
  return win.open(goog.html.SafeUrl.unwrap(safeUrl), opt_name ? goog.string.Const.unwrap(opt_name) : "", opt_specs, opt_replace);
};
goog.dom.safe.parseFromStringHtml = function(parser, html) {
  return goog.dom.safe.parseFromString(parser, html, "text/html");
};
goog.dom.safe.parseFromString = function(parser, content, type) {
  return parser.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(content), type);
};
goog.dom.safe.createImageFromBlob = function(blob) {
  if (!/^image\/.*/g.test(blob.type)) {
    throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");
  }
  var objectUrl = goog.global.URL.createObjectURL(blob), image = new goog.global.Image;
  image.onload = function() {
    goog.global.URL.revokeObjectURL(objectUrl);
  };
  goog.dom.safe.setImageSrc(image, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."), objectUrl));
  return image;
};
var HtmlImportsNamespace = {IronAjax:{}};
HtmlImportsNamespace.IronAjax.IronRequest = {};
Polymer({is:"iron-request", hostAttributes:{hidden:!0}, properties:{xhr:{type:Object, notify:!0, readOnly:!0, value:function() {
  return new XMLHttpRequest;
}}, response:{type:Object, notify:!0, readOnly:!0, value:function() {
  return null;
}}, status:{type:Number, notify:!0, readOnly:!0, value:0}, statusText:{type:String, notify:!0, readOnly:!0, value:""}, completes:{type:Object, readOnly:!0, notify:!0, value:function() {
  return new Promise(function(resolve, reject) {
    this.resolveCompletes = resolve;
    this.rejectCompletes = reject;
  }.bind(this));
}}, progress:{type:Object, notify:!0, readOnly:!0, value:function() {
  return {};
}}, aborted:{type:Boolean, notify:!0, readOnly:!0, value:!1}, errored:{type:Boolean, notify:!0, readOnly:!0, value:!1}, timedOut:{type:Boolean, notify:!0, readOnly:!0, value:!1}}, get succeeded() {
  if (this.errored || this.aborted || this.timedOut) {
    return !1;
  }
  var status = this.xhr.status || 0;
  return 0 === status || 200 <= status && 300 > status;
}, send:function(options) {
  var xhr = this.xhr;
  if (0 < xhr.readyState) {
    return null;
  }
  xhr.addEventListener("progress", function(progress) {
    this._setProgress({lengthComputable:progress.lengthComputable, loaded:progress.loaded, total:progress.total});
  }.bind(this));
  xhr.addEventListener("error", function(error) {
    this._setErrored(!0);
    this._updateStatus();
    var response = options.rejectWithRequest ? {error:error, request:this} : error;
    this.rejectCompletes(response);
  }.bind(this));
  xhr.addEventListener("timeout", function(error) {
    this._setTimedOut(!0);
    this._updateStatus();
    var response = options.rejectWithRequest ? {error:error, request:this} : error;
    this.rejectCompletes(response);
  }.bind(this));
  xhr.addEventListener("abort", function() {
    this._setAborted(!0);
    this._updateStatus();
    var error = Error("Request aborted."), response = options.rejectWithRequest ? {error:error, request:this} : error;
    this.rejectCompletes(response);
  }.bind(this));
  xhr.addEventListener("loadend", function() {
    this._updateStatus();
    this._setResponse(this.parseResponse());
    if (this.succeeded) {
      this.resolveCompletes(this);
    } else {
      var error = Error("The request failed with status code: " + this.xhr.status), response = options.rejectWithRequest ? {error:error, request:this} : error;
      this.rejectCompletes(response);
    }
  }.bind(this));
  this.url = options.url;
  var isXHRAsync = !1 !== options.async;
  xhr.open(options.method || "GET", options.url, isXHRAsync);
  var acceptType = {json:"application/json", text:"text/plain", html:"text/html", xml:"application/xml", arraybuffer:"application/octet-stream"}[options.handleAs], headers = options.headers || Object.create(null), newHeaders = Object.create(null), key;
  for (key in headers) {
    newHeaders[key.toLowerCase()] = headers[key];
  }
  headers = newHeaders;
  acceptType && !headers.accept && (headers.accept = acceptType);
  Object.keys(headers).forEach(function(requestHeader) {
    /[A-Z]/.test(requestHeader) && Polymer.Base._error("Headers must be lower case, got", requestHeader);
    xhr.setRequestHeader(requestHeader, headers[requestHeader]);
  }, this);
  if (isXHRAsync) {
    xhr.timeout = options.timeout;
    var handleAs = options.handleAs;
    if (options.jsonPrefix || !handleAs) {
      handleAs = "text";
    }
    xhr.responseType = xhr._responseType = handleAs;
    options.jsonPrefix && (xhr._jsonPrefix = options.jsonPrefix);
  }
  xhr.withCredentials = !!options.withCredentials;
  var body = this._encodeBodyObject(options.body, headers["content-type"]);
  xhr.send(body);
  return this.completes;
}, parseResponse:function() {
  var xhr = this.xhr, responseType = xhr.responseType || xhr._responseType, preferResponseText = !this.xhr.responseType, prefixLen = xhr._jsonPrefix && xhr._jsonPrefix.length || 0;
  try {
    switch(responseType) {
      case "json":
        if (preferResponseText || void 0 === xhr.response) {
          try {
            return JSON.parse(xhr.responseText);
          } catch (_) {
            return null;
          }
        }
        return xhr.response;
      case "xml":
        return xhr.responseXML;
      case "blob":
      case "document":
      case "arraybuffer":
        return xhr.response;
      default:
        if (prefixLen) {
          try {
            return JSON.parse(xhr.responseText.substring(prefixLen));
          } catch (_$128) {
            return null;
          }
        }
        return xhr.responseText;
    }
  } catch (e) {
    this.rejectCompletes(Error("Could not parse response. " + e.message));
  }
}, abort:function() {
  this._setAborted(!0);
  this.xhr.abort();
}, _encodeBodyObject:function(body, contentType) {
  if ("string" == typeof body) {
    return body;
  }
  var bodyObj = body;
  switch(contentType) {
    case "application/json":
      return JSON.stringify(bodyObj);
    case "application/x-www-form-urlencoded":
      return this._wwwFormUrlEncode(bodyObj);
  }
  return body;
}, _wwwFormUrlEncode:function(object) {
  if (!object) {
    return "";
  }
  var pieces = [];
  Object.keys(object).forEach(function(key) {
    pieces.push(this._wwwFormUrlEncodePiece(key) + "=" + this._wwwFormUrlEncodePiece(object[key]));
  }, this);
  return pieces.join("&");
}, _wwwFormUrlEncodePiece:function(str) {
  return null === str ? "" : encodeURIComponent(str.toString().replace(/\r?\n/g, "\r\n")).replace(/%20/g, "+");
}, _updateStatus:function() {
  this._setStatus(this.xhr.status);
  this._setStatusText(void 0 === this.xhr.statusText ? "" : this.xhr.statusText);
}});
HtmlImportsNamespace.IronAjax.IronAjax = {};
Polymer({is:"iron-ajax", hostAttributes:{hidden:!0}, properties:{url:{type:String}, params:{type:Object, value:function() {
  return {};
}}, method:{type:String, value:"GET"}, headers:{type:Object, value:function() {
  return {};
}}, contentType:{type:String, value:null}, body:{type:Object, value:null}, sync:{type:Boolean, value:!1}, handleAs:{type:String, value:"json"}, withCredentials:{type:Boolean, value:!1}, timeout:{type:Number, value:0}, auto:{type:Boolean, value:!1}, verbose:{type:Boolean, value:!1}, lastRequest:{type:Object, notify:!0, readOnly:!0}, loading:{type:Boolean, notify:!0, readOnly:!0}, lastResponse:{type:Object, notify:!0, readOnly:!0}, lastError:{type:Object, notify:!0, readOnly:!0}, activeRequests:{type:Array, 
notify:!0, readOnly:!0, value:function() {
  return [];
}}, debounceDuration:{type:Number, value:0, notify:!0}, jsonPrefix:{type:String, value:""}, bubbles:{type:Boolean, value:!1}, rejectWithRequest:{type:Boolean, value:!1}, _boundHandleResponse:{type:Function, value:function() {
  return this._handleResponse.bind(this);
}}}, observers:["_requestOptionsChanged(url, method, params.*, headers, contentType, body, sync, handleAs, jsonPrefix, withCredentials, timeout, auto)"], get queryString() {
  var queryParts = [];
  for (param in this.params) {
    var value = this.params[param];
    var param = window.encodeURIComponent(param);
    if (Array.isArray(value)) {
      for (var i = 0; i < value.length; i++) {
        queryParts.push(param + "=" + window.encodeURIComponent(value[i]));
      }
    } else {
      null !== value ? queryParts.push(param + "=" + window.encodeURIComponent(value)) : queryParts.push(param);
    }
  }
  return queryParts.join("&");
}, get requestUrl() {
  var queryString = this.queryString, url = this.url || "";
  if (queryString) {
    var bindingChar = 0 <= url.indexOf("?") ? "&" : "?";
    return url + bindingChar + queryString;
  }
  return url;
}, get requestHeaders() {
  var headers = {}, contentType = this.contentType;
  null == contentType && "string" === typeof this.body && (contentType = "application/x-www-form-urlencoded");
  contentType && (headers["content-type"] = contentType);
  var header;
  if ("object" === typeof this.headers) {
    for (header in this.headers) {
      headers[header] = this.headers[header].toString();
    }
  }
  return headers;
}, toRequestOptions:function() {
  return {url:this.requestUrl || "", method:this.method, headers:this.requestHeaders, body:this.body, async:!this.sync, handleAs:this.handleAs, jsonPrefix:this.jsonPrefix, withCredentials:this.withCredentials, timeout:this.timeout, rejectWithRequest:this.rejectWithRequest};
}, generateRequest:function() {
  var request = document.createElement("iron-request"), requestOptions = this.toRequestOptions();
  this.push("activeRequests", request);
  request.completes.then(this._boundHandleResponse).catch(this._handleError.bind(this, request)).then(this._discardRequest.bind(this, request));
  var evt = this.fire("iron-ajax-presend", {request:request, options:requestOptions}, {bubbles:this.bubbles, cancelable:!0});
  if (evt.defaultPrevented) {
    return request.abort(), request.rejectCompletes(request), request;
  }
  request.send(requestOptions);
  this._setLastRequest(request);
  this._setLoading(!0);
  this.fire("request", {request:request, options:requestOptions}, {bubbles:this.bubbles, composed:!0});
  this.fire("iron-ajax-request", {request:request, options:requestOptions}, {bubbles:this.bubbles, composed:!0});
  return request;
}, _handleResponse:function(request) {
  request === this.lastRequest && (this._setLastResponse(request.response), this._setLastError(null), this._setLoading(!1));
  this.fire("response", request, {bubbles:this.bubbles, composed:!0});
  this.fire("iron-ajax-response", request, {bubbles:this.bubbles, composed:!0});
}, _handleError:function(request, error) {
  this.verbose && Polymer.Base._error(error);
  request === this.lastRequest && (this._setLastError({request:request, error:error, status:request.xhr.status, statusText:request.xhr.statusText, response:request.xhr.response}), this._setLastResponse(null), this._setLoading(!1));
  this.fire("iron-ajax-error", {request:request, error:error}, {bubbles:this.bubbles, composed:!0});
  this.fire("error", {request:request, error:error}, {bubbles:this.bubbles, composed:!0});
}, _discardRequest:function(request) {
  var requestIndex = this.activeRequests.indexOf(request);
  -1 < requestIndex && this.splice("activeRequests", requestIndex, 1);
}, _requestOptionsChanged:function() {
  this.debounce("generate-request", function() {
    null != this.url && this.auto && this.generateRequest();
  }, this.debounceDuration);
}});
"scrollRestoration" in history && (history.scrollRestoration = "manual");
stateMixin("state.browserUI.url state.browserUI.setURL state.browserUI.setTitle state.browserUI.reload state.browserUI.historyState.* state.browserUI.hash state.view.*".split(" "), {is:"browser-ui", stateReady:function() {
  this.width = document.documentElement.clientWidth;
  this.height = document.documentElement.clientHeight;
  window.addEventListener("resize", this.resized.bind(this));
  this.fireResized();
  window.addEventListener("popstate", this.popstate.bind(this));
  document.body.onscroll = this.scroll.bind(this);
  document.body.onkeydown = this.keydown.bind(this);
  this.scroll();
  this.firstLoad = !0;
  this.popstate();
  this.firstLoad = !1;
}, resized:function() {
  var width = document.documentElement.clientWidth, height = document.documentElement.clientHeight;
  if (width != this.width || height != this.height) {
    this.width = width, this.height = height, this.debounce("resized", this.fireResized, 60);
  }
}, fireResized:function() {
  this.dispatch({type:"WINDOW_RESIZE", width:this.width, height:this.height});
}, scroll:function() {
  this.dispatch({type:"WINDOW_SCROLL", scrollY:window.scrollY});
}, keydown:function(e) {
  var el = e.target;
  if ("INPUT" != el.tagName && "TEXTAREA" != el.tagName && !(e.ctrlKey || e.altKey || e.metaKey) && this.resultsVisible) {
    switch(e.which) {
      case 37:
        var prevId = this.get("state.result.nav.prevId") || !1, prevPageDiff = this.get("state.result.nav.prevPageDiff");
        prevId && this.dispatch({type:"NAV_RESULT", result:prevId, page:prevPageDiff});
        break;
      case 39:
        var nextId = this.get("state.result.nav.nextId") || !1, nextPageDiff = this.get("state.result.nav.nextPageDiff");
        nextId && this.dispatch({type:"NAV_RESULT", result:nextId, page:nextPageDiff});
        break;
      case 27:
        this.dispatch({type:"ESC_BACK"});
        break;
      case 65:
        this.dispatch({type:"RESULT_IMG_PREV"});
        break;
      case 68:
        this.dispatch({type:"RESULT_IMG_NEXT"});
        break;
      case 87:
        this.dispatch({type:"RESULT_IMG_ROTATE_RIGHT"});
        break;
      case 83:
        this.dispatch({type:"RESULT_IMG_ROTATE_LEFT"});
        break;
      case 73:
        this.dispatch({type:"RESULT_IMG_TOGGLE"});
        break;
      default:
        return;
    }
    e.preventDefault();
  }
}, popstate:function() {
  var historyState = window.history.state || {}, version = historyState._version;
  if (!version || version == window.version) {
    var hs = historyState.state;
    console.log("Restoring state", hs);
  }
  this.dispatch({type:"URL_CHANGE", pathname:window.location.pathname, search:window.location.search, hash:window.location.hash, historyState:hs, firstLoad:this.firstLoad});
}, render:function(state, paths) {
  if (paths["state.view.*"]) {
    var showResultPage = "result" == this.get("state.view.mode"), showResultListPage = "resultlist" == this.get("state.view.mode"), sideBySide = this.get("state.view.resultlist.sideBySide");
    this.resultsVisible = showResultPage || showResultListPage && sideBySide;
  }
  if (paths["state.browserUI.url"]) {
    var url = this.get("state.browserUI.url");
    if (url) {
      var i = url.indexOf("#");
      -1 != i && (url = url.substr(0, i));
      ga("send", "pageview", {page:url});
    }
  }
  if (paths["state.browserUI.setURL"]) {
    var url$129 = this.get("state.browserUI.setURL"), oldUrl = window.location.pathname + window.location.search + window.location.hash;
    url$129 && oldUrl != url$129 && (console.log("URL changed from", oldUrl, "to", url$129), window.history.pushState(null, "", url$129));
  }
  if (paths["state.browserUI.historyState.*"]) {
    var hs = this.get("state.browserUI.historyState");
    if (hs) {
      var historyState = {};
      historyState._version = window.version;
      historyState.state = hs;
      window.history.replaceState(historyState, "");
    }
  }
  if (paths["state.browserUI.setTitle"]) {
    var title = this.get("state.browserUI.setTitle");
    title && (document.title = title);
  }
  if (paths["state.browserUI.reload"]) {
    var reload = this.get("state.browserUI.reload");
    reload && window.location.replace(this.get("state.browserUI.url"));
  }
}, rendered:function() {
  this.resized();
}});
stateMixin(["state.remote.fetches.splices"], {is:"remote-fetch", properties:{outstanding:Object}, stateReady:function() {
  this.outstanding = {};
}, render:function(state, paths) {
  if (paths["state.remote.fetches.splices"]) {
    var fetches = this.get("state.remote.fetches");
    if (fetches) {
      for (var want = {}, $jscomp$iter$53 = $jscomp.makeIterator(fetches), $jscomp$key$fetch = $jscomp$iter$53.next(); !$jscomp$key$fetch.done; $jscomp$key$fetch = $jscomp$iter$53.next()) {
        var fetch = $jscomp$key$fetch.value;
        this.outstanding[fetch.num] || this.send(fetch);
        want[fetch.num] = !0;
      }
      for (var key in this.outstanding) {
        if (!want[key]) {
          var xhr = this.outstanding[key].xhr;
          delete this.outstanding[key];
          xhr.abort();
        }
      }
    }
  }
}, send:function(fetch) {
  var xhr = new XMLHttpRequest, response = function() {
    this.response(xhr, fetch);
  }.bind(this);
  xhr.addEventListener("load", response);
  xhr.addEventListener("error", response);
  xhr.addEventListener("timeout", response);
  xhr.addEventListener("abort", response);
  var params = [], key;
  for (key in fetch.params) {
    if (fetch.params[key] instanceof Array) {
      for (var $jscomp$iter$54 = $jscomp.makeIterator(fetch.params[key]), $jscomp$key$p = $jscomp$iter$54.next(); !$jscomp$key$p.done; $jscomp$key$p = $jscomp$iter$54.next()) {
        var p = $jscomp$key$p.value;
        params.push(key + "=" + encodeURIComponent(p));
      }
    } else {
      params.push(key + "=" + encodeURIComponent(fetch.params[key]));
    }
  }
  var url = fetch.url + "?" + params.join("&");
  xhr.open("GET", url);
  xhr.send();
  this.outstanding[fetch.num] = clone(fetch);
  this.outstanding[fetch.num].xhr = xhr;
}, response:function(xhr, fetch) {
  if (this.outstanding[fetch.num] && 0 != xhr.status) {
    this.reloadIfNewVersion(xhr);
    var debug_info = xhr.getResponseHeader("X-Frontend-Debuginfo") || "";
    debug_info && console.log(fetch.url, fetch.params, debug_info);
    200 != xhr.status ? this.dispatch({type:"REMOTE_FETCH_ERROR", request:fetch, response:xhr}) : this.dispatch({type:fetch.type, request:fetch, response:xhr});
  }
}, reloadIfNewVersion:function(xhr) {
  if (xhr.responseText) {
    var v = xhr.getResponseHeader("X-Frontend-Version") || "";
    "" != v && window.version != v && this.dispatch({type:"RELOAD", why:"New version " + v + ", old version " + window.version + "."});
  }
}});
function devInfo(var_args) {
  window.experiments.enableDevJs && console.log.apply(this, arguments);
}
function devTime(var_args) {
  window.experiments.enableDevJs && console.time.apply(this, arguments);
}
function devTimeEnd(var_args) {
  window.experiments.enableDevJs && console.timeEnd.apply(this, arguments);
}
function StateElement() {
}
StateElement.prototype.stateReady = function() {
};
StateElement.prototype.state = {};
StateElement.prototype.state.dispatch = function() {
};
StateElement.prototype.render = function() {
};
StateElement.prototype.rendered = function() {
};
StateElement.prototype.dispatch = function() {
};
StateElement.prototype._s_stateReady = function() {
};
StateElement.prototype._s_renderDebounced = function() {
};
function stateMixin(paths, element) {
  var observers = ["_s_stateReady(state.ready)"];
  if (paths) {
    for (var $jscomp$loop$185 = {}, i = 0; i < paths.length; $jscomp$loop$185 = {$jscomp$loop$prop$p$186:$jscomp$loop$185.$jscomp$loop$prop$p$186}, i++) {
      var fn = "_s_render" + i;
      $jscomp$loop$185.$jscomp$loop$prop$p$186 = paths[i];
      element[fn] = function($jscomp$loop$185) {
        return function() {
          element.render && (this._renderPaths || (this._renderPaths = {}), this._renderPaths[$jscomp$loop$185.$jscomp$loop$prop$p$186] = this._renderPaths[$jscomp$loop$185.$jscomp$loop$prop$p$186] || [], this._renderPaths[$jscomp$loop$185.$jscomp$loop$prop$p$186].push(arguments), this.debounce(this.is + "_renderDebounce", this._s_renderDebounced));
        };
      }($jscomp$loop$185);
      observers.push(fn + "(" + $jscomp$loop$185.$jscomp$loop$prop$p$186 + ")");
    }
  }
  element.properties = element.properties || {};
  element.properties.state || (element.properties.state = {type:Object, value:null});
  element.properties.readied = {type:Boolean, value:!1};
  element.properties._renderPaths = {type:Object, value:null};
  element.observers = (element.observers || []).concat(observers);
  element.ready && console.error(element.is + " has .ready() defined");
  var readyFn = element.ready;
  element.ready = function() {
    null === this.state && devInfo(element.is + " has null state", this);
    this._preReadyQueue = [];
    readyFn && readyFn.apply(this, arguments);
    devInfo("ready(" + element.is + ")");
  };
  element._s_stateReady = function() {
    if (this.state && this.state.ready && !this.readied && (devInfo("stateReady(" + element.is + ")"), this.readied = !0, element.stateReady && element.stateReady.apply(this, []), this._preReadyQueue)) {
      for (var $jscomp$iter$55 = $jscomp.makeIterator(this._preReadyQueue), $jscomp$key$action = $jscomp$iter$55.next(); !$jscomp$key$action.done; $jscomp$key$action = $jscomp$iter$55.next()) {
        var action = $jscomp$key$action.value;
        devInfo("dispatching queued pre-ready action");
        this.dispatch(action);
      }
      this._preReadyQueue = null;
    }
  };
  element._s_renderDebounced = function() {
    var timeName$jscomp$0 = "render(" + element.is + "): " + JSON.stringify(Object.keys(this._renderPaths));
    devTime(timeName$jscomp$0);
    var rp = this._renderPaths;
    this._renderedPaths || (this._renderedPaths = {});
    for (var k in this._renderPaths) {
      this._renderedPaths[k] = (this._renderedPaths[k] || []).concat(this._renderPaths[k]);
    }
    this._renderPaths = null;
    this.render(this.state, rp);
    devTimeEnd(timeName$jscomp$0);
    element.rendered && Polymer.RenderStatus.afterNextRender(this, function() {
      this.debounce(this.is + "_renderedDebounce", function() {
        var timeName = "rendered(" + element.is + ")";
        devTime(timeName);
        element.rendered.apply(this, [this.state, this._renderedPaths]);
        devTimeEnd(timeName);
        this._renderedPaths = null;
      });
    }.bind(this));
  };
  element.dispatch = function(action) {
    this.state ? this.state.dispatch(this, action) : this._preReadyQueue.push(action);
  };
  var timeName = "Polymer(" + element.is + ")";
  devTime(timeName);
  Polymer(element);
  devTimeEnd(timeName);
}
Polymer({is:"search-state", properties:{state:{type:Object, notify:!0}, dispatching:Boolean, lastAction:String}, ready:function() {
  window.addEventListener("WebComponentsReady", this.webComponentsReady.bind(this));
}, webComponentsReady:function() {
  this.dispatch(this, {type:"READY"});
}, dispatch:function(el, action) {
  this.dispatching && devInfo("Already inside dispatch() with action", this.lastAction, "got new action:", action, "async executing");
  var that = this;
  this.async(function() {
    that._dispatch.apply(that, [el, action]);
  });
}, _dispatch:function(el, action) {
  this.dispatching = !0;
  this.lastAction = action;
  var name = "dispatch(" + action.type + ")";
  console.group(name);
  console.time(name);
  console.info("Action", action);
  devInfo(el);
  var err = reduceState(this, "state", action);
  console.info("State", clone(this.state));
  err && (console.error("Error applying action", action, err), console.trace(action));
  console.timeEnd(name);
  console.groupEnd();
  this.dispatching = !1;
}});
function reduceState(el, stateProperty, action) {
  try {
    return _reduceState(el, stateProperty, action);
  } catch (e) {
    return "caught exception: " + e + ", stack: " + e.stack;
  }
}
function _reduceState(el, stateProperty, action$jscomp$0) {
  var leftEdit = !1, changePaths = [], flatten = function(k) {
    if (k instanceof Array) {
      var parts = [];
      for (var $jscomp$iter$56 = $jscomp.makeIterator(k), $jscomp$key$part = $jscomp$iter$56.next(); !$jscomp$key$part.done; $jscomp$key$part = $jscomp$iter$56.next()) {
        var part = $jscomp$key$part.value;
        parts.splice.apply(parts, [parts.length, 0].concat($jscomp.arrayFromIterable(part.split("."))));
      }
      return parts.join(".");
    }
    return k;
  }, p = function(k) {
    var parts = k.split("."), obj = el.get(stateProperty);
    if (!obj) {
      return stateProperty + parts.join(".");
    }
    for (var i = 1; i < parts.length - 1; i++) {
      var part = parts[i];
      var objChild = Array.isArray(obj) && "#" == part[0] ? Polymer.Collection.get(obj).getItem(part) : obj[part];
      void 0 === objChild && (objChild = "#" == part[0] || parseInt(part, 10) == part ? [] : {}, el.set(stateProperty + parts.slice(0, i + 1).join("."), objChild));
      obj = objChild;
    }
    return stateProperty + k;
  }, get = function(path) {
    return el.get(stateProperty + flatten(path));
  }, set = function(path, value) {
    path = flatten(path);
    var time = "set(" + path + ")";
    devTime(time);
    el.set(p(path), value);
    changePaths.push(path);
    devTimeEnd(time);
  }, splice = function(path, start, delCount) {
    path = flatten(path);
    var time = "splice(" + path + ")";
    devTime(time);
    el.splice.apply(el, [p(path), start, delCount].concat($jscomp.arrayFromIterable(Array(arguments).slice(3))));
    changePaths.push(path);
    devTimeEnd(time);
  }, push = function(path, value) {
    path = flatten(path);
    var time = "push(" + path + ")";
    devTime(time);
    el.push(p(path), value);
    changePaths.push(path);
    devTimeEnd(time);
  }, changed = function(path) {
    for (var $jscomp$iter$57 = $jscomp.makeIterator(changePaths), $jscomp$key$c = $jscomp$iter$57.next(); !$jscomp$key$c.done; $jscomp$key$c = $jscomp$iter$57.next()) {
      var c = $jscomp$key$c.value;
      if (c.startsWith(path) && (c.length == path.length || "." == c[path.length])) {
        return !0;
      }
    }
    return !1;
  }, addRemote = function(type, url, params, info) {
    var fetches = get(".remote.fetches"), num = get(".remote.num") || 0;
    set(".remote.num", num + 1);
    void 0 == fetches && set(".remote.fetches", []);
    push(".remote.fetches", {num:num, type:type, url:url, params:params, info:info});
  }, removeRemote = function(fn) {
    var fetches = get(".remote.fetches");
    if (fetches) {
      for (var i = 0; i < fetches.length; i++) {
        fn(fetches[i]) && (splice(".remote.fetches", i, 1), i--);
      }
    }
  }, finishRemote = function(action) {
    removeRemote(function(fetch) {
      return fetch.num == action.request.num;
    });
  }, searchableFields = "terms assignee inventor country language before after status type".split(" "), clearFields = searchableFields.slice();
  clearFields.push("page");
  clearFields.push("oq");
  var doParseSearch = function(index) {
    if (void 0 === get(".parse.suggestions") || get(".parse.suggestions.loading")) {
      set(".parse.executeImmediately", !0), get(".parse.suggestions.loading") || getParseSuggestions();
    } else {
      var item = get(".parse.suggestions.values.results." + index);
      if (item) {
        if (item.query_url) {
          for (var query = fromQueryUrl(item.query_url), $jscomp$iter$58 = $jscomp.makeIterator(searchableFields), $jscomp$key$s = $jscomp$iter$58.next(); !$jscomp$key$s.done; $jscomp$key$s = $jscomp$iter$58.next()) {
            var s = $jscomp$key$s.value;
            set(".query." + s, query[s]);
          }
          set(".query.oq.value", get(".parse.inputValue"));
          set(".view.mode", "resultlist");
          searchQuery();
        }
        item.result && (set(".query", void 0), set(".query.oq.value", get(".parse.inputValue")), set(".queryResults", void 0), set(".view.mode", "result"), fetchResult(item.result.id));
      }
    }
  }, getParseSuggestions = function() {
    var text = get(".parse.inputValue") || get(".query.oq.value") || toSingleQuery(get(".query")), cursor = get(".parse.cursor");
    set(".parse.suggestions", {loading:!0});
    removeRemote(function(fetch) {
      return "PARSE_FETCH_RESPONSE" == fetch.type;
    });
    addRemote("PARSE_FETCH_RESPONSE", "/xhr/parse", {text:text, cursor:cursor || 0, exp:get(".browserUI.experiments")}, null);
  }, clearQuery = function() {
    for (var $jscomp$iter$59 = $jscomp.makeIterator(clearFields), $jscomp$key$k = $jscomp$iter$59.next(); !$jscomp$key$k.done; $jscomp$key$k = $jscomp$iter$59.next()) {
      var k = $jscomp$key$k.value;
      set(".query." + k, void 0);
    }
    set(".queryResults", void 0);
    set(".resultList.page", void 0);
  }, sameQuery = function(q1, q2) {
    if (!q1 || !q2) {
      return !1;
    }
    var q1Clone = clone(q1), q2Clone = clone(q2);
    q1Clone.page = void 0;
    q2Clone.page = void 0;
    return toQueryUrl(q1Clone) == toQueryUrl(q2Clone);
  }, isSearchable = function(query) {
    if (!query) {
      return !1;
    }
    var q = clone(query);
    delete q.num;
    delete q.patents;
    delete q.scholar;
    delete q.sort;
    delete q.dups;
    delete q.page;
    delete q.clustered;
    delete q.oq;
    delete q.ws;
    var url = toQueryUrl(q);
    return "" != url ? !0 : !1;
  }, searchQuery = function() {
    set(".query.page.value", 0);
    fetchResultList(0);
  }, fetchResultList = function(pageOffset) {
    var query = get(".query");
    if (isSearchable(query)) {
      if ("resultlist" == get(".view.mode")) {
        var pageTitle = get(".query.oq.value") || toSingleQuery(get(".query"));
        set(".browserUI.setTitle", pageTitle + " - Google Patents");
      }
      sameQuery(query, get(".queryResults.query")) ? set(".queryResults.query", clone(query)) : set(".queryResults", {query:clone(query)});
      var fetchPage = (get(".query.page.value") || 0) + pageOffset, pages = get(".queryResults.pages");
      if (pages && pages[fetchPage]) {
        updateResultList();
      } else {
        var fetchQuery = clone(query);
        fetchQuery.page = {value:fetchPage};
        var qs = toQueryUrl(fetchQuery);
        removeRemote(function(fetch) {
          return "QUERYRESULTS_FETCH_RESPONSE" == fetch.type;
        });
        addRemote("QUERYRESULTS_FETCH_RESPONSE", "/xhr/query", {url:qs, exp:get(".browserUI.experiments")}, {page:fetchPage, replace:0 == pageOffset});
        0 == pageOffset && (set(".resultList.loading", !0), set(".result.snippetedQuery", fetchQuery));
      }
    } else {
      set(".queryResults", void 0), set(".resultList.page", void 0);
    }
  }, updateResultList = function() {
    var showPage = get(".queryResults.query.page.value") || 0;
    set(".resultList.page", get(".queryResults.pages." + showPage));
  }, submitChip = function(path) {
    if (get(path + ".value") != get(path + ".inputValue")) {
      var value = get(path + ".inputValue");
      set(path + ".value", value);
      searchQuery();
    }
  }, getChipVisitOrder = function(path) {
    var paths = [];
    if (path.startsWith(".query.terms")) {
      for (var i in get(".query.terms.values")) {
        paths.push(".query.terms.values." + i);
      }
    } else {
      path.startsWith(".query.assignee") ? paths = [".query.assignee"] : path.startsWith(".query.inventor") && (paths = [".query.inventor"]);
    }
    for (var chips = [], $jscomp$iter$60 = $jscomp.makeIterator(paths), $jscomp$key$p = $jscomp$iter$60.next(); !$jscomp$key$p.done; $jscomp$key$p = $jscomp$iter$60.next()) {
      var p$130 = $jscomp$key$p.value, valuesPath = p$130 + ".values", values = get(valuesPath), i$131;
      for (i$131 in values) {
        chips.push(p$130 + ".values." + String(i$131));
      }
    }
    for (var visitIndex, i$132 = 0; i$132 < chips.length; i$132++) {
      chips[i$132] == path && (visitIndex = i$132);
    }
    return [chips, visitIndex];
  }, canonicalizeQuery = function() {
    var paths = [], groups = get(".query.terms.values"), lastTermGroup = "";
    if (groups) {
      for (var groupCollection = Polymer.Collection.get(groups), $jscomp$iter$61 = $jscomp.makeIterator(groups), $jscomp$key$item = $jscomp$iter$61.next(); !$jscomp$key$item.done; $jscomp$key$item = $jscomp$iter$61.next()) {
        var item = $jscomp$key$item.value, p$133 = "terms.values." + groupCollection.getKey(item);
        paths.push(p$133);
        lastTermGroup = p$133;
      }
    }
    paths = paths.concat(["assignee", "inventor"]);
    for (var $jscomp$iter$62 = $jscomp.makeIterator(paths), $jscomp$key$p = $jscomp$iter$62.next(); !$jscomp$key$p.done; $jscomp$key$p = $jscomp$iter$62.next()) {
      var p$134 = $jscomp$key$p.value, valuesPath = ".query." + p$134 + ".values", values = get(valuesPath);
      if (values) {
        for (var i = 0; i < values.length; i++) {
          var value = values[i], emptyNotFocused = "" == value.inputValue && !value.focused && !value.setFocus, lastChip = i == values.length - 1, onlyChip = 1 == values.length, lastRow = p$134 == lastTermGroup || !p$134.startsWith("terms"), del = emptyNotFocused && (!lastRow && onlyChip || !lastChip);
          del && (splice(valuesPath, i, 1), i--);
        }
      }
      if (p$134.startsWith("terms") && (!values || 0 == values.length)) {
        var index = groups.indexOf(get(".query." + p$134));
        -1 == index && console.error("Values not found in query terms", groups, values);
        index != groups.length - 1 && splice(".query.terms.values", index, 1);
      }
    }
    var terms = get(".query.terms");
    if (terms && terms.values && 0 != terms.values.length) {
      var lastGroup = terms.values[terms.values.length - 1];
      0 != lastGroup.values.length && (1 < lastGroup.values.length || "" != lastGroup.values[0].inputValue) && push(".query.terms.values", {values:[]});
    } else {
      set(".query.terms.values", [{values:[]}]);
    }
    paths = [];
    for (var i$135 in get(".query.terms.values")) {
      paths.push("terms.values." + String(i$135));
    }
    paths = paths.concat(["assignee", "inventor"]);
    var $jscomp$iter$63 = $jscomp.makeIterator(paths);
    for ($jscomp$key$p = $jscomp$iter$63.next(); !$jscomp$key$p.done; $jscomp$key$p = $jscomp$iter$63.next()) {
      var p$136 = $jscomp$key$p.value, valuesPath$137 = ".query." + p$136 + ".values", values$138 = get(valuesPath$137);
      values$138 || (values$138 = [], set(valuesPath$137, values$138));
      0 != values$138.length && "" == values$138[values$138.length - 1].inputValue || push(valuesPath$137, {value:"", inputValue:""});
    }
  }, getInputChipSuggestions = function(path, value, cursor) {
    removeRemote(function(fetch) {
      return "SUGGEST_FETCH_RESPONSE" == fetch.type;
    });
    set(path + ".suggestions", []);
    if (path.startsWith(".query.terms")) {
      var field = "q";
      var results = /^\.query\.terms\.values\.(\d+)\.values\.(\d+)$/.exec(path);
      var index = results[1] + "," + results[2];
    } else {
      var results$139 = /^\.query\.[a-z]+\.values\.(\d+)$/.exec(path);
      index = "0," + results$139[1];
      path.startsWith(".query.inventor") ? field = "inventor" : path.startsWith(".query.assignee") && (field = "assignee");
    }
    addRemote("SUGGEST_FETCH_RESPONSE", "/xhr/suggest", {query:toQueryUrl(get(".query")), field:field, value:value, cursor:cursor, index:index, exp:get(".browserUI.experiments")}, {path:path, self:get(path)});
  }, fetchResult = function(id) {
    clearResult();
    var query = clone(get(".query"));
    set(".result.id", id);
    set(".result.snippetedQuery", query);
    set(".browserUI.setTitle", "(Loading) - " + id + " - Google Patents");
    addRemote("RESULT_FETCH_RESPONSE", "/xhr/result", {id:id, qs:toQueryUrl(query), exp:get(".browserUI.experiments")}, {});
  }, fetchTimeline = function(id) {
    set(".timeline.id", id);
    set(".browserUI.setTitle", id + " - Google Patents");
    addRemote("TIMELINE_FETCH_RESPONSE", "/xhr/explore", {id:id, exp:get(".browserUI.experiments")}, {});
  }, openCoverage = function() {
    set(".homepage.coverageOpen", !0);
    set(".homepage.coverageCountry", "");
    set(".homepage.coverage", void 0);
    addRemote("COVERAGE_FETCH_RESPONSE", "/xhr/stats", {exp:get(".browserUI.experiments")}, null);
  }, maybeFetchEdgePage = function() {
    var pages = get(".queryResults.pages"), self = get(".result.id"), pageNum = get(".query.page.value") || 0, fetchPage = -1, maxPage = get(".queryResults.maxPage"), pi;
    for (pi in pages) {
      var page = pages[pi], ci;
      for (ci in page.results.cluster) {
        var cluster = page.results.cluster[ci], ri;
        for (ri in cluster.result) {
          var result = cluster.result[ri], resultId = void 0;
          result.patent ? resultId = "patent/" + result.patent.publication_number + "/" + result.patent.language : result.scholar ? resultId = "scholar/" + result.scholar.id : result.webdoc && (resultId = "web/" + result.webdoc.id);
          resultId == self && (0 == ci && 0 == ri && (fetchPage = pageNum - 1), ci == page.results.cluster.length - 1 && ri == cluster.result.length - 1 && (fetchPage = pageNum + 1));
        }
      }
    }
    0 <= fetchPage && fetchPage < maxPage && (pages[fetchPage] || fetchResultList(fetchPage - pageNum));
    var pages$jscomp$0 = get(".queryResults.pages"), self$jscomp$0 = get(".result.id");
    if (pages$jscomp$0 && 0 != pages$jscomp$0.length && self$jscomp$0) {
      var numPerPage = get(".query.num.value") || 10, allResults = [], maxPage$jscomp$0 = get(".queryResults.maxPage");
      void 0 === maxPage$jscomp$0 && (maxPage$jscomp$0 = -1);
      for (var resultNum = -1, pi$jscomp$0 = 0; pi$jscomp$0 < maxPage$jscomp$0 || -1 == maxPage$jscomp$0; pi$jscomp$0++) {
        var page$jscomp$0 = pages$jscomp$0[pi$jscomp$0];
        if (page$jscomp$0) {
          for (var ci$jscomp$0 in page$jscomp$0.results.cluster) {
            var cluster$jscomp$0 = page$jscomp$0.results.cluster[ci$jscomp$0], ri$jscomp$0;
            for (ri$jscomp$0 in cluster$jscomp$0.result) {
              var result$jscomp$0 = cluster$jscomp$0.result[ri$jscomp$0];
              var id = result$jscomp$0.patent ? "patent/" + result$jscomp$0.patent.publication_number + "/" + result$jscomp$0.patent.language : result$jscomp$0.scholar ? "scholar/" + result$jscomp$0.scholar.id : result$jscomp$0.webdoc ? "web/" + result$jscomp$0.webdoc.id : void 0;
              id == self$jscomp$0 && (resultNum = allResults.length, set(".result.nav.prevPageDiff", 0), set(".result.nav.nextPageDiff", 0), 0 == ci$jscomp$0 && 0 == ri$jscomp$0 && set(".result.nav.prevPageDiff", -1), ci$jscomp$0 == page$jscomp$0.results.cluster.length - 1 && ri$jscomp$0 == cluster$jscomp$0.result.length - 1 && set(".result.nav.nextPageDiff", 1));
              allResults.push(id);
            }
          }
        } else {
          for (var i = 0; i < numPerPage; i++) {
            allResults.push(null);
          }
        }
      }
      -1 != resultNum && 0 <= resultNum - 1 ? set(".result.nav.prevId", allResults[resultNum - 1]) : set(".result.nav.prevId", void 0);
      -1 != resultNum && resultNum + 1 < allResults.length ? set(".result.nav.nextId", allResults[resultNum + 1]) : set(".result.nav.nextId", void 0);
      -1 == resultNum ? set(".result.nav.currentNum", 0) : set(".result.nav.currentNum", String(resultNum + 1));
    } else {
      set(".result.nav", void 0);
    }
  }, clearResult = function() {
    removeRemote(function(fetch) {
      return "RESULT_FETCH_RESPONSE" == fetch.type;
    });
    set(".result.data", void 0);
    set(".result.imageViewer.showImageIndex", 0);
    set(".result.descSearch", void 0);
    set(".result.highlights", void 0);
    set(".browserUI.hash", void 0);
  }, getTmpWorkspace = function() {
    var wss = get(".workspaces");
    if (!wss) {
      return "";
    }
    for (var $jscomp$iter$64 = $jscomp.makeIterator(wss), $jscomp$key$ws = $jscomp$iter$64.next(); !$jscomp$key$ws.done; $jscomp$key$ws = $jscomp$iter$64.next()) {
      var ws = $jscomp$key$ws.value;
      ws.location = "tmp";
      return ".workspaces." + Polymer.Collection.get(wss).getKey(ws);
    }
    return "";
  }, actions = {FIRST_RENDER:function() {
    set(".rendered", !0);
  }, INITIAL_MICRODATA:function() {
    set(".result.data", action$jscomp$0.data);
    set(".result.snippetedQuery", clone(get(".query")));
    maybeFetchEdgePage();
  }, TIMELINE_MICRODATA:function() {
    set(".timeline.data", action$jscomp$0.data);
  }, OPEN_TIMELINE:function() {
    set(".view.mode", "timeline");
    fetchTimeline(action$jscomp$0.id);
  }, TIMELINE_FETCH_RESPONSE:function() {
    finishRemote(action$jscomp$0);
    var div = document.createElement("div");
    div.innerHTML = action$jscomp$0.response.responseText;
    var data = getMicrodata(div);
    set(".timeline.data", data);
    set(".browserUI.setTitle", data.title);
  }, REMOTE_FETCH_ERROR:function() {
    finishRemote(action$jscomp$0);
    var req = action$jscomp$0.request, resp = action$jscomp$0.response;
    console.error("Remote fetch error num:" + req.num + ", type:" + req.type + ", url:" + resp.responseURL + ", " + resp.status + ", " + resp.statusText + ", " + resp.responseText);
  }, COVERAGE_OPEN:function() {
    openCoverage();
  }, COVERAGE_COUNTRY:function() {
    set(".homepage.coverageCountry", action$jscomp$0.code);
  }, COVERAGE_CLOSE:function() {
    set(".homepage.coverageOpen", !1);
  }, COVERAGE_FETCH_RESPONSE:function() {
    finishRemote(action$jscomp$0);
    var coverage = JSON.parse(action$jscomp$0.response.responseText);
    set(".homepage.coverage", coverage);
  }, OPEN_ADVANCED:function() {
    set(".view.resultlist.userShowLeftBar", !0);
    set(".view.mode", "resultlist");
  }, PARSE_FOCUS:function() {
    set(".parse.cursor", action$jscomp$0.cursor);
    set(".parse.setFocus", void 0);
    get(".parse.inputValue") != action$jscomp$0.text && (set(".parse.inputValue", action$jscomp$0.text), set(".parse.executeImmediately", !1));
    getParseSuggestions();
  }, PARSE_BLUR:function() {
    set(".parse.suggestions", void 0);
  }, PARSE_INPUT:function() {
    set(".parse.inputValue", action$jscomp$0.text);
    set(".parse.cursor", action$jscomp$0.cursor);
    set(".parse.executeImmediately", !1);
    getParseSuggestions();
  }, PARSE_FETCH_RESPONSE:function() {
    finishRemote(action$jscomp$0);
    var parse = JSON.parse(action$jscomp$0.response.responseText);
    set(".parse.suggestions", {index:0, values:parse, loading:!1});
    get(".parse.executeImmediately") && (set(".parse.executeImmediately", !1), doParseSearch(0));
  }, PARSE_ARROW_DOWN:function() {
    var num = get(".parse.suggestions.index"), vals = get(".parse.suggestions.values.results");
    vals && vals.length && (num++, num >= vals.length && (num = 0), set(".parse.suggestions.index", num));
  }, PARSE_ARROW_UP:function() {
    var num = get(".parse.suggestions.index"), vals = get(".parse.suggestions.values.results");
    vals && vals.length && (num--, 0 > num && (num = vals.length - 1), set(".parse.suggestions.index", num));
  }, PARSE_ENTER:function() {
    var i = get(".parse.suggestions.index");
    doParseSearch(i);
  }, PARSE_CLICK:function() {
    doParseSearch(action$jscomp$0.index);
  }, PARSE_ESCAPE:function() {
    set(".parse.suggestions.index", -1);
    set(".parse.suggestions.values", {});
  }, PARSE_TOGGLE_CORPUS:function() {
    var a = action$jscomp$0.corpus;
    switch(a) {
      case "patents":
        var pat = get(".query.patents.value");
        void 0 === pat && (pat = !0);
        set(".query.patents.value", !pat);
        break;
      case "npl":
        var npl = get(".query.scholar.value");
        void 0 === npl && (npl = !1);
        set(".query.scholar.value", !npl);
    }
    searchQuery();
  }, SCHOLAR_CHECKBOX:function() {
    set(".query.scholar.value", action$jscomp$0.value);
  }, INPUTCHIP_ACTION:function() {
    var $jscomp$destructuring$var0 = $jscomp.makeIterator(pathToTarget(get(".query"), action$jscomp$0.self)), selfPath = $jscomp$destructuring$var0.next().value, ok = $jscomp$destructuring$var0.next().value;
    if (!ok) {
      return "could not find our own path";
    }
    var path = ".query." + selfPath;
    get(path + ".inputValue");
    if ("CHANGE" == action$jscomp$0.subtype) {
      leftEdit = !0, set(path + ".inputValue", action$jscomp$0.value), action$jscomp$0.suggest && getInputChipSuggestions(path, action$jscomp$0.value, action$jscomp$0.cursor);
    } else {
      if ("ENTER" == action$jscomp$0.subtype) {
        if (submitChip(path), path.startsWith(".query.terms")) {
          var lastGroupIndex = String(get(".query.terms.values").length - 1), lastGroup = get(".query.terms.values." + lastGroupIndex + ".values");
          1 == lastGroup.length && "" == lastGroup[0].inputValue ? set(".query.terms.values." + lastGroupIndex + ".values.0.setFocus", !0) : push(".query.terms.values", {values:[{value:"", inputValue:"", setFocus:!0}]});
        } else {
          var focusPath;
          path.startsWith(".query.assignee") ? focusPath = ".query.assignee.values" : path.startsWith(".query.inventor") && (focusPath = ".query.inventor.values");
          var group = get(focusPath);
          "" != group[group.length - 1].inputValue ? push(focusPath, {value:"", inputValue:"", setFocus:!0}) : set(focusPath + "." + String(group.length - 1) + ".setFocus", !0);
        }
      } else {
        if ("LEFT" == action$jscomp$0.subtype || "UP" == action$jscomp$0.subtype) {
          var $jscomp$destructuring$var1 = $jscomp.makeIterator(getChipVisitOrder(path)), chips = $jscomp$destructuring$var1.next().value, visitIndex = $jscomp$destructuring$var1.next().value;
          0 != visitIndex && set(chips[visitIndex - 1] + ".setFocus", !0);
        } else {
          if ("RIGHT" == action$jscomp$0.subtype || "DOWN" == action$jscomp$0.subtype) {
            var $jscomp$destructuring$var2 = $jscomp.makeIterator(getChipVisitOrder(path)), chips$140 = $jscomp$destructuring$var2.next().value, visitIndex$141 = $jscomp$destructuring$var2.next().value;
            visitIndex$141 != chips$140.length - 1 && set(chips$140[visitIndex$141 + 1] + ".setFocus", !0);
          } else {
            if ("BACKSPACE_EMPTY" == action$jscomp$0.subtype) {
              var $jscomp$destructuring$var3 = $jscomp.makeIterator(getChipVisitOrder(path)), chips$142 = $jscomp$destructuring$var3.next().value, visitIndex$143 = $jscomp$destructuring$var3.next().value;
              if (get(path + ".focused")) {
                var prev = 0 < visitIndex$143 ? visitIndex$143 - 1 : 1;
                set(chips$142[prev] + ".setFocus", !0);
              }
            } else {
              if ("SET" == action$jscomp$0.subtype) {
                set(path + ".inputValue", action$jscomp$0.value), submitChip(path);
              } else {
                if ("DELETE" == action$jscomp$0.subtype) {
                  leftEdit = !0;
                  var path$jscomp$0 = path, result = /^(.+)\.(\d+)$/.exec(path$jscomp$0), chipIndex = Number(result[2]), groupPath = result[1];
                  splice(groupPath, chipIndex, 1);
                  if (path$jscomp$0.startsWith(".query.terms")) {
                    var group$jscomp$0 = get(groupPath);
                    if (0 == group$jscomp$0.length || 1 == group$jscomp$0.length && "" == group$jscomp$0[0].inputValue) {
                      var groupResult = /^(.+)\.(\d+)\.values$/.exec(groupPath), groupIndex = Number(groupResult[2]);
                      groupIndex != get(".query.terms.values").length - 1 && splice(".query.terms.values", groupIndex, 1);
                    }
                  }
                  searchQuery();
                } else {
                  if ("FOCUS" == action$jscomp$0.subtype) {
                    set(path + ".focused", !0), action$jscomp$0.suggest && getInputChipSuggestions(path, get(path + ".inputValue"), 0);
                  } else {
                    if ("BLUR" == action$jscomp$0.subtype) {
                      set(path + ".setFocus", !1), set(path + ".focused", !1), submitChip(path);
                    } else {
                      if ("FOCUS_GROUP" == action$jscomp$0.subtype) {
                        var group$144 = get(path);
                        set(path + "." + group$144.length - 1 + ".setFocus", !0);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }, QUERYRESULTS_FETCH_RESPONSE:function() {
    finishRemote(action$jscomp$0);
    if (action$jscomp$0.response) {
      var pageData = JSON.parse(action$jscomp$0.response.responseText);
      set(".queryResults.pages." + action$jscomp$0.request.info.page, pageData);
      set(".queryResults.numResults", pageData.results.total_num_results);
      set(".queryResults.manyResults", pageData.results.many_results);
      set(".queryResults.maxPage", pageData.results.total_num_pages);
    }
    action$jscomp$0.request.info.replace && (updateResultList(), set(".resultList.loading", !1));
    maybeFetchEdgePage();
  }, SUGGEST_FETCH_RESPONSE:function() {
    finishRemote(action$jscomp$0);
    var self = get(action$jscomp$0.request.info.path);
    self == action$jscomp$0.request.info.self && set(action$jscomp$0.request.info.path + ".suggestions", JSON.parse(action$jscomp$0.response.responseText));
  }, RESULTLIST_FIGURE_VIEW:function() {
    set(".resultList.figureView", action$jscomp$0.set);
  }, RESULTLIST_PAGE_CHANGE:function() {
    var page = get(".query.page.value") || 0;
    set(".query.page.value", page + action$jscomp$0.offset);
    fetchResultList(0);
  }, RESULTLIST_FIRST_PAGE:function() {
    searchQuery();
  }, RESULTLIST_SORT_MENU:function() {
    set(".query.sort.value", action$jscomp$0.values[0]);
    searchQuery();
  }, RESULTLIST_CLUSTERED_MENU:function() {
    set(".query.clustered.value", action$jscomp$0.values[0]);
    searchQuery();
  }, RESULTLIST_DUPS_MENU:function() {
    set(".query.dups.value", action$jscomp$0.values[0]);
    searchQuery();
  }, RESULTLIST_NUMPERPAGE_MENU:function() {
    set(".query.num.value", action$jscomp$0.values[0]);
    searchQuery();
  }, RESTRICT_OFFICE_MENU:function() {
    set(".query.country.values", action$jscomp$0.values);
    searchQuery();
    leftEdit = !0;
  }, RESTRICT_LANGUAGE_MENU:function() {
    set(".query.language.values", action$jscomp$0.values);
    searchQuery();
    leftEdit = !0;
  }, RESTRICT_STATUS_MENU:function() {
    set(".query.status.value", action$jscomp$0.values[0]);
    searchQuery();
    leftEdit = !0;
  }, RESTRICT_TYPE_MENU:function() {
    set(".query.type.value", action$jscomp$0.values[0]);
    searchQuery();
    leftEdit = !0;
  }, RESTRICT_LITIGATION_MENU:function() {
    set(".query.litigation.value", action$jscomp$0.values[0]);
    searchQuery();
    leftEdit = !0;
  }, DATE_TYPE_MENU:function() {
    set(".query.dateType", action$jscomp$0.values[0]);
    searchQuery();
    leftEdit = !0;
  }, DATE_CHANGED:function() {
    set(".query." + action$jscomp$0.field + ".inputValue", action$jscomp$0.value);
    leftEdit = !0;
  }, DATE_SUBMIT:function() {
    var value = validateDate(get(".query." + action$jscomp$0.field + ".inputValue"));
    value ? value == get(".query." + action$jscomp$0.field + ".value") ? formatDate(value) != get(".query." + action$jscomp$0.field + ".inputValue") && set(".query." + action$jscomp$0.field + ".inputValue", formatDate(value)) : (set(".query." + action$jscomp$0.field + ".inputValue", formatDate(value)), set(".query." + action$jscomp$0.field + ".value", value), searchQuery()) : (set(".query." + action$jscomp$0.field + ".inputValue", ""), set(".query." + action$jscomp$0.field + ".value", ""), searchQuery());
  }, QUERY_ADD_CPC:function() {
    push(".query.terms.values", {values:[{value:action$jscomp$0.cpc, inputValue:action$jscomp$0.cpc}]});
    set(".view.mode", "resultlist");
    searchQuery();
    leftEdit = !0;
  }, QUERY_SET_INVENTOR:function() {
    set(".query.inventor.values", [{value:action$jscomp$0.inventor, inputValue:action$jscomp$0.inventor}]);
    set(".view.mode", "resultlist");
    searchQuery();
    leftEdit = !0;
  }, QUERY_SET_ASSIGNEE:function() {
    set(".query.assignee.values", [{value:action$jscomp$0.assignee, inputValue:action$jscomp$0.assignee}]);
    set(".view.mode", "resultlist");
    searchQuery();
    leftEdit = !0;
  }, QUERY_SET_TERM:function() {
    clearQuery();
    set(".query.terms.values", [{values:[{value:action$jscomp$0.term, inputValue:action$jscomp$0.term}]}]);
    set(".view.mode", "resultlist");
    searchQuery();
    leftEdit = !0;
  }, QUERY_ADD_TERM:function() {
    push(".query.terms.values", {values:[{value:action$jscomp$0.term, inputValue:action$jscomp$0.term}]});
    set(".view.mode", "resultlist");
    searchQuery();
    leftEdit = !0;
  }, QUERY_FIND_PRIOR_ART:function() {
    clearQuery();
    set(".query.terms.values", []);
    for (var $jscomp$iter$66 = $jscomp.makeIterator(action$jscomp$0.keywords), $jscomp$key$kw = $jscomp$iter$66.next(); !$jscomp$key$kw.done; $jscomp$key$kw = $jscomp$iter$66.next()) {
      var kw = $jscomp$key$kw.value;
      push(".query.terms.values", {values:[{value:kw, inputValue:kw}]});
    }
    set(".query.dateType", "priority");
    set(".query.before", {value:action$jscomp$0.before, inputValue:formatDate(action$jscomp$0.before)});
    set(".query.scholar.value", !0);
    set(".view.mode", "resultlist");
    searchQuery();
    leftEdit = !0;
  }, QUERY_SIMILAR_DOCUMENTS:function() {
    clearQuery();
    set(".query.terms.values", [{values:[{value:"~" + action$jscomp$0.id, inputValue:"~" + action$jscomp$0.id}]}]);
    set(".view.mode", "resultlist");
    searchQuery();
    leftEdit = !0;
  }, QUERY_SEARCH_INVENTOR:function() {
    clearQuery();
    set(".query.inventor.values", [{value:action$jscomp$0.inventor, inputValue:action$jscomp$0.inventor}]);
    set(".view.mode", "resultlist");
    searchQuery();
    leftEdit = !0;
  }, QUERY_SEARCH_ASSIGNEE:function() {
    clearQuery();
    set(".query.assignee.values", [{value:action$jscomp$0.assignee, inputValue:action$jscomp$0.assignee}]);
    set(".view.mode", "resultlist");
    searchQuery();
    leftEdit = !0;
  }, QUERY_SEARCH_DOCLIST:function() {
    clearQuery();
    set(".query.dups.value", "language");
    set(".query.terms.values", []);
    for (var values = [], $jscomp$iter$67 = $jscomp.makeIterator(action$jscomp$0.docids), $jscomp$key$docid = $jscomp$iter$67.next(); !$jscomp$key$docid.done; $jscomp$key$docid = $jscomp$iter$67.next()) {
      var docid = $jscomp$key$docid.value;
      values.push({value:docid, inputValue:docid});
    }
    push(".query.terms.values", {values:values});
    set(".view.mode", "resultlist");
    searchQuery();
    leftEdit = !0;
  }, QUERY_SET_BEFORE_PRIORITY:function() {
    set(".query.dateType", "priority");
    set(".query.before", {value:action$jscomp$0.before, inputValue:formatDate(action$jscomp$0.before)});
    set(".view.mode", "resultlist");
    searchQuery();
    leftEdit = !0;
  }, OPEN_RESULT:function() {
    get(".view.resultlist.sideBySide") ? set(".view.mode", "resultlist") : set(".view.mode", "result");
    fetchResult(action$jscomp$0.result);
    maybeFetchEdgePage();
  }, RESULT_FETCH_RESPONSE:function() {
    finishRemote(action$jscomp$0);
    var div = document.createElement("div");
    div.innerHTML = action$jscomp$0.response.responseText;
    var data = getMicrodata(div);
    set(".result.data", data);
    set(".browserUI.setTitle", data.pageTitle);
    maybeFetchEdgePage();
  }, RESULT_IMG_TOGGLE:function() {
    get(".result.imageViewer.open") ? set(".result.imageViewer.open", !1) : (set(".result.imageViewer.open", !0), void 0 === get(".result.imageViewer.showImageIndex") && set(".result.imageViewer.showImageIndex", 0));
  }, RESULT_IMG_SHOW:function() {
    set(".result.imageViewer.open", !0);
    set(".result.imageViewer.showImageIndex", action$jscomp$0.index);
  }, RESULT_IMG_CLOSE:function() {
    set(".result.imageViewer.open", !1);
  }, RESULT_IMG_NEXT:function() {
    set(".result.imageViewer.showImageIndex", (get(".result.imageViewer.showImageIndex") || 0) + 1);
  }, RESULT_IMG_PREV:function() {
    set(".result.imageViewer.showImageIndex", (get(".result.imageViewer.showImageIndex") || 0) - 1);
  }, RESULT_IMG_SET_ROTATION:function() {
    set(".result.imageViewer.imageRotation", action$jscomp$0.rotation);
  }, RESULT_IMG_ROTATE_LEFT:function() {
    set(".result.imageViewer.imageRotation", ((get(".result.imageViewer.imageRotation") || 0) + 270) % 360);
  }, RESULT_IMG_ROTATE_RIGHT:function() {
    set(".result.imageViewer.imageRotation", ((get(".result.imageViewer.imageRotation") || 0) + 90) % 360);
  }, RESULT_IMG_RESIZE:function() {
    var width = get(".view.result.userFigureViewerWidth") || get(".view.result.figureViewerWidth");
    set(".view.result.userFigureViewerWidth", Math.max(width + action$jscomp$0.deltaX, 1));
  }, RESULT_IMG_RESIZE_STOP:function() {
    set(".view.result.userFigureViewerWidth", get(".view.result.figureViewerWidth"));
  }, RESULT_IMG_FULLSCREEN:function() {
    set(".view.result.userFigureViewerWidth", 4000);
  }, RESULT_IMG_FULLSCREEN_EXIT:function() {
    set(".view.result.userFigureViewerWidth", void 0);
  }, RESULT_RESIZE:function() {
    var width = get(".view.result.userResultWidth") || get(".view.result.resultWidth");
    set(".view.result.userResultWidth", Math.max(width + action$jscomp$0.deltaX, 1));
  }, RESULT_RESIZE_STOP:function() {
    set(".view.result.userResultWidth", get(".view.result.resultWidth"));
  }, RESULT_HIGHLIGHT_LOCATIONS:function() {
    set(".result.highlights.query." + action$jscomp$0.name, action$jscomp$0.locations);
  }, RESULT_SEARCH_DESC:function() {
    set(".result.descSearch", {text:action$jscomp$0.text, topOffset:action$jscomp$0.topOffset});
  }, RESULT_HIGHLIGHT_CREATE:function() {
    var active = ".workspaces." + get(".activeWorkspace");
    get([active, "highlights"]);
    var id = get(".result.id"), mp = [active, "highlights", id, "markups"], markups = get(mp);
    markups || set(mp, []);
    push(mp, {id:randomId(), location:action$jscomp$0.range});
  }, RESULT_HIGHLIGHT_EDIT:function() {
    var path = action$jscomp$0.path.substr(5);
    set(path + ".userText", action$jscomp$0.value);
  }, RESULT_HIGHLIGHT_DELETE:function() {
    var path = action$jscomp$0.path.substr(5), item = get(path), arrayPath = path.split(".").slice(0, -1).join("."), array = get(arrayPath);
    splice(arrayPath, array.indexOf(item), 1);
  }, RESULT_CONCEPT_MENU:function() {
    set(".result.conceptDomains", action$jscomp$0.values);
  }, SHOW_LEFT_BAR:function() {
    "result" == action$jscomp$0.mode ? set(".view.result.userShowLeftBar", !0) : set(".view.resultlist.userShowLeftBar", !0);
  }, CLOSE_LEFT_BAR:function() {
    "result" == action$jscomp$0.mode ? set(".view.result.userShowLeftBar", !1) : set(".view.resultlist.userShowLeftBar", !1);
  }, SHOW_SIDE_BY_SIDE:function() {
    set(".view.resultlist.userSideBySide", action$jscomp$0.value);
  }, BACK_TO_RESULTS:function() {
    set(".view.mode", "resultlist");
  }, ESC_BACK:function() {
    isSearchable(get(".query")) && set(".view.mode", "resultlist");
  }, HOME:function() {
    set(".parse.inputValue", "");
    set(".view.mode", "homepage");
    clearQuery();
  }, NAV_RESULT:function() {
    get(".view.resultlist.sideBySide") ? set(".view.mode", "resultlist") : set(".view.mode", "result");
    var page = get(".query.page.value") || 0;
    set(".query.page.value", page + action$jscomp$0.page);
    fetchResult(action$jscomp$0.result);
    maybeFetchEdgePage();
  }, IMPORT_FETCH_MATCHES:function() {
    addRemote("IMPORT_FETCH_MATCHES_RESPONSE", "/api/match", {num:action$jscomp$0.nums, country:action$jscomp$0.countryRestrict, country_pref:action$jscomp$0.countryPref, type:action$jscomp$0.numType, exp:get(".browserUI.experiments")}, {start:action$jscomp$0.start});
  }, IMPORT_FETCH_MATCHES_RESPONSE:function() {
    var response = JSON.parse(action$jscomp$0.response.responseText);
    console.log(response, action$jscomp$0.request.info.start);
    get(".import.matches") || set(".import.matches", []);
    for (var result = response.result, i = 0; i < result.length; i++) {
      var matches = [];
      if (result[i].match) {
        for (var $jscomp$iter$68 = $jscomp.makeIterator(result[i].match), $jscomp$key$m = $jscomp$iter$68.next(); !$jscomp$key$m.done; $jscomp$key$m = $jscomp$iter$68.next()) {
          var m = $jscomp$key$m.value;
          matches.push(m);
        }
      }
      set(".import.matches." + (action$jscomp$0.request.info.start + i), matches);
    }
  }, IMPORT_FETCH_RESET:function() {
    removeRemote(function(fetch) {
      return "IMPORT_FETCH_MATCHES_RESPONSE" == fetch.type;
    });
    set(".import", void 0);
  }, URL_CHANGE:function() {
    set(".browserUI.historyState", action$jscomp$0.historyState);
    var parts = action$jscomp$0.pathname.substr(1).split("/"), search = action$jscomp$0.search, expRe = /[\?&]exp=([^&]+)/, match = expRe.exec(search) || [];
    set(".browserUI.experiments", match[1] || "");
    var expRemove = match[0] || "";
    expRemove && (search = search.replace(expRemove, ""));
    search.startsWith("?") && (search = search.slice(1));
    var searchQuery = fromQueryUrl(search);
    set(".query", searchQuery);
    var wss = get(".query.ws.values");
    if (wss) {
      for (var wsObj = [], hasTmp = !1, $jscomp$iter$69 = $jscomp.makeIterator(wss), $jscomp$key$ws = $jscomp$iter$69.next(); !$jscomp$key$ws.done; $jscomp$key$ws = $jscomp$iter$69.next()) {
        var ws = $jscomp$key$ws.value;
        wsObj.push({location:ws});
        "tmp" == ws && (hasTmp = !0);
      }
      hasTmp || wsObj.push({location:"tmp"});
      set(".workspaces", wsObj);
    } else {
      set(".workspaces", [{location:"tmp"}]), set(".query.ws", {values:["tmp"]});
    }
    switch(parts[0]) {
      case "coverage":
        set(".view.mode", "homepage");
        set(".homepage.coverageOpen", !0);
        parts[1] && set(".homepage.coverageCountry", parts[1]);
        openCoverage();
        break;
      case "advanced":
        set(".view.resultlist.userShowLeftBar", !0);
        set(".view.mode", "resultlist");
        set(".parse.setFocus", !0);
        break;
      case "patent":
      case "scholar":
      case "web":
        get(".view.resultlist.sideBySide") ? set(".view.mode", "resultlist") : set(".view.mode", "result");
        var id = parts.join("/");
        if (get(".result.id") == id && get(".browserUI.hash") != action$jscomp$0.hash) {
          break;
        }
        action$jscomp$0.firstLoad ? (clearResult(), set(".result.id", id), set(".result.snippetedQuery", clone(get(".query")))) : fetchResult(id);
        fetchResultList(0);
        break;
      case "import":
        set(".view.mode", "import");
        break;
      case "explore":
        1 < parts.length ? (set(".timeline.id", parts[1]), set(".view.mode", "timeline"), fetchTimeline(parts[1])) : (set(".view.mode", "homepage"), set(".parse.setFocus", !0));
        break;
      default:
        if (isSearchable(searchQuery)) {
          set(".view.mode", "resultlist"), fetchResultList(0);
        } else {
          var oq = get(".query.oq.value");
          oq ? (set(".view.mode", "resultlist"), set(".parse.inputValue", oq), set(".parse.executeImmediately", !0), getParseSuggestions()) : (set(".view.mode", "homepage"), set(".parse.setFocus", !0));
        }
    }
    var hash = action$jscomp$0.hash;
    if (hash.startsWith("#hl=")) {
      var tmp = getTmpWorkspace(), resultId = get(".result.id"), val = atob(hash.substr(4)), mkPath = [tmp, "highlights", resultId, "markups"], mk = get(mkPath);
      mk || set(mkPath, []);
      for (var $jscomp$inline_455 = $jscomp.makeIterator(val.split(",")), $jscomp$inline_456 = $jscomp$inline_455.next(); !$jscomp$inline_456.done; $jscomp$inline_456 = $jscomp$inline_455.next()) {
        var v = $jscomp$inline_456.value, parts$jscomp$0 = v.split("@"), path = parts$jscomp$0[0], comment = decodeURIComponent(parts$jscomp$0[1]);
        push(mkPath, {location:path, userText:comment});
      }
    } else {
      set(".browserUI.hash", hash);
    }
  }, WINDOW_RESIZE:function() {
    set(".browserUI.width", action$jscomp$0.width);
    set(".browserUI.height", action$jscomp$0.height);
  }, WINDOW_SCROLL:function() {
    set(".browserUI.scrollY", action$jscomp$0.scrollY);
    set(".browserUI.historyState.scrollY", action$jscomp$0.scrollY);
  }, READY:function() {
    set("", {ready:!0, dispatch:el.dispatch.bind(el)});
  }, RELOAD:function() {
    set(".browserUI.reload", !0);
    console.log(action$jscomp$0.why);
  }, WORKSPACE_LOADED:function() {
    set(".workspaces." + action$jscomp$0.index, Object.assign({}, action$jscomp$0.workspace));
    action$jscomp$0.active && set(".activeWorkspace", action$jscomp$0.index);
  }}, oldView = get(".view.mode"), actionFn = actions[action$jscomp$0.type];
  if (actionFn) {
    var error = actionFn();
    if (error) {
      return error;
    }
  } else {
    return "unknown action type " + action$jscomp$0.type;
  }
  var recalculateWidths = !1, newView = get(".view.mode");
  if (oldView != newView) {
    recalculateWidths = !0;
    switch(oldView) {
      case "homepage":
        set(".homepage.coverageOpen", !1);
        set(".parse.suggestions", void 0);
        break;
      case "result":
        set(".result.id", void 0);
        set(".result.snippetedQuery", void 0);
        clearResult();
        break;
      case "import":
        set(".import", void 0);
        break;
      case "timeline":
        set(".timeline.id", void 0), set(".timeline.data", void 0);
    }
    set(".browserUI.hash", void 0);
    switch(newView) {
      case "homepage":
        set(".browserUI.setTitle", "Google Patents");
        break;
      case "import":
        set(".browserUI.setTitle", "Import - Google Patents");
    }
  }
  canonicalizeQuery();
  leftEdit && (set(".query.oq", {}), set(".parse.inputValue", void 0), set(".parse.suggestions", void 0));
  if (changed(".query")) {
    var singleQuery = toSingleQuery(get(".query"));
    set(".parse.singleQuery", singleQuery);
  }
  changed(".queryResults") && set(".queryResults.query.isSearchable", isSearchable(get(".queryResults.query")));
  changed(".query") && set(".query.isSearchable", isSearchable(get(".query")));
  var mode = get(".view.mode");
  if (("resultlist" == mode || "result" == mode) && (recalculateWidths || changed(".browserUI.width") || changed(".browserUI.height") || changed(".browserUI.scrollY") || changed(".view.result.userShowLeftBar") || changed(".view.resultlist.userShowLeftBar") || changed(".result.imageViewer.open") || changed(".view.result.userFigureViewerWidth") || changed(".view.result.userResultWidth") || changed(".view.resultlist.userSideBySide"))) {
    var browserWidth = get(".browserUI.width");
    void 0 === browserWidth && (browserWidth = 800);
    set(".view.isSearchUIWide", 1200 <= browserWidth);
    var resultsAreaWidth = browserWidth, resultExpandable, figureOn, figureExpandable, sideBySide = "resultlist" == mode && (get(".view.resultlist.userSideBySide") || !1);
    if ("resultlist" == mode) {
      var listOn = !0;
      var userLeft = get(".view.resultlist.userShowLeftBar");
      var leftBarOn = void 0 === userLeft ? !0 : userLeft;
      set(".view.resultlist.showLeftBar", leftBarOn);
      var canHideLeftBar = void 0 === userLeft;
    } else {
      if ("result" == mode) {
        listOn = !1;
        var userLeft$145 = get(".view.result.userShowLeftBar");
        leftBarOn = void 0 === userLeft$145 ? !1 : userLeft$145;
        set(".view.result.showLeftBar", leftBarOn);
        canHideLeftBar = !0;
      }
    }
    if ("result" == mode || "resultlist" == mode && sideBySide) {
      var resultOn = !0;
      if ("resultlist" == mode) {
        var canHideResult = !1;
        var resultUserWidth = (resultExpandable = void 0 === get(".view.result.userResultWidth")) ? 400 : get(".view.result.userResultWidth");
      } else {
        canHideResult = !1, resultUserWidth = 400, resultExpandable = !0;
      }
      if (get(".result.imageViewer.open")) {
        canHideResult = figureOn = !0;
        var userImageWidth = get(".view.result.userFigureViewerWidth");
        var figureUserWidth = (figureExpandable = void 0 === userImageWidth) ? 300 : userImageWidth;
      } else {
        figureOn = !1;
      }
    } else {
      figureOn = resultOn = !1;
    }
    var wantSizes = {left:{value:leftBarOn ? 300 : 0, max:300, min:300, canHide:canHideLeftBar, expandable:!1}, list:{value:listOn ? 300 : 0, max:1150, min:600, canHide:!listOn, expandable:!0}, result:{value:resultOn ? resultUserWidth : 0, max:1200, min:400, canHide:canHideResult, expandable:resultExpandable}, figure:{value:figureOn ? figureUserWidth : 0, max:4000, min:300, canHide:!1, expandable:figureExpandable}}, col;
    for (col in wantSizes) {
      var val$jscomp$0 = wantSizes[col].value;
      0 < val$jscomp$0 && (val$jscomp$0 > wantSizes[col].max && (wantSizes[col].value = wantSizes[col].max), val$jscomp$0 < wantSizes[col].min && (wantSizes[col].value = wantSizes[col].min));
    }
    var collapsePref = ["left", "list", "result", "figure"], shrinkPref = ["left", "list", "result", "figure"], total = 0, col$146;
    for (col$146 in wantSizes) {
      total += wantSizes[col$146].value;
    }
    for (var overBy = total - resultsAreaWidth, $jscomp$iter$70 = $jscomp.makeIterator(collapsePref), $jscomp$key$col = $jscomp$iter$70.next(); !$jscomp$key$col.done; $jscomp$key$col = $jscomp$iter$70.next()) {
      var col$147 = $jscomp$key$col.value;
      0 < overBy && wantSizes[col$147].canHide && 0 < wantSizes[col$147].value && (overBy -= wantSizes[col$147].value, wantSizes[col$147].value = 0);
    }
    var $jscomp$iter$71 = $jscomp.makeIterator(shrinkPref);
    for ($jscomp$key$col = $jscomp$iter$71.next(); !$jscomp$key$col.done; $jscomp$key$col = $jscomp$iter$71.next()) {
      var col$148 = $jscomp$key$col.value;
      if (0 < overBy) {
        var val$149 = wantSizes[col$148].value, minVal = wantSizes[col$148].min;
        if (val$149 != minVal && 0 != val$149) {
          var canShrink = val$149 - minVal;
          canShrink > overBy ? (wantSizes[col$148].value = val$149 - overBy, overBy = 0) : (wantSizes[col$148].value = minVal, overBy -= canShrink);
        }
      }
    }
    total = 0;
    for (var col$150 in wantSizes) {
      total += wantSizes[col$150].value;
    }
    var underBy = resultsAreaWidth - total, toExpandExpandable = {}, toExpandUnexpandable = {}, col$151;
    for (col$151 in wantSizes) {
      var canExpand = wantSizes[col$151].max - wantSizes[col$151].value;
      0 < wantSizes[col$151].value && 0 < canExpand && (wantSizes[col$151].expandable ? toExpandExpandable[col$151] = canExpand : toExpandUnexpandable[col$151] = canExpand);
    }
    for (var numExpandable = Object.keys(toExpandExpandable).length; 0 < numExpandable && 0 < underBy;) {
      var expandEach = Math.min.apply(Math, $jscomp.arrayFromIterable(Object.values(toExpandExpandable)));
      expandEach * numExpandable > underBy ? (expandEach = underBy / numExpandable, underBy = 0) : underBy -= expandEach * numExpandable;
      for (var col$152 in toExpandExpandable) {
        wantSizes[col$152].value += expandEach, toExpandExpandable[col$152] -= expandEach, 0 >= toExpandExpandable[col$152] && delete toExpandExpandable[col$152];
      }
      numExpandable = Object.keys(toExpandExpandable).length;
    }
    for (var numUnexpandable = Object.keys(toExpandUnexpandable).length; 0 < numUnexpandable && 0 < underBy;) {
      var expandEach$153 = Math.min.apply(Math, $jscomp.arrayFromIterable(Object.values(toExpandUnexpandable)));
      expandEach$153 * numUnexpandable > underBy ? (expandEach$153 = underBy / numUnexpandable, underBy = 0) : underBy -= expandEach$153 * numUnexpandable;
      for (var col$154 in toExpandUnexpandable) {
        wantSizes[col$154].value += expandEach$153, toExpandUnexpandable[col$154] -= expandEach$153, 0 >= toExpandUnexpandable[col$154] && delete toExpandUnexpandable[col$154];
      }
      numUnexpandable = Object.keys(toExpandUnexpandable).length;
    }
    set(".view.resultlist.showLeftBar", 0 < wantSizes.left.value);
    set(".view.result.showLeftBar", 0 < wantSizes.left.value);
    set(".view.resultlist.width", wantSizes.list.value);
    set(".view.result.resultWidth", wantSizes.result.value);
    set(".view.result.figureViewerWidth", wantSizes.figure.value);
    set(".view.resultlist.sideBySide", sideBySide);
    var viewportHeight = get(".browserUI.height") - 61;
    set(".view.result.figureViewerHeight", viewportHeight + Math.min(get(".browserUI.scrollY"), 61));
    sideBySide ? (set(".view.result.resultHeight", viewportHeight), set(".view.resultlist.height", viewportHeight), set(".view.hideFooter", !0)) : (set(".view.result.resultHeight", -1), set(".view.resultlist.height", -1), set(".view.hideFooter", !1));
  }
  if (get(".rendered")) {
    var mode$155 = get(".view.mode");
    if ("homepage" == mode$155) {
      var canonicalUrl = "/";
      if (get(".homepage.coverageOpen")) {
        canonicalUrl = "/coverage";
        var country = get(".homepage.coverageCountry");
        country && (canonicalUrl += "/" + country);
      }
    } else {
      if ("import" == mode$155) {
        canonicalUrl = "/import";
      } else {
        if ("resultlist" != mode$155 || get(".view.resultlist.sideBySide") && get(".result.id")) {
          "result" == mode$155 || "resultlist" == mode$155 && get(".view.resultlist.sideBySide") && get(".result.id") ? canonicalUrl = "/" + get(".result.id") : "timeline" == mode$155 && (canonicalUrl = "/explore/" + get(".timeline.id"));
        } else {
          canonicalUrl = "/";
          var query$jscomp$0 = get(".query");
          !get(".view.resultlist.showLeftBar") || isSearchable(query$jscomp$0) || get(".query.oq.value") || (canonicalUrl = "/advanced");
        }
      }
    }
    var queryUrl = toQueryUrl(get(".query"));
    queryUrl && (canonicalUrl += "?" + queryUrl);
    var exp = get(".browserUI.experiments");
    exp && (canonicalUrl = -1 != canonicalUrl.indexOf("?") ? canonicalUrl + "&" : canonicalUrl + "?", canonicalUrl += "exp=" + exp);
    var hash$jscomp$0 = get(".browserUI.hash");
    hash$jscomp$0 && (canonicalUrl += hash$jscomp$0);
    canonicalUrl != get(".browserUI.url") && (set(".browserUI.url", canonicalUrl), set(".browserUI.setURL", canonicalUrl));
  }
  devInfo("Changed paths", changePaths);
  return "";
}
function pathToTarget(obj, target) {
  if ("object" !== typeof obj) {
    return ["", !1];
  }
  if (obj === target) {
    return ["", !0];
  }
  for (var k in obj) {
    var $jscomp$destructuring$var4 = $jscomp.makeIterator(pathToTarget(obj[k], target)), path = $jscomp$destructuring$var4.next().value, ok = $jscomp$destructuring$var4.next().value;
    if (ok) {
      return path ? [k + "." + path, !0] : [k, !0];
    }
  }
  return ["", !1];
}
function clone(obj) {
  if ("object" !== typeof obj) {
    return obj;
  }
  var copy = Array.isArray(obj) ? [] : {};
  for (var k in obj) {
    copy[k] = clone(obj[k]);
  }
  return copy;
}
function toQueryUrl(query) {
  if (!query) {
    return "";
  }
  var parts = [];
  if (query.terms) {
    for (var $jscomp$iter$73 = $jscomp.makeIterator(query.terms.values), $jscomp$key$qs = $jscomp$iter$73.next(); !$jscomp$key$qs.done; $jscomp$key$qs = $jscomp$iter$73.next()) {
      for (var qs = $jscomp$key$qs.value, syns = [], $jscomp$iter$72 = $jscomp.makeIterator(qs.values), $jscomp$key$q = $jscomp$iter$72.next(); !$jscomp$key$q.done; $jscomp$key$q = $jscomp$iter$72.next()) {
        var q = $jscomp$key$q.value;
        "" != q.value && syns.push(customEncodeURIComponent(q.value));
      }
      0 < syns.length && parts.push("q=" + syns.join(","));
    }
  }
  if (query.inventor) {
    var syns$156 = [], $jscomp$iter$74 = $jscomp.makeIterator(query.inventor.values);
    for ($jscomp$key$q = $jscomp$iter$74.next(); !$jscomp$key$q.done; $jscomp$key$q = $jscomp$iter$74.next()) {
      var q$157 = $jscomp$key$q.value;
      "" != q$157.value && syns$156.push(customEncodeURIComponent(q$157.value));
    }
    0 < syns$156.length && parts.push("inventor=" + syns$156.join(","));
  }
  if (query.assignee) {
    var syns$158 = [], $jscomp$iter$75 = $jscomp.makeIterator(query.assignee.values);
    for ($jscomp$key$q = $jscomp$iter$75.next(); !$jscomp$key$q.done; $jscomp$key$q = $jscomp$iter$75.next()) {
      var q$159 = $jscomp$key$q.value;
      "" != q$159.value && syns$158.push(customEncodeURIComponent(q$159.value));
    }
    0 < syns$158.length && parts.push("assignee=" + syns$158.join(","));
  }
  query.country && 0 < query.country.values.length && parts.push("country=" + query.country.values.join(","));
  switch(query.dateType) {
    case "filing":
    case "publication":
      var dateTypePrefix = query.dateType;
      break;
    default:
      dateTypePrefix = "priority";
  }
  query.before && query.before.value && parts.push("before=" + dateTypePrefix + ":" + query.before.value);
  query.after && query.after.value && parts.push("after=" + dateTypePrefix + ":" + query.after.value);
  query.status && query.status.value && parts.push("status=" + query.status.value);
  query.language && 0 < query.language.values.length && parts.push("language=" + query.language.values.join(","));
  query.type && query.type.value && parts.push("type=" + query.type.value);
  query.litigation && query.litigation.value && parts.push("litigation=" + query.litigation.value);
  query.num && query.num.value && 10 != query.num.value && parts.push("num=" + String(query.num.value));
  query.patents && (query.patents.value || parts.push("patents=false"));
  query.scholar && query.scholar.value && parts.push("scholar");
  query.oq && query.oq.value && parts.push("oq=" + customEncodeURIComponent(query.oq.value));
  query.sort && query.sort.value && parts.push("sort=" + customEncodeURIComponent(query.sort.value));
  query.dups && query.dups.value && parts.push("dups=" + customEncodeURIComponent(query.dups.value));
  query.page && query.page.value && 0 != query.page.value && parts.push("page=" + String(query.page.value));
  query.clustered && !0 === query.clustered.value && parts.push("clustered=true");
  if (query.ws && 0 < query.ws.values.length) {
    var vals = query.ws.values.slice();
    "tmp" == vals[vals.length - 1] && (vals = vals.slice(0, -1));
    0 < vals.length && parts.push("ws=" + vals.join(","));
  }
  return parts.join("&");
}
function fromQueryUrl(qs) {
  for (var query = {}, params = qs.split("&").filter(function(param) {
    return 0 < param.length;
  }), $jscomp$iter$80 = $jscomp.makeIterator(params), $jscomp$key$param = $jscomp$iter$80.next(); !$jscomp$key$param.done; $jscomp$key$param = $jscomp$iter$80.next()) {
    var param$jscomp$0 = $jscomp$key$param.value, $jscomp$destructuring$var5 = $jscomp.makeIterator(param$jscomp$0.split("=")), k = $jscomp$destructuring$var5.next().value, vEsc = $jscomp$destructuring$var5.next().value, v = void 0;
    vEsc && (v = customDecodeURIComponent(vEsc));
    switch(k) {
      case "q":
        query.terms || (query.terms = {values:[]});
        var group = {values:[]};
        query.terms.values.push(group);
        for (var terms = vEsc.split(","), $jscomp$iter$76 = $jscomp.makeIterator(terms), $jscomp$key$term = $jscomp$iter$76.next(); !$jscomp$key$term.done; $jscomp$key$term = $jscomp$iter$76.next()) {
          var term = $jscomp$key$term.value, t = customDecodeURIComponent(term);
          group.values.push({value:t, inputValue:t});
        }
        break;
      case "cpc":
        query.terms || (query.terms = {values:[]});
        for (var cpcs = vEsc.split(","), $jscomp$iter$77 = $jscomp.makeIterator(cpcs), $jscomp$key$cpc = $jscomp$iter$77.next(); !$jscomp$key$cpc.done; $jscomp$key$cpc = $jscomp$iter$77.next()) {
          var cpc = $jscomp$key$cpc.value, t$160 = customDecodeURIComponent(cpc);
          query.terms.values.push({values:[{value:t$160, inputValue:t$160}]});
        }
        break;
      case "assignee":
      case "inventor":
        query[k] || (query[k] = {values:[]});
        for (var $jscomp$iter$78 = $jscomp.makeIterator(vEsc.split(",")), $jscomp$key$v = $jscomp$iter$78.next(); !$jscomp$key$v.done; $jscomp$key$v = $jscomp$iter$78.next()) {
          var v$161 = $jscomp$key$v.value, vUnesc = customDecodeURIComponent(v$161);
          query[k].values.push({value:vUnesc, inputValue:vUnesc});
        }
        break;
      case "language":
      case "country":
      case "ws":
        query[k] = {values:[]};
        var $jscomp$iter$79 = $jscomp.makeIterator(vEsc.split(","));
        for ($jscomp$key$v = $jscomp$iter$79.next(); !$jscomp$key$v.done; $jscomp$key$v = $jscomp$iter$79.next()) {
          var v$162 = $jscomp$key$v.value;
          query[k].values.push(customDecodeURIComponent(v$162));
        }
        break;
      case "status":
      case "type":
      case "litigation":
      case "oq":
        query[k] = {value:v};
        break;
      case "before":
      case "after":
        var parts = v.split(":"), type = void 0, date = void 0;
        2 == parts.length ? (type = parts[0], date = parts[1]) : (type = "filing", date = parts[0]);
        var yyyymmdd = validateDate(date);
        yyyymmdd && (query[k] = {value:yyyymmdd, inputValue:formatDate(yyyymmdd)});
        query.dateType = type;
        break;
      case "page":
      case "num":
        query[k] || (query[k] = {});
        var num = Number.parseInt(String(v), 10);
        num && (query[k].value = num);
        break;
      case "sort":
        switch(v) {
          case "new":
          case "old":
            query[k] || (query[k] = {}), query[k].value = v;
        }break;
      case "dups":
        query[k] || (query[k] = {});
        query[k].value = v;
        break;
      case "scholar":
      case "patents":
        query[k] || (query[k] = {});
        query[k].value = "false" == v ? !1 : !0;
        break;
      case "clustered":
        query[k] || (query[k] = {}), query[k].value = "true" == v ? !0 : !1;
    }
  }
  return query;
}
function toSingleQuery(query) {
  if (!query) {
    return "";
  }
  var parts = [];
  if (query.terms) {
    for (var terms = [], $jscomp$iter$82 = $jscomp.makeIterator(query.terms.values), $jscomp$key$qs = $jscomp$iter$82.next(); !$jscomp$key$qs.done; $jscomp$key$qs = $jscomp$iter$82.next()) {
      for (var qs = $jscomp$key$qs.value, syns = [], $jscomp$iter$81 = $jscomp.makeIterator(qs.values), $jscomp$key$q = $jscomp$iter$81.next(); !$jscomp$key$q.done; $jscomp$key$q = $jscomp$iter$81.next()) {
        var q = $jscomp$key$q.value;
        "" != q.value && syns.push("(" + q.value + ")");
      }
      1 == syns.length ? terms.push(syns[0]) : 0 < syns.length && terms.push("(" + syns.join(" OR ") + ")");
    }
    0 < terms.length && parts.push(terms.join(" "));
  }
  if (query.inventor) {
    var $jscomp$iter$83 = $jscomp.makeIterator(query.inventor.values);
    for ($jscomp$key$q = $jscomp$iter$83.next(); !$jscomp$key$q.done; $jscomp$key$q = $jscomp$iter$83.next()) {
      var q$164 = $jscomp$key$q.value;
      "" != q$164.value && (q$164.value.startsWith('"') && q$164.value.endsWith('"') ? parts.push("inventor:" + q$164.value) : -1 != q$164.value.indexOf(" ") ? parts.push("inventor:(" + q$164.value + ")") : parts.push("inventor:" + q$164.value));
    }
  }
  if (query.assignee) {
    var $jscomp$iter$84 = $jscomp.makeIterator(query.assignee.values);
    for ($jscomp$key$q = $jscomp$iter$84.next(); !$jscomp$key$q.done; $jscomp$key$q = $jscomp$iter$84.next()) {
      var q$166 = $jscomp$key$q.value;
      "" != q$166.value && (q$166.value.startsWith('"') && q$166.value.endsWith('"') ? parts.push("assignee:" + q$166.value) : -1 != q$166.value.indexOf(" ") ? parts.push("assignee:(" + q$166.value + ")") : parts.push("assignee:" + q$166.value));
    }
  }
  query.country && 0 < query.country.values.length && parts.push("country:" + query.country.values.join(","));
  switch(query.dateType) {
    case "filing":
    case "publication":
      var dateTypePrefix = query.dateType;
      break;
    default:
      dateTypePrefix = "priority";
  }
  query.before && query.before.value && parts.push("before:" + dateTypePrefix + ":" + query.before.value);
  query.after && query.after.value && parts.push("after:" + dateTypePrefix + ":" + query.after.value);
  query.status && query.status.value && parts.push("status:" + query.status.value);
  query.language && 0 < query.language.values.length && parts.push("language:" + query.language.values.join(","));
  query.type && query.type.value && parts.push("type:" + query.type.value);
  query.litigation && query.litigation.value && parts.push("litigation:" + query.litigation.value);
  return parts.join(" ");
}
function customEncodeURIComponent(str) {
  return str.replace(/[&?\/+,=%#]/g, function(c) {
    return "%" + c.charCodeAt(0).toString(16);
  }).replace(/ /g, "+");
}
function customDecodeURIComponent(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
}
function formatDate(date) {
  return date ? date.replace(/(\d{4})(\d{2})(\d{2})/, "$1-$2-$3") : "";
}
function validateDate(date) {
  if (/^[0-9]{8}$/.test(date)) {
    var year = date.slice(0, 4);
    var month = date.slice(4, 6);
    var day = date.slice(6, 8);
  } else {
    if (/^[0-9]{4}(-[0-9]{1,2}(-[0-9]{1,2})?)?$/.test(date)) {
      var $jscomp$destructuring$var6 = $jscomp.makeIterator(date.split("-"));
      year = $jscomp$destructuring$var6.next().value;
      month = $jscomp$destructuring$var6.next().value;
      day = $jscomp$destructuring$var6.next().value;
    } else {
      var d = new Date(date);
      if (d.getTime()) {
        year = (d.getYear() + 1900).toString(), month = (d.getMonth() + 1).toString(), day = d.getDate().toString();
      } else {
        return "";
      }
    }
  }
  month && 1 === month.length && (month = "0" + month);
  0 >= Number(month) || !month ? month = "01" : 12 < Number(month) && (month = "12");
  day && 1 === day.length && (day = "0" + day);
  0 >= Number(day) || !day ? day = "01" : 31 < Number(day) && (day = "31");
  return "" + year + month + day;
}
function randomId() {
  var s4 = function() {
    return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1);
  };
  return s4() + s4() + s4() + s4() + s4() + s4();
}
;stateMixin([], {is:"state-modifier", properties:{stateCopy:{type:Object, value:null}, inherit:{type:Boolean, value:!1}, act:{type:String}, actionObject:Object}, listeners:{touchstart:"onHover", touchenter:"onHover", mouseenter:"onHover", click:"onClick"}, calculateLink:function() {
  var actionStr = this.act;
  if (actionStr) {
    for (var i = 0; i < this.attributes.length; i++) {
      var attr = this.attributes[i];
      attr.name.startsWith("data-") && (actionStr = actionStr.replace("$" + attr.name.slice(5), attr.value));
    }
    /\$[a-z]+/.test(actionStr) ? (console.error("Unset state-modifier variable", actionStr, this), this.$.link.href = "#") : (this.actionObject = JSON.parse(actionStr), this.stateCopy = clone(this.state), reduceState(this, "stateCopy", this.actionObject), this.url = this.stateCopy.browserUI ? this.stateCopy.browserUI.url : "#", this.$.link.href = this.url);
  } else {
    console.warn("No state-modifier.act set", this);
  }
}, onHover:function() {
  this.calculateLink();
}, onClick:function(e) {
  e = void 0 === e ? {} : e;
  this.calculateLink();
  if (e.detail.sourceEvent) {
    if (0 !== e.detail.sourceEvent.button || e.detail.sourceEvent.metaKey || e.detail.sourceEvent.ctrlKey) {
      return;
    }
  } else {
    if (0 !== e.button || e.metaKey || e.ctrlKey) {
      return;
    }
  }
  e.preventDefault && e.preventDefault();
  this.actionObject ? this.dispatch(this.actionObject) : console.error("No state-modifier.action set", this);
}});
HtmlImportsNamespace.IronA11yKeysBehavior = {};
HtmlImportsNamespace.IronA11yKeysBehavior.IronA11yKeysBehavior = {};
(function() {
  function transformKey(key, noSpecialChars) {
    var validKey = "";
    if (key) {
      var lKey = key.toLowerCase();
      if (" " === lKey || SPACE_KEY.test(lKey)) {
        validKey = "space";
      } else {
        if (ESC_KEY.test(lKey)) {
          validKey = "esc";
        } else {
          if (1 == lKey.length) {
            if (!noSpecialChars || KEY_CHAR.test(lKey)) {
              validKey = lKey;
            }
          } else {
            validKey = ARROW_KEY.test(lKey) ? lKey.replace("arrow", "") : "multiply" == lKey ? "*" : lKey;
          }
        }
      }
    }
    return validKey;
  }
  function keyComboMatchesEvent(keyCombo, event) {
    var keyEvent = event, noSpecialChars = keyCombo.hasModifiers;
    if (keyEvent.key) {
      var JSCompiler_temp = transformKey(keyEvent.key, noSpecialChars);
    } else {
      if (keyEvent.detail && keyEvent.detail.key) {
        var JSCompiler_temp$jscomp$0 = transformKey(keyEvent.detail.key, noSpecialChars);
      } else {
        var keyIdent = keyEvent.keyIdentifier, validKey = "";
        keyIdent && (keyIdent in KEY_IDENTIFIER ? validKey = KEY_IDENTIFIER[keyIdent] : IDENT_CHAR.test(keyIdent) ? (keyIdent = parseInt(keyIdent.replace("U+", "0x"), 16), validKey = String.fromCharCode(keyIdent).toLowerCase()) : validKey = keyIdent.toLowerCase());
        var JSCompiler_inline_result = validKey;
        var JSCompiler_temp$jscomp$1;
        if (!(JSCompiler_temp$jscomp$1 = JSCompiler_inline_result)) {
          var keyCode = keyEvent.keyCode, validKey$jscomp$0 = "";
          Number(keyCode) && (validKey$jscomp$0 = 65 <= keyCode && 90 >= keyCode ? String.fromCharCode(32 + keyCode) : 112 <= keyCode && 123 >= keyCode ? "f" + (keyCode - 112 + 1) : 48 <= keyCode && 57 >= keyCode ? String(keyCode - 48) : 96 <= keyCode && 105 >= keyCode ? String(keyCode - 96) : KEY_CODE[keyCode]);
          JSCompiler_temp$jscomp$1 = validKey$jscomp$0;
        }
        JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$1 || "";
      }
      JSCompiler_temp = JSCompiler_temp$jscomp$0;
    }
    var keyEvent$jscomp$0 = JSCompiler_temp;
    return keyEvent$jscomp$0 === keyCombo.key && (!keyCombo.hasModifiers || !!event.shiftKey === !!keyCombo.shiftKey && !!event.ctrlKey === !!keyCombo.ctrlKey && !!event.altKey === !!keyCombo.altKey && !!event.metaKey === !!keyCombo.metaKey);
  }
  function parseKeyComboString(keyComboString) {
    return 1 === keyComboString.length ? {combo:keyComboString, key:keyComboString, event:"keydown"} : keyComboString.split("+").reduce(function(parsedKeyCombo, keyComboPart) {
      var eventParts = keyComboPart.split(":"), keyName = eventParts[0], event = eventParts[1];
      keyName in MODIFIER_KEYS ? (parsedKeyCombo[MODIFIER_KEYS[keyName]] = !0, parsedKeyCombo.hasModifiers = !0) : (parsedKeyCombo.key = keyName, parsedKeyCombo.event = event || "keydown");
      return parsedKeyCombo;
    }, {combo:keyComboString.split(":").shift()});
  }
  function parseEventString(eventString) {
    return eventString.trim().split(" ").map(function(keyComboString) {
      return parseKeyComboString(keyComboString);
    });
  }
  var KEY_IDENTIFIER = {"U+0008":"backspace", "U+0009":"tab", "U+001B":"esc", "U+0020":"space", "U+007F":"del"}, KEY_CODE = {8:"backspace", 9:"tab", 13:"enter", 27:"esc", 33:"pageup", 34:"pagedown", 35:"end", 36:"home", 32:"space", 37:"left", 38:"up", 39:"right", 40:"down", 46:"del", 106:"*"}, MODIFIER_KEYS = {shift:"shiftKey", ctrl:"ctrlKey", alt:"altKey", meta:"metaKey"}, KEY_CHAR = /[a-z0-9*]/, IDENT_CHAR = /U\+/, ARROW_KEY = /^arrow/, SPACE_KEY = /^space(bar)?/, ESC_KEY = /^escape$/;
  Polymer.IronA11yKeysBehavior = {properties:{keyEventTarget:{type:Object, value:function() {
    return this;
  }}, stopKeyboardEventPropagation:{type:Boolean, value:!1}, _boundKeyHandlers:{type:Array, value:function() {
    return [];
  }}, _imperativeKeyBindings:{type:Object, value:function() {
    return {};
  }}}, observers:["_resetKeyEventListeners(keyEventTarget, _boundKeyHandlers)"], keyBindings:{}, registered:function() {
    this._prepKeyBindings();
  }, attached:function() {
    this._listenKeyEventListeners();
  }, detached:function() {
    this._unlistenKeyEventListeners();
  }, addOwnKeyBinding:function(eventString, handlerName) {
    this._imperativeKeyBindings[eventString] = handlerName;
    this._prepKeyBindings();
    this._resetKeyEventListeners();
  }, removeOwnKeyBindings:function() {
    this._imperativeKeyBindings = {};
    this._prepKeyBindings();
    this._resetKeyEventListeners();
  }, keyboardEventMatchesKeys:function(event, eventString) {
    for (var keyCombos = parseEventString(eventString), i = 0; i < keyCombos.length; ++i) {
      if (keyComboMatchesEvent(keyCombos[i], event)) {
        return !0;
      }
    }
    return !1;
  }, _collectKeyBindings:function() {
    var keyBindings = this.behaviors.map(function(behavior) {
      return behavior.keyBindings;
    });
    -1 === keyBindings.indexOf(this.keyBindings) && keyBindings.push(this.keyBindings);
    return keyBindings;
  }, _prepKeyBindings:function() {
    this._keyBindings = {};
    this._collectKeyBindings().forEach(function(keyBindings) {
      for (var eventString in keyBindings) {
        this._addKeyBinding(eventString, keyBindings[eventString]);
      }
    }, this);
    for (var eventString$jscomp$0 in this._imperativeKeyBindings) {
      this._addKeyBinding(eventString$jscomp$0, this._imperativeKeyBindings[eventString$jscomp$0]);
    }
    for (var eventName in this._keyBindings) {
      this._keyBindings[eventName].sort(function(kb1, kb2) {
        var b1 = kb1[0].hasModifiers, b2 = kb2[0].hasModifiers;
        return b1 === b2 ? 0 : b1 ? -1 : 1;
      });
    }
  }, _addKeyBinding:function(eventString, handlerName) {
    parseEventString(eventString).forEach(function(keyCombo) {
      this._keyBindings[keyCombo.event] = this._keyBindings[keyCombo.event] || [];
      this._keyBindings[keyCombo.event].push([keyCombo, handlerName]);
    }, this);
  }, _resetKeyEventListeners:function() {
    this._unlistenKeyEventListeners();
    this.isAttached && this._listenKeyEventListeners();
  }, _listenKeyEventListeners:function() {
    this.keyEventTarget && Object.keys(this._keyBindings).forEach(function(eventName) {
      var keyBindings = this._keyBindings[eventName], boundKeyHandler = this._onKeyBindingEvent.bind(this, keyBindings);
      this._boundKeyHandlers.push([this.keyEventTarget, eventName, boundKeyHandler]);
      this.keyEventTarget.addEventListener(eventName, boundKeyHandler);
    }, this);
  }, _unlistenKeyEventListeners:function() {
    for (var keyHandlerTuple, keyEventTarget, eventName, boundKeyHandler; this._boundKeyHandlers.length;) {
      keyHandlerTuple = this._boundKeyHandlers.pop(), keyEventTarget = keyHandlerTuple[0], eventName = keyHandlerTuple[1], boundKeyHandler = keyHandlerTuple[2], keyEventTarget.removeEventListener(eventName, boundKeyHandler);
    }
  }, _onKeyBindingEvent:function(keyBindings, event) {
    this.stopKeyboardEventPropagation && event.stopPropagation();
    if (!event.defaultPrevented) {
      for (var i = 0; i < keyBindings.length; i++) {
        var keyCombo = keyBindings[i][0], handlerName = keyBindings[i][1];
        if (keyComboMatchesEvent(keyCombo, event) && (this._triggerKeyHandler(keyCombo, handlerName, event), event.defaultPrevented)) {
          break;
        }
      }
    }
  }, _triggerKeyHandler:function(keyCombo, handlerName, keyboardEvent) {
    var detail = Object.create(keyCombo);
    detail.keyboardEvent = keyboardEvent;
    var event = new CustomEvent(keyCombo.event, {detail:detail, cancelable:!0});
    this[handlerName].call(this, event);
    event.defaultPrevented && keyboardEvent.preventDefault();
  }};
})();
HtmlImportsNamespace.IronBehaviors = {};
HtmlImportsNamespace.IronBehaviors.IronControlState = {};
Polymer.IronControlState = {properties:{focused:{type:Boolean, value:!1, notify:!0, readOnly:!0, reflectToAttribute:!0}, disabled:{type:Boolean, value:!1, notify:!0, observer:"_disabledChanged", reflectToAttribute:!0}, _oldTabIndex:{type:String}, _boundFocusBlurHandler:{type:Function, value:function() {
  return this._focusBlurHandler.bind(this);
}}, __handleEventRetargeting:{type:Boolean, value:function() {
  return !this.shadowRoot && !Polymer.Element;
}}}, observers:["_changedControlState(focused, disabled)"], ready:function() {
  this.addEventListener("focus", this._boundFocusBlurHandler, !0);
  this.addEventListener("blur", this._boundFocusBlurHandler, !0);
}, _focusBlurHandler:function(event) {
  if (Polymer.Element) {
    this._setFocused("focus" === event.type);
  } else {
    if (event.target === this) {
      this._setFocused("focus" === event.type);
    } else {
      if (this.__handleEventRetargeting) {
        var target = Polymer.dom(event).localTarget;
        this.isLightDescendant(target) || this.fire(event.type, {sourceEvent:event}, {node:this, bubbles:event.bubbles, cancelable:event.cancelable});
      }
    }
  }
}, _disabledChanged:function(disabled) {
  this.setAttribute("aria-disabled", disabled ? "true" : "false");
  this.style.pointerEvents = disabled ? "none" : "";
  disabled ? (this._oldTabIndex = this.getAttribute("tabindex"), this._setFocused(!1), this.tabIndex = -1, this.blur()) : void 0 !== this._oldTabIndex && (null === this._oldTabIndex ? this.removeAttribute("tabindex") : this.setAttribute("tabindex", this._oldTabIndex));
}, _changedControlState:function() {
  this._controlStateChanged && this._controlStateChanged();
}};
HtmlImportsNamespace.IronDropdown = {};
HtmlImportsNamespace.IronDropdown.IronDropdownScrollManager = {};
(function() {
  var lastTouchPosition = {pageX:0, pageY:0}, lastRootTarget = null, lastScrollableNodes = [];
  Polymer.IronDropdownScrollManager = {get currentLockingElement() {
    return this._lockingElements[this._lockingElements.length - 1];
  }, elementIsScrollLocked:function(element) {
    var currentLockingElement = this.currentLockingElement;
    if (void 0 === currentLockingElement) {
      return !1;
    }
    var scrollLocked;
    if (this._hasCachedLockedElement(element)) {
      return !0;
    }
    if (this._hasCachedUnlockedElement(element)) {
      return !1;
    }
    (scrollLocked = !!currentLockingElement && currentLockingElement !== element && !this._composedTreeContains(currentLockingElement, element)) ? this._lockedElementCache.push(element) : this._unlockedElementCache.push(element);
    return scrollLocked;
  }, pushScrollLock:function(element) {
    0 <= this._lockingElements.indexOf(element) || (0 === this._lockingElements.length && this._lockScrollInteractions(), this._lockingElements.push(element), this._lockedElementCache = [], this._unlockedElementCache = []);
  }, removeScrollLock:function(element) {
    var index = this._lockingElements.indexOf(element);
    -1 !== index && (this._lockingElements.splice(index, 1), this._lockedElementCache = [], this._unlockedElementCache = [], 0 === this._lockingElements.length && this._unlockScrollInteractions());
  }, _lockingElements:[], _lockedElementCache:null, _unlockedElementCache:null, _hasCachedLockedElement:function(element) {
    return -1 < this._lockedElementCache.indexOf(element);
  }, _hasCachedUnlockedElement:function(element) {
    return -1 < this._unlockedElementCache.indexOf(element);
  }, _composedTreeContains:function(element, child) {
    var contentIndex, nodeIndex;
    if (element.contains(child)) {
      return !0;
    }
    var contentElements = Polymer.dom(element).querySelectorAll("content");
    for (contentIndex = 0; contentIndex < contentElements.length; ++contentIndex) {
      var distributedNodes = Polymer.dom(contentElements[contentIndex]).getDistributedNodes();
      for (nodeIndex = 0; nodeIndex < distributedNodes.length; ++nodeIndex) {
        if (this._composedTreeContains(distributedNodes[nodeIndex], child)) {
          return !0;
        }
      }
    }
    return !1;
  }, _scrollInteractionHandler:function(event) {
    event.cancelable && this._shouldPreventScrolling(event) && event.preventDefault();
    if (event.targetTouches) {
      var touch = event.targetTouches[0];
      lastTouchPosition.pageX = touch.pageX;
      lastTouchPosition.pageY = touch.pageY;
    }
  }, _lockScrollInteractions:function() {
    this._boundScrollHandler = this._boundScrollHandler || this._scrollInteractionHandler.bind(this);
    document.addEventListener("wheel", this._boundScrollHandler, !0);
    document.addEventListener("mousewheel", this._boundScrollHandler, !0);
    document.addEventListener("DOMMouseScroll", this._boundScrollHandler, !0);
    document.addEventListener("touchstart", this._boundScrollHandler, !0);
    document.addEventListener("touchmove", this._boundScrollHandler, !0);
  }, _unlockScrollInteractions:function() {
    document.removeEventListener("wheel", this._boundScrollHandler, !0);
    document.removeEventListener("mousewheel", this._boundScrollHandler, !0);
    document.removeEventListener("DOMMouseScroll", this._boundScrollHandler, !0);
    document.removeEventListener("touchstart", this._boundScrollHandler, !0);
    document.removeEventListener("touchmove", this._boundScrollHandler, !0);
  }, _shouldPreventScrolling:function(event) {
    var target = Polymer.dom(event).rootTarget;
    "touchmove" !== event.type && lastRootTarget !== target && (lastRootTarget = target, lastScrollableNodes = this._getScrollableNodes(Polymer.dom(event).path));
    if (!lastScrollableNodes.length) {
      return !0;
    }
    if ("touchstart" === event.type) {
      return !1;
    }
    var info = this._getScrollInfo(event);
    return !this._getScrollingNode(lastScrollableNodes, info.deltaX, info.deltaY);
  }, _getScrollableNodes:function(nodes) {
    for (var scrollables = [], lockingIndex = nodes.indexOf(this.currentLockingElement), i = 0; i <= lockingIndex; i++) {
      if (nodes[i].nodeType === Node.ELEMENT_NODE) {
        var node = nodes[i], style = node.style;
        "scroll" !== style.overflow && "auto" !== style.overflow && (style = window.getComputedStyle(node));
        "scroll" !== style.overflow && "auto" !== style.overflow || scrollables.push(node);
      }
    }
    return scrollables;
  }, _getScrollingNode:function(nodes, deltaX, deltaY) {
    if (deltaX || deltaY) {
      for (var verticalScroll = Math.abs(deltaY) >= Math.abs(deltaX), i = 0; i < nodes.length; i++) {
        var node = nodes[i], canScroll;
        if (canScroll = verticalScroll ? 0 > deltaY ? 0 < node.scrollTop : node.scrollTop < node.scrollHeight - node.clientHeight : 0 > deltaX ? 0 < node.scrollLeft : node.scrollLeft < node.scrollWidth - node.clientWidth) {
          return node;
        }
      }
    }
  }, _getScrollInfo:function(event) {
    var info = {deltaX:event.deltaX, deltaY:event.deltaY};
    if (!("deltaX" in event)) {
      if ("wheelDeltaX" in event) {
        info.deltaX = -event.wheelDeltaX, info.deltaY = -event.wheelDeltaY;
      } else {
        if ("axis" in event) {
          info.deltaX = 1 === event.axis ? event.detail : 0, info.deltaY = 2 === event.axis ? event.detail : 0;
        } else {
          if (event.targetTouches) {
            var touch = event.targetTouches[0];
            info.deltaX = lastTouchPosition.pageX - touch.pageX;
            info.deltaY = lastTouchPosition.pageY - touch.pageY;
          }
        }
      }
    }
    return info;
  }};
})();
HtmlImportsNamespace.IronFitBehavior = {};
HtmlImportsNamespace.IronFitBehavior.IronFitBehavior = {};
Polymer.IronFitBehavior = {properties:{sizingTarget:{type:Object, value:function() {
  return this;
}}, fitInto:{type:Object, value:window}, noOverlap:{type:Boolean}, positionTarget:{type:Element}, horizontalAlign:{type:String}, verticalAlign:{type:String}, dynamicAlign:{type:Boolean}, horizontalOffset:{type:Number, value:0, notify:!0}, verticalOffset:{type:Number, value:0, notify:!0}, autoFitOnAttach:{type:Boolean, value:!1}, _fitInfo:{type:Object}}, get _fitWidth() {
  var fitWidth;
  return fitWidth = this.fitInto === window ? this.fitInto.innerWidth : this.fitInto.getBoundingClientRect().width;
}, get _fitHeight() {
  var fitHeight;
  return fitHeight = this.fitInto === window ? this.fitInto.innerHeight : this.fitInto.getBoundingClientRect().height;
}, get _fitLeft() {
  var fitLeft;
  return fitLeft = this.fitInto === window ? 0 : this.fitInto.getBoundingClientRect().left;
}, get _fitTop() {
  var fitTop;
  return fitTop = this.fitInto === window ? 0 : this.fitInto.getBoundingClientRect().top;
}, get _defaultPositionTarget() {
  var parent = Polymer.dom(this).parentNode;
  parent && parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE && (parent = parent.host);
  return parent;
}, get _localeHorizontalAlign() {
  if (this._isRTL) {
    if ("right" === this.horizontalAlign) {
      return "left";
    }
    if ("left" === this.horizontalAlign) {
      return "right";
    }
  }
  return this.horizontalAlign;
}, get __shouldPosition() {
  return (this.horizontalAlign || this.verticalAlign) && this.positionTarget;
}, attached:function() {
  "undefined" === typeof this._isRTL && (this._isRTL = "rtl" == window.getComputedStyle(this).direction);
  this.positionTarget = this.positionTarget || this._defaultPositionTarget;
  this.autoFitOnAttach && ("none" === window.getComputedStyle(this).display ? setTimeout(function() {
    this.fit();
  }.bind(this)) : (window.ShadyDOM && ShadyDOM.flush(), this.fit()));
}, detached:function() {
  this.__deferredFit && (clearTimeout(this.__deferredFit), this.__deferredFit = null);
}, fit:function() {
  this.position();
  this.constrain();
  this.center();
}, _discoverInfo:function() {
  if (!this._fitInfo) {
    var target = window.getComputedStyle(this), sizer = window.getComputedStyle(this.sizingTarget);
    this._fitInfo = {inlineStyle:{top:this.style.top || "", left:this.style.left || "", position:this.style.position || ""}, sizerInlineStyle:{maxWidth:this.sizingTarget.style.maxWidth || "", maxHeight:this.sizingTarget.style.maxHeight || "", boxSizing:this.sizingTarget.style.boxSizing || ""}, positionedBy:{vertically:"auto" !== target.top ? "top" : "auto" !== target.bottom ? "bottom" : null, horizontally:"auto" !== target.left ? "left" : "auto" !== target.right ? "right" : null}, sizedBy:{height:"none" !== 
    sizer.maxHeight, width:"none" !== sizer.maxWidth, minWidth:parseInt(sizer.minWidth, 10) || 0, minHeight:parseInt(sizer.minHeight, 10) || 0}, margin:{top:parseInt(target.marginTop, 10) || 0, right:parseInt(target.marginRight, 10) || 0, bottom:parseInt(target.marginBottom, 10) || 0, left:parseInt(target.marginLeft, 10) || 0}};
  }
}, resetFit:function() {
  var info = this._fitInfo || {}, property;
  for (property in info.sizerInlineStyle) {
    this.sizingTarget.style[property] = info.sizerInlineStyle[property];
  }
  for (property in info.inlineStyle) {
    this.style[property] = info.inlineStyle[property];
  }
  this._fitInfo = null;
}, refit:function() {
  var scrollLeft = this.sizingTarget.scrollLeft, scrollTop = this.sizingTarget.scrollTop;
  this.resetFit();
  this.fit();
  this.sizingTarget.scrollLeft = scrollLeft;
  this.sizingTarget.scrollTop = scrollTop;
}, position:function() {
  if (this.__shouldPosition) {
    this._discoverInfo();
    this.style.position = "fixed";
    this.sizingTarget.style.boxSizing = "border-box";
    this.style.left = "0px";
    this.style.top = "0px";
    var rect = this.getBoundingClientRect(), positionRect = this.__getNormalizedRect(this.positionTarget), fitRect = this.__getNormalizedRect(this.fitInto), margin = this._fitInfo.margin, size = {width:rect.width + margin.left + margin.right, height:rect.height + margin.top + margin.bottom}, position = this.__getPosition(this._localeHorizontalAlign, this.verticalAlign, size, rect, positionRect, fitRect), left = position.left + margin.left, top = position.top + margin.top, right = Math.min(fitRect.right - 
    margin.right, left + rect.width), bottom = Math.min(fitRect.bottom - margin.bottom, top + rect.height);
    left = Math.max(fitRect.left + margin.left, Math.min(left, right - this._fitInfo.sizedBy.minWidth));
    top = Math.max(fitRect.top + margin.top, Math.min(top, bottom - this._fitInfo.sizedBy.minHeight));
    this.sizingTarget.style.maxWidth = Math.max(right - left, this._fitInfo.sizedBy.minWidth) + "px";
    this.sizingTarget.style.maxHeight = Math.max(bottom - top, this._fitInfo.sizedBy.minHeight) + "px";
    this.style.left = left - rect.left + "px";
    this.style.top = top - rect.top + "px";
  }
}, constrain:function() {
  if (!this.__shouldPosition) {
    this._discoverInfo();
    var info = this._fitInfo;
    info.positionedBy.vertically || (this.style.position = "fixed", this.style.top = "0px");
    info.positionedBy.horizontally || (this.style.position = "fixed", this.style.left = "0px");
    this.sizingTarget.style.boxSizing = "border-box";
    var rect = this.getBoundingClientRect();
    info.sizedBy.height || this.__sizeDimension(rect, info.positionedBy.vertically, "top", "bottom", "Height");
    info.sizedBy.width || this.__sizeDimension(rect, info.positionedBy.horizontally, "left", "right", "Width");
  }
}, _sizeDimension:function(rect, positionedBy, start, end, extent) {
  this.__sizeDimension(rect, positionedBy, start, end, extent);
}, __sizeDimension:function(rect, positionedBy, start, end, extent) {
  var info = this._fitInfo, fitRect = this.__getNormalizedRect(this.fitInto), max = "Width" === extent ? fitRect.width : fitRect.height, flip = positionedBy === end, offset = flip ? max - rect[end] : rect[start], margin = info.margin[flip ? start : end], offsetExtent = "offset" + extent, sizingOffset = this[offsetExtent] - this.sizingTarget[offsetExtent];
  this.sizingTarget.style["max" + extent] = max - margin - offset - sizingOffset + "px";
}, center:function() {
  if (!this.__shouldPosition) {
    this._discoverInfo();
    var positionedBy = this._fitInfo.positionedBy;
    if (!positionedBy.vertically || !positionedBy.horizontally) {
      this.style.position = "fixed";
      positionedBy.vertically || (this.style.top = "0px");
      positionedBy.horizontally || (this.style.left = "0px");
      var rect = this.getBoundingClientRect(), fitRect = this.__getNormalizedRect(this.fitInto);
      if (!positionedBy.vertically) {
        var top = fitRect.top - rect.top + (fitRect.height - rect.height) / 2;
        this.style.top = top + "px";
      }
      if (!positionedBy.horizontally) {
        var left = fitRect.left - rect.left + (fitRect.width - rect.width) / 2;
        this.style.left = left + "px";
      }
    }
  }
}, __getNormalizedRect:function(target) {
  return target === document.documentElement || target === window ? {top:0, left:0, width:window.innerWidth, height:window.innerHeight, right:window.innerWidth, bottom:window.innerHeight} : target.getBoundingClientRect();
}, __getOffscreenArea:function(position, size, fitRect) {
  var verticalCrop = Math.min(0, position.top) + Math.min(0, fitRect.bottom - (position.top + size.height)), horizontalCrop = Math.min(0, position.left) + Math.min(0, fitRect.right - (position.left + size.width));
  return Math.abs(verticalCrop) * size.width + Math.abs(horizontalCrop) * size.height;
}, __getPosition:function(hAlign, vAlign, size, sizeNoMargins, positionRect, fitRect) {
  var positions = [{verticalAlign:"top", horizontalAlign:"left", top:positionRect.top + this.verticalOffset, left:positionRect.left + this.horizontalOffset}, {verticalAlign:"top", horizontalAlign:"right", top:positionRect.top + this.verticalOffset, left:positionRect.right - size.width - this.horizontalOffset}, {verticalAlign:"bottom", horizontalAlign:"left", top:positionRect.bottom - size.height - this.verticalOffset, left:positionRect.left + this.horizontalOffset}, {verticalAlign:"bottom", horizontalAlign:"right", 
  top:positionRect.bottom - size.height - this.verticalOffset, left:positionRect.right - size.width - this.horizontalOffset}];
  if (this.noOverlap) {
    for (var i = 0, l = positions.length; i < l; i++) {
      var copy = {}, key;
      for (key in positions[i]) {
        copy[key] = positions[i][key];
      }
      positions.push(copy);
    }
    positions[0].top = positions[1].top += positionRect.height;
    positions[2].top = positions[3].top -= positionRect.height;
    positions[4].left = positions[6].left += positionRect.width;
    positions[5].left = positions[7].left -= positionRect.width;
  }
  vAlign = "auto" === vAlign ? null : vAlign;
  hAlign = "auto" === hAlign ? null : hAlign;
  hAlign && "center" !== hAlign || (positions.push({verticalAlign:"top", horizontalAlign:"center", top:positionRect.top + this.verticalOffset + (this.noOverlap ? positionRect.height : 0), left:positionRect.left - sizeNoMargins.width / 2 + positionRect.width / 2 + this.horizontalOffset}), positions.push({verticalAlign:"bottom", horizontalAlign:"center", top:positionRect.bottom - size.height - this.verticalOffset - (this.noOverlap ? positionRect.height : 0), left:positionRect.left - sizeNoMargins.width / 
  2 + positionRect.width / 2 + this.horizontalOffset}));
  vAlign && "middle" !== vAlign || (positions.push({verticalAlign:"middle", horizontalAlign:"left", top:positionRect.top - sizeNoMargins.height / 2 + positionRect.height / 2 + this.verticalOffset, left:positionRect.left + this.horizontalOffset + (this.noOverlap ? positionRect.width : 0)}), positions.push({verticalAlign:"middle", horizontalAlign:"right", top:positionRect.top - sizeNoMargins.height / 2 + positionRect.height / 2 + this.verticalOffset, left:positionRect.right - size.width - this.horizontalOffset - 
  (this.noOverlap ? positionRect.width : 0)}));
  "middle" === vAlign && "center" === hAlign && positions.push({verticalAlign:"middle", horizontalAlign:"center", top:positionRect.top - sizeNoMargins.height / 2 + positionRect.height / 2 + this.verticalOffset, left:positionRect.left - sizeNoMargins.width / 2 + positionRect.width / 2 + this.horizontalOffset});
  for (i = 0; i < positions.length; i++) {
    var candidate = positions[i], vAlignOk = candidate.verticalAlign === vAlign, hAlignOk = candidate.horizontalAlign === hAlign;
    if (!this.dynamicAlign && !this.noOverlap && vAlignOk && hAlignOk) {
      var position = candidate;
      break;
    }
    var alignOk = (!vAlign || vAlignOk) && (!hAlign || hAlignOk);
    if (this.dynamicAlign || alignOk) {
      candidate.offscreenArea = this.__getOffscreenArea(candidate, size, fitRect);
      if (0 === candidate.offscreenArea && alignOk) {
        position = candidate;
        break;
      }
      position = position || candidate;
      var diff = candidate.offscreenArea - position.offscreenArea;
      if (0 > diff || 0 === diff && (vAlignOk || hAlignOk)) {
        position = candidate;
      }
    }
  }
  return position;
}};
HtmlImportsNamespace.IronOverlayBehavior = {};
HtmlImportsNamespace.IronOverlayBehavior.IronFocusablesHelper = {};
(function() {
  var p = Element.prototype, matches = p.matches || p.matchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;
  Polymer.IronFocusablesHelper = {getTabbableNodes:function(node) {
    var result = [], needsSortByTabIndex = this._collectTabbableNodes(node, result);
    return needsSortByTabIndex ? this._sortByTabIndex(result) : result;
  }, isFocusable:function(element) {
    return matches.call(element, "input, select, textarea, button, object") ? matches.call(element, ":not([disabled])") : matches.call(element, "a[href], area[href], iframe, [tabindex], [contentEditable]");
  }, isTabbable:function(element) {
    return this.isFocusable(element) && matches.call(element, ':not([tabindex="-1"])') && this._isVisible(element);
  }, _normalizedTabIndex:function(element) {
    if (this.isFocusable(element)) {
      var tabIndex = element.getAttribute("tabindex") || 0;
      return Number(tabIndex);
    }
    return -1;
  }, _collectTabbableNodes:function(node, result) {
    if (node.nodeType !== Node.ELEMENT_NODE || !this._isVisible(node)) {
      return !1;
    }
    var element = node, tabIndex = this._normalizedTabIndex(element), needsSort = 0 < tabIndex;
    0 <= tabIndex && result.push(element);
    var children = "content" === element.localName || "slot" === element.localName ? Polymer.dom(element).getDistributedNodes() : Polymer.dom(element.root || element).children;
    for (var i = 0; i < children.length; i++) {
      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;
    }
    return needsSort;
  }, _isVisible:function(element) {
    var style = element.style;
    return "hidden" !== style.visibility && "none" !== style.display ? (style = window.getComputedStyle(element), "hidden" !== style.visibility && "none" !== style.display) : !1;
  }, _sortByTabIndex:function(tabbables) {
    var len = tabbables.length;
    if (2 > len) {
      return tabbables;
    }
    var pivot = Math.ceil(len / 2), left = this._sortByTabIndex(tabbables.slice(0, pivot)), right = this._sortByTabIndex(tabbables.slice(pivot));
    return this._mergeSortByTabIndex(left, right);
  }, _mergeSortByTabIndex:function(left, right) {
    for (var result = []; 0 < left.length && 0 < right.length;) {
      this._hasLowerTabOrder(left[0], right[0]) ? result.push(right.shift()) : result.push(left.shift());
    }
    return result.concat(left, right);
  }, _hasLowerTabOrder:function(a, b) {
    var ati = Math.max(a.tabIndex, 0), bti = Math.max(b.tabIndex, 0);
    return 0 === ati || 0 === bti ? bti > ati : ati > bti;
  }};
})();
HtmlImportsNamespace.IronOverlayBehavior.IronOverlayBackdrop = {};
Polymer({is:"iron-overlay-backdrop", properties:{opened:{reflectToAttribute:!0, type:Boolean, value:!1, observer:"_openedChanged"}}, listeners:{transitionend:"_onTransitionend"}, created:function() {
  this.__openedRaf = null;
}, attached:function() {
  this.opened && this._openedChanged(this.opened);
}, prepare:function() {
  this.opened && !this.parentNode && Polymer.dom(document.body).appendChild(this);
}, open:function() {
  this.opened = !0;
}, close:function() {
  this.opened = !1;
}, complete:function() {
  this.opened || this.parentNode !== document.body || Polymer.dom(this.parentNode).removeChild(this);
}, _onTransitionend:function(event) {
  event && event.target === this && this.complete();
}, _openedChanged:function(opened) {
  if (opened) {
    this.prepare();
  } else {
    var cs = window.getComputedStyle(this);
    "0s" !== cs.transitionDuration && 0 != cs.opacity || this.complete();
  }
  this.isAttached && (this.__openedRaf && (window.cancelAnimationFrame(this.__openedRaf), this.__openedRaf = null), this.scrollTop = this.scrollTop, this.__openedRaf = window.requestAnimationFrame(function() {
    this.__openedRaf = null;
    this.toggleClass("opened", this.opened);
  }.bind(this)));
}});
HtmlImportsNamespace.IronOverlayBehavior.IronOverlayManager = {};
Polymer.IronOverlayManagerClass = function() {
  this._overlays = [];
  this._minimumZ = 101;
  this._backdropElement = null;
  Polymer.Gestures.add(document.documentElement, "tap", function() {
  });
  document.addEventListener("tap", this._onCaptureClick.bind(this), !0);
  document.addEventListener("focus", this._onCaptureFocus.bind(this), !0);
  document.addEventListener("keydown", this._onCaptureKeyDown.bind(this), !0);
};
Polymer.IronOverlayManagerClass.prototype = {constructor:Polymer.IronOverlayManagerClass, get backdropElement() {
  this._backdropElement || (this._backdropElement = document.createElement("iron-overlay-backdrop"));
  return this._backdropElement;
}, get deepActiveElement() {
  var active = document.activeElement;
  active && !1 !== active instanceof Element || (active = document.body);
  for (; active.root && Polymer.dom(active.root).activeElement;) {
    active = Polymer.dom(active.root).activeElement;
  }
  return active;
}, _bringOverlayAtIndexToFront:function(i) {
  var overlay = this._overlays[i];
  if (overlay) {
    var lastI = this._overlays.length - 1, currentOverlay = this._overlays[lastI];
    currentOverlay && this._shouldBeBehindOverlay(overlay, currentOverlay) && lastI--;
    if (!(i >= lastI)) {
      var minimumZ = Math.max(this.currentOverlayZ(), this._minimumZ);
      for (this._getZ(overlay) <= minimumZ && this._applyOverlayZ(overlay, minimumZ); i < lastI;) {
        this._overlays[i] = this._overlays[i + 1], i++;
      }
      this._overlays[lastI] = overlay;
    }
  }
}, addOrRemoveOverlay:function(overlay) {
  overlay.opened ? this.addOverlay(overlay) : this.removeOverlay(overlay);
}, addOverlay:function(overlay) {
  var i = this._overlays.indexOf(overlay);
  if (0 <= i) {
    this._bringOverlayAtIndexToFront(i);
  } else {
    var insertionIndex = this._overlays.length, currentOverlay = this._overlays[insertionIndex - 1], minimumZ = Math.max(this._getZ(currentOverlay), this._minimumZ), newZ = this._getZ(overlay);
    if (currentOverlay && this._shouldBeBehindOverlay(overlay, currentOverlay)) {
      this._applyOverlayZ(currentOverlay, minimumZ);
      insertionIndex--;
      var previousOverlay = this._overlays[insertionIndex - 1];
      minimumZ = Math.max(this._getZ(previousOverlay), this._minimumZ);
    }
    newZ <= minimumZ && this._applyOverlayZ(overlay, minimumZ);
    this._overlays.splice(insertionIndex, 0, overlay);
  }
  this.trackBackdrop();
}, removeOverlay:function(overlay) {
  var i = this._overlays.indexOf(overlay);
  -1 !== i && (this._overlays.splice(i, 1), this.trackBackdrop());
}, currentOverlay:function() {
  var i = this._overlays.length - 1;
  return this._overlays[i];
}, currentOverlayZ:function() {
  return this._getZ(this.currentOverlay());
}, ensureMinimumZ:function(minimumZ) {
  this._minimumZ = Math.max(this._minimumZ, minimumZ);
}, focusOverlay:function() {
  var current = this.currentOverlay();
  current && current._applyFocus();
}, trackBackdrop:function() {
  var overlay = this._overlayWithBackdrop();
  if (overlay || this._backdropElement) {
    this.backdropElement.style.zIndex = this._getZ(overlay) - 1, this.backdropElement.opened = !!overlay, this.backdropElement.prepare();
  }
}, getBackdrops:function() {
  for (var backdrops = [], i = 0; i < this._overlays.length; i++) {
    this._overlays[i].withBackdrop && backdrops.push(this._overlays[i]);
  }
  return backdrops;
}, backdropZ:function() {
  return this._getZ(this._overlayWithBackdrop()) - 1;
}, _overlayWithBackdrop:function() {
  for (var i = this._overlays.length - 1; 0 <= i; i--) {
    if (this._overlays[i].withBackdrop) {
      return this._overlays[i];
    }
  }
}, _getZ:function(overlay) {
  var z = this._minimumZ;
  if (overlay) {
    var z1 = Number(overlay.style.zIndex || window.getComputedStyle(overlay).zIndex);
    z1 === z1 && (z = z1);
  }
  return z;
}, _setZ:function(element, z) {
  element.style.zIndex = z;
}, _applyOverlayZ:function(overlay, aboveZ) {
  this._setZ(overlay, aboveZ + 2);
}, _overlayInPath:function(path) {
  path = path || [];
  for (var i = 0; i < path.length; i++) {
    if (path[i]._manager === this) {
      return path[i];
    }
  }
}, _onCaptureClick:function(event) {
  var i = this._overlays.length - 1;
  if (-1 !== i) {
    for (var path = Polymer.dom(event).path, overlay; (overlay = this._overlays[i]) && this._overlayInPath(path) !== overlay;) {
      if (overlay._onCaptureClick(event), overlay.allowClickThrough) {
        i--;
      } else {
        break;
      }
    }
  }
}, _onCaptureFocus:function(event) {
  var overlay = this.currentOverlay();
  overlay && overlay._onCaptureFocus(event);
}, _onCaptureKeyDown:function(event) {
  var overlay = this.currentOverlay();
  overlay && (Polymer.IronA11yKeysBehavior.keyboardEventMatchesKeys(event, "esc") ? overlay._onCaptureEsc(event) : Polymer.IronA11yKeysBehavior.keyboardEventMatchesKeys(event, "tab") && overlay._onCaptureTab(event));
}, _shouldBeBehindOverlay:function(overlay1, overlay2) {
  return !overlay1.alwaysOnTop && overlay2.alwaysOnTop;
}};
Polymer.IronOverlayManager = new Polymer.IronOverlayManagerClass;
HtmlImportsNamespace.IronOverlayBehavior.IronScrollManager = {};
(function() {
  var lastTouchPosition = {pageX:0, pageY:0}, lastRootTarget = null, lastScrollableNodes = [], scrollEvents = ["wheel", "mousewheel", "DOMMouseScroll", "touchstart", "touchmove"];
  Polymer.IronScrollManager = {get currentLockingElement() {
    return this._lockingElements[this._lockingElements.length - 1];
  }, elementIsScrollLocked:function(element) {
    var currentLockingElement = this.currentLockingElement;
    if (void 0 === currentLockingElement) {
      return !1;
    }
    var scrollLocked;
    if (this._hasCachedLockedElement(element)) {
      return !0;
    }
    if (this._hasCachedUnlockedElement(element)) {
      return !1;
    }
    (scrollLocked = !!currentLockingElement && currentLockingElement !== element && !this._composedTreeContains(currentLockingElement, element)) ? this._lockedElementCache.push(element) : this._unlockedElementCache.push(element);
    return scrollLocked;
  }, pushScrollLock:function(element) {
    0 <= this._lockingElements.indexOf(element) || (0 === this._lockingElements.length && this._lockScrollInteractions(), this._lockingElements.push(element), this._lockedElementCache = [], this._unlockedElementCache = []);
  }, removeScrollLock:function(element) {
    var index = this._lockingElements.indexOf(element);
    -1 !== index && (this._lockingElements.splice(index, 1), this._lockedElementCache = [], this._unlockedElementCache = [], 0 === this._lockingElements.length && this._unlockScrollInteractions());
  }, _lockingElements:[], _lockedElementCache:null, _unlockedElementCache:null, _hasCachedLockedElement:function(element) {
    return -1 < this._lockedElementCache.indexOf(element);
  }, _hasCachedUnlockedElement:function(element) {
    return -1 < this._unlockedElementCache.indexOf(element);
  }, _composedTreeContains:function(element, child) {
    var contentIndex, nodeIndex;
    if (element.contains(child)) {
      return !0;
    }
    var contentElements = Polymer.dom(element).querySelectorAll("content,slot");
    for (contentIndex = 0; contentIndex < contentElements.length; ++contentIndex) {
      var distributedNodes = Polymer.dom(contentElements[contentIndex]).getDistributedNodes();
      for (nodeIndex = 0; nodeIndex < distributedNodes.length; ++nodeIndex) {
        if (distributedNodes[nodeIndex].nodeType === Node.ELEMENT_NODE && this._composedTreeContains(distributedNodes[nodeIndex], child)) {
          return !0;
        }
      }
    }
    return !1;
  }, _scrollInteractionHandler:function(event) {
    event.cancelable && this._shouldPreventScrolling(event) && event.preventDefault();
    if (event.targetTouches) {
      var touch = event.targetTouches[0];
      lastTouchPosition.pageX = touch.pageX;
      lastTouchPosition.pageY = touch.pageY;
    }
  }, _boundScrollHandler:void 0, _lockScrollInteractions:function() {
    this._boundScrollHandler = this._boundScrollHandler || this._scrollInteractionHandler.bind(this);
    for (var i = 0, l = scrollEvents.length; i < l; i++) {
      document.addEventListener(scrollEvents[i], this._boundScrollHandler, {capture:!0, passive:!1});
    }
  }, _unlockScrollInteractions:function() {
    for (var i = 0, l = scrollEvents.length; i < l; i++) {
      document.removeEventListener(scrollEvents[i], this._boundScrollHandler, {capture:!0, passive:!1});
    }
  }, _shouldPreventScrolling:function(event) {
    var target = Polymer.dom(event).rootTarget;
    "touchmove" !== event.type && lastRootTarget !== target && (lastRootTarget = target, lastScrollableNodes = this._getScrollableNodes(Polymer.dom(event).path));
    if (!lastScrollableNodes.length) {
      return !0;
    }
    if ("touchstart" === event.type) {
      return !1;
    }
    var info = this._getScrollInfo(event);
    return !this._getScrollingNode(lastScrollableNodes, info.deltaX, info.deltaY);
  }, _getScrollableNodes:function(nodes) {
    for (var scrollables = [], lockingIndex = nodes.indexOf(this.currentLockingElement), i = 0; i <= lockingIndex; i++) {
      if (nodes[i].nodeType === Node.ELEMENT_NODE) {
        var node = nodes[i], style = node.style;
        "scroll" !== style.overflow && "auto" !== style.overflow && (style = window.getComputedStyle(node));
        "scroll" !== style.overflow && "auto" !== style.overflow || scrollables.push(node);
      }
    }
    return scrollables;
  }, _getScrollingNode:function(nodes, deltaX, deltaY) {
    if (deltaX || deltaY) {
      for (var verticalScroll = Math.abs(deltaY) >= Math.abs(deltaX), i = 0; i < nodes.length; i++) {
        var node = nodes[i], canScroll;
        if (canScroll = verticalScroll ? 0 > deltaY ? 0 < node.scrollTop : node.scrollTop < node.scrollHeight - node.clientHeight : 0 > deltaX ? 0 < node.scrollLeft : node.scrollLeft < node.scrollWidth - node.clientWidth) {
          return node;
        }
      }
    }
  }, _getScrollInfo:function(event) {
    var info = {deltaX:event.deltaX, deltaY:event.deltaY};
    if (!("deltaX" in event)) {
      if ("wheelDeltaX" in event && "wheelDeltaY" in event) {
        info.deltaX = -event.wheelDeltaX, info.deltaY = -event.wheelDeltaY;
      } else {
        if ("wheelDelta" in event) {
          info.deltaX = 0, info.deltaY = -event.wheelDelta;
        } else {
          if ("axis" in event) {
            info.deltaX = 1 === event.axis ? event.detail : 0, info.deltaY = 2 === event.axis ? event.detail : 0;
          } else {
            if (event.targetTouches) {
              var touch = event.targetTouches[0];
              info.deltaX = lastTouchPosition.pageX - touch.pageX;
              info.deltaY = lastTouchPosition.pageY - touch.pageY;
            }
          }
        }
      }
    }
    return info;
  }};
})();
HtmlImportsNamespace.IronResizableBehavior = {};
HtmlImportsNamespace.IronResizableBehavior.IronResizableBehavior = {};
(function() {
  var ORPHANS = new Set;
  Polymer.IronResizableBehavior = {properties:{_parentResizable:{type:Object, observer:"_parentResizableChanged"}, _notifyingDescendant:{type:Boolean, value:!1}}, listeners:{"iron-request-resize-notifications":"_onIronRequestResizeNotifications"}, created:function() {
    this._interestedResizables = [];
    this._boundNotifyResize = this.notifyResize.bind(this);
    this._boundOnDescendantIronResize = this._onDescendantIronResize.bind(this);
  }, attached:function() {
    this._requestResizeNotifications();
  }, detached:function() {
    this._parentResizable ? this._parentResizable.stopResizeNotificationsFor(this) : (ORPHANS.delete(this), window.removeEventListener("resize", this._boundNotifyResize));
    this._parentResizable = null;
  }, notifyResize:function() {
    this.isAttached && (this._interestedResizables.forEach(function(resizable) {
      this.resizerShouldNotify(resizable) && this._notifyDescendant(resizable);
    }, this), this._fireResize());
  }, assignParentResizable:function(parentResizable) {
    this._parentResizable && this._parentResizable.stopResizeNotificationsFor(this);
    (this._parentResizable = parentResizable) && -1 === parentResizable._interestedResizables.indexOf(this) && (parentResizable._interestedResizables.push(this), parentResizable._subscribeIronResize(this));
  }, stopResizeNotificationsFor:function(target) {
    var index = this._interestedResizables.indexOf(target);
    -1 < index && (this._interestedResizables.splice(index, 1), this._unsubscribeIronResize(target));
  }, _subscribeIronResize:function(target) {
    target.addEventListener("iron-resize", this._boundOnDescendantIronResize);
  }, _unsubscribeIronResize:function(target) {
    target.removeEventListener("iron-resize", this._boundOnDescendantIronResize);
  }, resizerShouldNotify:function() {
    return !0;
  }, _onDescendantIronResize:function(event) {
    this._notifyingDescendant ? event.stopPropagation() : Polymer.Settings.useShadow || this._fireResize();
  }, _fireResize:function() {
    this.fire("iron-resize", null, {node:this, bubbles:!1});
  }, _onIronRequestResizeNotifications:function(event) {
    var target = Polymer.dom(event).rootTarget;
    target !== this && (target.assignParentResizable(this), this._notifyDescendant(target), event.stopPropagation());
  }, _parentResizableChanged:function(parentResizable) {
    parentResizable && window.removeEventListener("resize", this._boundNotifyResize);
  }, _notifyDescendant:function(descendant) {
    this.isAttached && (this._notifyingDescendant = !0, descendant.notifyResize(), this._notifyingDescendant = !1);
  }, _requestResizeNotifications:function() {
    if (this.isAttached) {
      if ("loading" === document.readyState) {
        var _requestResizeNotifications = this._requestResizeNotifications.bind(this);
        document.addEventListener("readystatechange", function readystatechanged() {
          document.removeEventListener("readystatechange", readystatechanged);
          _requestResizeNotifications();
        });
      } else {
        this._findParent(), this._parentResizable ? this._parentResizable._interestedResizables.forEach(function(resizable) {
          resizable !== this && resizable._findParent();
        }, this) : (ORPHANS.forEach(function(orphan) {
          orphan !== this && orphan._findParent();
        }, this), window.addEventListener("resize", this._boundNotifyResize), this.notifyResize());
      }
    }
  }, _findParent:function() {
    this.assignParentResizable(null);
    this.fire("iron-request-resize-notifications", null, {node:this, bubbles:!0, cancelable:!0});
    this._parentResizable ? ORPHANS.delete(this) : ORPHANS.add(this);
  }};
})();
HtmlImportsNamespace.IronOverlayBehavior.IronOverlayBehavior = {};
Polymer.IronOverlayBehaviorImpl = {properties:{opened:{observer:"_openedChanged", type:Boolean, value:!1, notify:!0}, canceled:{observer:"_canceledChanged", readOnly:!0, type:Boolean, value:!1}, withBackdrop:{observer:"_withBackdropChanged", type:Boolean}, noAutoFocus:{type:Boolean, value:!1}, noCancelOnEscKey:{type:Boolean, value:!1}, noCancelOnOutsideClick:{type:Boolean, value:!1}, closingReason:{type:Object}, restoreFocusOnClose:{type:Boolean, value:!1}, allowClickThrough:{type:Boolean}, alwaysOnTop:{type:Boolean}, 
scrollAction:{type:String}, _manager:{type:Object, value:Polymer.IronOverlayManager}, _focusedChild:{type:Object}}, listeners:{"iron-resize":"_onIronResize"}, observers:["__updateScrollObservers(isAttached, opened, scrollAction)"], get backdropElement() {
  return this._manager.backdropElement;
}, get _focusNode() {
  return this._focusedChild || Polymer.dom(this).querySelector("[autofocus]") || this;
}, get _focusableNodes() {
  return Polymer.IronFocusablesHelper.getTabbableNodes(this);
}, ready:function() {
  this.__shouldRemoveTabIndex = this.__isAnimating = !1;
  this.__firstFocusableNode = this.__lastFocusableNode = null;
  this.__rafs = {};
  this.__scrollTop = this.__scrollLeft = this.__restoreFocusNode = null;
  this.__onCaptureScroll = this.__onCaptureScroll.bind(this);
  this.__rootNodes = null;
  this._ensureSetup();
}, attached:function() {
  this.opened && this._openedChanged(this.opened);
  this._observer = Polymer.dom(this).observeNodes(this._onNodesChange);
}, detached:function() {
  Polymer.dom(this).unobserveNodes(this._observer);
  this._observer = null;
  for (var cb in this.__rafs) {
    null !== this.__rafs[cb] && cancelAnimationFrame(this.__rafs[cb]);
  }
  this.__rafs = {};
  this._manager.removeOverlay(this);
  this.__isAnimating && (this.opened ? this._finishRenderOpened() : (this._applyFocus(), this._finishRenderClosed()));
}, toggle:function() {
  this._setCanceled(!1);
  this.opened = !this.opened;
}, open:function() {
  this._setCanceled(!1);
  this.opened = !0;
}, close:function() {
  this._setCanceled(!1);
  this.opened = !1;
}, cancel:function(event) {
  var cancelEvent = this.fire("iron-overlay-canceled", event, {cancelable:!0});
  cancelEvent.defaultPrevented || (this._setCanceled(!0), this.opened = !1);
}, invalidateTabbables:function() {
  this.__firstFocusableNode = this.__lastFocusableNode = null;
}, _ensureSetup:function() {
  this._overlaySetup || (this._overlaySetup = !0, this.style.outline = "none", this.style.display = "none");
}, _openedChanged:function(opened) {
  opened ? this.removeAttribute("aria-hidden") : this.setAttribute("aria-hidden", "true");
  this.isAttached && (this.__isAnimating = !0, this.__deraf("__openedChanged", this.__openedChanged));
}, _canceledChanged:function() {
  this.closingReason = this.closingReason || {};
  this.closingReason.canceled = this.canceled;
}, _withBackdropChanged:function() {
  this.withBackdrop && !this.hasAttribute("tabindex") ? (this.setAttribute("tabindex", "-1"), this.__shouldRemoveTabIndex = !0) : this.__shouldRemoveTabIndex && (this.removeAttribute("tabindex"), this.__shouldRemoveTabIndex = !1);
  this.opened && this.isAttached && this._manager.trackBackdrop();
}, _prepareRenderOpened:function() {
  this.__restoreFocusNode = this._manager.deepActiveElement;
  this._preparePositioning();
  this.refit();
  this._finishPositioning();
  this.noAutoFocus && document.activeElement === this._focusNode && (this._focusNode.blur(), this.__restoreFocusNode.focus());
}, _renderOpened:function() {
  this._finishRenderOpened();
}, _renderClosed:function() {
  this._finishRenderClosed();
}, _finishRenderOpened:function() {
  this.notifyResize();
  this.__isAnimating = !1;
  this.fire("iron-overlay-opened");
}, _finishRenderClosed:function() {
  this.style.display = "none";
  this.style.zIndex = "";
  this.notifyResize();
  this.__isAnimating = !1;
  this.fire("iron-overlay-closed", this.closingReason);
}, _preparePositioning:function() {
  this.style.transition = this.style.webkitTransition = "none";
  this.style.transform = this.style.webkitTransform = "none";
  this.style.display = "";
}, _finishPositioning:function() {
  this.style.display = "none";
  this.scrollTop = this.scrollTop;
  this.style.transition = this.style.webkitTransition = "";
  this.style.transform = this.style.webkitTransform = "";
  this.style.display = "";
  this.scrollTop = this.scrollTop;
}, _applyFocus:function() {
  if (this.opened) {
    this.noAutoFocus || this._focusNode.focus();
  } else {
    if (this.restoreFocusOnClose && this.__restoreFocusNode) {
      var activeElement = this._manager.deepActiveElement;
      (activeElement === document.body || Polymer.dom(this).deepContains(activeElement)) && this.__restoreFocusNode.focus();
    }
    this.__restoreFocusNode = null;
    this._focusNode.blur();
    this._focusedChild = null;
  }
}, _onCaptureClick:function(event) {
  this.noCancelOnOutsideClick || this.cancel(event);
}, _onCaptureFocus:function(event) {
  if (this.withBackdrop) {
    var path = Polymer.dom(event).path;
    -1 === path.indexOf(this) ? (event.stopPropagation(), this._applyFocus()) : this._focusedChild = path[0];
  }
}, _onCaptureEsc:function(event) {
  this.noCancelOnEscKey || this.cancel(event);
}, _onCaptureTab:function(event) {
  if (this.withBackdrop) {
    this.__ensureFirstLastFocusables();
    var shift = event.shiftKey, nodeToCheck = shift ? this.__firstFocusableNode : this.__lastFocusableNode, nodeToSet = shift ? this.__lastFocusableNode : this.__firstFocusableNode;
    if (nodeToCheck === nodeToSet) {
      var shouldWrap = !0;
    } else {
      var focusedNode = this._manager.deepActiveElement;
      shouldWrap = focusedNode === nodeToCheck || focusedNode === this;
    }
    shouldWrap && (event.preventDefault(), this._focusedChild = nodeToSet, this._applyFocus());
  }
}, _onIronResize:function() {
  this.opened && !this.__isAnimating && this.__deraf("refit", this.refit);
}, _onNodesChange:function() {
  this.opened && !this.__isAnimating && (this.invalidateTabbables(), this.notifyResize());
}, __ensureFirstLastFocusables:function() {
  if (!this.__firstFocusableNode || !this.__lastFocusableNode) {
    var focusableNodes = this._focusableNodes;
    this.__firstFocusableNode = focusableNodes[0];
    this.__lastFocusableNode = focusableNodes[focusableNodes.length - 1];
  }
}, __openedChanged:function() {
  this.opened ? (this._prepareRenderOpened(), this._manager.addOverlay(this), this._applyFocus(), this._renderOpened()) : (this._manager.removeOverlay(this), this._applyFocus(), this._renderClosed());
}, __deraf:function(jobname, callback) {
  var rafs = this.__rafs;
  null !== rafs[jobname] && cancelAnimationFrame(rafs[jobname]);
  rafs[jobname] = requestAnimationFrame(function() {
    rafs[jobname] = null;
    callback.call(this);
  }.bind(this));
}, __updateScrollObservers:function(isAttached, opened, scrollAction) {
  isAttached && opened && this.__isValidScrollAction(scrollAction) ? ("lock" === scrollAction && (this.__saveScrollPosition(), Polymer.IronScrollManager.pushScrollLock(this)), this.__addScrollListeners()) : (Polymer.IronScrollManager.removeScrollLock(this), this.__removeScrollListeners());
}, __addScrollListeners:function() {
  if (!this.__rootNodes) {
    this.__rootNodes = [];
    if (Polymer.Settings.useShadow) {
      for (var node = this; node;) {
        node.nodeType === Node.DOCUMENT_FRAGMENT_NODE && node.host && this.__rootNodes.push(node), node = node.host || node.assignedSlot || node.parentNode;
      }
    }
    this.__rootNodes.push(document);
  }
  this.__rootNodes.forEach(function(el) {
    el.addEventListener("scroll", this.__onCaptureScroll, {capture:!0, passive:!0});
  }, this);
}, __removeScrollListeners:function() {
  this.__rootNodes && this.__rootNodes.forEach(function(el) {
    el.removeEventListener("scroll", this.__onCaptureScroll, {capture:!0, passive:!0});
  }, this);
  this.isAttached || (this.__rootNodes = null);
}, __isValidScrollAction:function(scrollAction) {
  return "lock" === scrollAction || "refit" === scrollAction || "cancel" === scrollAction;
}, __onCaptureScroll:function(event) {
  if (!(this.__isAnimating || 0 <= Polymer.dom(event).path.indexOf(this))) {
    switch(this.scrollAction) {
      case "lock":
        this.__restoreScrollPosition();
        break;
      case "refit":
        this.__deraf("refit", this.refit);
        break;
      case "cancel":
        this.cancel(event);
    }
  }
}, __saveScrollPosition:function() {
  document.scrollingElement ? (this.__scrollTop = document.scrollingElement.scrollTop, this.__scrollLeft = document.scrollingElement.scrollLeft) : (this.__scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop), this.__scrollLeft = Math.max(document.documentElement.scrollLeft, document.body.scrollLeft));
}, __restoreScrollPosition:function() {
  document.scrollingElement ? (document.scrollingElement.scrollTop = this.__scrollTop, document.scrollingElement.scrollLeft = this.__scrollLeft) : (document.documentElement.scrollTop = document.body.scrollTop = this.__scrollTop, document.documentElement.scrollLeft = document.body.scrollLeft = this.__scrollLeft);
}};
Polymer.IronOverlayBehavior = [Polymer.IronFitBehavior, Polymer.IronResizableBehavior, Polymer.IronOverlayBehaviorImpl];
HtmlImportsNamespace.NeonAnimation = {};
HtmlImportsNamespace.NeonAnimation.NeonAnimationBehavior = {};
Polymer.NeonAnimationBehavior = {properties:{animationTiming:{type:Object, value:function() {
  return {duration:500, easing:"cubic-bezier(0.4, 0, 0.2, 1)", fill:"both"};
}}}, isNeonAnimation:!0, created:function() {
  document.body.animate || console.warn("No web animations detected. This element will not function without a web animations polyfill.");
}, timingFromConfig:function(config) {
  if (config.timing) {
    for (var property in config.timing) {
      this.animationTiming[property] = config.timing[property];
    }
  }
  return this.animationTiming;
}, setPrefixedProperty:function(node, property, value) {
  for (var map = {transform:["webkitTransform"], transformOrigin:["mozTransformOrigin", "webkitTransformOrigin"]}, prefixes = map[property], prefix, index = 0; prefix = prefixes[index]; index++) {
    node.style[prefix] = value;
  }
  node.style[property] = value;
}, complete:function() {
}};
HtmlImportsNamespace.NeonAnimation.Animations = {};
HtmlImportsNamespace.NeonAnimation.Animations.OpaqueAnimation = {};
Polymer({is:"opaque-animation", behaviors:[Polymer.NeonAnimationBehavior], configure:function(config) {
  var node = config.node;
  this._effect = new KeyframeEffect(node, [{opacity:"1"}, {opacity:"1"}], this.timingFromConfig(config));
  node.style.opacity = "0";
  return this._effect;
}, complete:function(config) {
  config.node.style.opacity = "";
}});
HtmlImportsNamespace.NeonAnimation.NeonAnimatableBehavior = {};
Polymer.NeonAnimatableBehavior = {properties:{animationConfig:{type:Object}, entryAnimation:{observer:"_entryAnimationChanged", type:String}, exitAnimation:{observer:"_exitAnimationChanged", type:String}}, _entryAnimationChanged:function() {
  this.animationConfig = this.animationConfig || {};
  this.animationConfig.entry = [{name:this.entryAnimation, node:this}];
}, _exitAnimationChanged:function() {
  this.animationConfig = this.animationConfig || {};
  this.animationConfig.exit = [{name:this.exitAnimation, node:this}];
}, _copyProperties:function(config1, config2) {
  for (var property in config2) {
    config1[property] = config2[property];
  }
}, _cloneConfig:function(config) {
  var clone = {isClone:!0};
  this._copyProperties(clone, config);
  return clone;
}, _getAnimationConfigRecursive:function(type, map, allConfigs) {
  if (this.animationConfig) {
    if (this.animationConfig.value && "function" === typeof this.animationConfig.value) {
      this._warn(this._logf("playAnimation", "Please put 'animationConfig' inside of your components 'properties' object instead of outside of it."));
    } else {
      var thisConfig = type ? this.animationConfig[type] : this.animationConfig;
      Array.isArray(thisConfig) || (thisConfig = [thisConfig]);
      if (thisConfig) {
        for (var config, index = 0; config = thisConfig[index]; index++) {
          if (config.animatable) {
            config.animatable._getAnimationConfigRecursive(config.type || type, map, allConfigs);
          } else {
            if (config.id) {
              var cachedConfig = map[config.id];
              cachedConfig ? (cachedConfig.isClone || (map[config.id] = this._cloneConfig(cachedConfig), cachedConfig = map[config.id]), this._copyProperties(cachedConfig, config)) : map[config.id] = config;
            } else {
              allConfigs.push(config);
            }
          }
        }
      }
    }
  }
}, getAnimationConfig:function(type) {
  var map = {}, allConfigs = [];
  this._getAnimationConfigRecursive(type, map, allConfigs);
  for (var key in map) {
    allConfigs.push(map[key]);
  }
  return allConfigs;
}};
HtmlImportsNamespace.NeonAnimation.NeonAnimationRunnerBehavior = {};
Polymer.NeonAnimationRunnerBehaviorImpl = {_configureAnimations:function(configs) {
  var results = [], resultsToPlay = [];
  if (0 < configs.length) {
    for (var config, index = 0; config = configs[index]; index++) {
      var neonAnimation = document.createElement(config.name);
      if (neonAnimation.isNeonAnimation) {
        var result = null;
        neonAnimation.configure || (neonAnimation.configure = function() {
          return null;
        });
        result = neonAnimation.configure(config);
        resultsToPlay.push({result:result, config:config, neonAnimation:neonAnimation});
      } else {
        console.warn(this.is + ":", config.name, "not found!");
      }
    }
  }
  for (var i = 0; i < resultsToPlay.length; i++) {
    result = resultsToPlay[i].result;
    config = resultsToPlay[i].config;
    neonAnimation = resultsToPlay[i].neonAnimation;
    try {
      "function" != typeof result.cancel && (result = document.timeline.play(result));
    } catch (e) {
      result = null, console.warn("Couldnt play", "(", config.name, ").", e);
    }
    result && results.push({neonAnimation:neonAnimation, config:config, animation:result});
  }
  return results;
}, _shouldComplete:function(activeEntries) {
  for (var finished = !0, i = 0; i < activeEntries.length; i++) {
    if ("finished" != activeEntries[i].animation.playState) {
      finished = !1;
      break;
    }
  }
  return finished;
}, _complete:function(activeEntries) {
  for (var i = 0; i < activeEntries.length; i++) {
    activeEntries[i].neonAnimation.complete(activeEntries[i].config);
  }
  for (i = 0; i < activeEntries.length; i++) {
    activeEntries[i].animation.cancel();
  }
}, playAnimation:function(type, cookie) {
  var configs = this.getAnimationConfig(type);
  if (configs) {
    this._active = this._active || {};
    this._active[type] && (this._complete(this._active[type]), delete this._active[type]);
    var activeEntries = this._configureAnimations(configs);
    if (0 == activeEntries.length) {
      this.fire("neon-animation-finish", cookie, {bubbles:!1});
    } else {
      this._active[type] = activeEntries;
      for (var i = 0; i < activeEntries.length; i++) {
        activeEntries[i].animation.onfinish = function() {
          this._shouldComplete(activeEntries) && (this._complete(activeEntries), delete this._active[type], this.fire("neon-animation-finish", cookie, {bubbles:!1}));
        }.bind(this);
      }
    }
  }
}, cancelAnimation:function() {
  for (var k in this._active) {
    var entries = this._active[k], j;
    for (j in entries) {
      entries[j].animation && entries[j].animation.cancel && entries[j].animation.cancel();
    }
  }
  this._active = {};
}};
Polymer.NeonAnimationRunnerBehavior = [Polymer.NeonAnimatableBehavior, Polymer.NeonAnimationRunnerBehaviorImpl];
HtmlImportsNamespace.IronDropdown.IronDropdown = {};
Polymer({is:"iron-dropdown", behaviors:[Polymer.IronControlState, Polymer.IronA11yKeysBehavior, Polymer.IronOverlayBehavior, Polymer.NeonAnimationRunnerBehavior], properties:{horizontalAlign:{type:String, value:"left", reflectToAttribute:!0}, verticalAlign:{type:String, value:"top", reflectToAttribute:!0}, openAnimationConfig:{type:Object}, closeAnimationConfig:{type:Object}, focusTarget:{type:Object}, noAnimations:{type:Boolean, value:!1}, allowOutsideScroll:{type:Boolean, value:!1}, _boundOnCaptureScroll:{type:Function, 
value:function() {
  return this._onCaptureScroll.bind(this);
}}}, listeners:{"neon-animation-finish":"_onNeonAnimationFinish"}, observers:["_updateOverlayPosition(positionTarget, verticalAlign, horizontalAlign, verticalOffset, horizontalOffset)"], get containedElement() {
  return Polymer.dom(this.$.content).getDistributedNodes()[0];
}, get _focusTarget() {
  return this.focusTarget || this.containedElement;
}, ready:function() {
  this._scrollLeft = this._scrollTop = 0;
  this._refitOnScrollRAF = null;
}, attached:function() {
  this.sizingTarget && this.sizingTarget !== this || (this.sizingTarget = this.containedElement || this);
}, detached:function() {
  this.cancelAnimation();
  document.removeEventListener("scroll", this._boundOnCaptureScroll);
  Polymer.IronDropdownScrollManager.removeScrollLock(this);
}, _openedChanged:function() {
  this.opened && this.disabled ? this.cancel() : (this.cancelAnimation(), this._updateAnimationConfig(), this._saveScrollPosition(), this.opened ? (document.addEventListener("scroll", this._boundOnCaptureScroll), !this.allowOutsideScroll && Polymer.IronDropdownScrollManager.pushScrollLock(this)) : (document.removeEventListener("scroll", this._boundOnCaptureScroll), Polymer.IronDropdownScrollManager.removeScrollLock(this)), Polymer.IronOverlayBehaviorImpl._openedChanged.apply(this, arguments));
}, _renderOpened:function() {
  !this.noAnimations && this.animationConfig.open ? (this.$.contentWrapper.classList.add("animating"), this.playAnimation("open")) : Polymer.IronOverlayBehaviorImpl._renderOpened.apply(this, arguments);
}, _renderClosed:function() {
  !this.noAnimations && this.animationConfig.close ? (this.$.contentWrapper.classList.add("animating"), this.playAnimation("close")) : Polymer.IronOverlayBehaviorImpl._renderClosed.apply(this, arguments);
}, _onNeonAnimationFinish:function() {
  this.$.contentWrapper.classList.remove("animating");
  this.opened ? this._finishRenderOpened() : this._finishRenderClosed();
}, _onCaptureScroll:function() {
  this.allowOutsideScroll ? (this._refitOnScrollRAF && window.cancelAnimationFrame(this._refitOnScrollRAF), this._refitOnScrollRAF = window.requestAnimationFrame(this.refit.bind(this))) : this._restoreScrollPosition();
}, _saveScrollPosition:function() {
  document.scrollingElement ? (this._scrollTop = document.scrollingElement.scrollTop, this._scrollLeft = document.scrollingElement.scrollLeft) : (this._scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop), this._scrollLeft = Math.max(document.documentElement.scrollLeft, document.body.scrollLeft));
}, _restoreScrollPosition:function() {
  document.scrollingElement ? (document.scrollingElement.scrollTop = this._scrollTop, document.scrollingElement.scrollLeft = this._scrollLeft) : (document.documentElement.scrollTop = this._scrollTop, document.documentElement.scrollLeft = this._scrollLeft, document.body.scrollTop = this._scrollTop, document.body.scrollLeft = this._scrollLeft);
}, _updateAnimationConfig:function() {
  for (var animationNode = this.containedElement, animations = [].concat(this.openAnimationConfig || []).concat(this.closeAnimationConfig || []), i = 0; i < animations.length; i++) {
    animations[i].node = animationNode;
  }
  this.animationConfig = {open:this.openAnimationConfig, close:this.closeAnimationConfig};
}, _updateOverlayPosition:function() {
  this.isAttached && this.notifyResize();
}, _applyFocus:function() {
  var focusTarget = this.focusTarget || this.containedElement;
  focusTarget && this.opened && !this.noAutoFocus ? focusTarget.focus() : Polymer.IronOverlayBehaviorImpl._applyFocus.apply(this, arguments);
}});
HtmlImportsNamespace.IronFlexLayout = {};
HtmlImportsNamespace.IronFlexLayout.IronFlexLayout = {};
var style$jscomp$inline_640 = document.createElement("style");
style$jscomp$inline_640.textContent = "[hidden] { display: none !important; }";
document.head.appendChild(style$jscomp$inline_640);
HtmlImportsNamespace.IronMeta = {};
HtmlImportsNamespace.IronMeta.IronMeta = {};
(function() {
  Polymer.IronMeta = function(options) {
    Polymer.IronMeta[" "](options);
    this.type = options && options.type || "default";
    this.key = options && options.key;
    options && "value" in options && (this.value = options.value);
  };
  Polymer.IronMeta[" "] = function() {
  };
  Polymer.IronMeta.types = {};
  Polymer.IronMeta.prototype = {get value() {
    var type = this.type, key = this.key;
    if (type && key) {
      return Polymer.IronMeta.types[type] && Polymer.IronMeta.types[type][key];
    }
  }, set value(value) {
    var type = this.type, key = this.key;
    type && key && (type = Polymer.IronMeta.types[type] = Polymer.IronMeta.types[type] || {}, null == value ? delete type[key] : type[key] = value);
  }, get list() {
    var type = this.type;
    if (type) {
      var items = Polymer.IronMeta.types[this.type];
      return items ? Object.keys(items).map(function(key) {
        return metaDatas[this.type][key];
      }, this) : [];
    }
  }, byKey:function(key) {
    this.key = key;
    return this.value;
  }};
  var metaDatas = Polymer.IronMeta.types;
  Polymer({is:"iron-meta", properties:{type:{type:String, value:"default"}, key:{type:String}, value:{type:String, notify:!0}, self:{type:Boolean, observer:"_selfChanged"}, __meta:{type:Boolean, computed:"__computeMeta(type, key, value)"}}, hostAttributes:{hidden:!0}, __computeMeta:function(type, key, value) {
    var meta = new Polymer.IronMeta({type:type, key:key});
    void 0 !== value && value !== meta.value ? meta.value = value : this.value !== meta.value && (this.value = meta.value);
    return meta;
  }, get list() {
    return this.__meta && this.__meta.list;
  }, _selfChanged:function(self) {
    self && (this.value = this);
  }, byKey:function(key) {
    return (new Polymer.IronMeta({type:this.type, key:key})).value;
  }});
})();
HtmlImportsNamespace.IronIcon = {};
HtmlImportsNamespace.IronIcon.IronIcon = {};
Polymer({is:"iron-icon", properties:{icon:{type:String}, theme:{type:String}, src:{type:String}, _meta:{value:Polymer.Base.create("iron-meta", {type:"iconset"})}}, observers:["_updateIcon(_meta, isAttached)", "_updateIcon(theme, isAttached)", "_srcChanged(src, isAttached)", "_iconChanged(icon, isAttached)"], _DEFAULT_ICONSET:"icons", _iconChanged:function(icon) {
  var parts = (icon || "").split(":");
  this._iconName = parts.pop();
  this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;
  this._updateIcon();
}, _srcChanged:function() {
  this._updateIcon();
}, _usesIconset:function() {
  return this.icon || !this.src;
}, _updateIcon:function() {
  this._usesIconset() ? (this._img && this._img.parentNode && Polymer.dom(this.root).removeChild(this._img), "" === this._iconName ? this._iconset && this._iconset.removeIcon(this) : this._iconsetName && this._meta && ((this._iconset = this._meta.byKey(this._iconsetName)) ? (this._iconset.applyIcon(this, this._iconName, this.theme), this.unlisten(window, "iron-iconset-added", "_updateIcon")) : this.listen(window, "iron-iconset-added", "_updateIcon"))) : (this._iconset && this._iconset.removeIcon(this), 
  this._img || (this._img = document.createElement("img"), this._img.style.width = "100%", this._img.style.height = "100%", this._img.draggable = !1), this._img.src = this.src, Polymer.dom(this.root).appendChild(this._img));
}});
HtmlImportsNamespace.IronIconsetSvg = {};
HtmlImportsNamespace.IronIconsetSvg.IronIconsetSvg = {};
Polymer({is:"iron-iconset-svg", properties:{name:{type:String, observer:"_nameChanged"}, size:{type:Number, value:24}, rtlMirroring:{type:Boolean, value:!1}, useGlobalRtlAttribute:{type:Boolean, value:!1}}, created:function() {
  this._meta = new Polymer.IronMeta({type:"iconset", key:null, value:null});
}, attached:function() {
  this.style.display = "none";
}, getIconNames:function() {
  this._icons = this._createIconMap();
  return Object.keys(this._icons).map(function(n) {
    return this.name + ":" + n;
  }, this);
}, applyIcon:function(element, iconName) {
  this.removeIcon(element);
  var svg = this._cloneIcon(iconName, this.rtlMirroring && this._targetIsRTL(element));
  if (svg) {
    var pde = Polymer.dom(element.root || element);
    pde.insertBefore(svg, pde.childNodes[0]);
    return element._svgIcon = svg;
  }
  return null;
}, removeIcon:function(element) {
  element._svgIcon && (Polymer.dom(element.root || element).removeChild(element._svgIcon), element._svgIcon = null);
}, _targetIsRTL:function(target) {
  if (null == this.__targetIsRTL) {
    if (this.useGlobalRtlAttribute) {
      var globalElement = document.body && document.body.hasAttribute("dir") ? document.body : document.documentElement;
      this.__targetIsRTL = "rtl" === globalElement.getAttribute("dir");
    } else {
      target && target.nodeType !== Node.ELEMENT_NODE && (target = target.host), this.__targetIsRTL = target && "rtl" === window.getComputedStyle(target).direction;
    }
  }
  return this.__targetIsRTL;
}, _nameChanged:function() {
  this._meta.value = null;
  this._meta.key = this.name;
  this._meta.value = this;
  this.async(function() {
    this.fire("iron-iconset-added", this, {node:window});
  });
}, _createIconMap:function() {
  var icons = Object.create(null);
  Polymer.dom(this).querySelectorAll("[id]").forEach(function(icon) {
    icons[icon.id] = icon;
  });
  return icons;
}, _cloneIcon:function(id, mirrorAllowed) {
  this._icons = this._icons || this._createIconMap();
  return this._prepareSvgClone(this._icons[id], this.size, mirrorAllowed);
}, _prepareSvgClone:function(sourceSvg, size, mirrorAllowed) {
  if (sourceSvg) {
    var content = sourceSvg.cloneNode(!0), svg = document.createElementNS("http://www.w3.org/2000/svg", "svg"), viewBox = content.getAttribute("viewBox") || "0 0 " + size + " " + size, cssText = "pointer-events: none; display: block; width: 100%; height: 100%;";
    mirrorAllowed && content.hasAttribute("mirror-in-rtl") && (cssText += "-webkit-transform:scale(-1,1);transform:scale(-1,1);transform-origin:center;");
    svg.setAttribute("viewBox", viewBox);
    svg.setAttribute("preserveAspectRatio", "xMidYMid meet");
    svg.setAttribute("focusable", "false");
    svg.style.cssText = cssText;
    svg.appendChild(content).removeAttribute("id");
    return svg;
  }
  return null;
}});
HtmlImportsNamespace.IronIcons = {};
HtmlImportsNamespace.IronIcons.AvIcons = {};
HtmlImportsNamespace.IronIcons.CommunicationIcons = {};
HtmlImportsNamespace.IronIcons.DeviceIcons = {};
HtmlImportsNamespace.IronIcons.EditorIcons = {};
HtmlImportsNamespace.IronIcons.HardwareIcons = {};
HtmlImportsNamespace.IronIcons.ImageIcons = {};
HtmlImportsNamespace.IronIcons.IronIcons = {};
HtmlImportsNamespace.IronIcons.MapsIcons = {};
HtmlImportsNamespace.IronIcons.NotificationIcons = {};
HtmlImportsNamespace.IronIcons.PlacesIcons = {};
HtmlImportsNamespace.IronIcons.SocialIcons = {};
HtmlImportsNamespace.IronScrollTargetBehavior = {};
HtmlImportsNamespace.IronScrollTargetBehavior.IronScrollTargetBehavior = {};
Polymer.IronScrollTargetBehavior = {properties:{scrollTarget:{type:HTMLElement, value:function() {
  return this._defaultScrollTarget;
}}}, observers:["_scrollTargetChanged(scrollTarget, isAttached)"], _shouldHaveListener:!0, _scrollTargetChanged:function(scrollTarget, isAttached) {
  this._oldScrollTarget && (this._toggleScrollListener(!1, this._oldScrollTarget), this._oldScrollTarget = null);
  if (isAttached) {
    if ("document" === scrollTarget) {
      this.scrollTarget = this._doc;
    } else {
      if ("string" === typeof scrollTarget) {
        var domHost = this.domHost;
        this.scrollTarget = domHost && domHost.$ ? domHost.$[scrollTarget] : Polymer.dom(this.ownerDocument).querySelector("#" + scrollTarget);
      } else {
        this._isValidScrollTarget() && (this._oldScrollTarget = scrollTarget, this._toggleScrollListener(this._shouldHaveListener, scrollTarget));
      }
    }
  }
}, _scrollHandler:function() {
}, get _defaultScrollTarget() {
  return this._doc;
}, get _doc() {
  return this.ownerDocument.documentElement;
}, get _scrollTop() {
  return this._isValidScrollTarget() ? this.scrollTarget === this._doc ? window.pageYOffset : this.scrollTarget.scrollTop : 0;
}, get _scrollLeft() {
  return this._isValidScrollTarget() ? this.scrollTarget === this._doc ? window.pageXOffset : this.scrollTarget.scrollLeft : 0;
}, set _scrollTop(top) {
  this.scrollTarget === this._doc ? window.scrollTo(window.pageXOffset, top) : this._isValidScrollTarget() && (this.scrollTarget.scrollTop = top);
}, set _scrollLeft(left) {
  this.scrollTarget === this._doc ? window.scrollTo(left, window.pageYOffset) : this._isValidScrollTarget() && (this.scrollTarget.scrollLeft = left);
}, scroll:function(leftOrOptions, top) {
  if ("object" === typeof leftOrOptions) {
    var left = leftOrOptions.left;
    top = leftOrOptions.top;
  } else {
    left = leftOrOptions;
  }
  left = left || 0;
  top = top || 0;
  this.scrollTarget === this._doc ? window.scrollTo(left, top) : this._isValidScrollTarget() && (this.scrollTarget.scrollLeft = left, this.scrollTarget.scrollTop = top);
}, get _scrollTargetWidth() {
  return this._isValidScrollTarget() ? this.scrollTarget === this._doc ? window.innerWidth : this.scrollTarget.offsetWidth : 0;
}, get _scrollTargetHeight() {
  return this._isValidScrollTarget() ? this.scrollTarget === this._doc ? window.innerHeight : this.scrollTarget.offsetHeight : 0;
}, _isValidScrollTarget:function() {
  return this.scrollTarget instanceof HTMLElement;
}, _toggleScrollListener:function(yes, scrollTarget) {
  var eventTarget = scrollTarget === this._doc ? window : scrollTarget;
  yes ? this._boundScrollHandler || (this._boundScrollHandler = this._scrollHandler.bind(this), eventTarget.addEventListener("scroll", this._boundScrollHandler)) : this._boundScrollHandler && (eventTarget.removeEventListener("scroll", this._boundScrollHandler), this._boundScrollHandler = null);
}, toggleScrollListener:function(yes) {
  this._shouldHaveListener = yes;
  this._toggleScrollListener(yes, this.scrollTarget);
}};
HtmlImportsNamespace.IronList = {};
HtmlImportsNamespace.IronList.IronList = {};
(function() {
  var IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\d+)/), IOS_TOUCH_SCROLLING = IOS && 8 <= IOS[1], IS_V2 = null != Polymer.flush, ANIMATION_FRAME = IS_V2 ? Polymer.Async.animationFrame : 0, IDLE_TIME = IS_V2 ? Polymer.Async.idlePeriod : 1, MICRO_TASK = IS_V2 ? Polymer.Async.microTask : 2;
  Polymer.OptionalMutableDataBehavior || (Polymer.OptionalMutableDataBehavior = {});
  Polymer({is:"iron-list", properties:{items:{type:Array}, as:{type:String, value:"item"}, indexAs:{type:String, value:"index"}, selectedAs:{type:String, value:"selected"}, grid:{type:Boolean, value:!1, reflectToAttribute:!0, observer:"_gridChanged"}, selectionEnabled:{type:Boolean, value:!1}, selectedItem:{type:Object, notify:!0}, selectedItems:{type:Object, notify:!0}, multiSelection:{type:Boolean, value:!1}, scrollOffset:{type:Number, value:0}}, observers:["_itemsChanged(items.*)", "_selectionEnabledChanged(selectionEnabled)", 
  "_multiSelectionChanged(multiSelection)", "_setOverflow(scrollTarget, scrollOffset)"], behaviors:[Polymer.Templatizer, Polymer.IronResizableBehavior, Polymer.IronScrollTargetBehavior, Polymer.OptionalMutableDataBehavior], _ratio:0.5, _scrollerPaddingTop:0, _scrollPosition:0, _physicalSize:0, _physicalAverage:0, _physicalAverageCount:0, _physicalTop:0, _virtualCount:0, _estScrollHeight:0, _scrollHeight:0, _viewportHeight:0, _viewportWidth:0, _physicalItems:null, _physicalSizes:null, _firstVisibleIndexVal:null, 
  _collection:null, _lastVisibleIndexVal:null, _maxPages:2, _focusedItem:null, _focusedVirtualIndex:-1, _focusedPhysicalIndex:-1, _offscreenFocusedItem:null, _focusBackfillItem:null, _itemsPerRow:1, _itemWidth:0, _rowHeight:0, _templateCost:0, _parentModel:!0, get _physicalBottom() {
    return this._physicalTop + this._physicalSize;
  }, get _scrollBottom() {
    return this._scrollPosition + this._viewportHeight;
  }, get _virtualEnd() {
    return this._virtualStart + this._physicalCount - 1;
  }, get _hiddenContentSize() {
    var size = this.grid ? this._physicalRows * this._rowHeight : this._physicalSize;
    return size - this._viewportHeight;
  }, get _itemsParent() {
    return Polymer.dom(Polymer.dom(this._userTemplate).parentNode);
  }, get _maxScrollTop() {
    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;
  }, get _maxVirtualStart() {
    var virtualCount = this._convertIndexToCompleteRow(this._virtualCount);
    return Math.max(0, virtualCount - this._physicalCount);
  }, set _virtualStart(val) {
    val = this._clamp(val, 0, this._maxVirtualStart);
    this.grid && (val -= val % this._itemsPerRow);
    this._virtualStartVal = val;
  }, get _virtualStart() {
    return this._virtualStartVal || 0;
  }, set _physicalStart(val) {
    val %= this._physicalCount;
    0 > val && (val = this._physicalCount + val);
    this.grid && (val -= val % this._itemsPerRow);
    this._physicalStartVal = val;
  }, get _physicalStart() {
    return this._physicalStartVal || 0;
  }, get _physicalEnd() {
    return (this._physicalStart + this._physicalCount - 1) % this._physicalCount;
  }, set _physicalCount(val) {
    this._physicalCountVal = val;
  }, get _physicalCount() {
    return this._physicalCountVal || 0;
  }, get _optPhysicalSize() {
    return 0 === this._viewportHeight ? Infinity : this._viewportHeight * this._maxPages;
  }, get _isVisible() {
    return !(!this.offsetWidth && !this.offsetHeight);
  }, get firstVisibleIndex() {
    var idx = this._firstVisibleIndexVal;
    if (null == idx) {
      var physicalOffset = this._physicalTop + this._scrollOffset;
      this._firstVisibleIndexVal = idx = this._iterateItems(function(pidx, vidx) {
        physicalOffset += this._getPhysicalSizeIncrement(pidx);
        if (physicalOffset > this._scrollPosition) {
          return this.grid ? vidx - vidx % this._itemsPerRow : vidx;
        }
        if (this.grid && this._virtualCount - 1 === vidx) {
          return vidx - vidx % this._itemsPerRow;
        }
      }) || 0;
    }
    return idx;
  }, get lastVisibleIndex() {
    var idx = this._lastVisibleIndexVal;
    if (null == idx) {
      if (this.grid) {
        idx = Math.min(this._virtualCount, this.firstVisibleIndex + this._estRowsInView * this._itemsPerRow - 1);
      } else {
        var physicalOffset = this._physicalTop + this._scrollOffset;
        this._iterateItems(function(pidx, vidx) {
          physicalOffset < this._scrollBottom && (idx = vidx);
          physicalOffset += this._getPhysicalSizeIncrement(pidx);
        });
      }
      this._lastVisibleIndexVal = idx;
    }
    return idx;
  }, get _defaultScrollTarget() {
    return this;
  }, get _virtualRowCount() {
    return Math.ceil(this._virtualCount / this._itemsPerRow);
  }, get _estRowsInView() {
    return Math.ceil(this._viewportHeight / this._rowHeight);
  }, get _physicalRows() {
    return Math.ceil(this._physicalCount / this._itemsPerRow);
  }, get _scrollOffset() {
    return this._scrollerPaddingTop + this.scrollOffset;
  }, ready:function() {
    this.addEventListener("focus", this._didFocus.bind(this), !0);
  }, attached:function() {
    this._debounce("_render", this._render, ANIMATION_FRAME);
    this.listen(this, "iron-resize", "_resizeHandler");
    this.listen(this, "keydown", "_keydownHandler");
  }, detached:function() {
    this.unlisten(this, "iron-resize", "_resizeHandler");
    this.unlisten(this, "keydown", "_keydownHandler");
  }, _setOverflow:function(scrollTarget) {
    this.style.webkitOverflowScrolling = scrollTarget === this ? "touch" : "";
    this.style.overflowY = scrollTarget === this ? "auto" : "";
    this._firstVisibleIndexVal = this._lastVisibleIndexVal = null;
    this._debounce("_render", this._render, ANIMATION_FRAME);
  }, updateViewportBoundaries:function() {
    var styles = window.getComputedStyle(this);
    this._scrollerPaddingTop = this.scrollTarget === this ? 0 : parseInt(styles["padding-top"], 10);
    this._isRTL = "rtl" === styles.direction;
    this._viewportWidth = this.$.items.offsetWidth;
    this._viewportHeight = this._scrollTargetHeight;
    this.grid && this._updateGridMetrics();
  }, _scrollHandler:function() {
    var scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop)), delta = scrollTop - this._scrollPosition, isScrollingDown = 0 <= delta;
    this._scrollPosition = scrollTop;
    this._lastVisibleIndexVal = this._firstVisibleIndexVal = null;
    if (Math.abs(delta) > this._physicalSize && 0 < this._physicalSize) {
      delta -= this._scrollOffset;
      var idxAdjustment = Math.round(delta / this._physicalAverage) * this._itemsPerRow;
      this._virtualStart += idxAdjustment;
      this._physicalStart += idxAdjustment;
      this._physicalTop = Math.min(Math.floor(this._virtualStart / this._itemsPerRow) * this._physicalAverage, this._scrollPosition);
      this._update();
    } else {
      if (0 < this._physicalCount) {
        var reusables = this._getReusables(isScrollingDown);
        isScrollingDown ? (this._physicalTop = reusables.physicalTop, this._virtualStart += reusables.indexes.length, this._physicalStart += reusables.indexes.length) : (this._virtualStart -= reusables.indexes.length, this._physicalStart -= reusables.indexes.length);
        this._update(reusables.indexes, isScrollingDown ? null : reusables.indexes);
        this._debounce("_increasePoolIfNeeded", this._increasePoolIfNeeded.bind(this, 0), MICRO_TASK);
      }
    }
  }, _getReusables:function(fromTop) {
    var idxs = [], protectedOffsetContent = this._hiddenContentSize * this._ratio, virtualStart = this._virtualStart, virtualEnd = this._virtualEnd, physicalCount = this._physicalCount, top = this._physicalTop + this._scrollOffset, bottom = this._physicalBottom + this._scrollOffset, scrollTop = this._scrollPosition, scrollBottom = this._scrollBottom;
    if (fromTop) {
      var ith = this._physicalStart;
      var offsetContent = scrollTop - top;
    } else {
      ith = this._physicalEnd, offsetContent = bottom - scrollBottom;
    }
    for (;;) {
      var physicalItemHeight = this._getPhysicalSizeIncrement(ith);
      offsetContent -= physicalItemHeight;
      if (idxs.length >= physicalCount || offsetContent <= protectedOffsetContent) {
        break;
      }
      if (fromTop) {
        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {
          break;
        }
        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {
          break;
        }
        idxs.push(ith);
        top += physicalItemHeight;
        ith = (ith + 1) % physicalCount;
      } else {
        if (0 >= virtualStart - idxs.length) {
          break;
        }
        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {
          break;
        }
        idxs.push(ith);
        top -= physicalItemHeight;
        ith = 0 === ith ? physicalCount - 1 : ith - 1;
      }
    }
    return {indexes:idxs, physicalTop:top - this._scrollOffset};
  }, _update:function(itemSet, movingUp) {
    if (!(itemSet && 0 === itemSet.length || 0 === this._physicalCount)) {
      this._manageFocus();
      this._assignModels(itemSet);
      this._updateMetrics(itemSet);
      if (movingUp) {
        for (; movingUp.length;) {
          var idx = movingUp.pop();
          this._physicalTop -= this._getPhysicalSizeIncrement(idx);
        }
      }
      this._positionItems();
      this._updateScrollerSize();
    }
  }, _createPool:function(size) {
    this._ensureTemplatized();
    var i, physicalItems = Array(size);
    for (i = 0; i < size; i++) {
      var inst = this.stamp(null);
      physicalItems[i] = inst.root.querySelector("*");
      this._itemsParent.appendChild(inst.root);
    }
    return physicalItems;
  }, _isClientFull:function() {
    return 0 != this._scrollBottom && this._physicalBottom - 1 >= this._scrollBottom && this._physicalTop <= this._scrollPosition;
  }, _increasePoolIfNeeded:function(count) {
    var nextPhysicalCount = this._clamp(this._physicalCount + count, 3, this._virtualCount - this._virtualStart);
    nextPhysicalCount = this._convertIndexToCompleteRow(nextPhysicalCount);
    if (this.grid) {
      var correction = nextPhysicalCount % this._itemsPerRow;
      correction && nextPhysicalCount - correction <= this._physicalCount && (nextPhysicalCount += this._itemsPerRow);
      nextPhysicalCount -= correction;
    }
    var delta = nextPhysicalCount - this._physicalCount, nextIncrease = Math.round(0.5 * this._physicalCount);
    if (!(0 > delta)) {
      if (0 < delta) {
        var ts = window.performance.now();
        [].push.apply(this._physicalItems, this._createPool(delta));
        for (var i = 0; i < delta; i++) {
          this._physicalSizes.push(0);
        }
        this._physicalCount += delta;
        this._physicalStart > this._physicalEnd && this._isIndexRendered(this._focusedVirtualIndex) && this._getPhysicalIndex(this._focusedVirtualIndex) < this._physicalEnd && (this._physicalStart += delta);
        this._update();
        this._templateCost = (window.performance.now() - ts) / delta;
        nextIncrease = Math.round(0.5 * this._physicalCount);
      }
      this._virtualEnd >= this._virtualCount - 1 || 0 === nextIncrease || (this._isClientFull() ? this._physicalSize < this._optPhysicalSize && this._debounce("_increasePoolIfNeeded", this._increasePoolIfNeeded.bind(this, this._clamp(Math.round(50 / this._templateCost), 1, nextIncrease)), IDLE_TIME) : this._debounce("_increasePoolIfNeeded", this._increasePoolIfNeeded.bind(this, nextIncrease), MICRO_TASK));
    }
  }, _render:function() {
    if (this.isAttached && this._isVisible) {
      if (0 !== this._physicalCount) {
        var reusables = this._getReusables(!0);
        this._physicalTop = reusables.physicalTop;
        this._virtualStart += reusables.indexes.length;
        this._physicalStart += reusables.indexes.length;
        this._update(reusables.indexes);
        this._update();
        this._increasePoolIfNeeded(0);
      } else {
        0 < this._virtualCount && (this.updateViewportBoundaries(), this._increasePoolIfNeeded(3));
      }
    }
  }, _ensureTemplatized:function() {
    if (!this.ctor) {
      (this._userTemplate = this.queryEffectiveChildren("template")) || console.warn("iron-list requires a template to be provided in light-dom");
      var instanceProps = {__key__:!0};
      instanceProps[this.as] = !0;
      instanceProps[this.indexAs] = !0;
      instanceProps[this.selectedAs] = !0;
      instanceProps.tabIndex = !0;
      this._instanceProps = instanceProps;
      this.templatize(this._userTemplate, this.mutableData);
    }
  }, _gridChanged:function(newGrid, oldGrid) {
    "undefined" !== typeof oldGrid && (this.notifyResize(), Polymer.flush ? Polymer.flush() : Polymer.dom.flush(), newGrid && this._updateGridMetrics());
  }, _itemsChanged:function(change) {
    if ("items" === change.path) {
      this._physicalTop = this._virtualStart = 0, this._virtualCount = this.items ? this.items.length : 0, this._collection = this.items && Polymer.Collection ? Polymer.Collection.get(this.items) : null, this._physicalIndexForKey = {}, this._lastVisibleIndexVal = this._firstVisibleIndexVal = null, this._physicalCount = this._physicalCount || 0, this._physicalItems = this._physicalItems || [], this._physicalSizes = this._physicalSizes || [], this._physicalStart = 0, this._scrollTop > this._scrollOffset && 
      this._resetScrollPosition(0), this._removeFocusedItem(), this._debounce("_render", this._render, ANIMATION_FRAME);
    } else {
      if ("items.splices" === change.path) {
        this._adjustVirtualIndex(change.value.indexSplices);
        this._virtualCount = this.items ? this.items.length : 0;
        var itemAddedOrRemoved = change.value.indexSplices.some(function(splice) {
          return 0 < splice.addedCount || 0 < splice.removed.length;
        });
        if (itemAddedOrRemoved) {
          var activeElement = this._getActiveElement();
          this.contains(activeElement) && activeElement.blur();
        }
        var affectedIndexRendered = change.value.indexSplices.some(function(splice) {
          return splice.index + splice.addedCount >= this._virtualStart && splice.index <= this._virtualEnd;
        }, this);
        this._isClientFull() && !affectedIndexRendered || this._debounce("_render", this._render, ANIMATION_FRAME);
      } else {
        "items.length" !== change.path && this._forwardItemPath(change.path, change.value);
      }
    }
  }, _forwardItemPath:function(path, value) {
    path = path.slice(6);
    var dot = path.indexOf(".");
    -1 === dot && (dot = path.length);
    var isIndexRendered, offscreenInstance = this.modelForElement(this._offscreenFocusedItem);
    if (IS_V2) {
      var vidx = parseInt(path.substring(0, dot), 10);
      if (isIndexRendered = this._isIndexRendered(vidx)) {
        var pidx = this._getPhysicalIndex(vidx);
        var inst = this.modelForElement(this._physicalItems[pidx]);
      } else {
        offscreenInstance && (inst = offscreenInstance);
      }
      if (!inst || inst[this.indexAs] !== vidx) {
        return;
      }
    } else {
      var key = path.substring(0, dot);
      if (offscreenInstance && offscreenInstance.__key__ === key) {
        inst = offscreenInstance;
      } else {
        if (pidx = this._physicalIndexForKey[key], inst = this.modelForElement(this._physicalItems[pidx]), !inst || inst.__key__ !== key) {
          return;
        }
      }
    }
    path = path.substring(dot + 1);
    path = this.as + (path ? "." + path : "");
    IS_V2 ? inst._setPendingPropertyOrPath(path, value, !1, !0) : inst.notifyPath(path, value, !0);
    inst._flushProperties && inst._flushProperties(!0);
    isIndexRendered && (this._updateMetrics([pidx]), this._positionItems(), this._updateScrollerSize());
  }, _adjustVirtualIndex:function(splices) {
    splices.forEach(function(splice) {
      splice.removed.forEach(this._removeItem, this);
      if (splice.index < this._virtualStart) {
        var delta = Math.max(splice.addedCount - splice.removed.length, splice.index - this._virtualStart);
        this._virtualStart += delta;
        0 <= this._focusedVirtualIndex && (this._focusedVirtualIndex += delta);
      }
    }, this);
  }, _removeItem:function(item) {
    this.$.selector.deselect(item);
    this._focusedItem && this.modelForElement(this._focusedItem)[this.as] === item && this._removeFocusedItem();
  }, _iterateItems:function(fn, itemSet) {
    var rtn, i;
    if (2 === arguments.length && itemSet) {
      for (i = 0; i < itemSet.length; i++) {
        var pidx = itemSet[i];
        var vidx = this._computeVidx(pidx);
        if (null != (rtn = fn.call(this, pidx, vidx))) {
          return rtn;
        }
      }
    } else {
      pidx = this._physicalStart;
      for (vidx = this._virtualStart; pidx < this._physicalCount; pidx++, vidx++) {
        if (null != (rtn = fn.call(this, pidx, vidx))) {
          return rtn;
        }
      }
      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {
        if (null != (rtn = fn.call(this, pidx, vidx))) {
          return rtn;
        }
      }
    }
  }, _computeVidx:function(pidx) {
    return pidx >= this._physicalStart ? this._virtualStart + (pidx - this._physicalStart) : this._virtualStart + (this._physicalCount - this._physicalStart) + pidx;
  }, _assignModels:function(itemSet) {
    this._iterateItems(function(pidx, vidx) {
      var el = this._physicalItems[pidx], item = this.items && this.items[vidx];
      if (null != item) {
        var inst = this.modelForElement(el);
        inst.__key__ = this._collection ? this._collection.getKey(item) : null;
        this._forwardProperty(inst, this.as, item);
        this._forwardProperty(inst, this.selectedAs, this.$.selector.isSelected(item));
        this._forwardProperty(inst, this.indexAs, vidx);
        this._forwardProperty(inst, "tabIndex", this._focusedVirtualIndex === vidx ? 0 : -1);
        this._physicalIndexForKey[inst.__key__] = pidx;
        inst._flushProperties && inst._flushProperties(!0);
        el.removeAttribute("hidden");
      } else {
        el.setAttribute("hidden", "");
      }
    }, itemSet);
  }, _updateMetrics:function(itemSet) {
    Polymer.flush ? Polymer.flush() : Polymer.dom.flush();
    var newPhysicalSize = 0, oldPhysicalSize = 0, prevAvgCount = this._physicalAverageCount, prevPhysicalAvg = this._physicalAverage;
    this._iterateItems(function(pidx) {
      oldPhysicalSize += this._physicalSizes[pidx];
      this._physicalSizes[pidx] = this._physicalItems[pidx].offsetHeight;
      newPhysicalSize += this._physicalSizes[pidx];
      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;
    }, itemSet);
    this.grid ? (this._updateGridMetrics(), this._physicalSize = Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight) : (oldPhysicalSize = 1 === this._itemsPerRow ? oldPhysicalSize : Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight, this._physicalSize = this._physicalSize + newPhysicalSize - oldPhysicalSize, this._itemsPerRow = 1);
    this._physicalAverageCount !== prevAvgCount && (this._physicalAverage = Math.round((prevPhysicalAvg * prevAvgCount + newPhysicalSize) / this._physicalAverageCount));
  }, _updateGridMetrics:function() {
    this._itemWidth = 0 < this._physicalCount ? this._physicalItems[0].getBoundingClientRect().width : 200;
    this._rowHeight = 0 < this._physicalCount ? this._physicalItems[0].offsetHeight : 200;
    this._itemsPerRow = this._itemWidth ? Math.floor(this._viewportWidth / this._itemWidth) : this._itemsPerRow;
  }, _positionItems:function() {
    this._adjustScrollPosition();
    var y = this._physicalTop;
    if (this.grid) {
      var totalItemWidth = this._itemsPerRow * this._itemWidth, rowOffset = (this._viewportWidth - totalItemWidth) / 2;
      this._iterateItems(function(pidx, vidx) {
        var modulus = vidx % this._itemsPerRow, x = Math.floor(modulus * this._itemWidth + rowOffset);
        this._isRTL && (x *= -1);
        this.translate3d(x + "px", y + "px", 0, this._physicalItems[pidx]);
        this._shouldRenderNextRow(vidx) && (y += this._rowHeight);
      });
    } else {
      this._iterateItems(function(pidx) {
        this.translate3d(0, y + "px", 0, this._physicalItems[pidx]);
        y += this._physicalSizes[pidx];
      });
    }
  }, _getPhysicalSizeIncrement:function(pidx) {
    return this.grid ? this._computeVidx(pidx) % this._itemsPerRow !== this._itemsPerRow - 1 ? 0 : this._rowHeight : this._physicalSizes[pidx];
  }, _shouldRenderNextRow:function(vidx) {
    return vidx % this._itemsPerRow === this._itemsPerRow - 1;
  }, _adjustScrollPosition:function() {
    var deltaHeight = 0 === this._virtualStart ? this._physicalTop : Math.min(this._scrollPosition + this._physicalTop, 0);
    if (0 !== deltaHeight) {
      this._physicalTop -= deltaHeight;
      var scrollTop = this._scrollPosition;
      !IOS_TOUCH_SCROLLING && 0 < scrollTop && this._resetScrollPosition(scrollTop - deltaHeight);
    }
  }, _resetScrollPosition:function(pos) {
    this.scrollTarget && 0 <= pos && (this._scrollPosition = this._scrollTop = pos);
  }, _updateScrollerSize:function(forceUpdate) {
    this._estScrollHeight = this.grid ? this._virtualRowCount * this._rowHeight : this._physicalBottom + Math.max(this._virtualCount - this._physicalCount - this._virtualStart, 0) * this._physicalAverage;
    if ((forceUpdate = (forceUpdate = (forceUpdate = forceUpdate || 0 === this._scrollHeight) || this._scrollPosition >= this._estScrollHeight - this._physicalSize) || this.grid && this.$.items.style.height < this._estScrollHeight) || Math.abs(this._estScrollHeight - this._scrollHeight) >= this._viewportHeight) {
      this.$.items.style.height = this._estScrollHeight + "px", this._scrollHeight = this._estScrollHeight;
    }
  }, scrollToItem:function(item) {
    return this.scrollToIndex(this.items.indexOf(item));
  }, scrollToIndex:function(idx) {
    if (!("number" !== typeof idx || 0 > idx || idx > this.items.length - 1) && (Polymer.flush ? Polymer.flush() : Polymer.dom.flush(), 0 !== this._physicalCount)) {
      idx = this._clamp(idx, 0, this._virtualCount - 1);
      if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {
        this._virtualStart = this.grid ? idx - 2 * this._itemsPerRow : idx - 1;
      }
      this._manageFocus();
      this._assignModels();
      this._updateMetrics();
      this._physicalTop = Math.floor(this._virtualStart / this._itemsPerRow) * this._physicalAverage;
      for (var currentTopItem = this._physicalStart, currentVirtualItem = this._virtualStart, targetOffsetTop = 0, hiddenContentSize = this._hiddenContentSize; currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize;) {
        targetOffsetTop += this._getPhysicalSizeIncrement(currentTopItem), currentTopItem = (currentTopItem + 1) % this._physicalCount, currentVirtualItem++;
      }
      this._updateScrollerSize(!0);
      this._positionItems();
      this._resetScrollPosition(this._physicalTop + this._scrollOffset + targetOffsetTop);
      this._increasePoolIfNeeded(0);
      this._lastVisibleIndexVal = this._firstVisibleIndexVal = null;
    }
  }, _resetAverage:function() {
    this._physicalAverageCount = this._physicalAverage = 0;
  }, _resizeHandler:function() {
    this._debounce("_render", function() {
      this._lastVisibleIndexVal = this._firstVisibleIndexVal = null;
      this.updateViewportBoundaries();
      this._isVisible ? (this.toggleScrollListener(!0), this._resetAverage(), this._render()) : this.toggleScrollListener(!1);
    }, ANIMATION_FRAME);
  }, selectItem:function(item) {
    return this.selectIndex(this.items.indexOf(item));
  }, selectIndex:function(index) {
    if (!(0 > index || index >= this._virtualCount)) {
      !this.multiSelection && this.selectedItem && this.clearSelection();
      if (this._isIndexRendered(index)) {
        var model = this.modelForElement(this._physicalItems[this._getPhysicalIndex(index)]);
        model && (model[this.selectedAs] = !0);
        this.updateSizeForIndex(index);
      }
      this.$.selector.selectIndex ? this.$.selector.selectIndex(index) : this.$.selector.select(this.items[index]);
    }
  }, deselectItem:function(item) {
    return this.deselectIndex(this.items.indexOf(item));
  }, deselectIndex:function(index) {
    if (!(0 > index || index >= this._virtualCount)) {
      if (this._isIndexRendered(index)) {
        var model = this.modelForElement(this._physicalItems[this._getPhysicalIndex(index)]);
        model[this.selectedAs] = !1;
        this.updateSizeForIndex(index);
      }
      this.$.selector.deselectIndex ? this.$.selector.deselectIndex(index) : this.$.selector.deselect(this.items[index]);
    }
  }, toggleSelectionForItem:function(item) {
    return this.toggleSelectionForIndex(this.items.indexOf(item));
  }, toggleSelectionForIndex:function(index) {
    var isSelected = this.$.selector.isIndexSelected ? this.$.selector.isIndexSelected(index) : this.$.selector.isSelected(this.items[index]);
    isSelected ? this.deselectIndex(index) : this.selectIndex(index);
  }, clearSelection:function() {
    this._iterateItems(function(pidx) {
      this.modelForElement(this._physicalItems[pidx])[this.selectedAs] = !1;
    });
    this.$.selector.clearSelection();
  }, _selectionEnabledChanged:function(selectionEnabled) {
    var handler = selectionEnabled ? this.listen : this.unlisten;
    handler.call(this, this, "tap", "_selectionHandler");
  }, _selectionHandler:function(e) {
    var model = this.modelForElement(e.target);
    if (model) {
      var target = Polymer.dom(e).path[0], activeEl = this._getActiveElement(), physicalItem = this._physicalItems[this._getPhysicalIndex(model[this.indexAs])];
      if ("input" !== target.localName && "button" !== target.localName && "select" !== target.localName) {
        var modelTabIndex = model.tabIndex;
        model.tabIndex = -100;
        var activeElTabIndex = activeEl ? activeEl.tabIndex : -1;
        model.tabIndex = modelTabIndex;
        activeEl && physicalItem !== activeEl && physicalItem.contains(activeEl) && -100 !== activeElTabIndex || this.toggleSelectionForItem(model[this.as]);
      }
    }
  }, _multiSelectionChanged:function(multiSelection) {
    this.clearSelection();
    this.$.selector.multi = multiSelection;
  }, updateSizeForItem:function(item) {
    return this.updateSizeForIndex(this.items.indexOf(item));
  }, updateSizeForIndex:function(index) {
    if (!this._isIndexRendered(index)) {
      return null;
    }
    this._updateMetrics([this._getPhysicalIndex(index)]);
    this._positionItems();
    return null;
  }, _manageFocus:function() {
    var fidx = this._focusedVirtualIndex;
    0 <= fidx && fidx < this._virtualCount ? this._isIndexRendered(fidx) ? this._restoreFocusedItem() : this._createFocusBackfillItem() : 0 < this._virtualCount && 0 < this._physicalCount && (this._focusedPhysicalIndex = this._physicalStart, this._focusedVirtualIndex = this._virtualStart, this._focusedItem = this._physicalItems[this._physicalStart]);
  }, _convertIndexToCompleteRow:function(idx) {
    this._itemsPerRow = this._itemsPerRow || 1;
    return this.grid ? Math.ceil(idx / this._itemsPerRow) * this._itemsPerRow : idx;
  }, _isIndexRendered:function(idx) {
    return idx >= this._virtualStart && idx <= this._virtualEnd;
  }, _isIndexVisible:function(idx) {
    return idx >= this.firstVisibleIndex && idx <= this.lastVisibleIndex;
  }, _getPhysicalIndex:function(vidx) {
    return IS_V2 ? (this._physicalStart + (vidx - this._virtualStart)) % this._physicalCount : this._physicalIndexForKey[this._collection.getKey(this.items[vidx])];
  }, focusItem:function(idx) {
    this._focusPhysicalItem(idx);
  }, _focusPhysicalItem:function(idx) {
    if (!(0 > idx || idx >= this._virtualCount)) {
      this._restoreFocusedItem();
      this._isIndexRendered(idx) || this.scrollToIndex(idx);
      var physicalItem = this._physicalItems[this._getPhysicalIndex(idx)], model = this.modelForElement(physicalItem), focusable;
      model.tabIndex = -100;
      -100 === physicalItem.tabIndex && (focusable = physicalItem);
      focusable || (focusable = Polymer.dom(physicalItem).querySelector('[tabindex="-100"]'));
      model.tabIndex = 0;
      this._focusedVirtualIndex = idx;
      focusable && focusable.focus();
    }
  }, _removeFocusedItem:function() {
    this._offscreenFocusedItem && this._itemsParent.removeChild(this._offscreenFocusedItem);
    this._focusedItem = this._focusBackfillItem = this._offscreenFocusedItem = null;
    this._focusedPhysicalIndex = this._focusedVirtualIndex = -1;
  }, _createFocusBackfillItem:function() {
    var fpidx = this._focusedPhysicalIndex;
    if (!(this._offscreenFocusedItem || 0 > this._focusedVirtualIndex)) {
      if (!this._focusBackfillItem) {
        var inst = this.stamp(null);
        this._focusBackfillItem = inst.root.querySelector("*");
        this._itemsParent.appendChild(inst.root);
      }
      this._offscreenFocusedItem = this._physicalItems[fpidx];
      this.modelForElement(this._offscreenFocusedItem).tabIndex = 0;
      this._physicalItems[fpidx] = this._focusBackfillItem;
      this._focusedPhysicalIndex = fpidx;
      this.translate3d(0, "-10000px", 0, this._offscreenFocusedItem);
    }
  }, _restoreFocusedItem:function() {
    if (this._offscreenFocusedItem && !(0 > this._focusedVirtualIndex)) {
      this._assignModels();
      var fpidx = this._focusedPhysicalIndex = this._getPhysicalIndex(this._focusedVirtualIndex), onScreenItem = this._physicalItems[fpidx];
      if (onScreenItem) {
        var onScreenInstance = this.modelForElement(onScreenItem), offScreenInstance = this.modelForElement(this._offscreenFocusedItem);
        onScreenInstance[this.as] === offScreenInstance[this.as] ? (this._focusBackfillItem = onScreenItem, onScreenInstance.tabIndex = -1, this._physicalItems[fpidx] = this._offscreenFocusedItem, this.translate3d(0, "-10000px", 0, this._focusBackfillItem)) : (this._removeFocusedItem(), this._focusBackfillItem = null);
        this._offscreenFocusedItem = null;
      }
    }
  }, _didFocus:function(e) {
    var targetModel = this.modelForElement(e.target), focusedModel = this.modelForElement(this._focusedItem), hasOffscreenFocusedItem = null !== this._offscreenFocusedItem, fidx = this._focusedVirtualIndex;
    targetModel && (focusedModel === targetModel ? this._isIndexVisible(fidx) || this.scrollToIndex(fidx) : (this._restoreFocusedItem(), focusedModel && (focusedModel.tabIndex = -1), targetModel.tabIndex = 0, this._focusedVirtualIndex = fidx = targetModel[this.indexAs], this._focusedPhysicalIndex = this._getPhysicalIndex(fidx), this._focusedItem = this._physicalItems[this._focusedPhysicalIndex], hasOffscreenFocusedItem && !this._offscreenFocusedItem && this._update()));
  }, _keydownHandler:function(e) {
    switch(e.keyCode) {
      case 40:
        this._focusedVirtualIndex < this._virtualCount - 1 && e.preventDefault();
        this._focusPhysicalItem(this._focusedVirtualIndex + (this.grid ? this._itemsPerRow : 1));
        break;
      case 39:
        this.grid && this._focusPhysicalItem(this._focusedVirtualIndex + (this._isRTL ? -1 : 1));
        break;
      case 38:
        0 < this._focusedVirtualIndex && e.preventDefault();
        this._focusPhysicalItem(this._focusedVirtualIndex - (this.grid ? this._itemsPerRow : 1));
        break;
      case 37:
        this.grid && this._focusPhysicalItem(this._focusedVirtualIndex + (this._isRTL ? 1 : -1));
        break;
      case 13:
        this._focusPhysicalItem(this._focusedVirtualIndex), this.selectionEnabled && this._selectionHandler(e);
    }
  }, _clamp:function(v, min, max) {
    return Math.min(max, Math.max(min, v));
  }, _debounce:function(name, cb, asyncModule) {
    IS_V2 ? (this._debouncers = this._debouncers || {}, this._debouncers[name] = Polymer.Debouncer.debounce(this._debouncers[name], asyncModule, cb.bind(this)), Polymer.enqueueDebouncer(this._debouncers[name])) : Polymer.dom.addDebouncer(this.debounce(name, cb));
  }, _forwardProperty:function(inst, name, value) {
    IS_V2 ? inst._setPendingProperty(name, value) : inst[name] = value;
  }, _forwardHostPropV2:function(prop, value) {
    (this._physicalItems || []).concat([this._offscreenFocusedItem, this._focusBackfillItem]).forEach(function(item) {
      item && this.modelForElement(item).forwardHostProp(prop, value);
    }, this);
  }, _notifyInstancePropV2:function(inst, prop, value) {
    if (Polymer.Path.matches(this.as, prop)) {
      var idx = inst[this.indexAs];
      prop == this.as && (this.items[idx] = value);
      this.notifyPath(Polymer.Path.translate(this.as, "items." + idx, prop), value);
    }
  }, _getStampedChildren:function() {
    return this._physicalItems;
  }, _forwardInstancePath:function(inst, path, value) {
    0 === path.indexOf(this.as + ".") && this.notifyPath("items." + inst.__key__ + "." + path.slice(this.as.length + 1), value);
  }, _forwardParentPath:function(path, value) {
    (this._physicalItems || []).concat([this._offscreenFocusedItem, this._focusBackfillItem]).forEach(function(item) {
      item && this.modelForElement(item).notifyPath(path, value, !0);
    }, this);
  }, _forwardParentProp:function(prop, value) {
    (this._physicalItems || []).concat([this._offscreenFocusedItem, this._focusBackfillItem]).forEach(function(item) {
      item && (this.modelForElement(item)[prop] = value);
    }, this);
  }, _getActiveElement:function() {
    var itemsHost = this._itemsParent.node.domHost;
    return Polymer.dom(itemsHost ? itemsHost.root : document).activeElement;
  }});
})();
HtmlImportsNamespace.FontRoboto = {};
HtmlImportsNamespace.FontRoboto.Roboto = {};
HtmlImportsNamespace.IronBehaviors.IronButtonState = {};
Polymer.IronButtonStateImpl = {properties:{pressed:{type:Boolean, readOnly:!0, value:!1, reflectToAttribute:!0, observer:"_pressedChanged"}, toggles:{type:Boolean, value:!1, reflectToAttribute:!0}, active:{type:Boolean, value:!1, notify:!0, reflectToAttribute:!0}, pointerDown:{type:Boolean, readOnly:!0, value:!1}, receivedFocusFromKeyboard:{type:Boolean, readOnly:!0}, ariaActiveAttribute:{type:String, value:"aria-pressed", observer:"_ariaActiveAttributeChanged"}}, listeners:{down:"_downHandler", 
up:"_upHandler", tap:"_tapHandler"}, observers:["_focusChanged(focused)", "_activeChanged(active, ariaActiveAttribute)"], keyBindings:{"enter:keydown":"_asyncClick", "space:keydown":"_spaceKeyDownHandler", "space:keyup":"_spaceKeyUpHandler"}, _mouseEventRe:/^mouse/, _tapHandler:function() {
  this.toggles ? this._userActivate(!this.active) : this.active = !1;
}, _focusChanged:function(focused) {
  this._detectKeyboardFocus(focused);
  focused || this._setPressed(!1);
}, _detectKeyboardFocus:function(focused) {
  this._setReceivedFocusFromKeyboard(!this.pointerDown && focused);
}, _userActivate:function(active) {
  this.active !== active && (this.active = active, this.fire("change"));
}, _downHandler:function() {
  this._setPointerDown(!0);
  this._setPressed(!0);
  this._setReceivedFocusFromKeyboard(!1);
}, _upHandler:function() {
  this._setPointerDown(!1);
  this._setPressed(!1);
}, _spaceKeyDownHandler:function(event) {
  var keyboardEvent = event.detail.keyboardEvent, target = Polymer.dom(keyboardEvent).localTarget;
  this.isLightDescendant(target) || (keyboardEvent.preventDefault(), keyboardEvent.stopImmediatePropagation(), this._setPressed(!0));
}, _spaceKeyUpHandler:function(event) {
  var keyboardEvent = event.detail.keyboardEvent, target = Polymer.dom(keyboardEvent).localTarget;
  this.isLightDescendant(target) || (this.pressed && this._asyncClick(), this._setPressed(!1));
}, _asyncClick:function() {
  this.async(function() {
    this.click();
  }, 1);
}, _pressedChanged:function() {
  this._changedButtonState();
}, _ariaActiveAttributeChanged:function(value, oldValue) {
  oldValue && oldValue != value && this.hasAttribute(oldValue) && this.removeAttribute(oldValue);
}, _activeChanged:function(active) {
  this.toggles ? this.setAttribute(this.ariaActiveAttribute, active ? "true" : "false") : this.removeAttribute(this.ariaActiveAttribute);
  this._changedButtonState();
}, _controlStateChanged:function() {
  this.disabled ? this._setPressed(!1) : this._changedButtonState();
}, _changedButtonState:function() {
  this._buttonStateChanged && this._buttonStateChanged();
}};
Polymer.IronButtonState = [Polymer.IronA11yKeysBehavior, Polymer.IronButtonStateImpl];
HtmlImportsNamespace.PaperItem = {};
HtmlImportsNamespace.PaperItem.PaperItemBehavior = {};
Polymer.PaperItemBehaviorImpl = {hostAttributes:{role:"option", tabindex:"0"}};
Polymer.PaperItemBehavior = [Polymer.IronButtonState, Polymer.IronControlState, Polymer.PaperItemBehaviorImpl];
HtmlImportsNamespace.PaperStyles = {};
HtmlImportsNamespace.PaperStyles.Color = {};
HtmlImportsNamespace.PaperStyles.DefaultTheme = {};
HtmlImportsNamespace.PaperStyles.Typography = {};
HtmlImportsNamespace.PaperItem.PaperItemSharedStyles = {};
HtmlImportsNamespace.PaperItem.PaperIconItem = {};
Polymer({is:"paper-icon-item", behaviors:[Polymer.PaperItemBehavior]});
HtmlImportsNamespace.PaperItem.PaperItemBody = {};
Polymer({is:"paper-item-body"});
HtmlImportsNamespace.PaperItem.PaperItem = {};
Polymer({is:"paper-item", behaviors:[Polymer.PaperItemBehavior]});
HtmlImportsNamespace.PaperItem.AllImports = {};
HtmlImportsNamespace.IronSelector = {};
HtmlImportsNamespace.IronSelector.IronSelection = {};
Polymer.IronSelection = function(selectCallback) {
  this.selection = [];
  this.selectCallback = selectCallback;
};
Polymer.IronSelection.prototype = {get:function() {
  return this.multi ? this.selection.slice() : this.selection[0];
}, clear:function(excludes) {
  this.selection.slice().forEach(function(item) {
    (!excludes || 0 > excludes.indexOf(item)) && this.setItemSelected(item, !1);
  }, this);
}, isSelected:function(item) {
  return 0 <= this.selection.indexOf(item);
}, setItemSelected:function(item, isSelected) {
  if (null != item && isSelected !== this.isSelected(item)) {
    if (isSelected) {
      this.selection.push(item);
    } else {
      var i = this.selection.indexOf(item);
      0 <= i && this.selection.splice(i, 1);
    }
    this.selectCallback && this.selectCallback(item, isSelected);
  }
}, select:function(item) {
  this.multi ? this.toggle(item) : this.get() !== item && (this.setItemSelected(this.get(), !1), this.setItemSelected(item, !0));
}, toggle:function(item) {
  this.setItemSelected(item, !this.isSelected(item));
}};
HtmlImportsNamespace.IronSelector.IronSelectable = {};
Polymer.IronSelectableBehavior = {properties:{attrForSelected:{type:String, value:null}, selected:{type:String, notify:!0}, selectedItem:{type:Object, readOnly:!0, notify:!0}, activateEvent:{type:String, value:"tap", observer:"_activateEventChanged"}, selectable:String, selectedClass:{type:String, value:"iron-selected"}, selectedAttribute:{type:String, value:null}, fallbackSelection:{type:String, value:null}, items:{type:Array, readOnly:!0, notify:!0, value:function() {
  return [];
}}, _excludedLocalNames:{type:Object, value:function() {
  return {template:1, "dom-bind":1, "dom-if":1, "dom-repeat":1};
}}}, observers:["_updateAttrForSelected(attrForSelected)", "_updateSelected(selected)", "_checkFallback(fallbackSelection)"], created:function() {
  this._bindFilterItem = this._filterItem.bind(this);
  this._selection = new Polymer.IronSelection(this._applySelection.bind(this));
}, attached:function() {
  this._observer = this._observeItems(this);
  this._addListener(this.activateEvent);
}, detached:function() {
  this._observer && Polymer.dom(this).unobserveNodes(this._observer);
  this._removeListener(this.activateEvent);
}, indexOf:function(item) {
  return this.items ? this.items.indexOf(item) : -1;
}, select:function(value) {
  this.selected = value;
}, selectPrevious:function() {
  var length = this.items.length, index = (Number(this._valueToIndex(this.selected)) - 1 + length) % length;
  this.selected = this._indexToValue(index);
}, selectNext:function() {
  var index = (Number(this._valueToIndex(this.selected)) + 1) % this.items.length;
  this.selected = this._indexToValue(index);
}, selectIndex:function(index) {
  this.select(this._indexToValue(index));
}, forceSynchronousItemUpdate:function() {
  this._observer && "function" === typeof this._observer.flush ? this._observer.flush() : this._updateItems();
}, get _shouldUpdateSelection() {
  return null != this.selected;
}, _checkFallback:function() {
  this._updateSelected();
}, _addListener:function(eventName) {
  this.listen(this, eventName, "_activateHandler");
}, _removeListener:function(eventName) {
  this.unlisten(this, eventName, "_activateHandler");
}, _activateEventChanged:function(eventName, old) {
  this._removeListener(old);
  this._addListener(eventName);
}, _updateItems:function() {
  var nodes = Polymer.dom(this).queryDistributedElements(this.selectable || "*");
  nodes = Array.prototype.filter.call(nodes, this._bindFilterItem);
  this._setItems(nodes);
}, _updateAttrForSelected:function() {
  this.selectedItem && (this.selected = this._valueForItem(this.selectedItem));
}, _updateSelected:function() {
  this._selectSelected(this.selected);
}, _selectSelected:function() {
  if (this.items) {
    var item = this._valueToItem(this.selected);
    item ? this._selection.select(item) : this._selection.clear();
    this.fallbackSelection && this.items.length && void 0 === this._selection.get() && (this.selected = this.fallbackSelection);
  }
}, _filterItem:function(node) {
  return !this._excludedLocalNames[node.localName];
}, _valueToItem:function(value) {
  return null == value ? null : this.items[this._valueToIndex(value)];
}, _valueToIndex:function(value) {
  if (this.attrForSelected) {
    for (var i = 0, item; item = this.items[i]; i++) {
      if (this._valueForItem(item) == value) {
        return i;
      }
    }
  } else {
    return Number(value);
  }
}, _indexToValue:function(index) {
  if (this.attrForSelected) {
    var item = this.items[index];
    if (item) {
      return this._valueForItem(item);
    }
  } else {
    return index;
  }
}, _valueForItem:function(item) {
  if (!item) {
    return null;
  }
  if (!this.attrForSelected) {
    var i = this.indexOf(item);
    return -1 === i ? null : i;
  }
  var propValue = item[Polymer.CaseMap.dashToCamelCase(this.attrForSelected)];
  return void 0 != propValue ? propValue : item.getAttribute(this.attrForSelected);
}, _applySelection:function(item, isSelected) {
  this.selectedClass && this.toggleClass(this.selectedClass, isSelected, item);
  this.selectedAttribute && this.toggleAttribute(this.selectedAttribute, isSelected, item);
  this._selectionChange();
  this.fire("iron-" + (isSelected ? "select" : "deselect"), {item:item});
}, _selectionChange:function() {
  this._setSelectedItem(this._selection.get());
}, _observeItems:function(node) {
  return Polymer.dom(node).observeNodes(function(mutation) {
    this._updateItems();
    this._updateSelected();
    this.fire("iron-items-changed", mutation, {bubbles:!1, cancelable:!1});
  });
}, _activateHandler:function(e) {
  for (var t = e.target, items = this.items; t && t != this;) {
    var i = items.indexOf(t);
    if (0 <= i) {
      var value = this._indexToValue(i);
      this._itemActivate(value, t);
      break;
    }
    t = t.parentNode;
  }
}, _itemActivate:function(value, item) {
  this.fire("iron-activate", {selected:value, item:item}, {cancelable:!0}).defaultPrevented || this.select(value);
}};
HtmlImportsNamespace.IronSelector.IronMultiSelectable = {};
Polymer.IronMultiSelectableBehaviorImpl = {properties:{multi:{type:Boolean, value:!1, observer:"multiChanged"}, selectedValues:{type:Array, notify:!0, value:function() {
  return [];
}}, selectedItems:{type:Array, readOnly:!0, notify:!0, value:function() {
  return [];
}}}, observers:["_updateSelected(selectedValues.splices)"], select:function(value) {
  this.multi ? this._toggleSelected(value) : this.selected = value;
}, multiChanged:function(multi) {
  this._selection.multi = multi;
  this._updateSelected();
}, get _shouldUpdateSelection() {
  return null != this.selected || null != this.selectedValues && this.selectedValues.length;
}, _updateAttrForSelected:function() {
  this.multi ? this.selectedItems && 0 < this.selectedItems.length && (this.selectedValues = this.selectedItems.map(function(selectedItem) {
    return this._indexToValue(this.indexOf(selectedItem));
  }, this).filter(function(unfilteredValue) {
    return null != unfilteredValue;
  }, this)) : Polymer.IronSelectableBehavior._updateAttrForSelected.apply(this);
}, _updateSelected:function() {
  this.multi ? this._selectMulti(this.selectedValues) : this._selectSelected(this.selected);
}, _selectMulti:function(values) {
  values = values || [];
  var selectedItems = (this._valuesToItems(values) || []).filter(function(item) {
    return null !== item && void 0 !== item;
  });
  this._selection.clear(selectedItems);
  for (var i = 0; i < selectedItems.length; i++) {
    this._selection.setItemSelected(selectedItems[i], !0);
  }
  if (this.fallbackSelection && !this._selection.get().length) {
    var fallback = this._valueToItem(this.fallbackSelection);
    fallback && this.select(this.fallbackSelection);
  }
}, _selectionChange:function() {
  var s = this._selection.get();
  this.multi ? (this._setSelectedItems(s), this._setSelectedItem(s.length ? s[0] : null)) : null !== s && void 0 !== s ? (this._setSelectedItems([s]), this._setSelectedItem(s)) : (this._setSelectedItems([]), this._setSelectedItem(null));
}, _toggleSelected:function(value) {
  var i = this.selectedValues.indexOf(value), unselected = 0 > i;
  unselected ? this.push("selectedValues", value) : this.splice("selectedValues", i, 1);
}, _valuesToItems:function(values) {
  return null == values ? null : values.map(function(value) {
    return this._valueToItem(value);
  }, this);
}};
Polymer.IronMultiSelectableBehavior = [Polymer.IronSelectableBehavior, Polymer.IronMultiSelectableBehaviorImpl];
HtmlImportsNamespace.IronMenuBehavior = {};
HtmlImportsNamespace.IronMenuBehavior.IronMenuBehavior = {};
Polymer.IronMenuBehaviorImpl = {properties:{focusedItem:{observer:"_focusedItemChanged", readOnly:!0, type:Object}, attrForItemTitle:{type:String}, disabled:{type:Boolean, value:!1, observer:"_disabledChanged"}}, _MODIFIER_KEYS:"Alt AltGraph CapsLock Control Fn FnLock Hyper Meta NumLock OS ScrollLock Shift Super Symbol SymbolLock".split(" "), _SEARCH_RESET_TIMEOUT_MS:1000, _previousTabIndex:0, hostAttributes:{role:"menu"}, observers:["_updateMultiselectable(multi)"], listeners:{focus:"_onFocus", 
keydown:"_onKeydown", "iron-items-changed":"_onIronItemsChanged"}, keyBindings:{up:"_onUpKey", down:"_onDownKey", esc:"_onEscKey", "shift+tab:keydown":"_onShiftTabDown"}, attached:function() {
  this._resetTabindices();
}, select:function(value) {
  this._defaultFocusAsync && (this.cancelAsync(this._defaultFocusAsync), this._defaultFocusAsync = null);
  var item = this._valueToItem(value);
  item && item.hasAttribute("disabled") || (this._setFocusedItem(item), Polymer.IronMultiSelectableBehaviorImpl.select.apply(this, arguments));
}, _resetTabindices:function() {
  var selectedItem = this.multi ? this.selectedItems && this.selectedItems[0] : this.selectedItem;
  this.items.forEach(function(item) {
    item.setAttribute("tabindex", item === selectedItem ? "0" : "-1");
  }, this);
}, _updateMultiselectable:function(multi) {
  multi ? this.setAttribute("aria-multiselectable", "true") : this.removeAttribute("aria-multiselectable");
}, _focusWithKeyboardEvent:function(event) {
  if (-1 === this._MODIFIER_KEYS.indexOf(event.key)) {
    this.cancelDebouncer("_clearSearchText");
    var searchText = this._searchText || "", key = event.key && 1 == event.key.length ? event.key : String.fromCharCode(event.keyCode);
    searchText += key.toLocaleLowerCase();
    for (var searchLength = searchText.length, i = 0, item; item = this.items[i]; i++) {
      if (!item.hasAttribute("disabled")) {
        var attr = this.attrForItemTitle || "textContent", title = (item[attr] || item.getAttribute(attr) || "").trim();
        if (!(title.length < searchLength) && title.slice(0, searchLength).toLocaleLowerCase() == searchText) {
          this._setFocusedItem(item);
          break;
        }
      }
    }
    this._searchText = searchText;
    this.debounce("_clearSearchText", this._clearSearchText, this._SEARCH_RESET_TIMEOUT_MS);
  }
}, _clearSearchText:function() {
  this._searchText = "";
}, _focusPrevious:function() {
  for (var length = this.items.length, curFocusIndex = Number(this.indexOf(this.focusedItem)), i = 1; i < length + 1; i++) {
    var item = this.items[(curFocusIndex - i + length) % length];
    if (!item.hasAttribute("disabled")) {
      var owner = Polymer.dom(item).getOwnerRoot() || document;
      this._setFocusedItem(item);
      if (Polymer.dom(owner).activeElement == item) {
        break;
      }
    }
  }
}, _focusNext:function() {
  for (var length = this.items.length, curFocusIndex = Number(this.indexOf(this.focusedItem)), i = 1; i < length + 1; i++) {
    var item = this.items[(curFocusIndex + i) % length];
    if (!item.hasAttribute("disabled")) {
      var owner = Polymer.dom(item).getOwnerRoot() || document;
      this._setFocusedItem(item);
      if (Polymer.dom(owner).activeElement == item) {
        break;
      }
    }
  }
}, _applySelection:function(item, isSelected) {
  isSelected ? item.setAttribute("aria-selected", "true") : item.removeAttribute("aria-selected");
  Polymer.IronSelectableBehavior._applySelection.apply(this, arguments);
}, _focusedItemChanged:function(focusedItem, old) {
  old && old.setAttribute("tabindex", "-1");
  !focusedItem || focusedItem.hasAttribute("disabled") || this.disabled || (focusedItem.setAttribute("tabindex", "0"), focusedItem.focus());
}, _onIronItemsChanged:function(event) {
  event.detail.addedNodes.length && this._resetTabindices();
}, _onShiftTabDown:function() {
  var oldTabIndex = this.getAttribute("tabindex");
  Polymer.IronMenuBehaviorImpl._shiftTabPressed = !0;
  this._setFocusedItem(null);
  this.setAttribute("tabindex", "-1");
  this.async(function() {
    this.setAttribute("tabindex", oldTabIndex);
    Polymer.IronMenuBehaviorImpl._shiftTabPressed = !1;
  }, 1);
}, _onFocus:function(event) {
  if (!Polymer.IronMenuBehaviorImpl._shiftTabPressed) {
    var rootTarget = Polymer.dom(event).rootTarget;
    if (rootTarget === this || "undefined" === typeof rootTarget.tabIndex || this.isLightDescendant(rootTarget)) {
      this._defaultFocusAsync = this.async(function() {
        var selectedItem = this.multi ? this.selectedItems && this.selectedItems[0] : this.selectedItem;
        this._setFocusedItem(null);
        selectedItem ? this._setFocusedItem(selectedItem) : this.items[0] && this._focusNext();
      });
    }
  }
}, _onUpKey:function(event) {
  this._focusPrevious();
  event.detail.keyboardEvent.preventDefault();
}, _onDownKey:function(event) {
  this._focusNext();
  event.detail.keyboardEvent.preventDefault();
}, _onEscKey:function() {
  var focusedItem = this.focusedItem;
  focusedItem && focusedItem.blur();
}, _onKeydown:function(event) {
  this.keyboardEventMatchesKeys(event, "up down esc") || this._focusWithKeyboardEvent(event);
  event.stopPropagation();
}, _activateHandler:function(event) {
  Polymer.IronSelectableBehavior._activateHandler.call(this, event);
  event.stopPropagation();
}, _disabledChanged:function(disabled) {
  disabled ? (this._previousTabIndex = this.hasAttribute("tabindex") ? this.tabIndex : 0, this.removeAttribute("tabindex")) : this.hasAttribute("tabindex") || this.setAttribute("tabindex", this._previousTabIndex);
}};
Polymer.IronMenuBehaviorImpl._shiftTabPressed = !1;
Polymer.IronMenuBehavior = [Polymer.IronMultiSelectableBehavior, Polymer.IronA11yKeysBehavior, Polymer.IronMenuBehaviorImpl];
HtmlImportsNamespace.PaperMenu = {};
HtmlImportsNamespace.PaperMenu.PaperMenuSharedStyles = {};
HtmlImportsNamespace.PaperMenu.PaperMenu = {};
Polymer({is:"paper-menu", behaviors:[Polymer.IronMenuBehavior]});
HtmlImportsNamespace.IronCollapse = {};
HtmlImportsNamespace.IronCollapse.IronCollapse = {};
Polymer({is:"iron-collapse", behaviors:[Polymer.IronResizableBehavior], properties:{horizontal:{type:Boolean, value:!1, observer:"_horizontalChanged"}, opened:{type:Boolean, value:!1, notify:!0, observer:"_openedChanged"}, transitioning:{type:Boolean, notify:!0, readOnly:!0}, noAnimation:{type:Boolean}, _desiredSize:{type:String, value:""}}, get dimension() {
  return this.horizontal ? "width" : "height";
}, get _dimensionMax() {
  return this.horizontal ? "maxWidth" : "maxHeight";
}, get _dimensionMaxCss() {
  return this.horizontal ? "max-width" : "max-height";
}, hostAttributes:{role:"group", "aria-hidden":"true"}, listeners:{transitionend:"_onTransitionEnd"}, toggle:function() {
  this.opened = !this.opened;
}, show:function() {
  this.opened = !0;
}, hide:function() {
  this.opened = !1;
}, updateSize:function(size, animated) {
  size = "auto" === size ? "" : size;
  var willAnimate = animated && !this.noAnimation && this.isAttached && this._desiredSize !== size;
  this._desiredSize = size;
  this._updateTransition(!1);
  if (willAnimate) {
    var startSize = this._calcSize();
    "" === size && (this.style[this._dimensionMax] = "", size = this._calcSize());
    this.style[this._dimensionMax] = startSize;
    this.scrollTop = this.scrollTop;
    this._updateTransition(!0);
    willAnimate = size !== startSize;
  }
  this.style[this._dimensionMax] = size;
  willAnimate || this._transitionEnd();
}, enableTransition:function(enabled) {
  Polymer.Base._warn("`enableTransition()` is deprecated, use `noAnimation` instead.");
  this.noAnimation = !enabled;
}, _updateTransition:function(enabled) {
  this.style.transitionDuration = enabled && !this.noAnimation ? "" : "0s";
}, _horizontalChanged:function() {
  this.style.transitionProperty = this._dimensionMaxCss;
  var otherDimension = "maxWidth" === this._dimensionMax ? "maxHeight" : "maxWidth";
  this.style[otherDimension] = "";
  this.updateSize(this.opened ? "auto" : "0px", !1);
}, _openedChanged:function() {
  this.setAttribute("aria-hidden", !this.opened);
  this._setTransitioning(!0);
  this.toggleClass("iron-collapse-closed", !1);
  this.toggleClass("iron-collapse-opened", !1);
  this.updateSize(this.opened ? "auto" : "0px", !0);
  this.opened && this.focus();
}, _transitionEnd:function() {
  this.style[this._dimensionMax] = this._desiredSize;
  this.toggleClass("iron-collapse-closed", !this.opened);
  this.toggleClass("iron-collapse-opened", this.opened);
  this._updateTransition(!1);
  this.notifyResize();
  this._setTransitioning(!1);
}, _onTransitionEnd:function(event) {
  Polymer.dom(event).rootTarget === this && this._transitionEnd();
}, _calcSize:function() {
  return this.getBoundingClientRect()[this.dimension] + "px";
}});
HtmlImportsNamespace.PaperMenu.PaperSubmenu = {};
Polymer({is:"paper-submenu", properties:{opened:{type:Boolean, value:!1, notify:!0, observer:"_openedChanged"}}, behaviors:[Polymer.IronControlState], listeners:{focus:"_onFocus"}, get __parent() {
  return Polymer.dom(this).parentNode;
}, get __trigger() {
  return Polymer.dom(this.$.trigger).getDistributedNodes()[0];
}, get __content() {
  return Polymer.dom(this.$.content).getDistributedNodes()[0];
}, attached:function() {
  this.listen(this.__parent, "iron-activate", "_onParentIronActivate");
}, dettached:function() {
  this.unlisten(this.__parent, "iron-activate", "_onParentIronActivate");
}, open:function() {
  this.disabled || this._active || (this.$.collapse.show(), this._active = !0, this.__trigger && this.__trigger.classList.add("iron-selected"), this.__content && this.__content.focus());
}, close:function() {
  this._active && (this.$.collapse.hide(), this._active = !1, this.__trigger && this.__trigger.classList.remove("iron-selected"));
}, toggle:function() {
  this._active ? this.close() : this.open();
}, _onTap:function() {
  this.disabled || this.toggle();
}, _openedChanged:function(opened, oldOpened) {
  opened ? this.fire("paper-submenu-open") : null != oldOpened && this.fire("paper-submenu-close");
}, _onParentIronActivate:function(event) {
  var parent = this.__parent;
  Polymer.dom(event).localTarget === parent && (event.detail.item === this || parent.multi || this.close());
}, _disabledChanged:function(disabled) {
  Polymer.IronControlState._disabledChanged.apply(this, arguments);
  disabled && this._active && this.close();
}, _onFocus:function() {
  this.__trigger && this.__trigger.focus();
}});
stateMixin(["options.*", "selected"], {is:"dropdown-menu", properties:{options:Object, selected:Array, multi:{type:Boolean, value:!1}, max:{type:Number, value:-1}, label:String, showLabel:{type:Boolean, value:!1}, hasSelection:Boolean, menuSelection:{type:Array, notify:!0}, changeAction:String, open:{type:Boolean, value:!1}}, render:function() {
  this.generatedLabel = this.selected && 0 != this.selected.length ? this.multi && 1 < this.selected.length ? this.valueToLabel(this.selected[0]) + ", +" + String(this.selected.length - 1) : this.valueToLabel(this.selected[0]) : "";
  this.hasSelection = !!this.selected && 0 < this.selected.length;
}, isSelected:function(selected, item) {
  for (var $jscomp$iter$85 = $jscomp.makeIterator(selected), $jscomp$key$s = $jscomp$iter$85.next(); !$jscomp$key$s.done; $jscomp$key$s = $jscomp$iter$85.next()) {
    var s = $jscomp$key$s.value;
    if (s == item.value) {
      return !0;
    }
  }
  return !1;
}, click:function(e) {
  var value = e.model.item.value, selectedCopy = this.selected ? this.selected.slice() : [];
  if (this.multi) {
    var found = !1, i;
    for (i in selectedCopy) {
      if (selectedCopy[i] == value) {
        selectedCopy.splice(i, 1);
        found = !0;
        break;
      }
    }
    found || selectedCopy.push(value);
  } else {
    selectedCopy = [value], this.$$("iron-dropdown").close();
  }
  -1 != this.max && selectedCopy.length > this.max && selectedCopy.splice(0, selectedCopy.length - this.max);
  this.changeAction && this.dispatch({type:this.changeAction, values:selectedCopy});
  this.menuSelection = selectedCopy;
}, openMenu:function() {
  this.$$("iron-dropdown").open();
}, openChanged:function() {
  var dropdown = this.$$("iron-dropdown");
  dropdown && (this.open = dropdown.opened);
}, valueToLabel:function(value) {
  for (var $jscomp$iter$86 = $jscomp.makeIterator(this.options), $jscomp$key$o = $jscomp$iter$86.next(); !$jscomp$key$o.done; $jscomp$key$o = $jscomp$iter$86.next()) {
    var o = $jscomp$key$o.value;
    if (o.value == value) {
      return o.label;
    }
  }
  return "";
}});
stateMixin([], {is:"chips-input", listeners:{click:"focus"}, properties:{values:Object, placeholder:String, separator:{type:String, value:""}, onlySuggestOnEmpty:Boolean}, render:function() {
  for (var active = !1, $jscomp$iter$87 = $jscomp.makeIterator(this.values), $jscomp$key$v = $jscomp$iter$87.next(); !$jscomp$key$v.done; $jscomp$key$v = $jscomp$iter$87.next()) {
    var v = $jscomp$key$v.value;
    v.inputValue && (active = !0);
  }
  this.active = active;
}, focus:function(e) {
  e.target == this && this.dispatch({type:"INPUTCHIP_ACTION", subtype:"FOCUS_GROUP", self:this.values});
}});
var $measure = document.createElement("span");
$measure.style.cssText = "font-size: 13px;white-space: pre-wrap;display: inline-block;position: absolute;left: -99999px;top: -99999px;max-width: 217px";
document.body.appendChild($measure);
stateMixin(["value.value", "value.inputValue", "value.setFocus", "value.suggestions.*", "value.focused"], {is:"input-chip", properties:{value:Object, options:Array, placeholder:String, focused:{type:Boolean, value:!1}, showSuggestionButton:{type:Boolean, value:!1}, showFirstSuggestion:{type:Boolean, value:!1}, showSuggestionDropdown:{type:Boolean, value:!1}, onlySuggestOnEmpty:{type:Boolean, value:!1}}, render:function(state, paths) {
  var input = this.$.input;
  paths["value.setFocus"] && this.get("value.setFocus") && (input.focus(), this.$.input.selectionStart = 0, this.$.input.selectionEnd = this.$.input.value.length);
  if (paths["value.inputValue"]) {
    var inputValue = this.get("value.inputValue");
    input.value != inputValue && (input.value = inputValue);
  }
  this.showSuggestionButton = this.get("value.focused");
  paths["value.value"] && (this.showSuggestions = !1);
  var suggestions = this.get("value.suggestions");
  this.get("value.focused") && suggestions && 0 < suggestions.length ? this.onlySuggestOnEmpty && "" == this.get("value.inputValue") || !this.onlySuggestOnEmpty ? (this.firstSuggestion = suggestions[0], this.showFirstSuggestion = !0) : this.showFirstSuggestion = !1 : this.showFirstSuggestion = !1;
  this.hideDelete = !this.get("value.inputValue") || this.showFirstSuggestion;
}, rendered:function(state, paths) {
  if (paths["value.inputValue"] || paths["value.focused"]) {
    var val = this.get("value.inputValue") || this.placeholder;
    $measure.textContent = val;
    var width = Math.max($measure.offsetWidth, 5);
    val += "- - - - -";
    $measure.textContent = val;
    var height = Math.max($measure.offsetHeight, 17), extraWidth = 4;
    this.get("value.focused") && (extraWidth = 10);
    this.$.input.style.width = width + extraWidth + "px";
    this.$.input.style.height = height + "px";
  }
  paths["value.suggestions.*"] && this.$$("iron-dropdown").notifyResize();
}, shouldSuggest:function() {
  return this.onlySuggestOnEmpty && "" == this.get("value.inputValue") || !this.onlySuggestOnEmpty;
}, inputChange:function() {
  this.$.input.value != this.get("value.inputValue") && this.dispatch({type:"INPUTCHIP_ACTION", subtype:"CHANGE", value:this.$.input.value, cursor:this.$.input.selectionStart, suggest:this.shouldSuggest(), self:this.value});
}, keydown:function(e) {
  var input = this.$.input;
  switch(e.which) {
    case 13:
      e.shiftKey || (e.preventDefault(), this.options && this.options.length && this.options[this.selectedOption] && (this.value = this.options[this.selectedOption].value), this.dispatch({type:"INPUTCHIP_ACTION", subtype:"ENTER", self:this.value}));
      break;
    case 188:
      e.preventDefault();
      if (!input.value) {
        break;
      }
      this.dispatch({type:"INPUTCHIP_ACTION", subtype:"RIGHT", self:this.value});
      break;
    case 37:
      0 === input.selectionStart && 0 === input.selectionEnd && (e.preventDefault(), this.dispatch({type:"INPUTCHIP_ACTION", subtype:"LEFT", self:this.value}));
      break;
    case 39:
      input.selectionStart === input.value.length && (e.preventDefault(), this.dispatch({type:"INPUTCHIP_ACTION", subtype:"RIGHT", self:this.value}));
      break;
    case 40:
      e.preventDefault();
      if (this.options && (++this.selectedOption, this.selectedOption >= this.options.length && (this.selectedOption = -1), !this.readonly)) {
        var optVal = this.options[this.selectedOption] || {}, val = optVal.value || this.value;
        this.$.input.value = val;
      }
      this.dispatch({type:"INPUTCHIP_ACTION", subtype:"DOWN", self:this.value});
      break;
    case 38:
      e.preventDefault();
      this.options && (--this.selectedOption, -1 > this.selectedOption && (this.selectedOption = this.options.length - 1), this.readonly || (optVal = this.options[this.selectedOption] || {}, val = optVal.value || this.value, this.$.input.value = val));
      this.dispatch({type:"INPUTCHIP_ACTION", subtype:"UP", self:this.value});
      break;
    case 8:
      0 === input.selectionStart && 0 === input.selectionEnd && (e.preventDefault(), this.dispatch({type:"INPUTCHIP_ACTION", subtype:"BACKSPACE_EMPTY", self:this.value}));
      break;
    case 9:
      e.preventDefault(), e.shiftKey ? this.dispatch({type:"INPUTCHIP_ACTION", subtype:"LEFT", self:this.value}) : this.dispatch({type:"INPUTCHIP_ACTION", subtype:"RIGHT", self:this.value});
  }
}, inputFocus:function(e) {
  e.preventDefault();
  this.dispatch({type:"INPUTCHIP_ACTION", subtype:"FOCUS", suggest:this.shouldSuggest(), self:this.value});
}, inputBlur:function() {
  this.dispatch({type:"INPUTCHIP_ACTION", subtype:"BLUR", self:this.value});
}, deleteClick:function(e) {
  e.preventDefault();
  this.dispatch({type:"INPUTCHIP_ACTION", subtype:"DELETE", self:this.value});
}, openSuggestionsDropdown:function(e) {
  e.preventDefault();
  this.$$("iron-dropdown").open();
}, preventDefault:function(e) {
  e.preventDefault();
}, suggestionClick:function(e) {
  this.dispatch({type:"INPUTCHIP_ACTION", subtype:"SET", value:e.model.item.value, self:this.value});
  this.$$("iron-dropdown").close();
}});
stateMixin([], {is:"keyword-editor"});
HtmlImportsNamespace.PaperRipple = {};
HtmlImportsNamespace.PaperRipple.PaperRipple = {};
(function() {
  function ElementMetrics(element) {
    this.element = element;
    this.width = this.boundingRect.width;
    this.height = this.boundingRect.height;
    this.size = Math.max(this.width, this.height);
  }
  function Ripple(element) {
    this.element = element;
    this.color = window.getComputedStyle(element).color;
    this.wave = document.createElement("div");
    this.waveContainer = document.createElement("div");
    this.wave.style.backgroundColor = this.color;
    this.wave.classList.add("wave");
    this.waveContainer.classList.add("wave-container");
    Polymer.dom(this.waveContainer).appendChild(this.wave);
    this.resetInteractionState();
  }
  var Utility = {distance:function(x1, y1, x2, y2) {
    var xDelta = x1 - x2, yDelta = y1 - y2;
    return Math.sqrt(xDelta * xDelta + yDelta * yDelta);
  }, now:window.performance && window.performance.now ? window.performance.now.bind(window.performance) : Date.now};
  ElementMetrics.prototype = {get boundingRect() {
    return this.element.getBoundingClientRect();
  }, furthestCornerDistanceFrom:function(x, y) {
    var topLeft = Utility.distance(x, y, 0, 0), topRight = Utility.distance(x, y, this.width, 0), bottomLeft = Utility.distance(x, y, 0, this.height), bottomRight = Utility.distance(x, y, this.width, this.height);
    return Math.max(topLeft, topRight, bottomLeft, bottomRight);
  }};
  Ripple.MAX_RADIUS = 300;
  Ripple.prototype = {get recenters() {
    return this.element.recenters;
  }, get center() {
    return this.element.center;
  }, get mouseDownElapsed() {
    if (!this.mouseDownStart) {
      return 0;
    }
    var elapsed = Utility.now() - this.mouseDownStart;
    this.mouseUpStart && (elapsed -= this.mouseUpElapsed);
    return elapsed;
  }, get mouseUpElapsed() {
    return this.mouseUpStart ? Utility.now() - this.mouseUpStart : 0;
  }, get mouseDownElapsedSeconds() {
    return this.mouseDownElapsed / 1000;
  }, get mouseUpElapsedSeconds() {
    return this.mouseUpElapsed / 1000;
  }, get mouseInteractionSeconds() {
    return this.mouseDownElapsedSeconds + this.mouseUpElapsedSeconds;
  }, get initialOpacity() {
    return this.element.initialOpacity;
  }, get opacityDecayVelocity() {
    return this.element.opacityDecayVelocity;
  }, get radius() {
    var width2 = this.containerMetrics.width * this.containerMetrics.width, height2 = this.containerMetrics.height * this.containerMetrics.height, waveRadius = 1.1 * Math.min(Math.sqrt(width2 + height2), Ripple.MAX_RADIUS) + 5, duration = 1.1 - waveRadius / Ripple.MAX_RADIUS * 0.2, timeNow = this.mouseInteractionSeconds / duration, size = waveRadius * (1 - Math.pow(80, -timeNow));
    return Math.abs(size);
  }, get opacity() {
    return this.mouseUpStart ? Math.max(0, this.initialOpacity - this.mouseUpElapsedSeconds * this.opacityDecayVelocity) : this.initialOpacity;
  }, get outerOpacity() {
    var outerOpacity = 0.3 * this.mouseUpElapsedSeconds, waveOpacity = this.opacity;
    return Math.max(0, Math.min(outerOpacity, waveOpacity));
  }, get isOpacityFullyDecayed() {
    return 0.01 > this.opacity && this.radius >= Math.min(this.maxRadius, Ripple.MAX_RADIUS);
  }, get isRestingAtMaxRadius() {
    return this.opacity >= this.initialOpacity && this.radius >= Math.min(this.maxRadius, Ripple.MAX_RADIUS);
  }, get isAnimationComplete() {
    return this.mouseUpStart ? this.isOpacityFullyDecayed : this.isRestingAtMaxRadius;
  }, get translationFraction() {
    return Math.min(1, this.radius / this.containerMetrics.size * 2 / Math.sqrt(2));
  }, get xNow() {
    return this.xEnd ? this.xStart + this.translationFraction * (this.xEnd - this.xStart) : this.xStart;
  }, get yNow() {
    return this.yEnd ? this.yStart + this.translationFraction * (this.yEnd - this.yStart) : this.yStart;
  }, get isMouseDown() {
    return this.mouseDownStart && !this.mouseUpStart;
  }, resetInteractionState:function() {
    this.slideDistance = this.yEnd = this.xEnd = this.yStart = this.xStart = this.mouseUpStart = this.mouseDownStart = this.maxRadius = 0;
    this.containerMetrics = new ElementMetrics(this.element);
  }, draw:function() {
    this.wave.style.opacity = this.opacity;
    var scale = this.radius / (this.containerMetrics.size / 2);
    var dx = this.xNow - this.containerMetrics.width / 2;
    var dy = this.yNow - this.containerMetrics.height / 2;
    this.waveContainer.style.webkitTransform = "translate(" + dx + "px, " + dy + "px)";
    this.waveContainer.style.transform = "translate3d(" + dx + "px, " + dy + "px, 0)";
    this.wave.style.webkitTransform = "scale(" + scale + "," + scale + ")";
    this.wave.style.transform = "scale3d(" + scale + "," + scale + ",1)";
  }, downAction:function(event) {
    var xCenter = this.containerMetrics.width / 2, yCenter = this.containerMetrics.height / 2;
    this.resetInteractionState();
    this.mouseDownStart = Utility.now();
    this.center ? (this.xStart = xCenter, this.yStart = yCenter, this.slideDistance = Utility.distance(this.xStart, this.yStart, this.xEnd, this.yEnd)) : (this.xStart = event ? event.detail.x - this.containerMetrics.boundingRect.left : this.containerMetrics.width / 2, this.yStart = event ? event.detail.y - this.containerMetrics.boundingRect.top : this.containerMetrics.height / 2);
    this.recenters && (this.xEnd = xCenter, this.yEnd = yCenter, this.slideDistance = Utility.distance(this.xStart, this.yStart, this.xEnd, this.yEnd));
    this.maxRadius = this.containerMetrics.furthestCornerDistanceFrom(this.xStart, this.yStart);
    this.waveContainer.style.top = (this.containerMetrics.height - this.containerMetrics.size) / 2 + "px";
    this.waveContainer.style.left = (this.containerMetrics.width - this.containerMetrics.size) / 2 + "px";
    this.waveContainer.style.width = this.containerMetrics.size + "px";
    this.waveContainer.style.height = this.containerMetrics.size + "px";
  }, upAction:function() {
    this.isMouseDown && (this.mouseUpStart = Utility.now());
  }, remove:function() {
    Polymer.dom(this.waveContainer.parentNode).removeChild(this.waveContainer);
  }};
  Polymer({is:"paper-ripple", behaviors:[Polymer.IronA11yKeysBehavior], properties:{initialOpacity:{type:Number, value:0.25}, opacityDecayVelocity:{type:Number, value:0.8}, recenters:{type:Boolean, value:!1}, center:{type:Boolean, value:!1}, ripples:{type:Array, value:function() {
    return [];
  }}, animating:{type:Boolean, readOnly:!0, reflectToAttribute:!0, value:!1}, holdDown:{type:Boolean, value:!1, observer:"_holdDownChanged"}, noink:{type:Boolean, value:!1}, _animating:{type:Boolean}, _boundAnimate:{type:Function, value:function() {
    return this.animate.bind(this);
  }}}, get target() {
    return this.keyEventTarget;
  }, keyBindings:{"enter:keydown":"_onEnterKeydown", "space:keydown":"_onSpaceKeydown", "space:keyup":"_onSpaceKeyup"}, attached:function() {
    var keyEventTarget = this.keyEventTarget = 11 == this.parentNode.nodeType ? Polymer.dom(this).getOwnerRoot().host : this.parentNode;
    this.listen(keyEventTarget, "up", "uiUpAction");
    this.listen(keyEventTarget, "down", "uiDownAction");
  }, detached:function() {
    this.unlisten(this.keyEventTarget, "up", "uiUpAction");
    this.unlisten(this.keyEventTarget, "down", "uiDownAction");
    this.keyEventTarget = null;
  }, get shouldKeepAnimating() {
    for (var index = 0; index < this.ripples.length; ++index) {
      if (!this.ripples[index].isAnimationComplete) {
        return !0;
      }
    }
    return !1;
  }, simulatedRipple:function() {
    this.downAction(null);
    this.async(function() {
      this.upAction();
    }, 1);
  }, uiDownAction:function(event) {
    this.noink || this.downAction(event);
  }, downAction:function(event) {
    if (!(this.holdDown && 0 < this.ripples.length)) {
      var ripple = this.addRipple();
      ripple.downAction(event);
      this._animating || (this._animating = !0, this.animate());
    }
  }, uiUpAction:function(event) {
    this.noink || this.upAction(event);
  }, upAction:function(event) {
    this.holdDown || (this.ripples.forEach(function(ripple) {
      ripple.upAction(event);
    }), this._animating = !0, this.animate());
  }, onAnimationComplete:function() {
    this._animating = !1;
    this.$.background.style.backgroundColor = null;
    this.fire("transitionend");
  }, addRipple:function() {
    var ripple = new Ripple(this);
    Polymer.dom(this.$.waves).appendChild(ripple.waveContainer);
    this.$.background.style.backgroundColor = ripple.color;
    this.ripples.push(ripple);
    this._setAnimating(!0);
    return ripple;
  }, removeRipple:function(ripple) {
    var rippleIndex = this.ripples.indexOf(ripple);
    0 > rippleIndex || (this.ripples.splice(rippleIndex, 1), ripple.remove(), this.ripples.length || this._setAnimating(!1));
  }, animate:function() {
    if (this._animating) {
      var index;
      for (index = 0; index < this.ripples.length; ++index) {
        var ripple = this.ripples[index];
        ripple.draw();
        this.$.background.style.opacity = ripple.outerOpacity;
        ripple.isOpacityFullyDecayed && !ripple.isRestingAtMaxRadius && this.removeRipple(ripple);
      }
      if (this.shouldKeepAnimating || 0 !== this.ripples.length) {
        window.requestAnimationFrame(this._boundAnimate);
      } else {
        this.onAnimationComplete();
      }
    }
  }, _onEnterKeydown:function() {
    this.uiDownAction();
    this.async(this.uiUpAction, 1);
  }, _onSpaceKeydown:function() {
    this.uiDownAction();
  }, _onSpaceKeyup:function() {
    this.uiUpAction();
  }, _holdDownChanged:function(newVal, oldVal) {
    void 0 !== oldVal && (newVal ? this.downAction() : this.upAction());
  }});
})();
HtmlImportsNamespace.PaperBehaviors = {};
HtmlImportsNamespace.PaperBehaviors.PaperRippleBehavior = {};
Polymer.PaperRippleBehavior = {properties:{noink:{type:Boolean, observer:"_noinkChanged"}, _rippleContainer:{type:Object}}, _buttonStateChanged:function() {
  this.focused && this.ensureRipple();
}, _downHandler:function(event) {
  Polymer.IronButtonStateImpl._downHandler.call(this, event);
  this.pressed && this.ensureRipple(event);
}, ensureRipple:function(optTriggeringEvent) {
  if (!this.hasRipple()) {
    this._ripple = this._createRipple();
    this._ripple.noink = this.noink;
    var rippleContainer = this._rippleContainer || this.root;
    rippleContainer && Polymer.dom(rippleContainer).appendChild(this._ripple);
    if (optTriggeringEvent) {
      var domContainer = Polymer.dom(this._rippleContainer || this), target = Polymer.dom(optTriggeringEvent).rootTarget;
      domContainer.deepContains(target) && this._ripple.uiDownAction(optTriggeringEvent);
    }
  }
}, getRipple:function() {
  this.ensureRipple();
  return this._ripple;
}, hasRipple:function() {
  return !!this._ripple;
}, _createRipple:function() {
  var element = document.createElement("paper-ripple");
  return element;
}, _noinkChanged:function(noink) {
  this.hasRipple() && (this._ripple.noink = noink);
}};
HtmlImportsNamespace.PaperBehaviors.PaperButtonBehavior = {};
Polymer.PaperButtonBehaviorImpl = {properties:{elevation:{type:Number, reflectToAttribute:!0, readOnly:!0}}, observers:["_calculateElevation(focused, disabled, active, pressed, receivedFocusFromKeyboard)", "_computeKeyboardClass(receivedFocusFromKeyboard)"], hostAttributes:{role:"button", tabindex:"0", animated:!0}, _calculateElevation:function() {
  var e = 1;
  this.disabled ? e = 0 : this.active || this.pressed ? e = 4 : this.receivedFocusFromKeyboard && (e = 3);
  this._setElevation(e);
}, _computeKeyboardClass:function(receivedFocusFromKeyboard) {
  this.toggleClass("keyboard-focus", receivedFocusFromKeyboard);
}, _spaceKeyDownHandler:function(event) {
  Polymer.IronButtonStateImpl._spaceKeyDownHandler.call(this, event);
  this.hasRipple() && 1 > this.getRipple().ripples.length && this._ripple.uiDownAction();
}, _spaceKeyUpHandler:function(event) {
  Polymer.IronButtonStateImpl._spaceKeyUpHandler.call(this, event);
  this.hasRipple() && this._ripple.uiUpAction();
}};
Polymer.PaperButtonBehavior = [Polymer.IronButtonState, Polymer.IronControlState, Polymer.PaperRippleBehavior, Polymer.PaperButtonBehaviorImpl];
HtmlImportsNamespace.PaperStyles.Shadow = {};
HtmlImportsNamespace.PaperStyles.ElementStyles = {};
HtmlImportsNamespace.PaperStyles.ElementStyles.PaperMaterialStyles = {};
HtmlImportsNamespace.PaperButton = {};
HtmlImportsNamespace.PaperButton.PaperButton = {};
Polymer({is:"paper-button", behaviors:[Polymer.PaperButtonBehavior], properties:{raised:{type:Boolean, reflectToAttribute:!0, value:!1, observer:"_calculateElevation"}}, _calculateElevation:function() {
  this.raised ? Polymer.PaperButtonBehaviorImpl._calculateElevation.apply(this) : this._setElevation(0);
}});
stateMixin(["state.query.dateType", "state.query.before.*", "state.query.after.*"], {is:"date-editor", properties:{active:{type:Boolean, value:!1}}, stateReady:function() {
  this.dateOptions = [{value:"priority", label:"Priority"}, {value:"filing", label:"Filing"}, {value:"publication", label:"Publication"}];
}, render:function() {
  this.dateTypeSelected = [this.get("state.query.dateType") || "priority"];
  var beforeValue = this.get("state.query.before.inputValue");
  beforeValue != this.$.before.value && (this.$.before.value = beforeValue || "");
  var afterValue = this.get("state.query.after.inputValue");
  afterValue != this.$.after.value && (this.$.after.value = afterValue || "");
}, change:function(e) {
  var field = this.field(e);
  this.dispatch({type:"DATE_CHANGED", field:field, value:this.$[field].value});
}, keydown:function(e) {
  13 == e.which && this.dispatch({type:"DATE_SUBMIT", field:this.field(e)});
}, blur:function(e) {
  this.dispatch({type:"DATE_SUBMIT", field:this.field(e)});
}, field:function(e) {
  return e.target == this.$.before ? "before" : e.target == this.$.after ? "after" : "";
}});
stateMixin([], {is:"metadata-editor"});
stateMixin(["state.query.*"], {is:"restrict-editor", properties:{}, stateReady:function() {
  for (var officeOptions = [], ip5 = "WO US EP JP KR CN".split(" "), $jscomp$iter$88 = $jscomp.makeIterator(ip5), $jscomp$key$office = $jscomp$iter$88.next(); !$jscomp$key$office.done; $jscomp$key$office = $jscomp$iter$88.next()) {
    var office = $jscomp$key$office.value;
    officeOptions.push({label:office, value:office});
  }
  var $jscomp$iter$89 = $jscomp.makeIterator(window.experiments.patentCountries.split(",").sort());
  for ($jscomp$key$office = $jscomp$iter$89.next(); !$jscomp$key$office.done; $jscomp$key$office = $jscomp$iter$89.next()) {
    var office$167 = $jscomp$key$office.value;
    -1 == ip5.indexOf(office$167.toUpperCase()) && officeOptions.push({label:office$167.toUpperCase(), value:office$167.toUpperCase()});
  }
  this.officeOptions = officeOptions;
  this.languageOptions = [{label:"English", value:"ENGLISH"}, {label:"German", value:"GERMAN"}, {label:"Chinese", value:"CHINESE"}, {label:"French", value:"FRENCH"}, {label:"Spanish", value:"SPANISH"}, {label:"Arabic", value:"ARABIC"}, {label:"Japanese", value:"JAPANESE"}, {label:"Korean", value:"KOREAN"}, {label:"Portuguese", value:"PORTUGUESE"}, {label:"Russian", value:"RUSSIAN"}, {label:"Italian", value:"ITALIAN"}, {label:"Dutch", value:"DUTCH"}, {label:"Swedish", value:"SWEDISH"}, {label:"Finnish", 
  value:"FINNISH"}, {label:"Norwegian", value:"NORWEGIAN"}, {label:"Danish", value:"DANISH"}];
  this.typeOptions = [{label:"Patent", value:"PATENT"}, {label:"Design", value:"DESIGN"}];
  this.statusOptions = [{label:"Grant", value:"GRANT"}, {label:"Application", value:"APPLICATION"}];
  this.litigationOptions = [{label:"Has Related Litigation", value:"YES"}, {label:"No Known Litigation", value:"NO"}];
}, render:function() {
  this.officeSelected = this.get("state.query.country.values");
  this.languageSelected = this.get("state.query.language.values");
  var status = this.get("state.query.status.value");
  this.statusSelected = status ? [status] : [];
  var type = this.get("state.query.type.value");
  this.typeSelected = type ? [type] : [];
  var litigation = this.get("state.query.litigation.value");
  this.litigationSelected = litigation ? [litigation] : [];
}});
stateMixin(["queryUrl", "state.query.*"], {is:"query-renderer", properties:{queryUrl:String, pieces:Array, fromState:Boolean}, render:function() {
  var query = this.fromState ? this.get("state.query") : fromQueryUrl(this.queryUrl);
  var pieces = [], termText = [];
  if (query.terms && query.terms.values.length) {
    for (var $jscomp$iter$91 = $jscomp.makeIterator(query.terms.values), $jscomp$key$tg = $jscomp$iter$91.next(); !$jscomp$key$tg.done; $jscomp$key$tg = $jscomp$iter$91.next()) {
      for (var tg = $jscomp$key$tg.value, parts = [], $jscomp$iter$90 = $jscomp.makeIterator(tg.values), $jscomp$key$t = $jscomp$iter$90.next(); !$jscomp$key$t.done; $jscomp$key$t = $jscomp$iter$90.next()) {
        var t = $jscomp$key$t.value;
        t.value && parts.push(t.value);
      }
      parts.length && termText.push(parts.join(", "));
    }
    termText.length && pieces.push({label:"", value:termText.join("; ")});
  }
  if (query.assignee && query.assignee.values.length) {
    for (var parts$168 = [], $jscomp$iter$92 = $jscomp.makeIterator(query.assignee.values), $jscomp$key$a = $jscomp$iter$92.next(); !$jscomp$key$a.done; $jscomp$key$a = $jscomp$iter$92.next()) {
      var a = $jscomp$key$a.value;
      a.value && parts$168.push(a.value);
    }
    parts$168.length && pieces.push({label:"Assignee", value:parts$168.join(", ")});
  }
  if (query.inventor && query.inventor.values.length) {
    for (var parts$169 = [], $jscomp$iter$93 = $jscomp.makeIterator(query.inventor.values), $jscomp$key$i = $jscomp$iter$93.next(); !$jscomp$key$i.done; $jscomp$key$i = $jscomp$iter$93.next()) {
      var i = $jscomp$key$i.value;
      i.value && parts$169.push(i.value);
    }
    parts$169.length && pieces.push({label:"Inventor", value:parts$169.join(", ")});
  }
  query.after && query.after.value && pieces.push({label:"After", value:(query.dateType || "priority") + " " + query.after.inputValue});
  query.before && query.before.value && pieces.push({label:"Before", value:(query.dateType || "priority") + " " + query.before.inputValue});
  query.country && query.country.values.length && pieces.push({label:"Country", value:query.country.values.join(", ")});
  query.status && query.status.value && pieces.push({label:"Status", value:query.status.value});
  query.type && query.type.value && pieces.push({label:"Type", value:query.type.value});
  query.litigation && query.litigation.value && pieces.push({label:"Ligitagion", value:query.litigation.value});
  query.language && query.language.values.length && pieces.push({label:"Language", value:query.language.values.join(", ")});
  this.pieces = pieces;
}});
var tooltipShowing = null;
stateMixin([], {is:"overlay-tooltip", properties:{positioningTarget:{type:String, value:"", observer:"positioningTargetChanged"}, hover:String, direction:String, arrow:{type:Boolean, value:!1}, positionTarget:HTMLElement, hoverTarget:HTMLElement, hideTimeout:Number}, positioningTargetChanged:function() {
  this.positioningTarget && (this.positionTarget = this.resolveElement(this.positioningTarget)) && (this.hoverTarget && (this.hoverTarget.removeEventListener("mouseenter", this._mouseenterThis), this.hoverTarget.removeEventListener("mouseleave", this._mouseleaveThis)), this.hoverTarget = void 0 == this.hover ? this.positionTarget : this.resolveElement(this.hover), this._mouseenterThis = this.mouseenter.bind(this), this._mouseleaveThis = this.mouseleave.bind(this), this.hoverTarget.addEventListener("mouseenter", 
  this._mouseenterThis), this.hoverTarget.addEventListener("mouseleave", this._mouseleaveThis));
}, resolveElement:function(selector) {
  for (var parent = Polymer.dom(this).parentNode; Polymer.dom(parent).parentNode;) {
    parent = Polymer.dom(parent).parentNode;
  }
  return Polymer.dom(parent).querySelector(selector);
}, mouseenter:function() {
  window.clearTimeout(this.hideTimeout);
  this.show();
}, mouseleave:function() {
  this.hideTimeout = window.setTimeout(this.hide.bind(this), 200);
}, show:function() {
  tooltipShowing && tooltipShowing.hide();
  this.style.display = "block";
  tooltipShowing = this;
  this.setPosition();
}, hide:function() {
  this.style.display = "none";
}, setPosition:function() {
  var style = this.style, targetPos = this.positionTarget.getBoundingClientRect(), selfPos = this.getBoundingClientRect();
  if ("top" == this.direction || "bottom" == this.direction) {
    var left = targetPos.left + targetPos.width / 2 - selfPos.width / 2, rightEdge = window.innerWidth - (10 + selfPos.width);
    10 > left && (this.$.arrow.style.marginLeft = left - 10 + "px", left = 10);
    left > rightEdge && (this.$.arrow.style.marginLeft = left - rightEdge + "px", left = rightEdge);
    style.left = left + "px";
    "top" == this.direction ? style.bottom = targetPos.top - 10 + "px" : style.top = targetPos.bottom + 10 + "px";
  } else {
    style.top = targetPos.top + targetPos.height / 2 + "px", "left" == this.direction ? style.right = targetPos.left - 10 + "px" : style.left = targetPos.right + 10 + "px";
  }
}});
stateMixin(["state.result.nav.*", "state.queryResults.*"], {is:"result-nav", properties:{nextResult:{type:String, value:""}, prevResult:{type:String, value:""}, pageDiff:Number, currentNum:{type:String, value:""}, totalNum:{type:String, value:""}, manyResults:Boolean}, render:function() {
  this.currentNum = this.get("state.result.nav.currentNum");
  this.prevId = this.get("state.result.nav.prevId") || !1;
  this.prevPageDiff = this.get("state.result.nav.prevPageDiff");
  this.nextId = this.get("state.result.nav.nextId") || !1;
  this.nextPageDiff = this.get("state.result.nav.nextPageDiff");
  var totalNum = this.get("state.queryResults.numResults");
  void 0 === totalNum && (totalNum = -1);
  this.totalNum = -1 == totalNum ? 0 : String(totalNum);
  this.manyResults = this.get("state.queryResults.manyResults") || !1;
}});
Polymer({is:"raw-html", properties:{html:{type:String, value:"", observer:"htmlChanged"}, display:{type:String, value:"inline"}}, attached:function() {
  this.$.htmlContent.style.display = this.display;
  this.htmlChanged();
}, htmlChanged:function() {
  this.$.htmlContent.innerHTML = this.html;
}});
HtmlImportsNamespace.PaperMaterial = {};
HtmlImportsNamespace.PaperMaterial.PaperMaterialSharedStyles = {};
HtmlImportsNamespace.PaperMaterial.PaperMaterial = {};
Polymer({is:"paper-material", properties:{elevation:{type:Number, reflectToAttribute:!0, value:1}, animated:{type:Boolean, reflectToAttribute:!0, value:!1}}});
stateMixin("state.parse.inputValue state.parse.setFocus state.parse.suggestions.* state.query.* state.query.oq.value state.parse.singleQuery focused".split(" "), {is:"search-box", properties:{inputValue:String, buttonIcon:{type:String, value:"search"}, focused:{type:Boolean, value:!1}}, render:function(state, paths) {
  if (state.parse) {
    var suggestions = this.get("state.parse.suggestions");
    if (paths["state.parse.suggestions.*"] && suggestions) {
      if (0 <= suggestions.index && suggestions.values && suggestions.values.length > suggestions.index) {
        var selected = suggestions.values.results[suggestions.index];
        this.buttonIcon = selected.result ? "chevron-right" : "search";
      } else {
        this.buttonIcon = "search";
      }
    }
    if (paths["state.parse.inputValue"]) {
      var iv = this.get("state.parse.inputValue");
      void 0 !== iv && iv !== this.$.searchInput.value && (this.$.searchInput.value = iv);
    }
    if (paths["state.query.oq.value"] || paths["state.parse.singleQuery"]) {
      var inputValue = this.get("state.query.oq.value") || this.get("state.parse.singleQuery");
      this.$.searchInput.value = inputValue;
    }
    paths["state.parse.setFocus"] && this.get("state.parse.setFocus") && this.$.searchInput.focus();
    this.patentCorpusActive = this.get("state.query.patents.value");
    void 0 === this.patentCorpusActive && (this.patentCorpusActive = !0);
    this.nplCorpusActive = this.get("state.query.scholar.value");
    void 0 === this.nplCorpusActive && (this.nplCorpusActive = !1);
  }
}, isSelected:function(si, index) {
  return si == index;
}, inputValueChanged:function() {
  this.dispatch({type:"PARSE_INPUT", text:this.$.searchInput.value, cursor:this.$.searchInput.selectionStart});
}, inputKeypress:function(e) {
  switch(e.which) {
    case 40:
      e.preventDefault();
      this.dispatch({type:"PARSE_ARROW_DOWN"});
      break;
    case 38:
      e.preventDefault();
      this.dispatch({type:"PARSE_ARROW_UP"});
      break;
    case 13:
      e.preventDefault();
      this.dispatch({type:"PARSE_ENTER"});
      this.$.searchInput.blur();
      break;
    case 27:
      e.preventDefault(), this.dispatch({type:"PARSE_ESCAPE"}), this.$.searchInput.blur();
  }
}, focus:function() {
  this.focused = !0;
  this.dispatch({type:"PARSE_FOCUS", text:this.$.searchInput.value, cursor:this.$.searchInput.selectionStart});
}, blur:function(e) {
  e.relatedTarget && "searchButton" === e.relatedTarget.id || (this.focused = !1, this.dispatch({type:"PARSE_BLUR"}));
}, submit:function() {
  this.dispatch({type:"PARSE_ENTER"});
}, preventDefault:function(e) {
  e.preventDefault();
}, togglePatents:function(e) {
  e.preventDefault();
  this.dispatch({type:"PARSE_TOGGLE_CORPUS", corpus:"patents"});
}, toggleNpl:function(e) {
  e.preventDefault();
  this.dispatch({type:"PARSE_TOGGLE_CORPUS", corpus:"npl"});
}});
HtmlImportsNamespace.IronFlexLayout.IronFlexLayoutClasses = {};
HtmlImportsNamespace.IronMediaQuery = {};
HtmlImportsNamespace.IronMediaQuery.IronMediaQuery = {};
Polymer({is:"iron-media-query", properties:{queryMatches:{type:Boolean, value:!1, readOnly:!0, notify:!0}, query:{type:String, observer:"queryChanged"}, full:{type:Boolean, value:!1}, _boundMQHandler:{value:function() {
  return this.queryHandler.bind(this);
}}, _mq:{value:null}}, attached:function() {
  this.style.display = "none";
  this.queryChanged();
}, detached:function() {
  this._remove();
}, _add:function() {
  this._mq && this._mq.addListener(this._boundMQHandler);
}, _remove:function() {
  this._mq && this._mq.removeListener(this._boundMQHandler);
  this._mq = null;
}, queryChanged:function() {
  this._remove();
  var query = this.query;
  query && (this.full || "(" === query[0] || (query = "(" + query + ")"), this._mq = window.matchMedia(query), this._add(), this.queryHandler(this._mq));
}, queryHandler:function(mq) {
  this._setQueryMatches(mq.matches);
}});
HtmlImportsNamespace.PaperHeaderPanel = {};
HtmlImportsNamespace.PaperHeaderPanel.PaperHeaderPanel = {};
(function() {
  var MODE_CONFIGS = {outerScroll:{scroll:!0}, shadowMode:{standard:2, waterfall:1, "waterfall-tall":1}, tallMode:{"waterfall-tall":!0}};
  Polymer({is:"paper-header-panel", properties:{mode:{type:String, value:"standard", observer:"_modeChanged", reflectToAttribute:!0}, shadow:{type:Boolean, value:!1}, tallClass:{type:String, value:"tall"}, atTop:{type:Boolean, value:!0, notify:!0, readOnly:!0, reflectToAttribute:!0}}, observers:["_computeDropShadowHidden(atTop, mode, shadow)"], ready:function() {
    this.scrollHandler = this._scroll.bind(this);
  }, attached:function() {
    this._addListener();
    this._keepScrollingState();
  }, detached:function() {
    this._removeListener();
  }, get header() {
    return Polymer.dom(this.$.headerContent).getDistributedNodes()[0];
  }, get scroller() {
    return this._getScrollerForMode(this.mode);
  }, get visibleShadow() {
    return this.$.dropShadow.classList.contains("has-shadow");
  }, _computeDropShadowHidden:function(atTop, mode) {
    var shadowMode = MODE_CONFIGS.shadowMode[mode];
    this.shadow ? this.toggleClass("has-shadow", !0, this.$.dropShadow) : 2 === shadowMode ? this.toggleClass("has-shadow", !0, this.$.dropShadow) : 1 !== shadowMode || atTop ? this.toggleClass("has-shadow", !1, this.$.dropShadow) : this.toggleClass("has-shadow", !0, this.$.dropShadow);
  }, _computeMainContainerClass:function(mode) {
    var classes = {};
    classes.flex = "cover" !== mode;
    return Object.keys(classes).filter(function(className) {
      return classes[className];
    }).join(" ");
  }, _addListener:function() {
    this.scroller.addEventListener("scroll", this.scrollHandler, !1);
  }, _removeListener:function() {
    this.scroller.removeEventListener("scroll", this.scrollHandler);
  }, _modeChanged:function(newMode, oldMode) {
    var configs = MODE_CONFIGS, header = this.header;
    header && (configs.tallMode[oldMode] && !configs.tallMode[newMode] ? (header.classList.remove(this.tallClass), this.async(function() {
      header.classList.remove("animate");
    }, 200)) : header.classList.toggle("animate", configs.tallMode[newMode]));
    this._keepScrollingState();
  }, _keepScrollingState:function() {
    var main = this.scroller, header = this.header;
    this._setAtTop(0 === main.scrollTop);
    header && this.tallClass && MODE_CONFIGS.tallMode[this.mode] && this.toggleClass(this.tallClass, this.atTop || header.classList.contains(this.tallClass) && main.scrollHeight < this.offsetHeight, header);
  }, _scroll:function() {
    this._keepScrollingState();
    this.fire("content-scroll", {target:this.scroller}, {bubbles:!1});
  }, _getScrollerForMode:function(mode) {
    return MODE_CONFIGS.outerScroll[mode] ? this : this.$.mainContainer;
  }});
})();
HtmlImportsNamespace.PaperToolbar = {};
HtmlImportsNamespace.PaperToolbar.PaperToolbar = {};
Polymer({is:"paper-toolbar", hostAttributes:{role:"toolbar"}, properties:{bottomJustify:{type:String, value:""}, justify:{type:String, value:""}, middleJustify:{type:String, value:""}}, ready:function() {
  console.warn(this.is, "is deprecated. Please use app-layout instead!");
}, attached:function() {
  this._observer = this._observe(this);
  this._updateAriaLabelledBy();
}, detached:function() {
  this._observer && this._observer.disconnect();
}, _observe:function(node) {
  var observer = new MutationObserver(function() {
    this._updateAriaLabelledBy();
  }.bind(this));
  observer.observe(node, {childList:!0, subtree:!0});
  return observer;
}, _updateAriaLabelledBy:function() {
  Polymer.dom.flush();
  for (var labelledBy = [], contents = Array.prototype.slice.call(Polymer.dom(this.root).querySelectorAll("slot")).concat(Array.prototype.slice.call(Polymer.dom(this.root).querySelectorAll("content"))), content, index = 0; content = contents[index]; index++) {
    for (var nodes = Polymer.dom(content).getDistributedNodes(), node, jndex = 0; node = nodes[jndex]; jndex++) {
      if (node.classList && node.classList.contains("title")) {
        if (node.id) {
          labelledBy.push(node.id);
        } else {
          var id = "paper-toolbar-label-" + Math.floor(10000 * Math.random());
          node.id = id;
          labelledBy.push(id);
        }
      }
    }
  }
  0 < labelledBy.length && this.setAttribute("aria-labelledby", labelledBy.join(" "));
}, _computeBarExtraClasses:function(barJustify) {
  return barJustify ? barJustify + ("justified" === barJustify ? "" : "-justified") : "";
}});
stateMixin([], {is:"search-footer"});
stateMixin(["state.browserUI.width"], {is:"search-header", properties:{isWide:Boolean, showSearch:Boolean}, render:function() {
  this.isWide = 500 <= this.get("state.browserUI.width");
}});
stateMixin("state.browserUI.width state.view.hideFooter state.view.mode state.view.result.showLeftBar state.view.resultlist.showLeftBar state.queryResults.numResults queryEditorOn".split(" "), {is:"search-ui", properties:{mode:{type:String}, isWide:{type:Boolean, value:!0}, queryEditorOn:{type:Boolean, value:!1}, shouldShowSearchHelp:{type:Boolean, value:!1}, showLeftBar:{type:Boolean, value:!1}, hideLogo:{type:Boolean}, hideFooter:{type:Boolean}}, render:function() {
  this.showBackToResults = "result" == this.mode;
  this.showLeftBar = "result" == this.mode ? this.get("state.view.result.showLeftBar") : this.get("state.view.resultlist.showLeftBar");
  this.numResults = this.get("state.queryResults.numResults");
  this.hideFooter = this.get("state.view.hideFooter");
  this.hideLogo = 500 > this.get("state.browserUI.width");
  this.isWide = 500 <= this.get("state.browserUI.width");
}, showSearchHelp:function() {
  this.hideTimeout && (clearTimeout(this.hideTimeout), this.hideTimeout = 0);
  this.showTimeout = setTimeout(this.showSearchHelpTimeout.bind(this), 350);
}, showSearchHelpTimeout:function() {
  this.showTimeout && (this.shouldShowSearchHelp = !0, this.showTimeout = 0);
}, hideSearchHelp:function() {
  this.showTimeout && (clearTimeout(this.showTimeout), this.showTimeout = 0);
  this.hideTimeout = setTimeout(this.hideSearchHelpTimeout.bind(this), 200);
}, hideSearchHelpTimeout:function() {
  this.hideTimeout && (this.shouldShowSearchHelp = !1, this.hideTimeout = 0);
}, closeLeftBar:function() {
  this.dispatch({type:"CLOSE_LEFT_BAR", mode:this.mode});
}});
stateMixin([], {is:"user-profile", properties:{profilePicture:{type:String, value:""}}, stateReady:function() {
  this.profilePicture = window.profilePicture;
}});
stateMixin(["state.browserUI.width", "csv", "state.import.matches.*"], {is:"import-list", properties:{csv:Object, rows:Array, numberColumn:Number, header:Array, errors:Array, lastConfirmedIndex:Number, showStep2:Boolean, showStep3:Boolean, tableScroll:Number, fileName:String}, stateReady:function() {
  this.showStep3 = this.showStep2 = !1;
}, render:function(state, paths) {
  if (paths["state.import.matches.*"]) {
    var matches = this.get("state.import.matches");
    if (matches) {
      for (var $jscomp$iter$94 = $jscomp.makeIterator(matches.keys()), $jscomp$key$i = $jscomp$iter$94.next(); !$jscomp$key$i.done; $jscomp$key$i = $jscomp$iter$94.next()) {
        var i = $jscomp$key$i.value;
        this.set("rows." + i + ".matches", matches[i]);
        this.set("rows." + i + ".loading", !1);
        !this.rows[i].confirmed && matches[i] && 0 < matches[i].length && this.set("rows." + i + ".picked", matches[i][0]);
      }
    }
  }
}, setRows:function() {
  this.dispatch({type:"IMPORT_FETCH_RESET"});
  for (var oldRows = this.rows, old = oldRows && oldRows.length == this.csv.data.length, rows = [], i = 0; i < this.csv.data.length; i++) {
    var row = this.csv.data[i];
    rows.push({columns:row, rawNumber:row[this.numberColumn], editedNumber:row[this.numberColumn], matches:[], loading:!1, picked:old && oldRows[i].picked || "", confirmed:old && oldRows[i].confirmed || !1, cleared:old && oldRows[i].cleared || !1});
  }
  this.rows = rows;
  this.lastConfirmedIndex = -1;
}, pickNumberColumn:function(e) {
  this.numberColumn = e.model.index;
  this.setRows();
  this.showStep3 = !1;
}, confirmNumberColumn:function() {
  this.showStep3 = !0;
  this.matchAll();
}, onFilePicked:function() {
  this.showStep3 = this.showStep2 = !1;
  Papa.parse(this.$.fileInput.files[0], {complete:this.parseComplete.bind(this)});
  this.fileName = this.$.fileInput.files[0].name;
}, onTextareaChanged:function() {
  this.showStep3 = !1;
  this.csv = {};
  this.csv.data = [];
  for (var $jscomp$iter$95 = $jscomp.makeIterator(this.$.textInput.value.split("\n")), $jscomp$key$num = $jscomp$iter$95.next(); !$jscomp$key$num.done; $jscomp$key$num = $jscomp$iter$95.next()) {
    var num = $jscomp$key$num.value;
    num = num.trim();
    "" != num && this.csv.data.push([num]);
  }
  this.header = ["numbers"];
  this.numberColumn = 0;
  this.rows = [];
  this.setRows();
  this.showStep2 = !0;
}, parseComplete:function(results) {
  this.csv = results;
  this.errors = this.csv.errors;
  this.numberColumn = 0;
  this.header = this.csv.data[0];
  this.rows = [];
  this.setRows();
  this.showStep2 = !0;
}, matchAll:function() {
  if (this.showStep3) {
    for (var i = 0; i < this.rows.length; i += 500) {
      this.fetchRows(i, i + 500);
    }
    this.$.list.fire("iron-resize");
  }
}, editedNumber:function(e) {
  var i = e.model.index;
  this.set("rows." + i + ".editedNumber", e.target.value);
  this.fetchRows(i, i + 1);
}, editedMenu:function() {
  this.matchAll();
}, pickChanged:function(e) {
  var val = e.detail.value[0], i = e.target.dataIndex;
  this.set("rows." + i + ".picked", val);
  this.set("rows." + i + ".confirmed", !0);
}, confirmClicked:function(e) {
  var i = e.model.index, val = !this.rows[i].confirmed;
  this.set("rows." + i + ".confirmed", val);
  this.set("rows." + i + ".cleared", !1);
  if (e.shiftKey && -1 != this.lastConfirmedIndex) {
    if (this.lastConfirmedIndex < i) {
      var start = this.lastConfirmedIndex;
      var end = i;
    } else {
      start = i, end = this.lastConfirmedIndex;
    }
    for (var j = start; j < end; j++) {
      this.set("rows." + j + ".cleared", !1);
    }
  }
  val && (this.lastConfirmedIndex = i);
  e.preventDefault();
}, clearClicked:function(e) {
  var i = e.model.index, val = !this.rows[i].cleared;
  this.set("rows." + i + ".cleared", val);
  this.set("rows." + i + ".confirmed", !1);
  e.preventDefault();
}, tableScrolled:function(e) {
  this.tableScroll = e.target.scrollLeft;
}, fetchRows:function(start, end) {
  for (var nums = [], i = start; i < end && i < this.rows.length; i++) {
    nums.push(this.rows[i].editedNumber), this.set("rows." + i + ".matches", []), this.set("rows." + i + ".loading", !0);
  }
  var typ = "";
  this.$.typeApp.checked ? typ = "app" : this.$.typePub.checked && (typ = "pub");
  var countryRestrict = this.$.countryRestrict.value.toLowerCase().replace(" ", ""), countryPref = this.$.countryPref.value.toLowerCase().replace(" ", "");
  this.dispatch({type:"IMPORT_FETCH_MATCHES", nums:nums, countryRestrict:countryRestrict, countryPref:countryPref, numType:typ, start:start});
}, export:function() {
  for (var csv = [], i = 0; i < this.csv.data.length; i++) {
    var row = this.csv.data[i].slice(), val = this.rows[i].picked.id;
    if (!val || this.rows[i].cleared) {
      val = "";
    }
    row.splice(0, 0, val);
    csv.push(row);
  }
  var data = Papa.unparse(csv), a = window.document.createElement("a"), url = window.URL.createObjectURL(new Blob([data], {type:"text/csv"}));
  a.href = url;
  a.download = "Matched - " + this.fileName;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  window.URL.revokeObjectURL(url);
}, search:function() {
  for (var docids = [], i = 0; i < this.csv.data.length; i++) {
    var val = this.rows[i].picked.ucid;
    val && !this.rows[i].cleared && docids.push("patent/" + val);
  }
  this.dispatch({type:"QUERY_SEARCH_DOCLIST", docids:docids});
}, eq:function(a, b) {
  return a == b;
}, rowZIndex:function(i) {
  return this.rows.length - i;
}, makeOptions:function(list) {
  if (!list) {
    return [];
  }
  for (var opts = [], $jscomp$iter$96 = $jscomp.makeIterator(list), $jscomp$key$v = $jscomp$iter$96.next(); !$jscomp$key$v.done; $jscomp$key$v = $jscomp$iter$96.next()) {
    var v = $jscomp$key$v.value;
    opts.push({label:v.id, value:v});
  }
  return opts;
}, makeSelected:function(patent) {
  return [patent];
}, searchURL:function(ucid) {
  return "https://patents.google.com/patent/" + ucid;
}});
HtmlImportsNamespace.PaperDialogBehavior = {};
HtmlImportsNamespace.PaperDialogBehavior.PaperDialogBehavior = {};
Polymer.PaperDialogBehaviorImpl = {hostAttributes:{role:"dialog", tabindex:"-1"}, properties:{modal:{type:Boolean, value:!1}}, observers:["_modalChanged(modal, _readied)"], listeners:{tap:"_onDialogClick"}, ready:function() {
  this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;
  this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;
  this.__prevWithBackdrop = this.withBackdrop;
}, _modalChanged:function(modal, readied) {
  readied && (modal ? (this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick, this.__prevNoCancelOnEscKey = this.noCancelOnEscKey, this.__prevWithBackdrop = this.withBackdrop, this.withBackdrop = this.noCancelOnEscKey = this.noCancelOnOutsideClick = !0) : (this.noCancelOnOutsideClick = this.noCancelOnOutsideClick && this.__prevNoCancelOnOutsideClick, this.noCancelOnEscKey = this.noCancelOnEscKey && this.__prevNoCancelOnEscKey, this.withBackdrop = this.withBackdrop && this.__prevWithBackdrop));
}, _updateClosingReasonConfirmed:function(confirmed) {
  this.closingReason = this.closingReason || {};
  this.closingReason.confirmed = confirmed;
}, _onDialogClick:function(event) {
  for (var path = Polymer.dom(event).path, i = 0; i < path.indexOf(this); i++) {
    var target = path[i];
    if (target.hasAttribute && (target.hasAttribute("dialog-dismiss") || target.hasAttribute("dialog-confirm"))) {
      this._updateClosingReasonConfirmed(target.hasAttribute("dialog-confirm"));
      this.close();
      event.stopPropagation();
      break;
    }
  }
}};
Polymer.PaperDialogBehavior = [Polymer.IronOverlayBehavior, Polymer.PaperDialogBehaviorImpl];
HtmlImportsNamespace.PaperDialogBehavior.PaperDialogSharedStyles = {};
HtmlImportsNamespace.PaperDialog = {};
HtmlImportsNamespace.PaperDialog.PaperDialog = {};
Polymer({is:"paper-dialog", behaviors:[Polymer.PaperDialogBehavior, Polymer.NeonAnimationRunnerBehavior], listeners:{"neon-animation-finish":"_onNeonAnimationFinish"}, _renderOpened:function() {
  this.cancelAnimation();
  this.playAnimation("entry");
}, _renderClosed:function() {
  this.cancelAnimation();
  this.playAnimation("exit");
}, _onNeonAnimationFinish:function() {
  this.opened ? this._finishRenderOpened() : this._finishRenderClosed();
}});
stateMixin(["state.homepage.coverageCountry", "state.homepage.coverageOpen", "state.homepage.coverage.*"], {is:"coverage-stats", properties:{country:String, grantCount:String, appCount:String, grantStart:Number, appStart:Number, showAppFullText:Boolean, showGrantFullText:Boolean}, attached:function() {
  this.$.dialog.sizingTarget = this.$.wrap;
}, render:function() {
  var open = this.get("state.homepage.coverageOpen");
  this.get("state.homepage.coverage");
  if (open) {
    if (this.get("state.homepage.coverage")) {
      this.$.dialog.open();
      this.country = this.get("state.homepage.coverageCountry") || "US";
      var stats = this.get("state.homepage.coverage.country");
      if (stats) {
        for (var $jscomp$iter$97 = $jscomp.makeIterator(stats), $jscomp$key$c = $jscomp$iter$97.next(); !$jscomp$key$c.done; $jscomp$key$c = $jscomp$iter$97.next()) {
          var c = $jscomp$key$c.value;
          if (c && c.code == this.country) {
            var yearStats = c.year;
            var countryStats = c;
            break;
          }
        }
        if (countryStats) {
          for (var margin = {top:20, right:20, left:20, bottom:20}, graphEl = Polymer.dom(this.root).querySelector("#graph"); graphEl.firstChild;) {
            graphEl.removeChild(graphEl.firstChild);
          }
          var svg = d3.select(graphEl).append("svg").attr("width", 140 + margin.right + margin.left).attr("height", 60 + margin.top + margin.bottom).append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")"), x = d3.scaleLinear().domain(d3.extent(yearStats, function(d) {
            return d.year;
          })).range([0, 140]), y$jscomp$0 = d3.scaleLinear().domain([d3.min(yearStats, function(y) {
            return Math.min(y.grants || 0, y.applications || 0);
          }), d3.max(yearStats, function(y) {
            return Math.max(y.grants || 0, y.applications || 0);
          })]).range([60, 0]), xAxis = d3.axisBottom(x).tickFormat(function(t) {
            return String(t);
          }).tickValues(x.domain()), curve = d3.curveCatmullRom.alpha(0.5), appLine = d3.line().x(function(d) {
            return x(d.year);
          }).y(function(d) {
            return y$jscomp$0(d.applications);
          }).defined(function(d) {
            return d.applications;
          }).curve(curve), grantLine = d3.line().x(function(d) {
            return x(d.year);
          }).y(function(d) {
            return y$jscomp$0(d.grants);
          }).defined(function(d) {
            return d.grants;
          }).curve(curve);
          svg.append("g").attr("class", "axis x-axis").attr("transform", "translate(0,60)").call(xAxis);
          this.grantCount = d3.format(",")(countryStats.total_grants || 0);
          this.appCount = d3.format(",")(countryStats.total_applications || 0);
          this.grantStart = {AP:1985, AT:1990, AU:1990, BE:2015, BG:1994, BR:2014, CA:1978, CH:1980, CN:1990, CS:1980, CZ:1993, DD:1980, DE:1987, DK:1980, EA:2000, EP:1980, ES:2004, FI:1980, HU:1980, IN:1972, JP:1993, KR:1979, LT:1994, LV:1994, NL:1997, OA:1980, PT:1986, RO:1993, RU:1994, SI:1992, SK:1993, TW:2000, US:1790}[this.country];
          this.appStart = {AT:2005, AU:1990, BE:1980, BG:1994, BR:2010, CA:1978, CH:1980, CN:1985, CZ:1993, DE:1987, DK:1980, EP:1978, ES:2004, FI:1980, FR:1981, GB:1980, HU:1980, IN:2004, JP:1993, KR:1983, LU:1980, NL:1990, PT:1986, RO:2011, RU:1994, SK:1993, TW:2003, US:2001, WO:1978}[this.country];
          this.showAppFullText = !!this.appStart;
          this.showGrantFullText = !!this.grantStart;
          svg.append("path").datum(yearStats).attr("class", "line grant-line").attr("d", grantLine);
          svg.append("path").datum(yearStats).attr("class", "line app-line").attr("d", appLine);
          for (var els = graphEl.querySelectorAll("*"), i = 0; i < els.length; i++) {
            var oldCls = els[i].getAttribute("class");
            els[i].setAttribute("class", oldCls + " coverage-stats");
          }
        }
      }
    }
  } else {
    this.$.dialog.close();
  }
}, isSelected:function(code, selected) {
  return selected == code;
}, openChanged:function() {
  this.get("state.ready") && !this.$.dialog.opened && this.dispatch({type:"COVERAGE_CLOSE"});
}, countryClick:function(e) {
  var code = e.model.item.code;
  this.dispatch({type:"COVERAGE_COUNTRY", code:code});
}});
HtmlImportsNamespace.IronImage = {};
HtmlImportsNamespace.IronImage.IronImage = {};
Polymer({is:"iron-image", properties:{src:{observer:"_srcChanged", type:String, value:""}, alt:{type:String, value:null}, preventLoad:{type:Boolean, value:!1, observer:"_preventLoadChanged"}, sizing:{type:String, value:null, reflectToAttribute:!0}, position:{type:String, value:"center"}, preload:{type:Boolean, value:!1}, placeholder:{type:String, value:null, observer:"_placeholderChanged"}, fade:{type:Boolean, value:!1}, loaded:{notify:!0, readOnly:!0, type:Boolean, value:!1}, loading:{notify:!0, 
readOnly:!0, type:Boolean, value:!1}, error:{notify:!0, readOnly:!0, type:Boolean, value:!1}, width:{observer:"_widthChanged", type:Number, value:null}, height:{observer:"_heightChanged", type:Number, value:null}}, observers:["_transformChanged(sizing, position)"], ready:function() {
  var img = this.$.img;
  img.onload = function() {
    this.$.img.src === this._resolveSrc(this.src) && (this._setLoading(!1), this._setLoaded(!0), this._setError(!1));
  }.bind(this);
  img.onerror = function() {
    this.$.img.src === this._resolveSrc(this.src) && (this._reset(), this._setLoading(!1), this._setLoaded(!1), this._setError(!0));
  }.bind(this);
  this._resolvedSrc = "";
}, _load:function(src) {
  src ? this.$.img.src = src : this.$.img.removeAttribute("src");
  this.$.sizedImgDiv.style.backgroundImage = src ? 'url("' + src + '")' : "";
  this._setLoading(!!src);
  this._setLoaded(!1);
  this._setError(!1);
}, _reset:function() {
  this.$.img.removeAttribute("src");
  this.$.sizedImgDiv.style.backgroundImage = "";
  this._setLoading(!1);
  this._setLoaded(!1);
  this._setError(!1);
}, _computePlaceholderHidden:function() {
  return !this.preload || !this.fade && !this.loading && this.loaded;
}, _computePlaceholderClassName:function() {
  return this.preload && this.fade && !this.loading && this.loaded ? "faded-out" : "";
}, _computeImgDivHidden:function() {
  return !this.sizing;
}, _computeImgDivARIAHidden:function() {
  return "" === this.alt ? "true" : void 0;
}, _computeImgDivARIALabel:function() {
  if (null !== this.alt) {
    return this.alt;
  }
  if ("" === this.src) {
    return "";
  }
  var pathComponents = (new URL(this._resolveSrc(this.src))).pathname.split("/");
  return pathComponents[pathComponents.length - 1];
}, _computeImgHidden:function() {
  return !!this.sizing;
}, _widthChanged:function() {
  this.style.width = isNaN(this.width) ? this.width : this.width + "px";
}, _heightChanged:function() {
  this.style.height = isNaN(this.height) ? this.height : this.height + "px";
}, _preventLoadChanged:function() {
  this.preventLoad || this.loaded || (this._reset(), this._load(this.src));
}, _srcChanged:function(newSrc) {
  var newResolvedSrc = this._resolveSrc(newSrc);
  newResolvedSrc !== this._resolvedSrc && (this._resolvedSrc = newResolvedSrc, this._reset(), this.preventLoad || this._load(newSrc));
}, _placeholderChanged:function() {
  this.$.placeholder.style.backgroundImage = this.placeholder ? 'url("' + this.placeholder + '")' : "";
}, _transformChanged:function() {
  var sizedImgDivStyle = this.$.sizedImgDiv.style, placeholderStyle = this.$.placeholder.style;
  sizedImgDivStyle.backgroundSize = placeholderStyle.backgroundSize = this.sizing;
  sizedImgDivStyle.backgroundPosition = placeholderStyle.backgroundPosition = this.sizing ? this.position : "";
  sizedImgDivStyle.backgroundRepeat = placeholderStyle.backgroundRepeat = this.sizing ? "no-repeat" : "";
}, _resolveSrc:function(testSrc) {
  var baseURI = this.ownerDocument.baseURI;
  return baseURI ? (new URL(testSrc, baseURI)).href : testSrc;
}});
HtmlImportsNamespace.IronSelector.IronSelector = {};
Polymer({is:"iron-selector", behaviors:[Polymer.IronMultiSelectableBehavior]});
HtmlImportsNamespace.PaperCard = {};
HtmlImportsNamespace.PaperCard.PaperCard = {};
Polymer({is:"paper-card", properties:{heading:{type:String, value:"", observer:"_headingChanged"}, image:{type:String, value:""}, alt:{type:String}, preloadImage:{type:Boolean, value:!1}, fadeImage:{type:Boolean, value:!1}, placeholderImage:{type:String, value:null}, elevation:{type:Number, value:1, reflectToAttribute:!0}, animatedShadow:{type:Boolean, value:!1}, animated:{type:Boolean, reflectToAttribute:!0, readOnly:!0, computed:"_computeAnimated(animatedShadow)"}}, _isHidden:function(image) {
  return image ? "false" : "true";
}, _headingChanged:function(heading) {
  this.getAttribute("aria-label");
  this.setAttribute("aria-label", heading);
}, _computeHeadingClass:function(image) {
  return image ? " over-image" : "";
}, _computeAnimated:function(animatedShadow) {
  return animatedShadow;
}});
HtmlImportsNamespace.IronFormElementBehavior = {};
HtmlImportsNamespace.IronFormElementBehavior.IronFormElementBehavior = {};
Polymer.IronFormElementBehavior = {properties:{name:{type:String}, value:{notify:!0, type:String}, required:{type:Boolean, value:!1}, _parentForm:{type:Object}}, attached:function() {
  Polymer.Element || this.fire("iron-form-element-register");
}, detached:function() {
  !Polymer.Element && this._parentForm && this._parentForm.fire("iron-form-element-unregister", {target:this});
}};
HtmlImportsNamespace.IronValidatableBehavior = {};
HtmlImportsNamespace.IronValidatableBehavior.IronValidatableBehavior = {};
Polymer.IronValidatableBehaviorMeta = null;
Polymer.IronValidatableBehavior = {properties:{validator:{type:String}, invalid:{notify:!0, reflectToAttribute:!0, type:Boolean, value:!1}, _validatorMeta:{type:Object}, validatorType:{type:String, value:"validator"}, _validator:{type:Object, computed:"__computeValidator(validator)"}}, observers:["_invalidChanged(invalid)"], registered:function() {
  Polymer.IronValidatableBehaviorMeta = new Polymer.IronMeta({type:"validator"});
}, _invalidChanged:function() {
  this.invalid ? this.setAttribute("aria-invalid", "true") : this.removeAttribute("aria-invalid");
}, hasValidator:function() {
  return null != this._validator;
}, validate:function(value) {
  this.invalid = !this._getValidity(value);
  return !this.invalid;
}, _getValidity:function(value) {
  return this.hasValidator() ? this._validator.validate(value) : !0;
}, __computeValidator:function() {
  return Polymer.IronValidatableBehaviorMeta && Polymer.IronValidatableBehaviorMeta.byKey(this.validator);
}};
HtmlImportsNamespace.IronCheckedElementBehavior = {};
HtmlImportsNamespace.IronCheckedElementBehavior.IronCheckedElementBehavior = {};
Polymer.IronCheckedElementBehaviorImpl = {properties:{checked:{type:Boolean, value:!1, reflectToAttribute:!0, notify:!0, observer:"_checkedChanged"}, toggles:{type:Boolean, value:!0, reflectToAttribute:!0}, value:{type:String, value:"on", observer:"_valueChanged"}}, observers:["_requiredChanged(required)"], created:function() {
  this._hasIronCheckedElementBehavior = !0;
}, _getValidity:function() {
  return this.disabled || !this.required || this.checked;
}, _requiredChanged:function() {
  this.required ? this.setAttribute("aria-required", "true") : this.removeAttribute("aria-required");
}, _checkedChanged:function() {
  this.active = this.checked;
  this.fire("iron-change");
}, _valueChanged:function() {
  if (void 0 === this.value || null === this.value) {
    this.value = "on";
  }
}};
Polymer.IronCheckedElementBehavior = [Polymer.IronFormElementBehavior, Polymer.IronValidatableBehavior, Polymer.IronCheckedElementBehaviorImpl];
HtmlImportsNamespace.PaperBehaviors.PaperInkyFocusBehavior = {};
Polymer.PaperInkyFocusBehaviorImpl = {observers:["_focusedChanged(receivedFocusFromKeyboard)"], _focusedChanged:function(receivedFocusFromKeyboard) {
  receivedFocusFromKeyboard && this.ensureRipple();
  this.hasRipple() && (this._ripple.holdDown = receivedFocusFromKeyboard);
}, _createRipple:function() {
  var ripple = Polymer.PaperRippleBehavior._createRipple();
  ripple.id = "ink";
  ripple.setAttribute("center", "");
  ripple.classList.add("circle");
  return ripple;
}};
Polymer.PaperInkyFocusBehavior = [Polymer.IronButtonState, Polymer.IronControlState, Polymer.PaperRippleBehavior, Polymer.PaperInkyFocusBehaviorImpl];
HtmlImportsNamespace.PaperBehaviors.PaperCheckedElementBehavior = {};
Polymer.PaperCheckedElementBehaviorImpl = {_checkedChanged:function() {
  Polymer.IronCheckedElementBehaviorImpl._checkedChanged.call(this);
  this.hasRipple() && (this.checked ? this._ripple.setAttribute("checked", "") : this._ripple.removeAttribute("checked"));
}, _buttonStateChanged:function() {
  Polymer.PaperRippleBehavior._buttonStateChanged.call(this);
  !this.disabled && this.isAttached && (this.checked = this.active);
}};
Polymer.PaperCheckedElementBehavior = [Polymer.PaperInkyFocusBehavior, Polymer.IronCheckedElementBehavior, Polymer.PaperCheckedElementBehaviorImpl];
HtmlImportsNamespace.PaperCheckbox = {};
HtmlImportsNamespace.PaperCheckbox.PaperCheckbox = {};
Polymer({is:"paper-checkbox", behaviors:[Polymer.PaperCheckedElementBehavior], hostAttributes:{role:"checkbox", "aria-checked":!1, tabindex:0}, properties:{ariaActiveAttribute:{type:String, value:"aria-checked"}}, attached:function() {
  Polymer.RenderStatus.afterNextRender(this, function() {
    var inkSize = this.getComputedStyleValue("--calculated-paper-checkbox-ink-size").trim();
    if ("-1px" === inkSize) {
      var checkboxSizeText = this.getComputedStyleValue("--calculated-paper-checkbox-size").trim(), units = "px", unitsMatches = checkboxSizeText.match(/[A-Za-z]+$/);
      null !== unitsMatches && (units = unitsMatches[0]);
      var checkboxSize = parseFloat(checkboxSizeText), defaultInkSize = 8 / 3 * checkboxSize;
      "px" === units && (defaultInkSize = Math.floor(defaultInkSize), defaultInkSize % 2 !== checkboxSize % 2 && defaultInkSize++);
      this.updateStyles({"--paper-checkbox-ink-size":defaultInkSize + units});
    }
  });
}, _computeCheckboxClass:function(checked, invalid) {
  var className = "";
  checked && (className += "checked ");
  invalid && (className += "invalid");
  return className;
}, _computeCheckmarkClass:function(checked) {
  return checked ? "" : "hidden";
}, _createRipple:function() {
  this._rippleContainer = this.$.checkboxContainer;
  return Polymer.PaperInkyFocusBehaviorImpl._createRipple.call(this);
}});
stateMixin(["state.browserUI.width", "state.browserUI.height", "state.query.scholar.*", "promo"], {is:"landing-page", properties:{promo:Object, promoTiny:Boolean, promoCard:Boolean, cardClass:String}, render:function() {
  this.isNarrow = 700 > this.get("state.browserUI.width");
  this.isVeryShort = 350 > this.get("state.browserUI.height");
  this.isShort = !this.isVeryShort && 600 > this.get("state.browserUI.height");
  this.$.includeNPL.checked = this.get("state.query.scholar.value") || !1;
  if (this.promo) {
    switch(this.promoTiny = "1" == this.promo.type, this.promoCard = "2" == this.promo.type || "3" == this.promo.type, this.promo.type) {
      case "1":
        this.promoTiny = !0;
        break;
      case "2":
        this.promoCard = !0;
        this.cardClass = this.promo.target ? "has-target" : "";
        break;
      case "3":
        this.promoCard = !0, this.cardClass = this.promo.target ? "has-target large-card" : "large-card";
    }
  }
}, cardClick:function() {
  if (this.promo.target) {
    if (this.promo.target.startsWith("http")) {
      var url = this.promo.target;
      ga("send", "event", "outbound", "click", url, {transport:"beacon", hitCallback:function() {
        window.open(url, "_blank");
      }});
    } else {
      try {
        var actionObject = JSON.parse(this.promo.target);
        this.dispatch(actionObject);
      } catch (e) {
        console.warn(e);
      }
    }
  }
}, statsClick:function() {
  this.dispatch({type:"COVERAGE_OPEN"});
}, nplChange:function() {
  this.dispatch({type:"SCHOLAR_CHECKBOX", value:this.$.includeNPL.checked});
}});
HtmlImportsNamespace.PaperSpinner = {};
HtmlImportsNamespace.PaperSpinner.PaperSpinnerBehavior = {};
Polymer.PaperSpinnerBehavior = {properties:{active:{type:Boolean, value:!1, reflectToAttribute:!0, observer:"__activeChanged"}, alt:{type:String, value:"loading", observer:"__altChanged"}, __coolingDown:{type:Boolean, value:!1}}, __computeContainerClasses:function(active, coolingDown) {
  return [active || coolingDown ? "active" : "", coolingDown ? "cooldown" : ""].join(" ");
}, __activeChanged:function(active, old) {
  this.__setAriaHidden(!active);
  this.__coolingDown = !active && old;
}, __altChanged:function(alt) {
  "loading" === alt ? this.alt = this.getAttribute("aria-label") || alt : (this.__setAriaHidden("" === alt), this.setAttribute("aria-label", alt));
}, __setAriaHidden:function(hidden) {
  hidden ? this.setAttribute("aria-hidden", "true") : this.removeAttribute("aria-hidden");
}, __reset:function() {
  this.__coolingDown = this.active = !1;
}};
HtmlImportsNamespace.PaperSpinner.PaperSpinnerStyles = {};
HtmlImportsNamespace.PaperSpinner.PaperSpinner = {};
Polymer({is:"paper-spinner", behaviors:[Polymer.PaperSpinnerBehavior]});
HtmlImportsNamespace.PaperSpinner.PaperSpinnerLite = {};
Polymer({is:"paper-spinner-lite", behaviors:[Polymer.PaperSpinnerBehavior]});
stateMixin(["data.*", "id", "viewId"], {is:"concept-card", properties:{data:Object, id:String, preloadedData:Object, hideNav:{type:Boolean, value:!1}, openedByClick:{type:Boolean, value:!1}, viewId:String, context:String, fetch:Object, loading:Boolean, hasBody:Boolean, relationsParents:Array, relationsChildren:Array}, render:function(state, paths) {
  paths.id && (this.viewId = this.get("id"));
  paths.viewId && (this.fetchConcept(), this.id == this.viewId && (this.data = Object.assign({}, this.preloadedData)));
  this.data && (paths["data.*"] && (this.data.relations ? (this.relationsParents = this.data.relations.filter(this.isParent), this.relationsChildren = this.data.relations.filter(this.isChild), this.relationsParents.length || (this.relationsParents = null), this.relationsChildren.length || (this.relationsChildren = null)) : this.relationsChildren = this.relationsParents = null), this.hasBody = this.data.image || this.data.description);
}, fetchConcept:function() {
  this.fetch && this.fetch.xhr.abort();
  this.data = null;
  this.loading = !0;
  var xhr = new XMLHttpRequest, id = this.get("viewId"), fetch = {id:id, xhr:xhr}, response = function() {
    this.fetchConceptResponse(xhr, fetch);
  }.bind(this);
  xhr.addEventListener("load", response);
  xhr.addEventListener("error", response);
  xhr.addEventListener("timeout", response);
  xhr.addEventListener("abort", response);
  var context = this.get("context"), url = "/xhr/concept?id=" + encodeURIComponent(id) + "&context=" + encodeURIComponent(context);
  xhr.open("GET", url);
  xhr.send();
  this.fetch = fetch;
}, fetchConceptResponse:function(xhr, fetch) {
  if (200 == fetch.xhr.status) {
    var result = JSON.parse(xhr.responseText);
    if (result && 0 < result.concept.length) {
      var data = result.concept[0];
      this.id == this.viewId && (data = Object.assign(data, this.preloadedData || {}));
      this.data = data;
    }
  }
  this.loading = !1;
}, loadRelation:function(e) {
  this.viewId = e.model.item.id;
}, getSourceLine:function(sources) {
  if (!sources || 0 == sources.length) {
    return "";
  }
  var attr = {0:"Google", 1:"machine annotation", 2:"MOL attachment", 3:"Cooperative Patent Classification"}, line = sources.map(function(x) {
    return attr[x];
  }).filter(function(x) {
    return x;
  }).join(", ");
  return "from " + line;
}, preventDefault:function(e) {
  e.stopPropagation();
}, close:function(e) {
  e.stopPropagation();
  this.fire("close-card", {});
}, isParent:function(item) {
  return item ? item.parent_relation.is_parent : !1;
}, isChild:function(item) {
  return item ? item.parent_relation.is_child : !1;
}, searchQuery:function(data) {
  return data ? data.inchi_key ? data.inchi_key : "(" + data.name + ")" : "";
}});
stateMixin(["open"], {is:"concept-mention", properties:{id:String, preloadedData:Object, context:String, open:Boolean, noIcon:{type:Boolean, value:!1}, hideNav:Boolean, showTimeout:Number, hideTimeout:Number, openedByClick:Boolean}, render:function() {
}, rendered:function(state, paths) {
  paths.open && this.open && this.position();
}, mouseenter:function() {
  window.clearTimeout(this.hideTimeout);
  this.showTimeout = window.setTimeout(this.show.bind(this), 300);
}, mouseleave:function() {
  this.openedByClick || (window.clearTimeout(this.showTimeout), this.hideTimeout = window.setTimeout(this.hide.bind(this), 300));
}, mouseclick:function() {
  this.open && this.openedByClick ? (this.hide(), this.openedByClick = !1) : (this.openedByClick = !0, this.show());
}, keydown:function(e) {
  13 == e.which && this.mouseclick();
}, show:function() {
  this.open = !0;
}, hide:function() {
  this.open = !1;
}, position:function() {
  var screenWidth = document.documentElement.clientWidth - 10, screenHeight = document.documentElement.clientHeight - 10, targetOffsets = this.$$("#target").getBoundingClientRect(), el = this.$$("concept-card"), cardOffsets = el.getBoundingClientRect();
  el.offsetParent.getBoundingClientRect();
  var x = targetOffsets.left + 10, y = targetOffsets.bottom + 10;
  x + cardOffsets.width > screenWidth && (x = screenWidth - cardOffsets.width, 10 > x && (x = 10));
  y + 300 > screenHeight && 400 < targetOffsets.top && (y = targetOffsets.top - cardOffsets.height - 10);
  el.style.top = document.documentElement.scrollTop + y + "px";
  el.style.left = document.documentElement.scrollLeft + x + "px";
}});
HtmlImportsNamespace.PaperFab = {};
HtmlImportsNamespace.PaperFab.PaperFab = {};
Polymer({is:"paper-fab", behaviors:[Polymer.PaperButtonBehavior], properties:{src:{type:String, value:""}, icon:{type:String, value:""}, mini:{type:Boolean, value:!1, reflectToAttribute:!0}, label:{type:String, observer:"_labelChanged"}}, _labelChanged:function() {
  this.setAttribute("aria-label", this.label);
}, _computeIsIconFab:function(icon, src) {
  return 0 < icon.length || 0 < src.length;
}});
HtmlImportsNamespace.PaperIconButton = {};
HtmlImportsNamespace.PaperIconButton.PaperIconButton = {};
Polymer({is:"paper-icon-button", hostAttributes:{role:"button", tabindex:"0"}, behaviors:[Polymer.PaperInkyFocusBehavior], properties:{src:{type:String}, icon:{type:String}, alt:{type:String, observer:"_altChanged"}}, _altChanged:function(newValue, oldValue) {
  var label = this.getAttribute("aria-label");
  label && oldValue != label || this.setAttribute("aria-label", newValue);
}});
HtmlImportsNamespace.PaperIconButton.PaperIconButtonLight = {};
Polymer({is:"paper-icon-button-light", extends:"button", behaviors:[Polymer.PaperRippleBehavior], listeners:{down:"_rippleDown", up:"_rippleUp", focus:"_rippleDown", blur:"_rippleUp"}, _rippleDown:function() {
  this.getRipple().downAction();
}, _rippleUp:function() {
  this.getRipple().upAction();
}, ensureRipple:function(var_args) {
  var lastRipple = this._ripple;
  Polymer.PaperRippleBehavior.ensureRipple.apply(this, arguments);
  this._ripple && this._ripple !== lastRipple && (this._ripple.center = !0, this._ripple.classList.add("circle"));
}});
stateMixin([], {is:"classification-tree", properties:{tree:Array}, shouldHide:function(item) {
  return !item.Leaf;
}});
stateMixin([], {is:"classification-viewer", properties:{classes:{type:Array, value:function() {
  return [];
}, observer:"processClasses"}, classesList:Array, classesListMore:Array, classesLeafMore:Array, more:{type:Number, value:0}, expanded:{type:Boolean, value:!1}}, processClasses:function(classes) {
  classes = void 0 === classes ? [] : classes;
  this.classesList = classes.slice(0, 1).map(function(c) {
    return c.cpcs;
  });
  this.classesListMore = classes.slice(1).map(function(c) {
    return c.cpcs;
  });
  this.classesLeafMore = classes.slice(1).map(function(c) {
    return c.cpcs[c.cpcs.length - 1];
  });
  this.more = this.classesListMore.length;
}, toggle:function() {
  this.expanded = !this.expanded;
}});
stateMixin(["state.result.imageViewer.showImageIndex"], {is:"image-carousel", properties:{images:{type:Array, value:function() {
  return [];
}}, currentImageIndex:{type:Number, value:0}, outlineSelected:{type:Boolean, value:!1}, anyExist:{type:Boolean, value:!0}}, observers:["imagesChanged(images.*)"], render:function() {
  this.currentImageIndex = this.get("state.result.imageViewer.showImageIndex") % this.images.length;
}, isCurrent:function(i, curr) {
  return this.outlineSelected && i == curr;
}, thumbnailClick:function(e) {
  this.fire("open-image", {index:e.model.index});
}, onBrokenImage:function(e) {
  for (var brokenImage = e.model.img;;) {
    var i = this.images.indexOf(brokenImage);
    if (-1 == i) {
      break;
    }
    this.splice("images", i, 1);
  }
}, imagesChanged:function() {
  this.anyExist = !!this.images && 0 < this.images.length;
}});
var rotations = {};
stateMixin("state.result.imageViewer.open state.result.imageViewer.showImageIndex state.result.imageViewer.imageRotation state.view.result.figureViewerWidth state.view.result.figureViewerHeight state.view.result.userFigureViewerWidth".split(" "), {is:"image-viewer", properties:{resultId:String, images:{type:Array, value:function() {
  return [];
}, observer:"imagesChanged"}, currentImage:{type:String, computed:"imageSrc(images, currentImageIndex)"}, currentImageIndex:{type:Number, value:0}, currentImageCallouts:{type:Array, computed:"imageCallouts(images, currentImageIndex)"}, scaleCallouts:{type:Number, value:1}, preloadImage:String, rotateDeg:Number, offsetX:{type:Number, value:0}, offsetY:{type:Number, value:0}, zoom:{type:Number, value:1.0}, isFullscreen:Boolean, narrow:Boolean}, stopPropagation:function(e) {
  e.stopPropagation();
}, render:function(state, paths) {
  paths["state.result.imageViewer.showImageIndex"] && this.showImage(this.get("state.result.imageViewer.showImageIndex"));
  if (paths["state.view.result.figureViewerWidth"] || paths["state.view.result.figureViewerHeight"]) {
    this.zoom = 0.8, this.redraw();
  }
  paths["state.result.imageViewer.imageRotation"] && (this.rotate(), this.centerImage());
  this.isFullscreen = void 0 !== this.get("state.view.result.userFigureViewerWidth");
}, rendered:function(state, paths) {
  paths["state.result.imageViewer.open"] && (this.redraw(), this.centerImage());
}, imagesChanged:function() {
  this.currentImageIndex = 0;
}, imageSrc:function(images, index) {
  var img = images[index];
  return img ? img.full : "";
}, imageCallouts:function(images, index) {
  var img = images[index];
  return img ? img.callouts : [];
}, showPrevImage:function() {
  this.dispatch({type:"RESULT_IMG_PREV"});
}, showNextImage:function() {
  this.dispatch({type:"RESULT_IMG_NEXT"});
}, expand:function() {
  this.dispatch({type:"RESULT_IMG_FULLSCREEN"});
}, collapse:function() {
  this.dispatch({type:"RESULT_IMG_FULLSCREEN_EXIT"});
}, rotateLeft:function() {
  this.dispatch({type:"RESULT_IMG_ROTATE_LEFT"});
}, rotateRight:function() {
  this.dispatch({type:"RESULT_IMG_ROTATE_RIGHT"});
}, zoomIn:function() {
  this.zoom = Math.min(4.0, this.zoom + 0.25);
  this.redraw();
}, zoomOut:function() {
  this.zoom = Math.max(0.75, this.zoom - 0.25);
  this.redraw();
}, figureScroll:function(e) {
  e.preventDefault();
  var origZoom = this.zoom;
  this.zoom += -e.deltaY / 100;
  0.75 > this.zoom && (this.zoom = 0.75);
  4.0 < this.zoom && (this.zoom = 4.0);
  var zoomMult = this.zoom - origZoom, $jscomp$destructuring$var7 = $jscomp.makeIterator(this.getRotatedBounds()), imgWidth = $jscomp$destructuring$var7.next().value, imgHeight = $jscomp$destructuring$var7.next().value;
  if (0 == this.rotateDeg || 180 == this.rotateDeg) {
    var height = imgHeight;
    var width = imgWidth;
  } else {
    height = imgWidth, width = imgHeight;
  }
  var wrapBB = this.$$("#imageWrap").getBoundingClientRect();
  var offsetX = e.clientX - wrapBB.left;
  var offsetY = e.clientY - wrapBB.top;
  var percX = (offsetX - this.offsetX) / (width * origZoom), percY = (offsetY - this.offsetY) / (height * origZoom);
  this.offsetX -= width * zoomMult * percX;
  this.offsetY -= height * zoomMult * percY;
  this.redraw();
}, figureDown:function(e) {
  e.preventDefault();
  this.totalOffset = 0;
  this._startX = e.detail.x;
  this._startY = e.detail.y;
  this._offsetX = this.offsetX;
  this._offsetY = this.offsetY;
}, figureTrack:function(e) {
  e.preventDefault();
  this.offsetX = this._offsetX + (e.detail.x - this._startX);
  this.offsetY = this._offsetY + (e.detail.y - this._startY);
  this.redraw();
}, figureUp:function(e) {
  e.preventDefault();
  10 > Math.abs(this._startX - e.detail.x) + Math.abs(this._startY - e.detail.y) && this.dispatch({type:"RESULT_IMG_NEXT"});
}, getRotatedBounds:function() {
  var bbox = this.$$("#imageWrap").getBoundingClientRect(), img = this.$$("#image"), imgWidth = 0, imgHeight = 0;
  switch(this.rotateDeg) {
    case 0:
    case 180:
      var width = bbox.height / img.naturalHeight * img.naturalWidth;
      width > bbox.width ? (imgWidth = bbox.width, imgHeight = bbox.width / img.naturalWidth * img.naturalHeight) : (imgWidth = width, imgHeight = bbox.height);
      break;
    case 90:
    case 270:
      var height = bbox.width / img.naturalHeight * img.naturalWidth;
      height > bbox.height ? (imgWidth = bbox.height, imgHeight = bbox.height / img.naturalWidth * img.naturalHeight) : (imgWidth = height, imgHeight = bbox.width);
  }
  return [imgWidth, imgHeight];
}, rotate:function() {
  this.zoom = 0.8;
  this.rotateDeg = this.get("state.result.imageViewer.imageRotation") % 360;
  rotations[this.currentImage] = this.rotateDeg;
  this.redraw();
}, redraw:function() {
  var $jscomp$destructuring$var8 = $jscomp.makeIterator(this.getRotatedBounds()), imgWidth = $jscomp$destructuring$var8.next().value, imgHeight = $jscomp$destructuring$var8.next().value;
  imgWidth *= this.zoom;
  imgHeight *= this.zoom;
  var calloutWrap = this.$$("#calloutWrap"), img = this.$$("#image");
  0 != imgWidth && (calloutWrap.style.width = imgWidth + "px");
  0 != imgHeight && (calloutWrap.style.height = imgHeight + "px");
  this.scaleCallouts = imgWidth / img.naturalWidth;
  this.transform("rotate(" + this.rotateDeg + "deg)", calloutWrap);
  var imgBbox = calloutWrap.getBoundingClientRect();
  switch(this.rotateDeg) {
    case 0:
      calloutWrap.style.marginTop = "0px";
      calloutWrap.style.marginLeft = "0px";
      break;
    case 180:
      calloutWrap.style.marginLeft = imgBbox.width + "px";
      calloutWrap.style.marginTop = imgBbox.height + "px";
      break;
    case 90:
      calloutWrap.style.marginLeft = imgBbox.width + "px";
      calloutWrap.style.marginTop = "0px";
      break;
    case 270:
      calloutWrap.style.marginLeft = "0px", calloutWrap.style.marginTop = imgBbox.height + "px";
  }
  var offsetY = this.offsetY, offsetX = this.offsetX, bbox = this.$$("#imageWrap").getBoundingClientRect(), xMin = -(3 * imgWidth / 4);
  offsetX < xMin && (offsetX = xMin);
  var xMax = bbox.width - imgWidth / 4;
  offsetX > xMax && (offsetX = xMax);
  var yMin = -(3 * imgHeight / 4);
  offsetY < yMin && (offsetY = yMin);
  var yMax = bbox.height - imgHeight / 4;
  offsetY > yMax && (offsetY = yMax);
  calloutWrap.style.top = offsetY + "px";
  calloutWrap.style.left = offsetX + "px";
}, centerImage:function() {
  var bbox = this.$$("#imageWrap").getBoundingClientRect(), $jscomp$destructuring$var9 = $jscomp.makeIterator(this.getRotatedBounds()), imgWidth = $jscomp$destructuring$var9.next().value, imgHeight = $jscomp$destructuring$var9.next().value;
  if (90 == this.rotateDeg || 270 == this.rotateDeg) {
    var $jscomp$destructuring$var10 = $jscomp.makeIterator([imgHeight, imgWidth]);
    imgWidth = $jscomp$destructuring$var10.next().value;
    imgHeight = $jscomp$destructuring$var10.next().value;
  }
  this.offsetX = bbox.width / 2 - imgWidth * this.zoom / 2;
  this.offsetY = bbox.height / 2 - imgHeight * this.zoom / 2;
  var calloutWrap = this.$$("#calloutWrap");
  calloutWrap.style.top = this.offsetY + "px";
  calloutWrap.style.left = this.offsetX + "px";
}, showImage:function(index) {
  index = void 0 === index ? 0 : index;
  this.images && this.images.length && (0 > index && (index = this.images.length + index % this.images.length), index >= this.images.length && (index %= this.images.length), this.currentImageIndex = index, this.rotateDeg = rotations[this.currentImage] || 0, this.zoom = 0.8, this.offsetY = this.offsetX = 0, this.dispatch({type:"RESULT_IMG_SET_ROTATION", rotation:this.rotateDeg}));
}, imageLoaded:function() {
  this.redraw();
  this.centerImage();
  this.preloadImage = this.imageSrc(this.images, this.currentImageIndex + 1);
}, plusOne:function(n) {
  return n + 1;
}, len:function(images) {
  return images ? images.length : 0;
}, close:function() {
  this.dispatch({type:"RESULT_IMG_CLOSE"});
}, hoverTargetStyles:function(bounds, zoom) {
  return "left:" + bounds.left * zoom + "px;top:" + bounds.top * zoom + "px;width:" + (bounds.right - bounds.left) * zoom + "px;height:" + (bounds.bottom - bounds.top) * zoom + "px;";
}, showCallout:function(el) {
  el.target.setAttribute("id", "tooltipTarget");
  var toolTip = this.$$("#tooltip");
  toolTip.innerHTML = "";
  toolTip.direction = "bottom";
  toolTip.positioningTarget = "#tooltipTarget";
  var container = document.createElement("span");
  container.style.maxWidth = "400px";
  container.style.display = "inline-block";
  container.style.overflow = "auto";
  container.innerHTML = el.target.alt;
  toolTip.appendChild(container);
  toolTip.mouseenter();
}, hideCallout:function(el) {
  el.target.removeAttribute("id");
  var toolTip = this.$$("#tooltip");
  toolTip.positioningTarget = "";
  toolTip.hide();
}});
stateMixin("state.result.data.* state.result.imageViewer.open state.result.descSearch.* state.browserUI.scrollY state.view.result.* state.result.conceptDomains".split(" "), {is:"patent-result", properties:{data:{applications:Object, concept:Object}, highlightTerms:Array, imagesOpen:Boolean, showRelatedApplications:{type:Boolean, value:!1}, hideText:Boolean, text2Column:Boolean, resultWidth:Number, resultHeight:String, figureViewerWidth:Number, figureViewerHeight:Number, figureViewerTopOffset:Number, 
showNotice:Boolean, hideDependentClaims:{type:Boolean, value:!1}, conceptDomainOptions:Array, conceptDomainSelected:Array, conceptDomainShow:Array, conceptHideInitial:Boolean}, listeners:{"open-image":"openImages"}, render:function(state, paths) {
  this.showNotice = "CN" != this.get("state.result.data.countryCode");
  if (paths["state.result.data.*"]) {
    this.data = this.get("state.result.data");
    var options = [];
    if (this.data.concept && this.data.concept.match) {
      for (var dups = {}, domains = [], $jscomp$iter$98 = $jscomp.makeIterator(this.data.concept.match), $jscomp$key$concept = $jscomp$iter$98.next(); !$jscomp$key$concept.done; $jscomp$key$concept = $jscomp$iter$98.next()) {
        var concept = $jscomp$key$concept.value;
        dups[concept.domain] || (dups[concept.domain] = !0, domains.push(concept.domain));
      }
      for (var $jscomp$iter$99 = $jscomp.makeIterator(domains.sort()), $jscomp$key$domain = $jscomp$iter$99.next(); !$jscomp$key$domain.done; $jscomp$key$domain = $jscomp$iter$99.next()) {
        var domain = $jscomp$key$domain.value;
        options.push({label:domain, value:domain});
      }
      this.conceptDomainOptions = options;
      this.conceptHideInitial = !0;
    }
  }
  paths["state.result.imageViewer.open"] && (this.imagesOpen = this.get("state.result.imageViewer.open"));
  paths["state.result.descSearch.*"] && (this.searchText = this.get("state.result.descSearch"));
  if (paths["state.view.result.*"]) {
    this.resultWidth = this.get("state.view.result.resultWidth");
    var height = this.get("state.view.result.resultHeight");
    this.resultHeight = -1 == height ? "auto" : height + "px";
    this.hideText = 0 == this.resultWidth;
    this.text2Column = 700 < this.resultWidth;
    this.figureViewerWidth = this.get("state.view.result.figureViewerWidth") - 12;
    this.figureViewerHeight = this.get("state.view.result.figureViewerHeight");
  }
  if (paths["state.browserUI.scrollY"]) {
    var offset = Math.max(61 - (this.get("state.browserUI.scrollY") || 0), 0);
    this.figureViewerTopOffset = offset;
  }
  this.showRelatedApplications = !!this.data.application.priorityApps || !!this.data.application.appsClaimingPriority || !!this.data.application.parentApps || !!this.data.application.parentApps || !!this.data.applicationChildApps;
  this.numBackwardReferences = 0;
  this.data.family.backwardReferencesOrig && (this.numBackwardReferences += this.data.family.backwardReferencesOrig.length);
  this.data.family.backwardReferencesFamily && (this.numBackwardReferences += this.data.family.backwardReferencesFamily.length);
  this.hasBackwardReferences = 0 < this.numBackwardReferences;
  this.numForwardReferences = 0;
  this.data.family.forwardReferencesOrig && (this.numForwardReferences += this.data.family.forwardReferencesOrig.length);
  this.data.family.forwardReferencesFamily && (this.numForwardReferences += this.data.family.forwardReferencesFamily.length);
  this.hasForwardReferences = 0 < this.numForwardReferences;
  this.noInfoLinks = !(this.data.backwardReferences || this.data.detailedNonPatentLiterature || this.data.forwardReferences || this.data.docdbFamily || this.data.legalEvents || this.data.similarDocuments);
  if (this.data.concept && this.data.concept.match) {
    this.conceptDomainShow = this.conceptDomainSelected = this.get("state.result.conceptDomains");
    if (!this.conceptDomainShow || !this.conceptDomainShow.length) {
      for (var domains$170 = [], $jscomp$iter$100 = $jscomp.makeIterator(this.conceptDomainOptions), $jscomp$key$opt = $jscomp$iter$100.next(); !$jscomp$key$opt.done; $jscomp$key$opt = $jscomp$iter$100.next()) {
        var opt = $jscomp$key$opt.value;
        domains$170.push(opt.value);
      }
      this.conceptDomainShow = domains$170;
    }
    this.numConcepts = this.data.concept.match.length;
  }
}, rendered:function(state, paths) {
  if (paths["state.result.data.*"]) {
    var scroll = this.get("state.browserUI.historyState.scrollY") || 0;
    window.scrollTo(0, scroll);
  }
}, openImages:function(e, detail) {
  detail = void 0 === detail ? {} : detail;
  this.dispatch({type:"RESULT_IMG_SHOW", index:detail.index});
}, closeImages:function() {
  this.dispatch({type:"RESULT_IMG_CLOSE"});
}, imageDragDown:function() {
  this._dragmove = this.imageDrag.bind(this);
  window.addEventListener("mousemove", this._dragmove, !1);
  this._dragup = this.imageDragUp.bind(this);
  window.addEventListener("mouseup", this._dragup, !1);
}, imageDrag:function(e) {
  e.preventDefault();
  this.dispatch({type:"RESULT_IMG_RESIZE", deltaX:-e.movementX});
}, imageDragUp:function(e) {
  e.preventDefault();
  window.removeEventListener("mousemove", this._dragmove, !1);
  window.removeEventListener("mouseup", this._dragup, !1);
  this.dispatch({type:"RESULT_IMG_RESIZE_STOP"});
}, intDate:function(date) {
  date = void 0 === date ? "" : date;
  return date.replace(/-/g, "");
}, join:function(sep, items) {
  for (var $jscomp$restParams = [], $jscomp$restIndex = 1; $jscomp$restIndex < arguments.length; ++$jscomp$restIndex) {
    $jscomp$restParams[$jscomp$restIndex - 1] = arguments[$jscomp$restIndex];
  }
  var items$171 = $jscomp$restParams;
  return items$171.join(sep);
}, toggleHideDependentClaims:function() {
  this.hideDependentClaims = !this.hideDependentClaims;
}, similarityToOpacity:function(sim) {
  return sim;
}, conceptTableFilter:function(conceptDomainSelected, conceptHideInitial) {
  return function(item) {
    var onlyDesc = 0 == item.sections.filter(function(s) {
      return "description" != s;
    }).length;
    return conceptHideInitial && onlyDesc && 0.4 > parseFloat(item.similarity) ? !1 : conceptDomainSelected && conceptDomainSelected.length ? -1 != conceptDomainSelected.indexOf(item.domain) : !0;
  };
}, exportConceptTable:function(e) {
  e.preventDefault();
  for (var csv = ["name;domain;sections;count;query match;smiles".split(";")], filter = this.conceptTableFilter(this.conceptDomainSelected), $jscomp$iter$101 = $jscomp.makeIterator(this.data.concept.match), $jscomp$key$c = $jscomp$iter$101.next(); !$jscomp$key$c.done; $jscomp$key$c = $jscomp$iter$101.next()) {
    var c = $jscomp$key$c.value, concept = c;
    filter(concept) && csv.push([concept.name, concept.domain, concept.sections.join("|"), concept.count, concept.similarity, concept.smiles]);
  }
  var data = Papa.unparse(csv), a = window.document.createElement("a"), url = goog.html.SafeUrl.fromBlob(new Blob([data], {type:"text/csv"}));
  goog.dom.safe.setAnchorHref(a, url);
  a.download = this.data.publicationNumber + "_concepts.csv";
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  window.URL.revokeObjectURL(goog.html.SafeUrl.unwrap(url));
}, makePreloadedData:function(item) {
  return {name:item.name, inchi_key:item.inchi_key, smiles:item.smiles, image:item.svg_large};
}, conceptShowAll:function(e) {
  e.preventDefault();
  this.conceptHideInitial = !1;
}});
stateMixin(["family.*, application.*"], {is:"family-viewer", properties:{family:{countryStatus:Object, beforeApplications:Object, afterApplications:Object}, application:{metadata:Object, pubs:Object}, isBeforeExpanded:{type:Boolean, value:!1}, isAfterExpanded:{type:Boolean, value:!1}, beforeHasExpander:{type:Boolean, value:!1}, afterHasExpander:{type:Boolean, value:!1}}, render:function() {
  this.beforeHasExpander = !1;
  this.family.beforeApplications && (this.beforeHasExpander = 3 < this.family.beforeApplications.length, this.numHiddenBefore = (this.family.beforeApplications.length - 1).toString());
  this.afterHasExpander = !1;
  this.family.afterApplications && (this.afterHasExpander = 3 < this.family.afterApplications.length, this.numHiddenAfter = (this.family.afterApplications.length - 1).toString());
}, toggleIsBeforeExpanded:function() {
  this.isBeforeExpanded = !this.isBeforeExpanded;
}, shouldShowItemBefore:function(i, expanded) {
  return expanded || !this.beforeHasExpander ? !0 : 0 == i;
}, toggleIsAfterExpanded:function() {
  this.isAfterExpanded = !this.isAfterExpanded;
}, shouldShowItemAfter:function(i, expanded) {
  return expanded || !this.afterHasExpander ? !0 : i == this.family.afterApplications.length - 1;
}, year:function(date) {
  date = void 0 === date ? "" : date;
  return date.slice(0, 4);
}, intDate:function(date) {
  date = void 0 === date ? "" : date;
  return date.replace(/-/g, "");
}, icon:function(expanded) {
  return expanded ? "expand-less" : "expand-more";
}, join:function(sep, items) {
  for (var $jscomp$restParams = [], $jscomp$restIndex = 1; $jscomp$restIndex < arguments.length; ++$jscomp$restIndex) {
    $jscomp$restParams[$jscomp$restIndex - 1] = arguments[$jscomp$restIndex];
  }
  var items$172 = $jscomp$restParams;
  return items$172.join(sep);
}});
stateMixin(["family.*"], {is:"app-row", properties:{item:Object}, render:function() {
}, year:function(date) {
  date = void 0 === date ? "" : date;
  return date.slice(0, 4);
}, join:function(sep, items) {
  for (var $jscomp$restParams = [], $jscomp$restIndex = 1; $jscomp$restIndex < arguments.length; ++$jscomp$restIndex) {
    $jscomp$restParams[$jscomp$restIndex - 1] = arguments[$jscomp$restIndex];
  }
  var items$173 = $jscomp$restParams;
  return items$173.join(sep);
}});
stateMixin(["applications.*", "events.*", "showAll"], {is:"application-timeline", properties:{applicationNumber:String, applications:Object, events:Object, showShowAllButton:Boolean, showAll:Boolean, renderEvents:Object}, render:function(state, paths) {
  paths["events.*"] && (this.showShowAllButton = 10 <= this.events.length, this.showAll = !this.showShowAllButton);
  if (paths.showAll) {
    var es = [];
    if (this.showAll) {
      es = this.events;
    } else {
      for (var $jscomp$iter$102 = $jscomp.makeIterator(this.events), $jscomp$key$e = $jscomp$iter$102.next(); !$jscomp$key$e.done; $jscomp$key$e = $jscomp$iter$102.next()) {
        var e = $jscomp$key$e.value;
        e.critical && es.push(e);
      }
    }
    this.renderEvents = es;
  }
}, toggleShowAll:function() {
  this.showAll = !this.showAll;
}, eventHasLink:function(event) {
  return event.externalLink || event.documentId || event.assigneeSearch;
}});
window._tipon = function() {
};
window._tipoff = function() {
};
stateMixin(["text", "highlightTerms", "searchText.*", "state.workspaces.*"], {is:"patent-text", properties:{name:String, text:{type:String}, highlightTerms:{type:Array}, searchText:{type:Object}, noSearchResults:{type:Boolean, value:!1}, enableTextSelection:{type:Boolean, value:!1}, showCreateHighlight:{type:Boolean, value:!1}, createHighlightOffset:{type:Number, value:0}, highlightRange:String, hideClaims:{type:Boolean, value:!1}}, behaviors:[Polymer.Templatizer], attached:function() {
  var $jscomp$this = this;
  this._onmouseover = function(e) {
    for (var el = e.target; 11 !== el.nodeType;) {
      if (el.classList.contains("notranslate")) {
        $jscomp$this.notranslateMouseover(el);
        break;
      }
      el = Polymer.dom(el).parentNode;
    }
  };
  this.$.text.addEventListener("mouseover", this._onmouseover);
}, detached:function() {
  this.$.text.removeEventListener("mouseover", this._onmouseover);
}, render:function(state, paths) {
  var dirtyHTML = !1;
  if (paths["searchText.*"] || paths.text) {
    this.oldHighlights = void 0, dirtyHTML = !0;
  }
  paths.highlightTerms && (dirtyHTML = !0);
  if (paths["state.workspaces.*"]) {
    for (var ucs = this.querySelectorAll("user-comment"), $jscomp$iter$105 = $jscomp.makeIterator(paths["state.workspaces.*"]), $jscomp$key$changes = $jscomp$iter$105.next(); !$jscomp$key$changes.done; $jscomp$key$changes = $jscomp$iter$105.next()) {
      for (var changes = $jscomp$key$changes.value, $jscomp$iter$104 = $jscomp.makeIterator(changes), $jscomp$key$change = $jscomp$iter$104.next(); !$jscomp$key$change.done; $jscomp$key$change = $jscomp$iter$104.next()) {
        var change = $jscomp$key$change.value;
        change.path.endsWith(".highlights." + this.get("state.result.id") + ".markups.splices") && (dirtyHTML = !0);
        for (var $jscomp$iter$103 = $jscomp.makeIterator(ucs), $jscomp$key$uc = $jscomp$iter$103.next(); !$jscomp$key$uc.done; $jscomp$key$uc = $jscomp$iter$103.next()) {
          var uc = $jscomp$key$uc.value;
          uc.notifyPath(change.path, change.value, !0);
        }
      }
    }
  }
  dirtyHTML && this.renderInnerHTML();
}, rendered:function() {
  if (this.hasNewHighlights) {
    var locations = [], marks = this.$.text.querySelectorAll("mark");
    if (marks) {
      for (var $jscomp$iter$106 = $jscomp.makeIterator(marks), $jscomp$key$markEl = $jscomp$iter$106.next(); !$jscomp$key$markEl.done; $jscomp$key$markEl = $jscomp$iter$106.next()) {
        var markEl = $jscomp$key$markEl.value;
        locations.push({top:markEl.offsetTop, color:markEl.style.backgroundColor});
      }
    }
    this.hasNewHighlights = !1;
    this.dispatch({type:"RESULT_HIGHLIGHT_LOCATIONS", locations:locations, name:this.name});
  }
}, clearSearchText:function() {
  this.dispatch({type:"RESULT_SEARCH_DESC", text:void 0, topOffset:0});
}, renderInnerHTML:function() {
  var text = this.text;
  if (text) {
    text = this.renderSelectedText(text);
    text = this.renderWorkspaceHighlights(text);
    text = this.renderTextHighlights(text);
    var template = document.createElement("template");
    template.innerHTML = text;
    template.content._parentProps = {state:!0};
    this.templatize(template);
    var stamped = this.stamp({state:this.state});
    Polymer.dom(this.$.text).innerHTML = "";
    stamped.root.__styleScoped = !1;
    Polymer.dom(this.$.text).appendChild(stamped.root);
  }
}, renderTextHighlights:function(text) {
  var newVal = this.highlightTerms.map(function(o) {
    return o.color + o.termsRe.toString();
  }).join(",");
  if (newVal == this.oldHighlights) {
    return text;
  }
  this.oldHighlights = newVal;
  this.hasNewHighlights = !0;
  for (var $jscomp$iter$107 = $jscomp.makeIterator(this.highlightTerms), $jscomp$key$hl = $jscomp$iter$107.next(); !$jscomp$key$hl.done; $jscomp$key$hl = $jscomp$iter$107.next()) {
    var hl = $jscomp$key$hl.value, r = this._markText(text, hl.termsRe, '<mark style="background-color: ' + hl.color + '">', "</mark>");
    text = r.text;
  }
  return text;
}, renderWorkspaceHighlights:function(text) {
  var wss = this.get("state.workspaces");
  if (!wss) {
    return text;
  }
  for (var search = [], resultId = this.get("state.result.id"), $jscomp$iter$109 = $jscomp.makeIterator(wss), $jscomp$key$ws = $jscomp$iter$109.next(); !$jscomp$key$ws.done; $jscomp$key$ws = $jscomp$iter$109.next()) {
    var ws = $jscomp$key$ws.value, wsKey = Polymer.Collection.get(wss).getKey(ws), hls = this.get("state.workspaces." + wsKey + ".highlights." + resultId + ".markups");
    if (hls) {
      for (var $jscomp$iter$108 = $jscomp.makeIterator(hls), $jscomp$key$hl = $jscomp$iter$108.next(); !$jscomp$key$hl.done; $jscomp$key$hl = $jscomp$iter$108.next()) {
        var hl = $jscomp$key$hl.value;
        if (hl.location.startsWith(this.name)) {
          var key = Polymer.Collection.get(hls).getKey(hl);
          search.push({hl:hl, path:"state.workspaces." + wsKey + ".highlights." + resultId + ".markups." + key});
        }
      }
    }
  }
  if (0 == search.length) {
    return text;
  }
  for (var splices = [], $jscomp$iter$110 = $jscomp.makeIterator(search), $jscomp$key$s = $jscomp$iter$110.next(); !$jscomp$key$s.done; $jscomp$key$s = $jscomp$iter$110.next()) {
    var s = $jscomp$key$s.value, loc = s.hl.location.split(":"), start = this.offsetForPath(text, loc[1], !0), end = this.offsetForPath(text, loc[2], !1);
    splices.push({start:start, end:end, path:s.path});
  }
  splices.sort(function(a, b) {
    return a.start != b.start ? a.start < b.start ? -1 : 1 : a.path < b.path ? -1 : 1;
  });
  for (var buf = "", walker = new HTMLWalker(text), next, offset = 0, openTags = []; (next = walker.next()).value;) {
    if (next.isTag) {
      buf += next.value;
    } else {
      for (var inserts = [], $jscomp$iter$111 = $jscomp.makeIterator(splices), $jscomp$key$comment = $jscomp$iter$111.next(); !$jscomp$key$comment.done; $jscomp$key$comment = $jscomp$iter$111.next()) {
        var comment = $jscomp$key$comment.value;
        if (comment.start >= offset + next.value.length) {
          break;
        }
        comment.start >= offset && comment.start < offset + next.value.length && (inserts.push({pos:comment.start, value:'<user-comment state="{{state}}" path="' + comment.path + '"></user-comment>', priority:1}), inserts.push({pos:comment.start, value:'<user-highlight state="{{state}}" path="' + comment.path + '">', priority:0}), openTags.push(comment));
      }
      for (var i = 0; i < openTags.length; i++) {
        var open = openTags[i];
        open.start < offset && inserts.push({pos:offset, value:'<user-highlight state="{{state}}" path="' + open.path + '">', priority:0});
        open.end <= offset + next.value.length ? (inserts.push({pos:open.end, value:"</user-highlight>", priority:2}), openTags.splice(i, 1), i--) : open.end > offset + next.value.length && inserts.push({pos:offset + next.value.length, value:"</user-highlight>", priority:2});
      }
      inserts.sort(function(a, b) {
        return a.pos != b.pos ? a.pos < b.pos ? -1 : 1 : a.priority > b.priority ? -1 : 1;
      });
      for (var last = 0, $jscomp$iter$112 = $jscomp.makeIterator(inserts), $jscomp$key$i = $jscomp$iter$112.next(); !$jscomp$key$i.done; $jscomp$key$i = $jscomp$iter$112.next()) {
        var i$174 = $jscomp$key$i.value;
        buf += next.value.slice(last, i$174.pos - offset);
        buf += i$174.value;
        last = i$174.pos - offset;
      }
      buf += next.value.slice(last, next.value.length);
    }
    offset += next.value.length;
  }
  return buf;
}, renderSelectedText:function(text) {
  var $jscomp$this = this;
  if (this.searchText && this.searchText.text && this.searchText.text.length) {
    var textRe = new RegExp("\\b" + this.searchText.text.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&") + "\\b", "mgi"), matchEl = window.unwrap(document.createElement("div"));
    matchEl.innerHTML = text;
    var prune = null;
    prune = function(n) {
      if (n.nodeType == n.TEXT_NODE) {
        var r = $jscomp$this._markText(n.nodeValue, textRe, '<mark class="searchText">', "</mark>");
        if (!r.matched) {
          return {matched:!1, keep:!1};
        }
        var s = document.createElement("span");
        s.innerHTML = r.text;
        Polymer.dom(n.parentNode).insertBefore(s, n);
        Polymer.dom(n.parentNode).removeChild(n);
        return {matched:!0, keep:!0};
      }
      for (var matchedAny = !1, i = 0; i < Polymer.dom(n).childNodes.length; i++) {
        var c = Polymer.dom(n).childNodes[i];
        r = prune(c);
        matchedAny |= r.matched;
      }
      var paragraphNode = "PARA-NUM" == n.nodeName;
      paragraphNode |= "P" == n.nodeName;
      paragraphNode |= "LI" == n.nodeName;
      return (paragraphNode |= "PRE" == n.nodeName) ? (matchedAny || (n.style.display = "none"), {matched:matchedAny, keep:!0}) : {matched:matchedAny, keep:matchedAny};
    };
    this.noSearchResults = !prune(matchEl).matched;
    text = matchEl.innerHTML;
    this.style.paddingTop = this.searchText.topOffset + "px";
  } else {
    this.style.paddingTop = "0";
  }
  return text;
}, stamp:function(model) {
  model = model || {};
  var self = this;
  if (this._parentProps) {
    for (var prop in this._parentProps) {
      void 0 === model[prop] && (model[prop] = self._templatized[self._parentPropPrefix + prop], void 0 === model[prop] && (model[prop] = this._getBinding(prop, self.dataHost)));
    }
  }
  return new this.ctor(model, this);
}, _getBinding:function(prop, dataHost) {
  var data = dataHost && dataHost.__data__;
  if (data) {
    return prop in data ? data[prop] : this._getBinding(prop, dataHost.dataHost);
  }
}, _markText:function(text, re, start, end) {
  for (var match, lastHighlightIndex = 0, maxMatches = 1000; null !== (match = re.exec(text)) && 0 < maxMatches;) {
    maxMatches--;
    for (var wrap = !0, i = match.index; i >= lastHighlightIndex && ">" !== text[i]; i--) {
      if ("<" === text[i]) {
        wrap = !1;
        break;
      }
    }
    if (wrap) {
      var i$jscomp$0 = match.index + match[0].length, str = end;
      text = text.substring(0, i$jscomp$0) + str + text.substr(i$jscomp$0);
      var i$jscomp$1 = match.index, str$jscomp$0 = start;
      text = text.substring(0, i$jscomp$1) + str$jscomp$0 + text.substr(i$jscomp$1);
      re.lastIndex += start.length + end.length;
      lastHighlightIndex = re.lastIndex;
    }
  }
  return {text:text, matched:0 < lastHighlightIndex};
}, notranslateMouseover:function(el) {
  el = Polymer.dom(el);
  var i = Math.random().toString(21).substr(2, 6);
  el.setAttribute("id", "p" + i);
  var toolTip = this.$$("#tooltip");
  toolTip.innerHTML = "";
  toolTip.direction = "bottom";
  toolTip.positioningTarget = "#p" + i;
  var container = document.createElement("span");
  container.style.maxWidth = "400px";
  container.style.display = "inline-block";
  container.style.overflow = "auto";
  for (var j = 0; j < el.children.length; j++) {
    var classList = el.children[j].getAttribute("class");
    classList && -1 < classList.indexOf("google-src-text") && (container.innerHTML += el.children[j].innerHTML);
  }
  toolTip.appendChild(container);
  toolTip.mouseenter();
}, _maybeCreateHighlight:function() {
  this.showCreateHighlight = !1;
  var sel = window.getSelection();
  if (0 != sel.rangeCount) {
    var range = sel.getRangeAt(0), startPath = this.pathForCursor(range.startContainer, range.startOffset), endPath = this.pathForCursor(range.endContainer, range.endOffset);
    "" != startPath && "" != endPath && (this.offsetForPath(this.text, startPath, !0), this.offsetForPath(this.text, endPath, !1), window.userHighlights && startPath != endPath && (this.showCreateHighlight = !0, this.createHighlightOffset = range.getBoundingClientRect().top - this.$.text.getBoundingClientRect().top, this.highlightRange = this.name + ":" + startPath + ":" + endPath));
  }
}, _maybeSnippetDescription:function() {
  if (this.enableTextSelection) {
    var sel = window.getSelection(), text = sel.toString();
    if (!(50 < text.length)) {
      var selRect = sel.getRangeAt(0).getBoundingClientRect(), textRect = this.getBoundingClientRect(), distance = selRect.top - textRect.top;
      this.dispatch({type:"RESULT_SEARCH_DESC", text:text, topOffset:distance});
    }
  }
}, checkTextSelection:function(e) {
  this._maybeCreateHighlight(e);
  this._maybeSnippetDescription(e);
}, nodeWhitelist:["div", "p", "table"], pathForCursor:function(node, offset) {
  for (var n$jscomp$0 = node; n$jscomp$0 != this.$.text;) {
    if (n$jscomp$0 = n$jscomp$0.parentNode, !n$jscomp$0) {
      return "";
    }
  }
  var foundStart = !1, charCount = 0, nodeCount = 0, nodeName = "", firstTextNode = !0, cb = function(n) {
    var name = n.nodeName.toLowerCase();
    if (!foundStart) {
      if ("#text" != name || 0 == this.nonWhitespace(n.textContent)) {
        return;
      }
      foundStart = !0;
    }
    if (nodeName) {
      name == nodeName && (nodeCount += 1);
    } else {
      for (var $jscomp$iter$113 = $jscomp.makeIterator(this.nodeWhitelist), $jscomp$key$w = $jscomp$iter$113.next(); !$jscomp$key$w.done; $jscomp$key$w = $jscomp$iter$113.next()) {
        var w = $jscomp$key$w.value;
        w == name && (nodeCount = 1, nodeName = name);
      }
    }
    if (!nodeName && "#text" == name) {
      var text = n.textContent;
      firstTextNode && (text = text.slice(0, offset), firstTextNode = !1);
      charCount += this.nonWhitespace(text);
    }
  }.bind(this);
  n$jscomp$0 = node;
  for (var $jscomp$loop$187 = {};;) {
    $jscomp$loop$187.$jscomp$loop$prop$fn$188 = function($jscomp$loop$187) {
      return function(n) {
        for (var children = Polymer.dom(n).childNodes.slice(), i = children.length - 1; 0 <= i; i--) {
          $jscomp$loop$187.$jscomp$loop$prop$fn$188(children[i]);
        }
        cb(n);
      };
    }($jscomp$loop$187);
    $jscomp$loop$187.$jscomp$loop$prop$fn$188(n$jscomp$0);
    if (Polymer.dom(n$jscomp$0).previousSibling) {
      n$jscomp$0 = Polymer.dom(n$jscomp$0).previousSibling;
    } else {
      for (var exit = !1;;) {
        n$jscomp$0 = Polymer.dom(n$jscomp$0).parentNode;
        if (null == n$jscomp$0) {
          return "";
        }
        cb(n$jscomp$0);
        if (n$jscomp$0 == this.$.text) {
          exit = !0;
          break;
        }
        if (Polymer.dom(n$jscomp$0).previousSibling) {
          n$jscomp$0 = Polymer.dom(n$jscomp$0).previousSibling;
          break;
        }
      }
      if (exit) {
        break;
      }
    }
    $jscomp$loop$187 = {$jscomp$loop$prop$fn$188:$jscomp$loop$187.$jscomp$loop$prop$fn$188};
  }
  return nodeName + "/" + nodeCount + "/" + charCount;
}, offsetForPath:function(text, path, isStart) {
  var parts = path.split("/");
  if (3 != parts.length) {
    return -1;
  }
  for (var nodeName = parts[0], nodeCount = Number(parts[1]), foundNode = "" == nodeName, charCount = Number(parts[2]), walker = new HTMLWalker(text), next; (next = walker.next()).value;) {
    if (next.isTag) {
      next.value.startsWith("<" + nodeName) && (--nodeCount, 0 == nodeCount && (foundNode = !0));
    } else {
      if (foundNode) {
        if (!isStart && 0 == charCount) {
          return next.start;
        }
        for (var i = 0; i < next.value.length; i++) {
          var c = next.value[i];
          if (" " != c && "\n" != c && "\t" != c && "\r" != c && (--charCount, isStart && -1 == charCount || !isStart && 0 == charCount)) {
            var offset = next.start + i;
            isStart || (offset += 1);
            return offset;
          }
        }
      }
    }
  }
}, nonWhitespace:function(text) {
  for (var whitespace = 0, $jscomp$iter$114 = $jscomp.makeIterator(text), $jscomp$key$c = $jscomp$iter$114.next(); !$jscomp$key$c.done; $jscomp$key$c = $jscomp$iter$114.next()) {
    var c = $jscomp$key$c.value;
    if (" " == c || "\n" == c || "\t" == c || "\r" == c) {
      whitespace += 1;
    }
  }
  return text.length - whitespace;
}, createHighlight:function() {
  this.showCreateHighlight = !1;
  this.dispatch({type:"RESULT_HIGHLIGHT_CREATE", range:this.highlightRange});
}});
var HTMLWalker = function(html) {
  this.html = html;
  this.offset = 0;
};
HTMLWalker.prototype.next = function() {
  if (this.offset == this.html.length) {
    return {start:this.html.length, end:this.html.length, isTag:!1, value:""};
  }
  var start = this.offset;
  if ("<" == this.html[this.offset]) {
    for (var inQuote = ""; this.offset < this.html.length; this.offset++) {
      var c = this.html[this.offset];
      if (inQuote && c == inQuote) {
        inQuote = "";
      } else {
        if (!inQuote && ">" == c) {
          this.offset++;
          break;
        }
        inQuote || '"' != c && "'" != c || (inQuote = c);
      }
    }
    return {start:start, end:this.offset, isTag:!0, value:this.html.slice(start, this.offset)};
  }
  for (; this.offset < this.html.length; this.offset++) {
    var c$175 = this.html[this.offset];
    if ("<" == c$175) {
      break;
    }
  }
  return {start:start, end:this.offset, isTag:!1, value:this.html.slice(start, this.offset)};
};
Polymer({is:"para-num", properties:{num:String}});
var highlightColors = "#eda29b #ce93d8 #9fa8da #81d4fa #80deea #c5e1a5".split(" ");
stateMixin(["state.result.*", "state.result.snippetedQuery.*"], {is:"result-container", properties:{highlightTerms:Array, inFlight:Boolean, showNotice:Boolean}, render:function(state, paths) {
  this.inFlight = void 0 === this.get("state.result.data") && void 0 !== this.get("state.result.id");
  this.isPatent = "patent" == this.get("state.result.data.type");
  this.isScholar = "scholar" == this.get("state.result.data.type");
  this.isWebdoc = "webdoc" == this.get("state.result.data.type");
  if (paths["state.result.snippetedQuery.*"]) {
    var query = this.get("state.result.snippetedQuery"), highlightTerms = [];
    if (query && query.terms && query.terms.values) {
      for (var i = 0; i < query.terms.values.length; i++) {
        for (var group = query.terms.values[i], $jscomp$iter$115 = $jscomp.makeIterator(group.values), $jscomp$key$chip = $jscomp$iter$115.next(); !$jscomp$key$chip.done; $jscomp$key$chip = $jscomp$iter$115.next()) {
          var chip = $jscomp$key$chip.value;
          chip.value && highlightTerms.push({termsRe:this.termToRegexp(chip.value), color:highlightColors[i]});
        }
      }
    }
    this.highlightTerms = highlightTerms;
  }
}, termToRegexp:function(term$jscomp$0) {
  var re = function(x) {
    return "\\b" + x.replace(/[^a-zA-Z0-9]/g, "") + "\\b";
  }, search;
  return search = '"' === term$jscomp$0[0] && '"' === term$jscomp$0[term$jscomp$0.length - 1] ? new RegExp(re(term$jscomp$0.substring(1, term$jscomp$0.length - 1)), "gi") : new RegExp(term$jscomp$0.split(/\s/).filter(function(term) {
    return -1 == "near same with and or not adj ".split(" ").indexOf(term.toLowerCase());
  }).map(re).join("|"), "gi");
}, termsArray:function(queryTerms) {
  return queryTerms.values.map(function(queryTerm, index) {
    for (var phrases = [], $jscomp$iter$116 = $jscomp.makeIterator(queryTerm.values), $jscomp$key$term = $jscomp$iter$116.next(); !$jscomp$key$term.done; $jscomp$key$term = $jscomp$iter$116.next()) {
      var term$jscomp$0 = $jscomp$key$term.value;
      '"' === term$jscomp$0[0] && '"' === term$jscomp$0[term$jscomp$0.length - 1] ? phrases.push(term$jscomp$0.substring(1, term$jscomp$0.length - 1)) : phrases = phrases.concat(term$jscomp$0.split(/\s/).filter(function(term) {
        return -1 == "near same with and or not adj".split(" ").indexOf(term.toLowerCase());
      }));
    }
    return {phrases:phrases, color:highlightColors[index]};
  });
}});
stateMixin(["state.result.data.*", "state.view.result.resultWidth", "state.view.result.resultHeight"], {is:"scholar-result", properties:{highlightTerms:Array, resultWidth:Number, resultHeight:String, text2Column:Boolean}, render:function(state, paths) {
  paths["state.result.data.*"] && (this.data = this.get("state.result.data"));
  this.resultWidth = this.get("state.view.result.resultWidth");
  var height = this.get("state.view.result.resultHeight");
  this.resultHeight = -1 == height ? "auto" : height + "px";
  this.text2Column = 700 < this.resultWidth;
}, rendered:function(state, paths) {
  if (paths["state.result.data.*"]) {
    var scroll = this.get("state.browserUI.historyState.scrollY") || 0;
    window.scrollTo(0, scroll);
  }
}, hideActionBar:function(changeRecord) {
  var data = changeRecord.base;
  return !(data.fullViewURL || data.institutionURL);
}, intDate:function(date) {
  date = void 0 === date ? "" : date;
  return date.replace(/(\d{4})(?:-(\d{2}))?(?:-(\d{2}))?/, function(m, YYYY, MM, DD) {
    MM = void 0 === MM ? "01" : MM;
    DD = void 0 === DD ? "01" : DD;
    return "" + YYYY + MM + DD;
  });
}, join:function(sep, items) {
  for (var $jscomp$restParams = [], $jscomp$restIndex = 1; $jscomp$restIndex < arguments.length; ++$jscomp$restIndex) {
    $jscomp$restParams[$jscomp$restIndex - 1] = arguments[$jscomp$restIndex];
  }
  var items$176 = $jscomp$restParams;
  return items$176.join(sep);
}, makePreloadedData:function(item) {
  var name = item.name;
  name || (name = item.inchi_key);
  return {name:name, inchi_key:item.inchi_key, smiles:item.smiles, image:item.svg_large};
}});
stateMixin(["state.view.result.showLeftBar", "state.view.result.resultWidth", "state.queryResults.query.isSearchable"], {is:"search-result", properties:{showCompactQuery:Boolean, resultWidth:Number}, render:function() {
  this.resultWidth = this.get("state.view.result.resultWidth");
  this.showCompactQuery = !this.get("state.view.result.showLeftBar") && this.get("state.queryResults.query.isSearchable") && 0 < this.get("state.view.result.resultWidth");
}, showLeftBar:function(e) {
  e.preventDefault();
  this.dispatch({type:"SHOW_LEFT_BAR", mode:"result"});
}, backToResults:function(e) {
  e.preventDefault();
  this.dispatch({type:"BACK_TO_RESULTS"});
}});
var commentCache = {};
stateMixin(["state.workspaces.*"], {is:"user-comment", properties:{path:String, ws:String, show:Boolean, dragging:Boolean, text:String, offsetX:Number, offsetY:Number, color:String}, stateReady:function() {
  this.path = this.getAttribute("path");
  this.ws = this.path.split(".").slice(0, 3).join(".");
}, render:function(state, paths) {
  for (var load = void 0 === this.text, $jscomp$iter$117 = $jscomp.makeIterator(paths["state.workspaces.*"]), $jscomp$key$change = $jscomp$iter$117.next(); !$jscomp$key$change.done; $jscomp$key$change = $jscomp$iter$117.next()) {
    var change = $jscomp$key$change.value;
    change[0].path.startsWith(this.path) && (load = !0);
  }
  if (load) {
    var cache = commentCache[this.path] || {show:!1, offsetX:void 0, offsetY:void 0};
    this.show = cache.show;
    this.text = this.get(this.path + ".userText") || "";
    this.offsetX = cache.offsetX;
    this.offsetY = cache.offsetY;
    this.show && this.setPosition();
    this.color = this.get(this.ws + ".color");
    this.$.header.style.backgroundColor = this.color;
  }
}, toggleShow:function(e) {
  e.preventDefault();
  this.show = !this.show;
  var cache = commentCache[this.path];
  cache || (cache = {}, commentCache[this.path] = cache);
  if (cache.show = this.show) {
    var hlTop = this.offsetTop + 25, hlLeft = this.offsetLeft;
    if (void 0 === this.offsetX || 900 < Math.abs(this.offsetY - hlTop) + Math.abs(this.offsetX - hlLeft)) {
      this.offsetY = hlTop, this.offsetX = hlLeft;
    }
    this.setPosition();
  }
}, textChanged:function() {
  this.dispatch({type:"RESULT_HIGHLIGHT_EDIT", path:this.path, value:this.$$("#editInput").value});
}, delete:function() {
  this.dispatch({type:"RESULT_HIGHLIGHT_DELETE", path:this.path});
}, mousedown:function(e) {
  for (var n = e.target; n;) {
    if (n = n.parentElement, n == this.$.content) {
      this._preventDrag = !0;
      return;
    }
  }
  this._preventDrag = !1;
  e.preventDefault();
  this._startX = e.detail.x;
  this._startY = e.detail.y;
  this._offsetX = this.offsetX;
  this._offsetY = this.offsetY;
}, track:function(e) {
  this._preventDrag || (e.preventDefault(), this.offsetX = this._offsetX + (e.detail.x - this._startX), this.offsetY = this._offsetY + (e.detail.y - this._startY), this.setPosition());
}, mouseup:function(e) {
  e.preventDefault();
}, setPosition:function() {
  this.$.comment.style.top = this.offsetY + "px";
  this.$.comment.style.left = this.offsetX + "px";
  var cache = commentCache[this.path];
  cache || (cache = {}, commentCache[this.path] = cache);
  cache.offsetY = this.offsetY;
  cache.offsetX = this.offsetX;
}});
stateMixin(["state.workspaces.*"], {is:"user-highlight", properties:{path:String, color:String, ws:String}, stateReady:function() {
  this.path = this.getAttribute("path");
  this.ws = this.path.split(".").slice(0, 3).join(".");
}, render:function(state, paths) {
  var load = !1;
  this.color || (load = !0);
  for (var $jscomp$iter$118 = $jscomp.makeIterator(paths["state.workspaces.*"]), $jscomp$key$change = $jscomp$iter$118.next(); !$jscomp$key$change.done; $jscomp$key$change = $jscomp$iter$118.next()) {
    var change = $jscomp$key$change.value;
    if ("state.workspaces" == change[0] || change[0].path.startsWith(this.path) || change[0].path == this.ws + ".color") {
      load = !0;
    }
  }
  load && (this.color = this.get(this.ws + ".color"), this.$.highlight.style.backgroundColor = this.color);
}});
stateMixin(["state.result.id", "state.workspaces.*"], {is:"user-comment-link", properties:{showCommentLinkButton:String, commentLink:String}, render:function(state, paths) {
  paths["state.result.id"] && (this.commentLink = "");
  if (paths["state.workspaces.*"] || paths["state.result.id"]) {
    this.showCommentLinkButton = 0 < this.getAllComments().length;
  }
}, getAllComments:function() {
  var wss = this.get("state.workspaces");
  if (!wss) {
    return [];
  }
  for (var comments = [], id = this.get("state.result.id"), $jscomp$iter$120 = $jscomp.makeIterator(wss), $jscomp$key$ws = $jscomp$iter$120.next(); !$jscomp$key$ws.done; $jscomp$key$ws = $jscomp$iter$120.next()) {
    var ws = $jscomp$key$ws.value, hls = ws.highlights[id];
    if (hls && hls.markups) {
      for (var $jscomp$iter$119 = $jscomp.makeIterator(hls.markups), $jscomp$key$mk = $jscomp$iter$119.next(); !$jscomp$key$mk.done; $jscomp$key$mk = $jscomp$iter$119.next()) {
        var mk = $jscomp$key$mk.value;
        comments.push(mk);
      }
    }
  }
  return comments;
}, getLink:function() {
  for (var url = window.location.protocol + "//" + window.location.host + this.get("state.browserUI.url"), comments = this.getAllComments(), encoded = [], $jscomp$iter$121 = $jscomp.makeIterator(comments), $jscomp$key$comment = $jscomp$iter$121.next(); !$jscomp$key$comment.done; $jscomp$key$comment = $jscomp$iter$121.next()) {
    var comment = $jscomp$key$comment.value;
    encoded.push(comment.location + "@" + encodeURIComponent(comment.userText || ""));
  }
  var i = url.indexOf("#");
  -1 != i && (url = url.substr(0, i));
  this.commentLink = url += "#hl=" + btoa(encoded.join(","));
}, selectAllLink:function(e) {
  e.preventDefault();
  this.$$("#link").setSelectionRange(0, this.commentLink.length);
}});
stateMixin(["state.result.data.*", "state.view.result.resultWidth", "state.view.result.resultHeight"], {is:"webdoc-result", properties:{highlightTerms:Array, resultWidth:Number, resultHeight:String, text2Column:Boolean}, render:function(state, paths) {
  paths["state.result.data.*"] && (this.data = this.get("state.result.data"));
  this.resultWidth = this.get("state.view.result.resultWidth");
  var height = this.get("state.view.result.resultHeight");
  this.resultHeight = -1 == height ? "auto" : height + "px";
  this.text2Column = 700 < this.resultWidth;
}, hideActionBar:function(changeRecord) {
  var data = changeRecord.base;
  return !(data.fullViewURL || data.institutionURL);
}, intDate:function(date) {
  date = void 0 === date ? "" : date;
  return date.replace(/(\d{4})(?:-(\d{2}))?(?:-(\d{2}))?/, function(m, YYYY, MM, DD) {
    MM = void 0 === MM ? "01" : MM;
    DD = void 0 === DD ? "01" : DD;
    return "" + YYYY + MM + DD;
  });
}, join:function(sep, items) {
  for (var $jscomp$restParams = [], $jscomp$restIndex = 1; $jscomp$restIndex < arguments.length; ++$jscomp$restIndex) {
    $jscomp$restParams[$jscomp$restIndex - 1] = arguments[$jscomp$restIndex];
  }
  var items$177 = $jscomp$restParams;
  return items$177.join(sep);
}});
HtmlImportsNamespace.IronPages = {};
HtmlImportsNamespace.IronPages.IronPages = {};
Polymer({is:"iron-pages", behaviors:[Polymer.IronResizableBehavior, Polymer.IronSelectableBehavior], properties:{activateEvent:{type:String, value:null}}, observers:["_selectedPageChanged(selected)"], _selectedPageChanged:function() {
  this.async(this.notifyResize);
}});
HtmlImportsNamespace.IronA11yAnnouncer = {};
HtmlImportsNamespace.IronA11yAnnouncer.IronA11yAnnouncer = {};
Polymer.IronA11yAnnouncer = function() {
};
Polymer.IronA11yAnnouncer = Polymer({is:"iron-a11y-announcer", properties:{mode:{type:String, value:"polite"}, _text:{type:String, value:""}}, created:function() {
  Polymer.IronA11yAnnouncer.instance || (Polymer.IronA11yAnnouncer.instance = this);
  document.body.addEventListener("iron-announce", this._onIronAnnounce.bind(this));
}, announce:function(text) {
  this._text = "";
  this.async(function() {
    this._text = text;
  }, 100);
}, _onIronAnnounce:function(event) {
  event.detail && event.detail.text && this.announce(event.detail.text);
}});
Polymer.IronA11yAnnouncer.instance = null;
Polymer.IronA11yAnnouncer.requestAvailability = function() {
  Polymer.IronA11yAnnouncer.instance || (Polymer.IronA11yAnnouncer.instance = document.createElement("iron-a11y-announcer"));
  document.body.appendChild(Polymer.IronA11yAnnouncer.instance);
};
HtmlImportsNamespace.IronInput = {};
HtmlImportsNamespace.IronInput.IronInput = {};
Polymer({is:"iron-input", extends:"input", behaviors:[Polymer.IronValidatableBehavior], properties:{bindValue:{observer:"_bindValueChanged", type:String}, preventInvalidInput:{type:Boolean}, allowedPattern:{type:String, observer:"_allowedPatternChanged"}, useV2Api:{type:Boolean, value:!1}, _previousValidInput:{type:String, value:""}, _patternAlreadyChecked:{type:Boolean, value:!1}, _inputElement:Object}, observers:["_bindValueChangedV2(bindValue, _inputElement)"], listeners:{input:"_onInput", keypress:"_onKeypress"}, 
registered:function() {
  this._canDispatchEventOnDisabled() || (this._origDispatchEvent = this.dispatchEvent, this.dispatchEvent = this._dispatchEventFirefoxIE);
}, created:function() {
  Polymer.IronA11yAnnouncer.requestAvailability();
  if (this.useV2Api || this.hasAttribute("use-v2-api")) {
    this._previousValidInput = "", this._patternAlreadyChecked = !1;
  }
}, attached:function() {
  this.useV2Api && (this._observer = {}, this._observer.__interval = setTimeout(function() {
    this._initSlottedInput();
  }.bind(this), 2), this._observer.flush = function() {
    if (this.inputElement) {
      return !1;
    }
    window.clearTimeout(this._observer.__interval);
    this._initSlottedInput();
    return !0;
  }.bind(this));
}, detached:function() {
  this.useV2Api && this._observer && clearTimeout(this._observer);
}, get inputElement() {
  return this._inputElement;
}, _initSlottedInput:function() {
  this._inputElement = this;
  this.inputElement && this.inputElement.value && (this.bindValue = this.inputElement.value);
  this.fire("iron-input-ready");
}, _canDispatchEventOnDisabled:function() {
  var input = document.createElement("input"), canDispatch = !1;
  input.disabled = !0;
  input.addEventListener("feature-check-dispatch-event", function() {
    canDispatch = !0;
  });
  try {
    input.dispatchEvent(new Event("feature-check-dispatch-event"));
  } catch (e) {
  }
  return canDispatch;
}, _dispatchEventFirefoxIE:function(event) {
  var disabled = this.disabled;
  this.disabled = !1;
  var defaultPrevented = this._origDispatchEvent(event);
  this.disabled = disabled;
  return defaultPrevented;
}, get _patternRegExp() {
  if (this.allowedPattern) {
    var pattern = new RegExp(this.allowedPattern);
  } else {
    if (this.useV2Api) {
      switch(this.inputElement.type) {
        case "number":
          pattern = /[0-9.,e-]/;
      }
    } else {
      switch(this.type) {
        case "number":
          pattern = /[0-9.,e-]/;
      }
    }
  }
  return pattern;
}, ready:function() {
  this.useV2Api || (this.bindValue = this.value);
}, _bindValueChangedV2:function(bindValue, inputElement) {
  this.useV2Api && inputElement && (void 0 === bindValue ? inputElement.value = null : bindValue !== inputElement.value && (this.inputElement.value = bindValue), this.autoValidate && this.validate(), this.fire("bind-value-changed", {value:bindValue}));
}, _bindValueChanged:function() {
  this.useV2Api || (this.value !== this.bindValue && (this.value = this.bindValue || 0 === this.bindValue || !1 === this.bindValue ? this.bindValue : ""), this.fire("bind-value-changed", {value:this.bindValue}));
}, _allowedPatternChanged:function() {
  this.useV2Api || (this.preventInvalidInput = this.allowedPattern ? !0 : !1);
}, _onInput:function() {
  if (this.useV2Api) {
    if (this.allowedPattern && !this._patternAlreadyChecked) {
      var valid = this._checkPatternValidity();
      valid || (this._announceInvalidCharacter("Invalid string of characters not entered."), this.inputElement.value = this._previousValidInput);
    }
    this.bindValue = this._previousValidInput = this.inputElement.value;
  } else {
    this.preventInvalidInput && !this._patternAlreadyChecked && (valid = this._checkPatternValidity(), valid || (this._announceInvalidCharacter("Invalid string of characters not entered."), this.value = this._previousValidInput)), this._previousValidInput = this.bindValue = this.value;
  }
  this._patternAlreadyChecked = !1;
}, _isPrintable:function(event) {
  var anyNonPrintable = 8 == event.keyCode || 9 == event.keyCode || 13 == event.keyCode || 27 == event.keyCode, mozNonPrintable = 19 == event.keyCode || 20 == event.keyCode || 45 == event.keyCode || 46 == event.keyCode || 144 == event.keyCode || 145 == event.keyCode || 32 < event.keyCode && 41 > event.keyCode || 111 < event.keyCode && 124 > event.keyCode;
  return !anyNonPrintable && !(0 == event.charCode && mozNonPrintable);
}, _onKeypress:function(event) {
  if (this.useV2Api) {
    if (!this.allowedPattern && "number" !== this.inputElement.type) {
      return;
    }
    var regexp = this._patternRegExp;
    if (!regexp || event.metaKey || event.ctrlKey || event.altKey) {
      return;
    }
    this._patternAlreadyChecked = !0;
    var thisChar = String.fromCharCode(event.charCode);
  } else {
    if (!this.preventInvalidInput && "number" !== this.type) {
      return;
    }
    regexp = this._patternRegExp;
    if (!regexp || event.metaKey || event.ctrlKey || event.altKey) {
      return;
    }
    this._patternAlreadyChecked = !0;
    thisChar = String.fromCharCode(event.charCode);
  }
  this._isPrintable(event) && !regexp.test(thisChar) && (event.preventDefault(), this._announceInvalidCharacter("Invalid character " + thisChar + " not entered."));
}, _checkPatternValidity:function() {
  var regexp = this._patternRegExp;
  if (!regexp) {
    return !0;
  }
  if (this.useV2Api) {
    for (var i = 0; i < this.inputElement.value.length; i++) {
      if (!regexp.test(this.inputElement.value[i])) {
        return !1;
      }
    }
  } else {
    for (i = 0; i < this.value.length; i++) {
      if (!regexp.test(this.value[i])) {
        return !1;
      }
    }
  }
  return !0;
}, validate:function() {
  if (this.useV2Api) {
    if (!this.inputElement) {
      return this.invalid = !1, !0;
    }
    var valid = this.inputElement.checkValidity();
    valid && (this.required && "" === this.bindValue ? valid = !1 : this.hasValidator() && (valid = Polymer.IronValidatableBehavior.validate.call(this, this.bindValue)));
  } else {
    (valid = this.checkValidity()) && (this.required && "" === this.value ? valid = !1 : this.hasValidator() && (valid = Polymer.IronValidatableBehavior.validate.call(this, this.value)));
  }
  this.invalid = !valid;
  this.fire("iron-input-validate");
  return valid;
}, _announceInvalidCharacter:function(message) {
  this.fire("iron-announce", {text:message});
}});
HtmlImportsNamespace.NeonAnimation.Animations.FadeInAnimation = {};
Polymer({is:"fade-in-animation", behaviors:[Polymer.NeonAnimationBehavior], configure:function(config) {
  var node = config.node;
  return this._effect = new KeyframeEffect(node, [{opacity:"0"}, {opacity:"1"}], this.timingFromConfig(config));
}});
HtmlImportsNamespace.NeonAnimation.Animations.FadeOutAnimation = {};
Polymer({is:"fade-out-animation", behaviors:[Polymer.NeonAnimationBehavior], configure:function(config) {
  var node = config.node;
  return this._effect = new KeyframeEffect(node, [{opacity:"1"}, {opacity:"0"}], this.timingFromConfig(config));
}});
HtmlImportsNamespace.PaperDropdownMenu = {};
HtmlImportsNamespace.PaperDropdownMenu.PaperDropdownMenuIcons = {};
HtmlImportsNamespace.PaperDropdownMenu.PaperDropdownMenuSharedStyles = {};
HtmlImportsNamespace.PaperInput = {};
HtmlImportsNamespace.PaperInput.PaperInputBehavior = {};
Polymer.PaperInputHelper = {};
Polymer.PaperInputHelper.NextLabelID = 1;
Polymer.PaperInputHelper.NextAddonID = 1;
Polymer.PaperInputHelper.NextInputID = 1;
Polymer.PaperInputBehaviorImpl = {properties:{label:{type:String}, value:{notify:!0, type:String}, disabled:{type:Boolean, value:!1}, invalid:{type:Boolean, value:!1, notify:!0}, preventInvalidInput:{type:Boolean}, allowedPattern:{type:String}, type:{type:String}, list:{type:String}, pattern:{type:String}, required:{type:Boolean, value:!1}, errorMessage:{type:String}, charCounter:{type:Boolean, value:!1}, noLabelFloat:{type:Boolean, value:!1}, alwaysFloatLabel:{type:Boolean, value:!1}, autoValidate:{type:Boolean, 
value:!1}, validator:{type:String}, autocomplete:{type:String, value:"off"}, autofocus:{type:Boolean, observer:"_autofocusChanged"}, inputmode:{type:String}, minlength:{type:Number}, maxlength:{type:Number}, min:{type:String}, max:{type:String}, step:{type:String}, name:{type:String}, placeholder:{type:String, value:""}, readonly:{type:Boolean, value:!1}, size:{type:Number}, autocapitalize:{type:String, value:"none"}, autocorrect:{type:String, value:"off"}, autosave:{type:String}, results:{type:Number}, 
accept:{type:String}, multiple:{type:Boolean}, _ariaDescribedBy:{type:String, value:""}, _ariaLabelledBy:{type:String, value:""}}, listeners:{"addon-attached":"_onAddonAttached"}, keyBindings:{"shift+tab:keydown":"_onShiftTabDown"}, hostAttributes:{tabindex:0}, get inputElement() {
  this.__setAutomaticNodeFindingId();
  return this.$.input;
}, get _focusableElement() {
  return this.inputElement;
}, registered:function() {
  this._typesThatHaveText = "date datetime datetime-local month time week file".split(" ");
}, ready:function() {
  this.__setAutomaticNodeFindingId();
}, attached:function() {
  this._updateAriaLabelledBy();
  this.inputElement && -1 !== this._typesThatHaveText.indexOf(this.inputElement.type) && (this.alwaysFloatLabel = !0);
}, _appendStringWithSpace:function(str, more) {
  return str = str ? str + " " + more : more;
}, _onAddonAttached:function(event) {
  var target = event.path ? event.path[0] : event.target;
  if (target.id) {
    this._ariaDescribedBy = this._appendStringWithSpace(this._ariaDescribedBy, target.id);
  } else {
    var id = "paper-input-add-on-" + Polymer.PaperInputHelper.NextAddonID++;
    target.id = id;
    this._ariaDescribedBy = this._appendStringWithSpace(this._ariaDescribedBy, id);
  }
}, validate:function() {
  return this.inputElement.validate();
}, _focusBlurHandler:function(event) {
  Polymer.IronControlState._focusBlurHandler.call(this, event);
  this.focused && !this._shiftTabPressed && this._focusableElement.focus();
}, _onShiftTabDown:function() {
  var oldTabIndex = this.getAttribute("tabindex");
  this._shiftTabPressed = !0;
  this.setAttribute("tabindex", "-1");
  this.async(function() {
    this.setAttribute("tabindex", oldTabIndex);
    this._shiftTabPressed = !1;
  }, 1);
}, _handleAutoValidate:function() {
  this.autoValidate && this.validate();
}, updateValueAndPreserveCaret:function(newValue) {
  try {
    var start = this.inputElement.selectionStart;
    this.value = newValue;
    this.inputElement.selectionStart = start;
    this.inputElement.selectionEnd = start;
  } catch (e) {
    this.value = newValue;
  }
}, _computeAlwaysFloatLabel:function(alwaysFloatLabel, placeholder) {
  return placeholder || alwaysFloatLabel;
}, _updateAriaLabelledBy:function() {
  var label = Polymer.dom(this.root).querySelector("label");
  if (label) {
    if (label.id) {
      var labelledBy = label.id;
    } else {
      labelledBy = "paper-input-label-" + Polymer.PaperInputHelper.NextLabelID++, label.id = labelledBy;
    }
    this._ariaLabelledBy = labelledBy;
  } else {
    this._ariaLabelledBy = "";
  }
}, _onChange:function(event) {
  this.shadowRoot && this.fire(event.type, {sourceEvent:event}, {node:this, bubbles:event.bubbles, cancelable:event.cancelable});
}, _autofocusChanged:function() {
  if (this.autofocus && this._focusableElement) {
    var activeElement = document.activeElement, isActiveElementValid = activeElement instanceof HTMLElement, isSomeElementActive = isActiveElementValid && activeElement !== document.body && activeElement !== document.documentElement;
    isSomeElementActive || this._focusableElement.focus();
  }
}, _generateInputId:function() {
  this._inputId && "" !== this._inputId || (this._inputId = "input-" + Polymer.PaperInputHelper.NextInputID++);
}, __setAutomaticNodeFindingId:function() {
  this.$ || (this.$ = {});
  this.$.input || (this._generateInputId(), this.$.input = this.$$("#" + this._inputId));
}};
Polymer.PaperInputBehavior = [Polymer.IronControlState, Polymer.IronA11yKeysBehavior, Polymer.PaperInputBehaviorImpl];
HtmlImportsNamespace.PaperInput.PaperInputAddonBehavior = {};
Polymer.PaperInputAddonBehavior = {hostAttributes:{"add-on":""}, attached:function() {
  this.fire("addon-attached");
}, update:function() {
}};
HtmlImportsNamespace.PaperInput.PaperInputCharCounter = {};
Polymer({is:"paper-input-char-counter", behaviors:[Polymer.PaperInputAddonBehavior], properties:{_charCounterStr:{type:String, value:"0"}}, update:function(state) {
  if (state.inputElement) {
    state.value = state.value || "";
    var counter = state.value.toString().length.toString();
    state.inputElement.hasAttribute("maxlength") && (counter += "/" + state.inputElement.getAttribute("maxlength"));
    this._charCounterStr = counter;
  }
}});
HtmlImportsNamespace.PaperInput.PaperInputContainer = {};
Polymer({is:"paper-input-container", properties:{noLabelFloat:{type:Boolean, value:!1}, alwaysFloatLabel:{type:Boolean, value:!1}, attrForValue:{type:String, value:"bind-value"}, autoValidate:{type:Boolean, value:!1}, invalid:{observer:"_invalidChanged", type:Boolean, value:!1}, focused:{readOnly:!0, type:Boolean, value:!1, notify:!0}, _addons:{type:Array}, _inputHasContent:{type:Boolean, value:!1}, _inputSelector:{type:String, value:"input,textarea,.paper-input-input"}, _boundOnFocus:{type:Function, 
value:function() {
  return this._onFocus.bind(this);
}}, _boundOnBlur:{type:Function, value:function() {
  return this._onBlur.bind(this);
}}, _boundOnInput:{type:Function, value:function() {
  return this._onInput.bind(this);
}}, _boundValueChanged:{type:Function, value:function() {
  return this._onValueChanged.bind(this);
}}}, listeners:{"addon-attached":"_onAddonAttached", "iron-input-validate":"_onIronInputValidate"}, get _valueChangedEvent() {
  return this.attrForValue + "-changed";
}, get _propertyForValue() {
  return Polymer.CaseMap.dashToCamelCase(this.attrForValue);
}, get _inputElement() {
  return Polymer.dom(this).querySelector(this._inputSelector);
}, get _inputElementValue() {
  return this._inputElement[this._propertyForValue] || this._inputElement.value;
}, ready:function() {
  this._addons || (this._addons = []);
  this.addEventListener("focus", this._boundOnFocus, !0);
  this.addEventListener("blur", this._boundOnBlur, !0);
}, attached:function() {
  this.attrForValue ? this._inputElement.addEventListener(this._valueChangedEvent, this._boundValueChanged) : this.addEventListener("input", this._onInput);
  "" != this._inputElementValue ? this._handleValueAndAutoValidate(this._inputElement) : this._handleValue(this._inputElement);
}, _onAddonAttached:function(event) {
  this._addons || (this._addons = []);
  var target = event.target;
  -1 === this._addons.indexOf(target) && (this._addons.push(target), this.isAttached && this._handleValue(this._inputElement));
}, _onFocus:function() {
  this._setFocused(!0);
}, _onBlur:function() {
  this._setFocused(!1);
  this._handleValueAndAutoValidate(this._inputElement);
}, _onInput:function(event) {
  this._handleValueAndAutoValidate(event.target);
}, _onValueChanged:function(event) {
  this._handleValueAndAutoValidate(event.target);
}, _handleValue:function(inputElement) {
  var value = this._inputElementValue;
  value || 0 === value || "number" === inputElement.type && !inputElement.checkValidity() ? this._inputHasContent = !0 : this._inputHasContent = !1;
  this.updateAddons({inputElement:inputElement, value:value, invalid:this.invalid});
}, _handleValueAndAutoValidate:function(inputElement) {
  if (this.autoValidate) {
    var valid = inputElement.validate ? inputElement.validate(this._inputElementValue) : inputElement.checkValidity();
    this.invalid = !valid;
  }
  this._handleValue(inputElement);
}, _onIronInputValidate:function() {
  this.invalid = this._inputElement.invalid;
}, _invalidChanged:function() {
  this._addons && this.updateAddons({invalid:this.invalid});
}, updateAddons:function(state) {
  for (var addon, index = 0; addon = this._addons[index]; index++) {
    addon.update(state);
  }
}, _computeInputContentClass:function(noLabelFloat, alwaysFloatLabel, focused, invalid, _inputHasContent) {
  var cls = "input-content";
  if (noLabelFloat) {
    _inputHasContent && (cls += " label-is-hidden");
  } else {
    var label = this.querySelector("label");
    alwaysFloatLabel || _inputHasContent ? (cls += " label-is-floating", this.$.labelAndInputContainer.style.position = "static", invalid ? cls += " is-invalid" : focused && (cls += " label-is-highlighted")) : label && (this.$.labelAndInputContainer.style.position = "relative");
  }
  focused && (cls += " focused");
  return cls;
}, _computeUnderlineClass:function(focused, invalid) {
  var cls = "underline";
  invalid ? cls += " is-invalid" : focused && (cls += " is-highlighted");
  return cls;
}, _computeAddOnContentClass:function(focused, invalid) {
  var cls = "add-on-content";
  invalid ? cls += " is-invalid" : focused && (cls += " is-highlighted");
  return cls;
}});
HtmlImportsNamespace.PaperInput.PaperInputError = {};
Polymer({is:"paper-input-error", behaviors:[Polymer.PaperInputAddonBehavior], properties:{invalid:{readOnly:!0, reflectToAttribute:!0, type:Boolean}}, update:function(state) {
  this._setInvalid(state.invalid);
}});
HtmlImportsNamespace.PaperInput.PaperInput = {};
Polymer({is:"paper-input", behaviors:[Polymer.IronFormElementBehavior, Polymer.PaperInputBehavior]});
HtmlImportsNamespace.PaperMenuButton = {};
HtmlImportsNamespace.PaperMenuButton.PaperMenuButtonAnimations = {};
Polymer({is:"paper-menu-grow-height-animation", behaviors:[Polymer.NeonAnimationBehavior], configure:function(config) {
  var node = config.node, rect = node.getBoundingClientRect(), height = rect.height;
  return this._effect = new KeyframeEffect(node, [{height:height / 2 + "px"}, {height:height + "px"}], this.timingFromConfig(config));
}});
Polymer({is:"paper-menu-grow-width-animation", behaviors:[Polymer.NeonAnimationBehavior], configure:function(config) {
  var node = config.node, rect = node.getBoundingClientRect(), width = rect.width;
  return this._effect = new KeyframeEffect(node, [{width:width / 2 + "px"}, {width:width + "px"}], this.timingFromConfig(config));
}});
Polymer({is:"paper-menu-shrink-width-animation", behaviors:[Polymer.NeonAnimationBehavior], configure:function(config) {
  var node = config.node, rect = node.getBoundingClientRect(), width = rect.width;
  return this._effect = new KeyframeEffect(node, [{width:width + "px"}, {width:width - width / 20 + "px"}], this.timingFromConfig(config));
}});
Polymer({is:"paper-menu-shrink-height-animation", behaviors:[Polymer.NeonAnimationBehavior], configure:function(config) {
  var node = config.node, rect = node.getBoundingClientRect(), height = rect.height;
  this.setPrefixedProperty(node, "transformOrigin", "0 0");
  return this._effect = new KeyframeEffect(node, [{height:height + "px", transform:"translateY(0)"}, {height:height / 2 + "px", transform:"translateY(-20px)"}], this.timingFromConfig(config));
}});
HtmlImportsNamespace.PaperMenuButton.PaperMenuButton = {};
(function() {
  var config = {ANIMATION_CUBIC_BEZIER:"cubic-bezier(.3,.95,.5,1)", MAX_ANIMATION_TIME_MS:400}, PaperMenuButton = function() {
  };
  PaperMenuButton.prototype.registered = function() {
  };
  PaperMenuButton.prototype.addOwnKeyBinding = function() {
  };
  PaperMenuButton.prototype.removeOwnKeyBindings = function() {
  };
  PaperMenuButton.prototype.keyboardEventMatchesKeys = function() {
  };
  PaperMenuButton.prototype._collectKeyBindings = function() {
  };
  PaperMenuButton.prototype._prepKeyBindings = function() {
  };
  PaperMenuButton.prototype._addKeyBinding = function() {
  };
  PaperMenuButton.prototype._resetKeyEventListeners = function() {
  };
  PaperMenuButton.prototype._listenKeyEventListeners = function() {
  };
  PaperMenuButton.prototype._unlistenKeyEventListeners = function() {
  };
  PaperMenuButton.prototype._onKeyBindingEvent = function() {
  };
  PaperMenuButton.prototype._triggerKeyHandler = function() {
  };
  PaperMenuButton.prototype._focusBlurHandler = function(event) {
    if (Polymer.Element) {
      this._setFocused("focus" === event.type);
    } else {
      if (event.target === this) {
        this._setFocused("focus" === event.type);
      } else {
        if (this.__handleEventRetargeting) {
          var target = Polymer.dom(event).localTarget;
          this.isLightDescendant(target) || this.fire(event.type, {sourceEvent:event}, {node:this, bubbles:event.bubbles, cancelable:event.cancelable});
        }
      }
    }
  };
  PaperMenuButton.prototype._changedControlState = function() {
    this._controlStateChanged && this._controlStateChanged();
  };
  PaperMenuButton.prototype._setFocused = function() {
  };
  PaperMenuButton = Polymer({is:"paper-menu-button", behaviors:[Polymer.IronA11yKeysBehavior, Polymer.IronControlState], properties:{opened:{type:Boolean, value:!1, notify:!0, observer:"_openedChanged"}, horizontalAlign:{type:String, value:"left", reflectToAttribute:!0}, verticalAlign:{type:String, value:"top", reflectToAttribute:!0}, dynamicAlign:{type:Boolean}, horizontalOffset:{type:Number, value:0, notify:!0}, verticalOffset:{type:Number, value:0, notify:!0}, noOverlap:{type:Boolean}, noAnimations:{type:Boolean, 
  value:!1}, ignoreSelect:{type:Boolean, value:!1}, closeOnActivate:{type:Boolean, value:!1}, openAnimationConfig:{type:Object, value:function() {
    return [{name:"fade-in-animation", timing:{delay:100, duration:200}}, {name:"paper-menu-grow-width-animation", timing:{delay:100, duration:150, easing:config.ANIMATION_CUBIC_BEZIER}}, {name:"paper-menu-grow-height-animation", timing:{delay:100, duration:275, easing:config.ANIMATION_CUBIC_BEZIER}}];
  }}, closeAnimationConfig:{type:Object, value:function() {
    return [{name:"fade-out-animation", timing:{duration:150}}, {name:"paper-menu-shrink-width-animation", timing:{delay:100, duration:50, easing:config.ANIMATION_CUBIC_BEZIER}}, {name:"paper-menu-shrink-height-animation", timing:{duration:200, easing:"ease-in"}}];
  }}, allowOutsideScroll:{type:Boolean, value:!1}, restoreFocusOnClose:{type:Boolean, value:!0}, _dropdownContent:{type:Object}}, hostAttributes:{role:"group", "aria-haspopup":"true"}, listeners:{"iron-activate":"_onIronActivate", "iron-select":"_onIronSelect"}, get contentElement() {
    return Polymer.dom(this.$.content).getDistributedNodes()[0];
  }, toggle:function() {
    this.opened ? this.close() : this.open();
  }, open:function() {
    this.disabled || this.$.dropdown.open();
  }, close:function() {
    this.$.dropdown.close();
  }, _onIronSelect:function() {
    this.ignoreSelect || this.close();
  }, _onIronActivate:function() {
    this.closeOnActivate && this.close();
  }, _openedChanged:function(opened, oldOpened) {
    opened ? (this._dropdownContent = this.contentElement, this.fire("paper-dropdown-open")) : null != oldOpened && this.fire("paper-dropdown-close");
  }, _disabledChanged:function(disabled) {
    Polymer.IronControlState._disabledChanged.apply(this, arguments);
    disabled && this.opened && this.close();
  }, __onIronOverlayCanceled:function(event) {
    var uiEvent = event.detail;
    Polymer.dom(uiEvent);
    var trigger = this.$.trigger, path = Polymer.dom(uiEvent).path;
    -1 < path.indexOf(trigger) && event.preventDefault();
  }});
  Object.keys(config).forEach(function(key) {
    PaperMenuButton[key] = config[key];
  });
  Polymer.PaperMenuButton = PaperMenuButton;
})();
HtmlImportsNamespace.PaperDropdownMenu.PaperDropdownMenu = {};
Polymer({is:"paper-dropdown-menu", behaviors:[Polymer.IronButtonState, Polymer.IronControlState, Polymer.IronFormElementBehavior, Polymer.IronValidatableBehavior], properties:{selectedItemLabel:{type:String, notify:!0, readOnly:!0}, selectedItem:{type:Object, notify:!0, readOnly:!0}, value:{type:String, notify:!0, readOnly:!0}, label:{type:String}, placeholder:{type:String}, errorMessage:{type:String}, opened:{type:Boolean, notify:!0, value:!1, observer:"_openedChanged"}, allowOutsideScroll:{type:Boolean, 
value:!1}, noLabelFloat:{type:Boolean, value:!1, reflectToAttribute:!0}, alwaysFloatLabel:{type:Boolean, value:!1}, noAnimations:{type:Boolean, value:!1}, horizontalAlign:{type:String, value:"right"}, verticalAlign:{type:String, value:"top"}, dynamicAlign:{type:Boolean}, restoreFocusOnClose:{type:Boolean, value:!0}}, listeners:{tap:"_onTap"}, keyBindings:{"up down":"open", esc:"close"}, hostAttributes:{role:"combobox", "aria-autocomplete":"none", "aria-haspopup":"true"}, observers:["_selectedItemChanged(selectedItem)"], 
attached:function() {
  var contentElement = this.contentElement;
  contentElement && contentElement.selectedItem && this._setSelectedItem(contentElement.selectedItem);
}, get contentElement() {
  return Polymer.dom(this.$.content).getDistributedNodes()[0];
}, open:function() {
  this.$.menuButton.open();
}, close:function() {
  this.$.menuButton.close();
}, _onIronSelect:function(event) {
  this._setSelectedItem(event.detail.item);
}, _onIronDeselect:function() {
  this._setSelectedItem(null);
}, _onTap:function(event) {
  Polymer.Gestures.findOriginalTarget(event) === this && this.open();
}, _selectedItemChanged:function(selectedItem) {
  var value = selectedItem ? selectedItem.label || selectedItem.getAttribute("label") || selectedItem.textContent.trim() : "";
  this._setValue(value);
  this._setSelectedItemLabel(value);
}, _computeMenuVerticalOffset:function(noLabelFloat) {
  return noLabelFloat ? -4 : 8;
}, _getValidity:function() {
  return this.disabled || !this.required || this.required && !!this.value;
}, _openedChanged:function() {
  var openState = this.opened ? "true" : "false", e = this.contentElement;
  e && e.setAttribute("aria-expanded", openState);
}});
HtmlImportsNamespace.PaperDropdownMenu.PaperDropdownMenuLight = {};
Polymer({is:"paper-dropdown-menu-light", behaviors:[Polymer.IronButtonState, Polymer.IronControlState, Polymer.PaperRippleBehavior, Polymer.IronFormElementBehavior, Polymer.IronValidatableBehavior], properties:{selectedItemLabel:{type:String, notify:!0, readOnly:!0}, selectedItem:{type:Object, notify:!0, readOnly:!0}, value:{type:String, notify:!0, readOnly:!0, observer:"_valueChanged"}, label:{type:String}, placeholder:{type:String}, opened:{type:Boolean, notify:!0, value:!1, observer:"_openedChanged"}, 
allowOutsideScroll:{type:Boolean, value:!1}, noLabelFloat:{type:Boolean, value:!1, reflectToAttribute:!0}, alwaysFloatLabel:{type:Boolean, value:!1}, noAnimations:{type:Boolean, value:!1}, horizontalAlign:{type:String, value:"right"}, verticalAlign:{type:String, value:"top"}, hasContent:{type:Boolean, readOnly:!0}}, listeners:{tap:"_onTap"}, keyBindings:{"up down":"open", esc:"close"}, hostAttributes:{tabindex:0, role:"combobox", "aria-autocomplete":"none", "aria-haspopup":"true"}, observers:["_selectedItemChanged(selectedItem)"], 
attached:function() {
  var contentElement = this.contentElement;
  contentElement && contentElement.selectedItem && this._setSelectedItem(contentElement.selectedItem);
}, get contentElement() {
  return Polymer.dom(this.$.content).getDistributedNodes()[0];
}, open:function() {
  this.$.menuButton.open();
}, close:function() {
  this.$.menuButton.close();
}, _onIronSelect:function(event) {
  this._setSelectedItem(event.detail.item);
}, _onIronDeselect:function() {
  this._setSelectedItem(null);
}, _onTap:function(event) {
  Polymer.Gestures.findOriginalTarget(event) === this && this.open();
}, _selectedItemChanged:function(selectedItem) {
  var value = selectedItem ? selectedItem.label || selectedItem.getAttribute("label") || selectedItem.textContent.trim() : "";
  this._setValue(value);
  this._setSelectedItemLabel(value);
}, _computeMenuVerticalOffset:function(noLabelFloat) {
  return noLabelFloat ? -4 : 8;
}, _getValidity:function() {
  return this.disabled || !this.required || this.required && !!this.value;
}, _openedChanged:function() {
  var openState = this.opened ? "true" : "false", e = this.contentElement;
  e && e.setAttribute("aria-expanded", openState);
}, _computeLabelClass:function(noLabelFloat, alwaysFloatLabel, hasContent) {
  var cls = "";
  if (!0 === noLabelFloat) {
    return hasContent ? "label-is-hidden" : "";
  }
  if (hasContent || !0 === alwaysFloatLabel) {
    cls += " label-is-floating";
  }
  return cls;
}, _valueChanged:function() {
  this.$.input && this.$.input.textContent !== this.value && (this.$.input.textContent = this.value);
  this._setHasContent(!!this.value);
}});
HtmlImportsNamespace.PaperTabs = {};
HtmlImportsNamespace.PaperTabs.PaperTab = {};
Polymer({is:"paper-tab", behaviors:[Polymer.IronControlState, Polymer.IronButtonState, Polymer.PaperRippleBehavior], properties:{link:{type:Boolean, value:!1, reflectToAttribute:!0}}, hostAttributes:{role:"tab"}, listeners:{down:"_updateNoink", tap:"_onTap"}, attached:function() {
  this._updateNoink();
}, get _parentNoink() {
  var parent = Polymer.dom(this).parentNode;
  return !!parent && !!parent.noink;
}, _updateNoink:function() {
  this.noink = !!this.noink || !!this._parentNoink;
}, _onTap:function(event) {
  if (this.link) {
    var anchor = this.queryEffectiveChildren("a");
    anchor && event.target !== anchor && anchor.click();
  }
}});
HtmlImportsNamespace.IronMenuBehavior.IronMenubarBehavior = {};
Polymer.IronMenubarBehaviorImpl = {hostAttributes:{role:"menubar"}, keyBindings:{left:"_onLeftKey", right:"_onRightKey"}, _onUpKey:function(event) {
  this.focusedItem.click();
  event.detail.keyboardEvent.preventDefault();
}, _onDownKey:function(event) {
  this.focusedItem.click();
  event.detail.keyboardEvent.preventDefault();
}, get _isRTL() {
  return "rtl" === window.getComputedStyle(this).direction;
}, _onLeftKey:function(event) {
  this._isRTL ? this._focusNext() : this._focusPrevious();
  event.detail.keyboardEvent.preventDefault();
}, _onRightKey:function(event) {
  this._isRTL ? this._focusPrevious() : this._focusNext();
  event.detail.keyboardEvent.preventDefault();
}, _onKeydown:function(event) {
  this.keyboardEventMatchesKeys(event, "up down left right esc") || this._focusWithKeyboardEvent(event);
}};
Polymer.IronMenubarBehavior = [Polymer.IronMenuBehavior, Polymer.IronMenubarBehaviorImpl];
HtmlImportsNamespace.PaperTabs.PaperTabsIcons = {};
HtmlImportsNamespace.PaperTabs.PaperTabs = {};
Polymer({is:"paper-tabs", behaviors:[Polymer.IronResizableBehavior, Polymer.IronMenubarBehavior], properties:{noink:{type:Boolean, value:!1, observer:"_noinkChanged"}, noBar:{type:Boolean, value:!1}, noSlide:{type:Boolean, value:!1}, scrollable:{type:Boolean, value:!1}, fitContainer:{type:Boolean, value:!1}, disableDrag:{type:Boolean, value:!1}, hideScrollButtons:{type:Boolean, value:!1}, alignBottom:{type:Boolean, value:!1}, selectable:{type:String, value:"paper-tab"}, autoselect:{type:Boolean, 
value:!1}, autoselectDelay:{type:Number, value:0}, _step:{type:Number, value:10}, _holdDelay:{type:Number, value:1}, _leftHidden:{type:Boolean, value:!1}, _rightHidden:{type:Boolean, value:!1}, _previousTab:{type:Object}}, hostAttributes:{role:"tablist"}, listeners:{"iron-resize":"_onTabSizingChanged", "iron-items-changed":"_onTabSizingChanged", "iron-select":"_onIronSelect", "iron-deselect":"_onIronDeselect"}, keyBindings:{"left:keyup right:keyup":"_onArrowKeyup"}, created:function() {
  this._holdJob = null;
  this._pendingActivationTimeout = this._pendingActivationItem = void 0;
  this._bindDelayedActivationHandler = this._delayedActivationHandler.bind(this);
  this.addEventListener("blur", this._onBlurCapture.bind(this), !0);
}, ready:function() {
  this.setScrollDirection("y", this.$.tabsContainer);
}, detached:function() {
  this._cancelPendingActivation();
}, _noinkChanged:function(noink) {
  var childTabs = Polymer.dom(this).querySelectorAll("paper-tab");
  childTabs.forEach(noink ? this._setNoinkAttribute : this._removeNoinkAttribute);
}, _setNoinkAttribute:function(element) {
  element.setAttribute("noink", "");
}, _removeNoinkAttribute:function(element) {
  element.removeAttribute("noink");
}, _computeScrollButtonClass:function(hideThisButton, scrollable, hideScrollButtons) {
  return !scrollable || hideScrollButtons ? "hidden" : hideThisButton ? "not-visible" : "";
}, _computeTabsContentClass:function(scrollable, fitContainer) {
  return scrollable ? "scrollable" + (fitContainer ? " fit-container" : "") : " fit-container";
}, _computeSelectionBarClass:function(noBar, alignBottom) {
  return noBar ? "hidden" : alignBottom ? "align-bottom" : "";
}, _onTabSizingChanged:function() {
  this.debounce("_onTabSizingChanged", function() {
    this._scroll();
    this._tabChanged(this.selectedItem);
  }, 10);
}, _onIronSelect:function(event) {
  this._tabChanged(event.detail.item, this._previousTab);
  this._previousTab = event.detail.item;
  this.cancelDebouncer("tab-changed");
}, _onIronDeselect:function() {
  this.debounce("tab-changed", function() {
    this._tabChanged(null, this._previousTab);
    this._previousTab = null;
  }, 1);
}, _activateHandler:function() {
  this._cancelPendingActivation();
  Polymer.IronMenuBehaviorImpl._activateHandler.apply(this, arguments);
}, _scheduleActivation:function(item, delay) {
  this._pendingActivationItem = item;
  this._pendingActivationTimeout = this.async(this._bindDelayedActivationHandler, delay);
}, _delayedActivationHandler:function() {
  var item = this._pendingActivationItem;
  this._pendingActivationTimeout = this._pendingActivationItem = void 0;
  item.fire(this.activateEvent, null, {bubbles:!0, cancelable:!0});
}, _cancelPendingActivation:function() {
  void 0 !== this._pendingActivationTimeout && (this.cancelAsync(this._pendingActivationTimeout), this._pendingActivationTimeout = this._pendingActivationItem = void 0);
}, _onArrowKeyup:function() {
  this.autoselect && this._scheduleActivation(this.focusedItem, this.autoselectDelay);
}, _onBlurCapture:function(event) {
  event.target === this._pendingActivationItem && this._cancelPendingActivation();
}, get _tabContainerScrollSize() {
  return Math.max(0, this.$.tabsContainer.scrollWidth - this.$.tabsContainer.offsetWidth);
}, _scroll:function(e, detail) {
  if (this.scrollable) {
    var ddx = detail && -detail.ddx || 0;
    this._affectScroll(ddx);
  }
}, _down:function() {
  this.async(function() {
    this._defaultFocusAsync && (this.cancelAsync(this._defaultFocusAsync), this._defaultFocusAsync = null);
  }, 1);
}, _affectScroll:function(dx) {
  this.$.tabsContainer.scrollLeft += dx;
  var scrollLeft = this.$.tabsContainer.scrollLeft;
  this._leftHidden = 0 === scrollLeft;
  this._rightHidden = scrollLeft === this._tabContainerScrollSize;
}, _onLeftScrollButtonDown:function() {
  this._scrollToLeft();
  this._holdJob = setInterval(this._scrollToLeft.bind(this), this._holdDelay);
}, _onRightScrollButtonDown:function() {
  this._scrollToRight();
  this._holdJob = setInterval(this._scrollToRight.bind(this), this._holdDelay);
}, _onScrollButtonUp:function() {
  clearInterval(this._holdJob);
  this._holdJob = null;
}, _scrollToLeft:function() {
  this._affectScroll(-this._step);
}, _scrollToRight:function() {
  this._affectScroll(this._step);
}, _tabChanged:function(tab, old) {
  if (tab) {
    var r = this.$.tabsContent.getBoundingClientRect(), w = r.width, tabRect = tab.getBoundingClientRect(), tabOffsetLeft = tabRect.left - r.left;
    this._pos = {width:this._calcPercent(tabRect.width, w), left:this._calcPercent(tabOffsetLeft, w)};
    if (this.noSlide || null == old) {
      this.$.selectionBar.classList.remove("expand"), this.$.selectionBar.classList.remove("contract"), this._positionBar(this._pos.width, this._pos.left);
    } else {
      var oldRect = old.getBoundingClientRect(), oldIndex = this.items.indexOf(old), index = this.items.indexOf(tab);
      this.$.selectionBar.classList.add("expand");
      var moveRight = oldIndex < index, isRTL = this._isRTL;
      isRTL && (moveRight = !moveRight);
      moveRight ? this._positionBar(this._calcPercent(tabRect.left + tabRect.width - oldRect.left, w) - 5, this._left) : this._positionBar(this._calcPercent(oldRect.left + oldRect.width - tabRect.left, w) - 5, this._calcPercent(tabOffsetLeft, w) + 5);
      this.scrollable && this._scrollToSelectedIfNeeded(tabRect.width, tabOffsetLeft);
    }
  } else {
    this.$.selectionBar.classList.remove("expand"), this.$.selectionBar.classList.remove("contract"), this._positionBar(0, 0);
  }
}, _scrollToSelectedIfNeeded:function(tabWidth, tabOffsetLeft) {
  var l = tabOffsetLeft - this.$.tabsContainer.scrollLeft;
  0 > l ? this.$.tabsContainer.scrollLeft += l : (l += tabWidth - this.$.tabsContainer.offsetWidth, 0 < l && (this.$.tabsContainer.scrollLeft += l));
}, _calcPercent:function(w, w0) {
  return 100 * w / w0;
}, _positionBar:function(width, left) {
  width = width || 0;
  left = left || 0;
  this._width = width;
  this._left = left;
  this.transform("translateX(" + left + "%) scaleX(" + width / 100 + ")", this.$.selectionBar);
}, _onBarTransitionEnd:function() {
  var cl = this.$.selectionBar.classList;
  cl.contains("expand") ? (cl.remove("expand"), cl.add("contract"), this._positionBar(this._pos.width, this._pos.left)) : cl.contains("contract") && cl.remove("contract");
}});
stateMixin([], {is:"debug-info", properties:{results:Object, debugTab:{type:Number, value:0}}});
stateMixin(["state.resultList.*"], {is:"search-paging", render:function() {
  this.pageNumber = (this.get("state.resultList.page.results.num_page") || 0) + 1;
  this.numPages = this.get("state.queryResults.maxPage") || 1;
  this.firstPage = 1 == this.pageNumber;
  this.lastPage = this.pageNumber == this.numPages;
  this.firstPageOfMultiple = 1 == this.pageNumber && 1 < this.numPages;
  this.plus4 = 1 == this.pageNumber && this.pageNumber + 4 <= this.numPages;
  this.plus5 = 1 != this.pageNumber && this.pageNumber + 5 <= this.numPages;
}});
stateMixin(["state.resultList.figureView", "state.resultList.page.results.*"], {is:"search-result-item", properties:{result:Object, metadataLeftSide:{type:Boolean, value:!1}, showFigureView:{type:Boolean, value:!1}, showFigureViewButton:{type:Boolean, value:!1}, fullFigureSrc:String, fullFigureBoundingBox:Object, fullFigureXPercent:Number, fullFigureYPercent:Number, fullFigureZoom:{type:Number, value:1.0}, dateLine:{type:String, computed:"getDateLine(result)"}, singleDateLine:{type:String, computed:"getSingleDateLine(result)"}, 
singleDateLineType:{type:String, computed:"getSingleDateLineType(result)"}}, render:function() {
  this.showFigureView = this.get("state.resultList.figureView") || !1;
  var results = this.get("state.resultList.page.results"), left = !1;
  if (results && results.cluster) {
    for (var $jscomp$iter$123 = $jscomp.makeIterator(results.cluster), $jscomp$key$cluster = $jscomp$iter$123.next(); !$jscomp$key$cluster.done; $jscomp$key$cluster = $jscomp$iter$123.next()) {
      var cluster = $jscomp$key$cluster.value;
      if (cluster.result) {
        for (var $jscomp$iter$122 = $jscomp.makeIterator(cluster.result), $jscomp$key$result = $jscomp$iter$122.next(); !$jscomp$key$result.done; $jscomp$key$result = $jscomp$iter$122.next()) {
          var result = $jscomp$key$result.value;
          result.entity_matches && result.entity_matches.match && 1 < result.entity_matches.match.length && (left = !0);
        }
      }
    }
  }
  this.metadataLeftSide = left;
}, lowercase:function(s) {
  return s.toLowerCase();
}, getDateLine:function(result) {
  if (!result) {
    return "";
  }
  var parts = [];
  if (result.scholar) {
    var pd = result.scholar.publication_date;
    pd && parts.push("Published " + pd);
  } else {
    if (result.webdoc) {
      var pd$178 = result.webdoc.publication_date;
      pd$178 && parts.push("Published " + pd$178);
    } else {
      if (result.patent) {
        var $jscomp$destructuring$var11 = result.patent, rd = $jscomp$destructuring$var11.priority_date, fd = $jscomp$destructuring$var11.filing_date, gd = $jscomp$destructuring$var11.grant_date, pd$179 = $jscomp$destructuring$var11.publication_date;
        rd && parts.push("Priority " + rd);
        fd && parts.push("Filed " + fd);
        gd && parts.push("Granted " + gd);
        pd$179 && parts.push("Published " + pd$179);
      }
    }
  }
  return parts.join(" \u2022 ");
}, getSingleDateLine:function(result) {
  if (result.scholar) {
    var pd = result.scholar.publication_date;
    if (pd) {
      return pd;
    }
  } else {
    if (result.patent) {
      var $jscomp$destructuring$var12 = result.patent, fd = $jscomp$destructuring$var12.filing_date, gd = $jscomp$destructuring$var12.grant_date, pd$180 = $jscomp$destructuring$var12.publication_date;
      if (fd) {
        return fd;
      }
      if (gd) {
        return gd;
      }
      if (pd$180) {
        return pd$180;
      }
    }
  }
  return "";
}, getSingleDateLineType:function(result) {
  if (result.scholar) {
    var pd = result.scholar.publication_date;
    if (pd) {
      return "Published";
    }
  } else {
    if (result.patent) {
      var $jscomp$destructuring$var13 = result.patent, fd = $jscomp$destructuring$var13.filing_date, gd = $jscomp$destructuring$var13.grant_date, pd$181 = $jscomp$destructuring$var13.publication_date;
      if (fd) {
        return "Filed";
      }
      if (gd) {
        return "Granted";
      }
      if (pd$181) {
        return "Published";
      }
    }
  }
  return "";
}, isSimilarDocument:function(result) {
  return !(!result || !result.is_similar_document);
}, isPatent:function(result) {
  return !(!result || !result.patent);
}, isScholar:function(result) {
  return !(!result || !result.scholar);
}, isWebdoc:function(result) {
  return !(!result || !result.webdoc);
}, patentUrl:function(result) {
  if (!result || !result.patent) {
    return "";
  }
  var num = result.patent.publication_number, lang = result.patent.language;
  return "patent/" + num + "/" + lang;
}, scholarUrl:function(result) {
  return result && result.scholar ? "scholar/" + result.scholar.id : "";
}, webdocUrl:function(result) {
  return result && result.webdoc ? "web/" + result.webdoc.id : "";
}, prefixSrc:function(src) {
  return src ? "https://patentimages.storage.googleapis.com/" + src : "";
}, priorityIsFiling:function(result) {
  return result && result.patent ? !!result.patent.priority_date && result.patent.priority_date == result.patent.filing_date : !1;
}, onBrokenImage:function(e) {
  e.target.style.display = "none";
}, toggleFigureViewButton:function(e) {
  e.preventDefault();
  this.showFigureViewButton = !this.showFigureViewButton;
}, toggleFigureView:function() {
  this.dispatch({type:"RESULTLIST_FIGURE_VIEW", set:!this.showFigureView});
}, figureMousemove:function(e) {
  this.fullFigureXPercent = Math.max(e.offsetX, 0) / e.target.clientWidth;
  this.fullFigureYPercent = Math.max(e.offsetY, 0) / e.target.clientHeight;
}, figureMouseenter:function(e) {
  var figureRatio = e.target.offsetWidth / e.target.offsetHeight, score = function(w, h) {
    var scoreRatio = Math.min(1 / Math.abs(w / h - figureRatio), 0.4);
    return scoreRatio * Math.log(w) * Math.log(h);
  }, scrollTop = document.documentElement.scrollTop, scrollLeft = document.documentElement.scrollLeft, screenWidth = document.documentElement.clientWidth - 10, screenHeight = document.documentElement.clientHeight - 10, thumbOffsets = e.target.getBoundingClientRect(), thumbTop = thumbOffsets.top - 10, thumbBottom = thumbOffsets.bottom + 20, thumbLeft = thumbOffsets.left - 10, thumbRight = thumbOffsets.right + 20, largestScore = -99999999, largestBox = {}, aboveWidth = screenWidth - 10, aboveHeight = 
  thumbTop - 10;
  if (0 < aboveHeight) {
    var aboveScore = score(aboveWidth, aboveHeight);
    aboveScore > largestScore && (largestScore = aboveScore, largestBox = {x:10, y:10, width:aboveWidth, height:aboveHeight});
  }
  var belowWidth = screenWidth - 10, belowHeight = screenHeight - thumbBottom;
  if (0 < belowHeight) {
    var belowScore = score(belowWidth, belowHeight);
    belowScore > largestScore && (largestScore = belowScore, largestBox = {x:10, y:thumbBottom, width:belowWidth, height:belowHeight});
  }
  var leftWidth = thumbLeft - 10, leftHeight = screenHeight - 10;
  if (0 < leftWidth) {
    var leftScore = score(leftWidth, leftHeight);
    leftScore > largestScore && (largestScore = leftScore, largestBox = {x:10, y:10, width:leftWidth, height:leftHeight});
  }
  var rightWidth = screenWidth - thumbRight, rightHeight = screenHeight - 10;
  if (0 < rightWidth) {
    var rightScore = score(rightWidth, rightHeight);
    rightScore > largestScore && (largestScore = rightScore, largestBox = {x:thumbRight, y:10, width:rightWidth, height:rightHeight});
  }
  largestBox.x += scrollLeft;
  largestBox.y += scrollTop;
  this.fullFigureBoundingBox = largestBox;
  this.fullFigureSrc = e.model.item.full;
}, figureMouseleave:function(e) {
  this.fullFigureSrc == e.model.item.full && (this.fullFigureSrc = "");
}, figureScroll:function(e) {
  e.preventDefault();
  this.fullFigureZoom += -e.deltaY / 10 * 0.05;
  0.3 > this.fullFigureZoom && (this.fullFigureZoom = 0.3);
  4.0 < this.fullFigureZoom && (this.fullFigureZoom = 4.0);
}});
stateMixin([], {is:"search-result-image", properties:{img:String, boundingBox:{type:Object, observer:"updatePosition"}, imgWidth:{type:Number, observer:"updatePosition"}, imgHeight:{type:Number, observer:"updatePosition"}, scaledWidth:{type:Number, observer:"updatePosition"}, scaledHeight:{type:Number, observer:"updatePosition"}, xPercent:{type:Number, observer:"updatePosition"}, yPercent:{type:Number, observer:"updatePosition"}, zoom:{type:Number, observer:"updatePosition"}}, fullImg:function(img) {
  return img ? "https://patentimages.storage.googleapis.com/" + img : "";
}, onLoad:function(e) {
  e.target.src.endsWith(this.img) && (this.imgWidth = e.target.naturalWidth, this.imgHeight = e.target.naturalHeight, this.updatePosition());
}, updatePosition:function() {
  if (this.boundingBox && this.boundingBox.x) {
    this.scaledHeight = this.boundingBox.height * this.zoom;
    var $img = this.$$("#image");
    if ($img) {
      $img.style.height = this.scaledHeight + "px";
      $img.style.width = "auto";
      this.scaledWidth = $img.offsetWidth;
      this.$.cutoff.style.top = this.boundingBox.y + "px";
      this.$.cutoff.style.left = this.boundingBox.x + "px";
      this.$.cutoff.style.height = this.boundingBox.height + "px";
      this.$.cutoff.style.width = this.boundingBox.width + "px";
      var top = 0;
      0 < this.scaledHeight && (top = -1 * this.yPercent * this.scaledHeight + this.boundingBox.height / 2);
      var left = 0;
      0 < this.scaledWidth && (left = -1 * this.xPercent * this.scaledWidth + this.boundingBox.width / 2);
      var $pos = this.$$("#position");
      $pos && ($pos.style.top = top + "px", $pos.style.left = left + "px");
    }
  }
}});
stateMixin([], {is:"search-result-entities", properties:{entityMatches:Object}, makePreloadedData:function(item) {
  var name = item.name;
  name || (name = item.inchi_key);
  return {name:name, inchi_key:item.inchi_key, smiles:item.smiles, image:item.svg_large};
}});
stateMixin(["state.browserUI.width", "state.view.resultlist.*", "state.queryResults.*", "state.resultList.*"], {is:"search-results", properties:{query:{type:Object}, isWide:{type:Boolean, value:!0}, leftMargin:{type:Boolean, value:!1}, isNarrow:{value:Boolean}, showHelp:{type:Boolean}, showClusteredView:{type:Boolean}, showClustered:{type:Boolean}, results:{type:Object}, hasResults:{type:Boolean}, totalResults:{type:Boolean}, firstPage:{type:Boolean}, multiplePages:{type:Boolean}, inFlight:{type:Boolean}, 
hideCounts:{type:Boolean}, showCompactQuery:{type:Boolean}, sideBySide:{type:Boolean}, width:{type:Number}, height:{type:Number}}, stateReady:function() {
  this.sortOptions = [{value:"", label:"Relevance"}, {value:"new", label:"Newest"}, {value:"old", label:"Oldest"}];
  this.clusteredOptions = [{value:!0, label:"Classification"}, {value:!1, label:"None"}];
  this.numPerPageOptions = [{value:10, label:"10"}, {value:25, label:"25"}, {value:50, label:"50"}, {value:100, label:"100"}];
  this.dupsOptions = [{value:"", label:"Family"}, {value:"language", label:"Publication"}];
}, render:function() {
  this.inFlight = this.get("state.resultList.loading");
  this.query = this.get("state.queryResults.query");
  this.results = this.get("state.resultList.page.results");
  this.showSummary = this.emptyResults = this.hasResults = !1;
  this.results && (this.manyResults = this.get("state.queryResults.manyResults") || !1, this.totalResults = this.get("state.queryResults.numResults") || 0, this.emptyResults = (this.hasResults = !this.inFlight && !!this.results) && 0 == this.totalResults, this.multiplePages = 1 < this.get("state.queryResults.maxPage"), this.showSummary = !this.inFlight && this.hasResults && !!this.results.summary && !this.emptyResults);
  this.hideCounts = (this.showHelp = !this.hasResults && !this.inFlight) || this.inFlight;
  this.showClusteredMenu = "" == (this.get("query.sort.value") || "");
  this.pageNum = (this.get("query.page.value") || 0) + 1;
  this.firstPage = 1 == this.pageNum;
  this.sortSelected = [this.get("query.sort.value") || ""];
  this.clusteredSelected = [void 0 === this.get("query.clustered.value") ? !1 : this.get("query.clustered.value")];
  this.numPerPageSelected = [this.get("query.num.value") || 10];
  this.dupsSelected = [this.get("query.dups.value") || ""];
  this.showCompactQuery = !this.get("state.view.resultlist.showLeftBar") && this.get("state.queryResults.query.isSearchable");
  this.sideBySide = this.get("state.view.resultlist.sideBySide");
  this.width = this.get("state.view.resultlist.width");
  var height = this.get("state.view.resultlist.height");
  this.height = -1 == height ? "auto" : height + "px";
  if (this.leftMargin = !this.get("state.view.resultlist.showLeftBar") && 600 < this.width) {
    this.width -= 80;
  }
  this.isWide = 1150 <= this.width;
}, rendered:function(state, paths) {
  if (paths["state.resultList.*"] && this.get("state.resultList.page.results")) {
    var scroll = this.get("state.browserUI.historyState.scrollY") || 0;
    window.scrollTo(0, scroll);
  }
}, isOrAre:function(cluster) {
  return 1 === cluster.result.length ? "is" : "are";
}, downloadResultsLink:function(query) {
  var urlParam = window.encodeURIComponent(toQueryUrl(query)), exp = this.get("state.browserUI.experiments");
  return "/xhr/query?url=" + urlParam + "&exp=" + exp + "&download=true";
}, espacenetCPCLink:function(cluster) {
  return cluster.cpc ? "http://worldwide.espacenet.com/classification#!/CPC=" + cluster.cpc : "";
}, dontShowNotClusteredHeader:function(cluster) {
  return !!cluster.description || 1 === this.results.cluster.length;
}, commafy:function(num) {
  num = void 0 === num ? "" : num;
  num = String(num).split("");
  for (var groupsOfThree = []; num.length;) {
    groupsOfThree.unshift(num.splice(-3).join(""));
  }
  return groupsOfThree.join(",");
}, showLeftBar:function() {
  this.dispatch({type:"SHOW_LEFT_BAR", mode:"results"});
}, showSideBySide:function(e) {
  e.preventDefault();
  this.dispatch({type:"SHOW_SIDE_BY_SIDE", value:!0});
}, showResultList:function(e) {
  e.preventDefault();
  this.dispatch({type:"SHOW_SIDE_BY_SIDE", value:!1});
}, resultDragDown:function() {
  window.removeEventListener("mousemove", this._dragmove, !1);
  window.removeEventListener("mouseup", this._dragup, !1);
  this._dragmove = this.resultDrag.bind(this);
  window.addEventListener("mousemove", this._dragmove, !1);
  this._dragup = this.resultDragUp.bind(this);
  window.addEventListener("mouseup", this._dragup, !1);
}, resultDrag:function(e) {
  e.preventDefault();
  this.dispatch({type:"RESULT_RESIZE", deltaX:-e.movementX});
}, resultDragUp:function(e) {
  e.preventDefault();
  window.removeEventListener("mousemove", this._dragmove, !1);
  window.removeEventListener("mouseup", this._dragup, !1);
  this.dispatch({type:"RESULT_RESIZE_STOP"});
}});
stateMixin([], {is:"summary-box", properties:{summary:{type:Object, observer:"summaryChanged"}, selectedSummary:{type:Array, observer:"renderGraph"}, selectedTotal:Object, selectedTab:{type:Number, value:0, observer:"summaryChanged"}, listExpanded:{type:Boolean, value:!1}, itemExpanded:{type:Number, value:-1}, assigneeLink:Boolean, inventorLink:Boolean, cpcLink:Boolean}, summaryChanged:function() {
  this.selectedSummary = [];
  this.selectedTotal = {};
  this.itemExpanded = -1;
  if (this.summary) {
    this.cpcLink = this.inventorLink = this.assigneeLink = !1;
    if (0 == this.selectedTab) {
      var selected = this.summary.assignee;
      this.assigneeLink = !0;
    } else {
      1 == this.selectedTab ? (selected = this.summary.inventor, this.inventorLink = !0) : 2 == this.selectedTab && (selected = this.summary.cpc, this.cpcLink = !0);
    }
    if (selected) {
      selected = selected.slice();
      for (var i = 0; i < selected.length; i++) {
        if ("Total" == selected[i].key) {
          this.selectedTotal = selected[i];
          selected.splice(i, 1);
          break;
        }
      }
      this.selectedSummary = selected;
    } else {
      this.selectedSummary = [];
    }
  }
}, getLineClass:function(index) {
  return "lineLegend color" + (index + 1);
}, showExpander:function(list) {
  return list && 5 < list.length;
}, hideItem:function(index, listExpanded) {
  return listExpanded ? !1 : 5 <= index;
}, hideSubItem:function(index) {
  return 4 <= index;
}, showExpandedItem:function(index, itemExpanded) {
  return index == itemExpanded;
}, toggleExpand:function() {
  this.listExpanded = !this.listExpanded;
}, toggleItemExpanded:function(e) {
  this.itemExpanded = this.itemExpanded == e.model.index ? -1 : e.model.index;
}, formatPercent:function(thousand) {
  return "" + thousand / 10 + "%";
}, renderGraph:function() {
  for (var graphEl = Polymer.dom(this.root).querySelector("#graph"); graphEl.firstChild;) {
    graphEl.removeChild(graphEl.firstChild);
  }
  if (this.selectedSummary && 0 != this.selectedSummary.length) {
    var totalSummary = this.selectedTotal;
    if (totalSummary.frequency) {
      var summaries = this.selectedSummary.slice(0, 5), yearToNumber = function(key) {
        return Number(key.split("-")[0]);
      }, yearMin = d3.min(totalSummary.frequency, function(f) {
        return yearToNumber(f.key);
      }), yearMax = d3.max(totalSummary.frequency, function(f) {
        return yearToNumber(f.key);
      });
      yearMax == yearMin && (yearMax += 3);
      for (var series = [], year = yearMin; year <= yearMax; year += 3) {
        for (var serie = {year:year}, sum$jscomp$0 = 0, i = 0; 5 > i; i++) {
          if (serie["" + i] = 0, i < summaries.length && summaries[i].frequency) {
            for (var $jscomp$iter$124 = $jscomp.makeIterator(summaries[i].frequency), $jscomp$key$point = $jscomp$iter$124.next(); !$jscomp$key$point.done; $jscomp$key$point = $jscomp$iter$124.next()) {
              var point = $jscomp$key$point.value;
              yearToNumber(point.key) == year && (serie["" + i] = point.value, sum$jscomp$0 += point.value);
            }
          }
        }
        serie.sum = sum$jscomp$0;
        series.push(serie);
      }
      d3.max(summaries, function(s) {
        return s.frequency ? d3.max(s.frequency, function(f) {
          return f.value;
        }) : 0;
      });
      var totalMaxValue = d3.max(totalSummary.frequency, function(f) {
        return f.value;
      }), x = d3.scaleLinear().domain([yearMin, yearMax]).range([0, 306]), y = d3.scaleLinear().domain([0, 1]).range([0, 50]), yTotal = d3.scaleLinear().domain([0, totalMaxValue]).range([0, 50]), yearWidth = x(2000) - x(1997);
      yearWidth = 30 < yearWidth ? 24 : yearWidth - yearWidth / 3;
      var halfWidth = yearWidth / 2, svg = d3.select(graphEl).append("svg").attr("width", 356).attr("height", 120).append("g").attr("transform", "translate(25,0)"), highlightYear = function(on) {
        return function(d) {
          svg.selectAll(".year" + yearToNumber(d.key)).classed("highlight", on);
        };
      }, trendGraph = svg.append("g").attr("transform", "translate(0, 70)"), seriesData = d3.stack().keys(["0", "1", "2", "3", "4"])(series);
      trendGraph.selectAll(".serie").data(seriesData).enter().append("g").attr("class", function(d) {
        return "serie serie" + d.key;
      }).selectAll("rect").data(function(d) {
        return d;
      }).enter().append("rect").attr("class", function(d) {
        return "bar year" + d.data.year;
      }).attr("x", function(d) {
        return x(d.data.year) - halfWidth;
      }).attr("height", function(d) {
        var val0 = d[0], val1 = d[1], sum = d.data.sum || 1;
        return y(val1 / sum) - y(val0 / sum);
      }).attr("y", function(d) {
        var val1 = d[1], sum = d.data.sum || 1;
        return 50 - y(val1 / sum);
      }).attr("width", yearWidth - 1);
      var timeGraph = svg.append("g").attr("transform", "translate(0, 0)");
      timeGraph.selectAll("bar").data(totalSummary.frequency).enter().append("rect").attr("class", function(d) {
        return "bar total year" + yearToNumber(d.key);
      }).attr("x", function(d) {
        return x(yearToNumber(d.key)) - halfWidth;
      }).attr("width", yearWidth).attr("y", function(d) {
        return 50 - yTotal(d.value);
      }).attr("height", function(d) {
        return yTotal(d.value);
      });
      for (var tickValues = [], i$182 = yearMin; i$182 < yearMax; i$182 += 3) {
        tickValues.push(i$182);
      }
      1 < tickValues.length && tickValues.push(yearMax);
      var axis = svg.append("g").attr("transform", "translate(0, 50)");
      d3.axisBottom(x).tickValues(tickValues).tickFormat(function(t) {
        return "" + t + "-" + (t + 3);
      })(axis);
      axis.selectAll(".tick").attr("class", function(key) {
        return "tick year" + key;
      });
      var hoverGraph = svg.append("g").attr("transform", "translate(0, 0)");
      hoverGraph.selectAll("bar").data(totalSummary.frequency).enter().append("rect").attr("class", "hover").attr("x", function(d) {
        return x(yearToNumber(d.key)) - halfWidth;
      }).attr("width", yearWidth).attr("y", 0).attr("height", 120).on("mouseenter", highlightYear(!0)).on("mouseleave", highlightYear(!1));
      for (var els = graphEl.querySelectorAll("*"), i$183 = 0; i$183 < els.length; i$183++) {
        var oldCls = els[i$183].getAttribute("class");
        els[i$183].setAttribute("class", oldCls + " summary-box");
      }
    }
  }
}});
stateMixin(["state.workspaces.*"], {is:"search-workspace", properties:{}, render:function() {
  var wss = this.get("state.workspaces");
  if (wss) {
    for (var hasActive = !1, i = 0; i < wss.length; i++) {
      var ws = wss[i];
      if (!ws.loaded && "tmp" == ws.location) {
        ws.loaded = !0;
        ws.color = "#feefc3";
        ws.highlights = ws.highlights || {};
        ws.tags = ws.tags || {};
        ws.searches = ws.searches || {};
        var setActive = !1;
        hasActive || (hasActive = setActive = !0);
        this.dispatch({type:"WORKSPACE_LOADED", workspace:ws, active:setActive, index:i});
      }
    }
  }
}});
stateMixin(["state.browserUI.width", "state.timeline.data"], {is:"timeline-page", properties:{isWide:Boolean, data:Object}, openPatent:function() {
}, render:function() {
  this.isWide = 700 <= this.get("state.browserUI.width");
  this.get("state.timeline.data") && (this.data = this.get("state.timeline.data"));
}, hostname:function(link) {
  var u = new URL(link);
  return u.host;
}});
HtmlImportsNamespace.PaperStyles.Classes = {};
HtmlImportsNamespace.PaperStyles.Classes.Shadow = {};
HtmlImportsNamespace.PaperStyles.Classes.Typography = {};
HtmlImportsNamespace.PaperStyles.PaperStylesClasses = {};
HtmlImportsNamespace.PaperStyles.Classes.Global = {};
HtmlImportsNamespace.PaperStyles.ElementStyles.PaperItemStyles = {};
HtmlImportsNamespace.PaperStyles.PaperStyles = {};
HtmlImportsNamespace.PaperToast = {};
HtmlImportsNamespace.PaperToast.PaperToast = {};
(function() {
  var currentToast = null;
  Polymer({is:"paper-toast", behaviors:[Polymer.IronOverlayBehavior], properties:{fitInto:{type:Object, value:window, observer:"_onFitIntoChanged"}, horizontalAlign:{type:String, value:"left"}, verticalAlign:{type:String, value:"bottom"}, duration:{type:Number, value:3000}, text:{type:String, value:""}, noCancelOnOutsideClick:{type:Boolean, value:!0}, noAutoFocus:{type:Boolean, value:!0}}, listeners:{transitionend:"__onTransitionEnd"}, get visible() {
    Polymer.Base._warn("`visible` is deprecated, use `opened` instead");
    return this.opened;
  }, get _canAutoClose() {
    return 0 < this.duration && Infinity !== this.duration;
  }, created:function() {
    this._autoClose = null;
    Polymer.IronA11yAnnouncer.requestAvailability();
  }, show:function(properties) {
    "string" == typeof properties && (properties = {text:properties});
    for (var property in properties) {
      0 === property.indexOf("_") ? Polymer.Base._warn('The property "' + property + '" is private and was not set.') : property in this ? this[property] = properties[property] : Polymer.Base._warn('The property "' + property + '" is not valid.');
    }
    this.open();
  }, hide:function() {
    this.close();
  }, __onTransitionEnd:function(e) {
    e && e.target === this && "opacity" === e.propertyName && (this.opened ? this._finishRenderOpened() : this._finishRenderClosed());
  }, _openedChanged:function() {
    null !== this._autoClose && (this.cancelAsync(this._autoClose), this._autoClose = null);
    this.opened ? (currentToast && currentToast !== this && currentToast.close(), currentToast = this, this.fire("iron-announce", {text:this.text}), this._canAutoClose && (this._autoClose = this.async(this.close, this.duration))) : currentToast === this && (currentToast = null);
    Polymer.IronOverlayBehaviorImpl._openedChanged.apply(this, arguments);
  }, _renderOpened:function() {
    this.classList.add("paper-toast-open");
  }, _renderClosed:function() {
    this.classList.remove("paper-toast-open");
  }, _onFitIntoChanged:function(fitInto) {
    this.positionTarget = fitInto;
  }});
})();
stateMixin(["state.view.mode", "state.view.resultlist.sideBySide"], {is:"search-app", properties:{state:{type:Object}, showLandingPage:Boolean, showResultListPage:Boolean, showResultPage:Boolean, showImportPage:Boolean, showTimelinePage:Boolean}, attached:function() {
  Polymer.dom(this).querySelector("#notice") && this.$.toast.show();
}, stateReady:function() {
  var el = Polymer.dom(this).querySelector(".result");
  if (el) {
    Polymer.dom(this).removeChild(el);
    var data = getMicrodata(el);
    this.dispatch({type:"INITIAL_MICRODATA", data:data});
  }
  var timelineEl = Polymer.dom(this).querySelector(".timeline");
  if (timelineEl) {
    Polymer.dom(this).removeChild(timelineEl);
    var data$184 = getMicrodata(timelineEl);
    this.dispatch({type:"TIMELINE_MICRODATA", data:data$184});
  }
  var promoEl = Polymer.dom(this).querySelector("#promo");
  promoEl && (Polymer.dom(this).removeChild(promoEl), this.promo = promoEl.dataset);
  var noticeEl = Polymer.dom(this).querySelector("#notice");
  noticeEl && (Polymer.dom(this.root).querySelector("#noticeContent").innerHTML = noticeEl.innerHTML);
}, render:function(state) {
  state && state.view && (this.showLandingPage = "homepage" == state.view.mode, this.showResultListPage = "resultlist" == state.view.mode, this.showResultPage = "result" == state.view.mode, this.showImportPage = "import" == state.view.mode, this.showTimelinePage = "timeline" == state.view.mode);
}, rendered:function(state) {
  state.rendered || this.dispatch({type:"FIRST_RENDER"});
}, closeToast:function() {
  this.$.toast.hide();
  this.$.toast.remove();
}});
function getMicrodata(node$jscomp$0, data) {
  if (data) {
    var prop = node$jscomp$0.getAttribute("itemprop");
    if (prop) {
      var scope = node$jscomp$0.hasAttribute("itemscope");
      if (scope) {
        var JSCompiler_temp = getMicrodata(node$jscomp$0);
      } else {
        var node = node$jscomp$0;
        switch(node.tagName) {
          case "A":
          case "AREA":
          case "LINK":
            var stringValue = node.getAttribute("href");
            break;
          case "AUDIO":
          case "EMBED":
          case "IFRAME":
          case "IMG":
          case "SOURCE":
          case "VIDEO":
            stringValue = node.getAttribute("src");
            break;
          case "META":
            stringValue = node.getAttribute("content");
            break;
          default:
            stringValue = node.hasAttribute("html") ? node.innerHTML : node.textContent;
        }
        JSCompiler_temp = node.hasAttribute("bool") ? "false" != stringValue : stringValue;
      }
      var val = JSCompiler_temp;
      node$jscomp$0.hasAttribute("repeat") ? (data[prop] = data[prop] || [], data[prop].push(val)) : (data[prop] && console.warn("Overwriting data for '" + prop + "'. Should be repeated?"), data[prop] = val);
      if ("A" != node$jscomp$0.tagName) {
        return;
      }
    }
  } else {
    data = {};
  }
  for (node$jscomp$0 = node$jscomp$0.firstElementChild; node$jscomp$0;) {
    getMicrodata(node$jscomp$0, data), node$jscomp$0 = node$jscomp$0.nextElementSibling;
  }
  return data;
}
;
